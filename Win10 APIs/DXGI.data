{"__const_list":{"DXGI_ADAPTER_DESC":{"comment":"","exp":"","file":"dxgi.h","line":197,"type":"Struct","value":"typedef struct DXGI_ADAPTER_DESC\\r\\n    {\\r\\n    WCHAR Description[ 128 ];\\r\\n    UINT VendorId;\\r\\n    UINT DeviceId;\\r\\n    UINT SubSysId;\\r\\n    UINT Revision;\\r\\n    SIZE_T DedicatedVideoMemory;\\r\\n    SIZE_T DedicatedSystemMemory;\\r\\n    SIZE_T SharedSystemMemory;\\r\\n    LUID AdapterLuid;\\r\\n    } \\tDXGI_ADAPTER_DESC;"},"DXGI_ADAPTER_DESC1":{"comment":"","exp":"","file":"dxgi.h","line":2376,"type":"Struct","value":"typedef struct DXGI_ADAPTER_DESC1\\r\\n    {\\r\\n    WCHAR Description[ 128 ];\\r\\n    UINT VendorId;\\r\\n    UINT DeviceId;\\r\\n    UINT SubSysId;\\r\\n    UINT Revision;\\r\\n    SIZE_T DedicatedVideoMemory;\\r\\n    SIZE_T DedicatedSystemMemory;\\r\\n    SIZE_T SharedSystemMemory;\\r\\n    LUID AdapterLuid;\\r\\n    UINT Flags;\\r\\n    } \\tDXGI_ADAPTER_DESC1;"},"DXGI_ADAPTER_DESC2":{"comment":"","exp":"","file":"dxgi1_2.h","line":1978,"type":"Struct","value":"typedef struct DXGI_ADAPTER_DESC2\\r\\n    {\\r\\n    WCHAR Description[ 128 ];\\r\\n    UINT VendorId;\\r\\n    UINT DeviceId;\\r\\n    UINT SubSysId;\\r\\n    UINT Revision;\\r\\n    SIZE_T DedicatedVideoMemory;\\r\\n    SIZE_T DedicatedSystemMemory;\\r\\n    SIZE_T SharedSystemMemory;\\r\\n    LUID AdapterLuid;\\r\\n    UINT Flags;\\r\\n    DXGI_GRAPHICS_PREEMPTION_GRANULARITY GraphicsPreemptionGranularity;\\r\\n    DXGI_COMPUTE_PREEMPTION_GRANULARITY ComputePreemptionGranularity;\\r\\n    } \\tDXGI_ADAPTER_DESC2;"},"DXGI_ADAPTER_DESC3":{"comment":"","exp":"","file":"dxgi1_6.h","line":100,"type":"Struct","value":"typedef struct DXGI_ADAPTER_DESC3\\r\\n    {\\r\\n    WCHAR Description[ 128 ];\\r\\n    UINT VendorId;\\r\\n    UINT DeviceId;\\r\\n    UINT SubSysId;\\r\\n    UINT Revision;\\r\\n    SIZE_T DedicatedVideoMemory;\\r\\n    SIZE_T DedicatedSystemMemory;\\r\\n    SIZE_T SharedSystemMemory;\\r\\n    LUID AdapterLuid;\\r\\n    DXGI_ADAPTER_FLAG3 Flags;\\r\\n    DXGI_GRAPHICS_PREEMPTION_GRANULARITY GraphicsPreemptionGranularity;\\r\\n    DXGI_COMPUTE_PREEMPTION_GRANULARITY ComputePreemptionGranularity;\\r\\n    } \\tDXGI_ADAPTER_DESC3;"},"DXGI_ADAPTER_FLAG":{"comment":"","exp":"","file":"dxgi.h","line":2367,"type":"Enum","value":"typedef\\r\\nenum DXGI_ADAPTER_FLAG\\r\\n    {\\r\\n        DXGI_ADAPTER_FLAG_NONE\\t= 0,\\r\\n        DXGI_ADAPTER_FLAG_REMOTE\\t= 1,\\r\\n        DXGI_ADAPTER_FLAG_SOFTWARE\\t= 2,\\r\\n        DXGI_ADAPTER_FLAG_FORCE_DWORD\\t= 0xffffffff\\r\\n    } \\tDXGI_ADAPTER_FLAG;"},"DXGI_ADAPTER_FLAG3":{"comment":"","exp":"","file":"dxgi1_6.h","line":86,"type":"Enum","value":"typedef\\r\\nenum DXGI_ADAPTER_FLAG3\\r\\n    {\\r\\n        DXGI_ADAPTER_FLAG3_NONE\\t= 0,\\r\\n        DXGI_ADAPTER_FLAG3_REMOTE\\t= 1,\\r\\n        DXGI_ADAPTER_FLAG3_SOFTWARE\\t= 2,\\r\\n        DXGI_ADAPTER_FLAG3_ACG_COMPATIBLE\\t= 4,\\r\\n        DXGI_ADAPTER_FLAG3_SUPPORT_MONITORED_FENCES\\t= 8,\\r\\n        DXGI_ADAPTER_FLAG3_SUPPORT_NON_MONITORED_FENCES\\t= 0x10,\\r\\n        DXGI_ADAPTER_FLAG3_KEYED_MUTEX_CONFORMANCE\\t= 0x20,\\r\\n        DXGI_ADAPTER_FLAG3_FORCE_DWORD\\t= 0xffffffff\\r\\n    } \\tDXGI_ADAPTER_FLAG3;"},"DXGI_ALPHA_MODE":{"comment":"","exp":"","file":"dxgi1_2.h","line":513,"type":"Enum","value":"typedef\\r\\nenum DXGI_ALPHA_MODE\\r\\n    {\\r\\n        DXGI_ALPHA_MODE_UNSPECIFIED\\t= 0,\\r\\n        DXGI_ALPHA_MODE_PREMULTIPLIED\\t= 1,\\r\\n        DXGI_ALPHA_MODE_STRAIGHT\\t= 2,\\r\\n        DXGI_ALPHA_MODE_IGNORE\\t= 3,\\r\\n        DXGI_ALPHA_MODE_FORCE_DWORD\\t= 0xffffffff\\r\\n    } \\tDXGI_ALPHA_MODE;"},"DXGI_CENTER_MULTISAMPLE_QUALITY_PATTERN":{"comment":"","exp":"0xfffffffe","file":"dxgicommon.h","line":17,"type":"Integer","value":4294967294},"DXGI_COLOR_SPACE_TYPE":{"comment":"","exp":"","file":"dxgicommon.h","line":25,"type":"Enum","value":"typedef enum DXGI_COLOR_SPACE_TYPE\\r\\n{\\r\\n    DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P709             = 0,\\r\\n    DXGI_COLOR_SPACE_RGB_FULL_G10_NONE_P709             = 1,\\r\\n    DXGI_COLOR_SPACE_RGB_STUDIO_G22_NONE_P709           = 2,\\r\\n    DXGI_COLOR_SPACE_RGB_STUDIO_G22_NONE_P2020          = 3,\\r\\n    DXGI_COLOR_SPACE_RESERVED                           = 4,\\r\\n    DXGI_COLOR_SPACE_YCBCR_FULL_G22_NONE_P709_X601      = 5,\\r\\n    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P601         = 6,\\r\\n    DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P601           = 7,\\r\\n    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P709         = 8,\\r\\n    DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P709           = 9,\\r\\n    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P2020        = 10,\\r\\n    DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P2020          = 11,\\r\\n    DXGI_COLOR_SPACE_RGB_FULL_G2084_NONE_P2020          = 12,\\r\\n    DXGI_COLOR_SPACE_YCBCR_STUDIO_G2084_LEFT_P2020      = 13,\\r\\n    DXGI_COLOR_SPACE_RGB_STUDIO_G2084_NONE_P2020        = 14,\\r\\n    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_TOPLEFT_P2020     = 15,\\r\\n    DXGI_COLOR_SPACE_YCBCR_STUDIO_G2084_TOPLEFT_P2020   = 16,\\r\\n    DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P2020            = 17,\\r\\n    DXGI_COLOR_SPACE_YCBCR_STUDIO_GHLG_TOPLEFT_P2020    = 18,\\r\\n    DXGI_COLOR_SPACE_YCBCR_FULL_GHLG_TOPLEFT_P2020      = 19,\\r\\n    DXGI_COLOR_SPACE_RGB_STUDIO_G24_NONE_P709           = 20,\\r\\n    DXGI_COLOR_SPACE_RGB_STUDIO_G24_NONE_P2020          = 21,\\r\\n    DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_LEFT_P709         = 22,\\r\\n    DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_LEFT_P2020        = 23,\\r\\n    DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_TOPLEFT_P2020     = 24,\\r\\n    DXGI_COLOR_SPACE_CUSTOM                             = 0xFFFFFFFF\\r\\n} DXGI_COLOR_SPACE_TYPE;"},"DXGI_COMPUTE_PREEMPTION_GRANULARITY":{"comment":"","exp":"","file":"dxgi1_2.h","line":1968,"type":"Enum","value":"typedef\\r\\nenum DXGI_COMPUTE_PREEMPTION_GRANULARITY\\r\\n    {\\r\\n        DXGI_COMPUTE_PREEMPTION_DMA_BUFFER_BOUNDARY\\t= 0,\\r\\n        DXGI_COMPUTE_PREEMPTION_DISPATCH_BOUNDARY\\t= 1,\\r\\n        DXGI_COMPUTE_PREEMPTION_THREAD_GROUP_BOUNDARY\\t= 2,\\r\\n        DXGI_COMPUTE_PREEMPTION_THREAD_BOUNDARY\\t= 3,\\r\\n        DXGI_COMPUTE_PREEMPTION_INSTRUCTION_BOUNDARY\\t= 4\\r\\n    } \\tDXGI_COMPUTE_PREEMPTION_GRANULARITY;"},"DXGI_CPU_ACCESS_DYNAMIC":{"comment":"","exp":"( 1 )","file":"dxgi.h","line":156,"type":"Integer","value":1},"DXGI_CPU_ACCESS_FIELD":{"comment":"","exp":"15","file":"dxgi.h","line":159,"type":"Integer","value":15},"DXGI_CPU_ACCESS_NONE":{"comment":"","exp":"( 0 )","file":"dxgi.h","line":155,"type":"Integer","value":0},"DXGI_CPU_ACCESS_READ_WRITE":{"comment":"","exp":"( 2 )","file":"dxgi.h","line":157,"type":"Integer","value":2},"DXGI_CPU_ACCESS_SCRATCH":{"comment":"","exp":"( 3 )","file":"dxgi.h","line":158,"type":"Integer","value":3},"DXGI_CREATE_FACTORY_DEBUG":{"comment":"","exp":"0x1","file":"dxgi1_3.h","line":112,"type":"Integer","value":1},"DXGI_DEBUG_BINARY_VERSION":{"comment":"","exp":"( 1 )","file":"dxgidebug.h","line":78,"type":"Integer","value":1},"DXGI_DEBUG_RLO_FLAGS":{"comment":"","exp":"","file":"dxgidebug.h","line":80,"type":"Enum","value":"typedef\\r\\nenum DXGI_DEBUG_RLO_FLAGS\\r\\n    {\\r\\n        DXGI_DEBUG_RLO_SUMMARY\\t= 0x1,\\r\\n        DXGI_DEBUG_RLO_DETAIL\\t= 0x2,\\r\\n        DXGI_DEBUG_RLO_IGNORE_INTERNAL\\t= 0x4,\\r\\n        DXGI_DEBUG_RLO_ALL\\t= 0x7\\r\\n    } \\tDXGI_DEBUG_RLO_FLAGS;"},"DXGI_DECODE_SWAP_CHAIN_DESC":{"comment":"","exp":"","file":"dxgi1_3.h","line":1328,"type":"Struct","value":"typedef struct DXGI_DECODE_SWAP_CHAIN_DESC\\r\\n    {\\r\\n    UINT Flags;\\r\\n    } \\tDXGI_DECODE_SWAP_CHAIN_DESC;"},"DXGI_DISPLAY_COLOR_SPACE":{"comment":"","exp":"","file":"dxgi.h","line":2390,"type":"Struct","value":"typedef struct DXGI_DISPLAY_COLOR_SPACE\\r\\n    {\\r\\n    FLOAT PrimaryCoordinates[ 8 ][ 2 ];\\r\\n    FLOAT WhitePoints[ 16 ][ 2 ];\\r\\n    } \\tDXGI_DISPLAY_COLOR_SPACE;"},"DXGI_ENUM_MODES_DISABLED_STEREO":{"comment":"","exp":"( 8UL )","file":"dxgi1_2.h","line":1161,"type":"Integer","value":8},"DXGI_ENUM_MODES_INTERLACED":{"comment":"","exp":"( 1UL )","file":"dxgi.h","line":1404,"type":"Integer","value":1},"DXGI_ENUM_MODES_SCALING":{"comment":"","exp":"( 2UL )","file":"dxgi.h","line":1406,"type":"Integer","value":2},"DXGI_ENUM_MODES_STEREO":{"comment":"","exp":"( 4UL )","file":"dxgi1_2.h","line":1159,"type":"Integer","value":4},"DXGI_FEATURE":{"comment":"","exp":"","file":"dxgi1_5.h","line":1162,"type":"Enum","value":"typedef\\r\\nenum DXGI_FEATURE\\r\\n    {\\r\\n        DXGI_FEATURE_PRESENT_ALLOW_TEARING\\t= 0\\r\\n    } \\tDXGI_FEATURE;"},"DXGI_FORMAT":{"comment":"","exp":"","file":"dxgiformat.h","line":10,"type":"Enum","value":"typedef enum DXGI_FORMAT\\r\\n{\\r\\n    DXGI_FORMAT_UNKNOWN\\t                                = 0,\\r\\n    DXGI_FORMAT_R32G32B32A32_TYPELESS                   = 1,\\r\\n    DXGI_FORMAT_R32G32B32A32_FLOAT                      = 2,\\r\\n    DXGI_FORMAT_R32G32B32A32_UINT                       = 3,\\r\\n    DXGI_FORMAT_R32G32B32A32_SINT                       = 4,\\r\\n    DXGI_FORMAT_R32G32B32_TYPELESS                      = 5,\\r\\n    DXGI_FORMAT_R32G32B32_FLOAT                         = 6,\\r\\n    DXGI_FORMAT_R32G32B32_UINT                          = 7,\\r\\n    DXGI_FORMAT_R32G32B32_SINT                          = 8,\\r\\n    DXGI_FORMAT_R16G16B16A16_TYPELESS                   = 9,\\r\\n    DXGI_FORMAT_R16G16B16A16_FLOAT                      = 10,\\r\\n    DXGI_FORMAT_R16G16B16A16_UNORM                      = 11,\\r\\n    DXGI_FORMAT_R16G16B16A16_UINT                       = 12,\\r\\n    DXGI_FORMAT_R16G16B16A16_SNORM                      = 13,\\r\\n    DXGI_FORMAT_R16G16B16A16_SINT                       = 14,\\r\\n    DXGI_FORMAT_R32G32_TYPELESS                         = 15,\\r\\n    DXGI_FORMAT_R32G32_FLOAT                            = 16,\\r\\n    DXGI_FORMAT_R32G32_UINT                             = 17,\\r\\n    DXGI_FORMAT_R32G32_SINT                             = 18,\\r\\n    DXGI_FORMAT_R32G8X24_TYPELESS                       = 19,\\r\\n    DXGI_FORMAT_D32_FLOAT_S8X24_UINT                    = 20,\\r\\n    DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS                = 21,\\r\\n    DXGI_FORMAT_X32_TYPELESS_G8X24_UINT                 = 22,\\r\\n    DXGI_FORMAT_R10G10B10A2_TYPELESS                    = 23,\\r\\n    DXGI_FORMAT_R10G10B10A2_UNORM                       = 24,\\r\\n    DXGI_FORMAT_R10G10B10A2_UINT                        = 25,\\r\\n    DXGI_FORMAT_R11G11B10_FLOAT                         = 26,\\r\\n    DXGI_FORMAT_R8G8B8A8_TYPELESS                       = 27,\\r\\n    DXGI_FORMAT_R8G8B8A8_UNORM                          = 28,\\r\\n    DXGI_FORMAT_R8G8B8A8_UNORM_SRGB                     = 29,\\r\\n    DXGI_FORMAT_R8G8B8A8_UINT                           = 30,\\r\\n    DXGI_FORMAT_R8G8B8A8_SNORM                          = 31,\\r\\n    DXGI_FORMAT_R8G8B8A8_SINT                           = 32,\\r\\n    DXGI_FORMAT_R16G16_TYPELESS                         = 33,\\r\\n    DXGI_FORMAT_R16G16_FLOAT                            = 34,\\r\\n    DXGI_FORMAT_R16G16_UNORM                            = 35,\\r\\n    DXGI_FORMAT_R16G16_UINT                             = 36,\\r\\n    DXGI_FORMAT_R16G16_SNORM                            = 37,\\r\\n    DXGI_FORMAT_R16G16_SINT                             = 38,\\r\\n    DXGI_FORMAT_R32_TYPELESS                            = 39,\\r\\n    DXGI_FORMAT_D32_FLOAT                               = 40,\\r\\n    DXGI_FORMAT_R32_FLOAT                               = 41,\\r\\n    DXGI_FORMAT_R32_UINT                                = 42,\\r\\n    DXGI_FORMAT_R32_SINT                                = 43,\\r\\n    DXGI_FORMAT_R24G8_TYPELESS                          = 44,\\r\\n    DXGI_FORMAT_D24_UNORM_S8_UINT                       = 45,\\r\\n    DXGI_FORMAT_R24_UNORM_X8_TYPELESS                   = 46,\\r\\n    DXGI_FORMAT_X24_TYPELESS_G8_UINT                    = 47,\\r\\n    DXGI_FORMAT_R8G8_TYPELESS                           = 48,\\r\\n    DXGI_FORMAT_R8G8_UNORM                              = 49,\\r\\n    DXGI_FORMAT_R8G8_UINT                               = 50,\\r\\n    DXGI_FORMAT_R8G8_SNORM                              = 51,\\r\\n    DXGI_FORMAT_R8G8_SINT                               = 52,\\r\\n    DXGI_FORMAT_R16_TYPELESS                            = 53,\\r\\n    DXGI_FORMAT_R16_FLOAT                               = 54,\\r\\n    DXGI_FORMAT_D16_UNORM                               = 55,\\r\\n    DXGI_FORMAT_R16_UNORM                               = 56,\\r\\n    DXGI_FORMAT_R16_UINT                                = 57,\\r\\n    DXGI_FORMAT_R16_SNORM                               = 58,\\r\\n    DXGI_FORMAT_R16_SINT                                = 59,\\r\\n    DXGI_FORMAT_R8_TYPELESS                             = 60,\\r\\n    DXGI_FORMAT_R8_UNORM                                = 61,\\r\\n    DXGI_FORMAT_R8_UINT                                 = 62,\\r\\n    DXGI_FORMAT_R8_SNORM                                = 63,\\r\\n    DXGI_FORMAT_R8_SINT                                 = 64,\\r\\n    DXGI_FORMAT_A8_UNORM                                = 65,\\r\\n    DXGI_FORMAT_R1_UNORM                                = 66,\\r\\n    DXGI_FORMAT_R9G9B9E5_SHAREDEXP                      = 67,\\r\\n    DXGI_FORMAT_R8G8_B8G8_UNORM                         = 68,\\r\\n    DXGI_FORMAT_G8R8_G8B8_UNORM                         = 69,\\r\\n    DXGI_FORMAT_BC1_TYPELESS                            = 70,\\r\\n    DXGI_FORMAT_BC1_UNORM                               = 71,\\r\\n    DXGI_FORMAT_BC1_UNORM_SRGB                          = 72,\\r\\n    DXGI_FORMAT_BC2_TYPELESS                            = 73,\\r\\n    DXGI_FORMAT_BC2_UNORM                               = 74,\\r\\n    DXGI_FORMAT_BC2_UNORM_SRGB                          = 75,\\r\\n    DXGI_FORMAT_BC3_TYPELESS                            = 76,\\r\\n    DXGI_FORMAT_BC3_UNORM                               = 77,\\r\\n    DXGI_FORMAT_BC3_UNORM_SRGB                          = 78,\\r\\n    DXGI_FORMAT_BC4_TYPELESS                            = 79,\\r\\n    DXGI_FORMAT_BC4_UNORM                               = 80,\\r\\n    DXGI_FORMAT_BC4_SNORM                               = 81,\\r\\n    DXGI_FORMAT_BC5_TYPELESS                            = 82,\\r\\n    DXGI_FORMAT_BC5_UNORM                               = 83,\\r\\n    DXGI_FORMAT_BC5_SNORM                               = 84,\\r\\n    DXGI_FORMAT_B5G6R5_UNORM                            = 85,\\r\\n    DXGI_FORMAT_B5G5R5A1_UNORM                          = 86,\\r\\n    DXGI_FORMAT_B8G8R8A8_UNORM                          = 87,\\r\\n    DXGI_FORMAT_B8G8R8X8_UNORM                          = 88,\\r\\n    DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM              = 89,\\r\\n    DXGI_FORMAT_B8G8R8A8_TYPELESS                       = 90,\\r\\n    DXGI_FORMAT_B8G8R8A8_UNORM_SRGB                     = 91,\\r\\n    DXGI_FORMAT_B8G8R8X8_TYPELESS                       = 92,\\r\\n    DXGI_FORMAT_B8G8R8X8_UNORM_SRGB                     = 93,\\r\\n    DXGI_FORMAT_BC6H_TYPELESS                           = 94,\\r\\n    DXGI_FORMAT_BC6H_UF16                               = 95,\\r\\n    DXGI_FORMAT_BC6H_SF16                               = 96,\\r\\n    DXGI_FORMAT_BC7_TYPELESS                            = 97,\\r\\n    DXGI_FORMAT_BC7_UNORM                               = 98,\\r\\n    DXGI_FORMAT_BC7_UNORM_SRGB                          = 99,\\r\\n    DXGI_FORMAT_AYUV                                    = 100,\\r\\n    DXGI_FORMAT_Y410                                    = 101,\\r\\n    DXGI_FORMAT_Y416                                    = 102,\\r\\n    DXGI_FORMAT_NV12                                    = 103,\\r\\n    DXGI_FORMAT_P010                                    = 104,\\r\\n    DXGI_FORMAT_P016                                    = 105,\\r\\n    DXGI_FORMAT_420_OPAQUE                              = 106,\\r\\n    DXGI_FORMAT_YUY2                                    = 107,\\r\\n    DXGI_FORMAT_Y210                                    = 108,\\r\\n    DXGI_FORMAT_Y216                                    = 109,\\r\\n    DXGI_FORMAT_NV11                                    = 110,\\r\\n    DXGI_FORMAT_AI44                                    = 111,\\r\\n    DXGI_FORMAT_IA44                                    = 112,\\r\\n    DXGI_FORMAT_P8                                      = 113,\\r\\n    DXGI_FORMAT_A8P8                                    = 114,\\r\\n    DXGI_FORMAT_B4G4R4A4_UNORM                          = 115,\\r\\n    DXGI_FORMAT_P208                                    = 130,\\r\\n    DXGI_FORMAT_V208                                    = 131,\\r\\n    DXGI_FORMAT_V408                                    = 132,\\r\\n    DXGI_FORMAT_SAMPLER_FEEDBACK_MIN_MIP_OPAQUE         = 189,\\r\\n    DXGI_FORMAT_SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE = 190,\\r\\n    DXGI_FORMAT_FORCE_UINT                  = 0xffffffff\\r\\n} DXGI_FORMAT;"},"DXGI_FORMAT_DEFINED":{"comment":"","exp":"1","file":"dxgiformat.h","line":8,"type":"Integer","value":1},"DXGI_FRAME_PRESENTATION_MODE":{"comment":"","exp":"","file":"dxgi1_3.h","line":1653,"type":"Enum","value":"typedef\\r\\nenum DXGI_FRAME_PRESENTATION_MODE\\r\\n    {\\r\\n        DXGI_FRAME_PRESENTATION_MODE_COMPOSED\\t= 0,\\r\\n        DXGI_FRAME_PRESENTATION_MODE_OVERLAY\\t= 1,\\r\\n        DXGI_FRAME_PRESENTATION_MODE_NONE\\t= 2,\\r\\n        DXGI_FRAME_PRESENTATION_MODE_COMPOSITION_FAILURE\\t= 3\\r\\n    } \\tDXGI_FRAME_PRESENTATION_MODE;"},"DXGI_FRAME_STATISTICS":{"comment":"","exp":"","file":"dxgi.h","line":169,"type":"Struct","value":"typedef struct DXGI_FRAME_STATISTICS\\r\\n    {\\r\\n    UINT PresentCount;\\r\\n    UINT PresentRefreshCount;\\r\\n    UINT SyncRefreshCount;\\r\\n    LARGE_INTEGER SyncQPCTime;\\r\\n    LARGE_INTEGER SyncGPUTime;\\r\\n    } \\tDXGI_FRAME_STATISTICS;"},"DXGI_FRAME_STATISTICS_MEDIA":{"comment":"","exp":"","file":"dxgi1_3.h","line":1662,"type":"Struct","value":"typedef struct DXGI_FRAME_STATISTICS_MEDIA\\r\\n    {\\r\\n    UINT PresentCount;\\r\\n    UINT PresentRefreshCount;\\r\\n    UINT SyncRefreshCount;\\r\\n    LARGE_INTEGER SyncQPCTime;\\r\\n    LARGE_INTEGER SyncGPUTime;\\r\\n    DXGI_FRAME_PRESENTATION_MODE CompositionMode;\\r\\n    UINT ApprovedPresentDuration;\\r\\n    } \\tDXGI_FRAME_STATISTICS_MEDIA;"},"DXGI_GPU_PREFERENCE":{"comment":"","exp":"","file":"dxgi1_6.h","line":726,"type":"Enum","value":"typedef\\r\\nenum DXGI_GPU_PREFERENCE\\r\\n    {\\r\\n        DXGI_GPU_PREFERENCE_UNSPECIFIED\\t= 0,\\r\\n        DXGI_GPU_PREFERENCE_MINIMUM_POWER\\t= ( DXGI_GPU_PREFERENCE_UNSPECIFIED + 1 ) ,\\r\\n        DXGI_GPU_PREFERENCE_HIGH_PERFORMANCE\\t= ( DXGI_GPU_PREFERENCE_MINIMUM_POWER + 1 ) \\r\\n    } \\tDXGI_GPU_PREFERENCE;"},"DXGI_GRAPHICS_PREEMPTION_GRANULARITY":{"comment":"","exp":"","file":"dxgi1_2.h","line":1958,"type":"Enum","value":"typedef\\r\\nenum DXGI_GRAPHICS_PREEMPTION_GRANULARITY\\r\\n    {\\r\\n        DXGI_GRAPHICS_PREEMPTION_DMA_BUFFER_BOUNDARY\\t= 0,\\r\\n        DXGI_GRAPHICS_PREEMPTION_PRIMITIVE_BOUNDARY\\t= 1,\\r\\n        DXGI_GRAPHICS_PREEMPTION_TRIANGLE_BOUNDARY\\t= 2,\\r\\n        DXGI_GRAPHICS_PREEMPTION_PIXEL_BOUNDARY\\t= 3,\\r\\n        DXGI_GRAPHICS_PREEMPTION_INSTRUCTION_BOUNDARY\\t= 4\\r\\n    } \\tDXGI_GRAPHICS_PREEMPTION_GRANULARITY;"},"DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAGS":{"comment":"","exp":"","file":"dxgi1_6.h","line":375,"type":"Enum","value":"typedef\\r\\nenum DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAGS\\r\\n    {\\r\\n        DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_FULLSCREEN\\t= 1,\\r\\n        DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_WINDOWED\\t= 2,\\r\\n        DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAG_CURSOR_STRETCHED\\t= 4\\r\\n    } \\tDXGI_HARDWARE_COMPOSITION_SUPPORT_FLAGS;"},"DXGI_HDR_METADATA_HDR10":{"comment":"","exp":"","file":"dxgi1_5.h","line":426,"type":"Struct","value":"typedef struct DXGI_HDR_METADATA_HDR10\\r\\n    {\\r\\n    UINT16 RedPrimary[ 2 ];\\r\\n    UINT16 GreenPrimary[ 2 ];\\r\\n    UINT16 BluePrimary[ 2 ];\\r\\n    UINT16 WhitePoint[ 2 ];\\r\\n    UINT MaxMasteringLuminance;\\r\\n    UINT MinMasteringLuminance;\\r\\n    UINT16 MaxContentLightLevel;\\r\\n    UINT16 MaxFrameAverageLightLevel;\\r\\n    } \\tDXGI_HDR_METADATA_HDR10;"},"DXGI_HDR_METADATA_HDR10PLUS":{"comment":"","exp":"","file":"dxgi1_5.h","line":438,"type":"Struct","value":"typedef struct DXGI_HDR_METADATA_HDR10PLUS\\r\\n    {\\r\\n    BYTE Data[ 72 ];\\r\\n    } \\tDXGI_HDR_METADATA_HDR10PLUS;"},"DXGI_HDR_METADATA_TYPE":{"comment":"","exp":"","file":"dxgi1_5.h","line":418,"type":"Enum","value":"typedef\\r\\nenum DXGI_HDR_METADATA_TYPE\\r\\n    {\\r\\n        DXGI_HDR_METADATA_TYPE_NONE\\t= 0,\\r\\n        DXGI_HDR_METADATA_TYPE_HDR10\\t= 1,\\r\\n        DXGI_HDR_METADATA_TYPE_HDR10PLUS\\t= 2\\r\\n    } \\tDXGI_HDR_METADATA_TYPE;"},"DXGI_INFO_QUEUE_DEFAULT_MESSAGE_COUNT_LIMIT":{"comment":"","exp":"1024","file":"dxgidebug.h","line":154,"type":"Integer","value":1024},"DXGI_INFO_QUEUE_FILTER":{"comment":"","exp":"","file":"dxgidebug.h","line":148,"type":"Struct","value":"typedef struct DXGI_INFO_QUEUE_FILTER\\r\\n    {\\r\\n    DXGI_INFO_QUEUE_FILTER_DESC AllowList;\\r\\n    DXGI_INFO_QUEUE_FILTER_DESC DenyList;\\r\\n    } \\tDXGI_INFO_QUEUE_FILTER;"},"DXGI_INFO_QUEUE_FILTER_DESC":{"comment":"","exp":"","file":"dxgidebug.h","line":135,"type":"Struct","value":"typedef struct DXGI_INFO_QUEUE_FILTER_DESC\\r\\n    {\\r\\n    UINT NumCategories;\\r\\n    \/* [annotation] *\/ \\r\\n    _Field_size_(NumCategories)  DXGI_INFO_QUEUE_MESSAGE_CATEGORY *pCategoryList;\\r\\n    UINT NumSeverities;\\r\\n    \/* [annotation] *\/ \\r\\n    _Field_size_(NumSeverities)  DXGI_INFO_QUEUE_MESSAGE_SEVERITY *pSeverityList;\\r\\n    UINT NumIDs;\\r\\n    \/* [annotation] *\/ \\r\\n    _Field_size_(NumIDs)  DXGI_INFO_QUEUE_MESSAGE_ID *pIDList;\\r\\n    } \\tDXGI_INFO_QUEUE_FILTER_DESC;"},"DXGI_INFO_QUEUE_MESSAGE":{"comment":"","exp":"","file":"dxgidebug.h","line":124,"type":"Struct","value":"typedef struct DXGI_INFO_QUEUE_MESSAGE\\r\\n    {\\r\\n    DXGI_DEBUG_ID Producer;\\r\\n    DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category;\\r\\n    DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity;\\r\\n    DXGI_INFO_QUEUE_MESSAGE_ID ID;\\r\\n    \/* [annotation] *\/ \\r\\n    _Field_size_(DescriptionByteLength)  const char *pDescription;\\r\\n    SIZE_T DescriptionByteLength;\\r\\n    } \\tDXGI_INFO_QUEUE_MESSAGE;"},"DXGI_INFO_QUEUE_MESSAGE_CATEGORY":{"comment":"","exp":"","file":"dxgidebug.h","line":95,"type":"Enum","value":"typedef\\r\\nenum DXGI_INFO_QUEUE_MESSAGE_CATEGORY\\r\\n    {\\r\\n        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_UNKNOWN\\t= 0,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_MISCELLANEOUS\\t= ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_UNKNOWN + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_INITIALIZATION\\t= ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_MISCELLANEOUS + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_CLEANUP\\t= ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_INITIALIZATION + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_COMPILATION\\t= ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_CLEANUP + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_CREATION\\t= ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_COMPILATION + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_SETTING\\t= ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_CREATION + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_GETTING\\t= ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_SETTING + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_RESOURCE_MANIPULATION\\t= ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_STATE_GETTING + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_EXECUTION\\t= ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_RESOURCE_MANIPULATION + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_CATEGORY_SHADER\\t= ( DXGI_INFO_QUEUE_MESSAGE_CATEGORY_EXECUTION + 1 ) \\r\\n    } \\tDXGI_INFO_QUEUE_MESSAGE_CATEGORY;"},"DXGI_INFO_QUEUE_MESSAGE_ID_STRING_FROM_APPLICATION":{"comment":"","exp":"0","file":"dxgidebug.h","line":123,"type":"Integer","value":0},"DXGI_INFO_QUEUE_MESSAGE_SEVERITY":{"comment":"","exp":"","file":"dxgidebug.h","line":111,"type":"Enum","value":"typedef\\r\\nenum DXGI_INFO_QUEUE_MESSAGE_SEVERITY\\r\\n    {\\r\\n        DXGI_INFO_QUEUE_MESSAGE_SEVERITY_CORRUPTION\\t= 0,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_SEVERITY_ERROR\\t= ( DXGI_INFO_QUEUE_MESSAGE_SEVERITY_CORRUPTION + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_SEVERITY_WARNING\\t= ( DXGI_INFO_QUEUE_MESSAGE_SEVERITY_ERROR + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_SEVERITY_INFO\\t= ( DXGI_INFO_QUEUE_MESSAGE_SEVERITY_WARNING + 1 ) ,\\r\\n        DXGI_INFO_QUEUE_MESSAGE_SEVERITY_MESSAGE\\t= ( DXGI_INFO_QUEUE_MESSAGE_SEVERITY_INFO + 1 ) \\r\\n    } \\tDXGI_INFO_QUEUE_MESSAGE_SEVERITY;"},"DXGI_MAPPED_RECT":{"comment":"","exp":"","file":"dxgi.h","line":178,"type":"Struct","value":"typedef struct DXGI_MAPPED_RECT\\r\\n    {\\r\\n    INT Pitch;\\r\\n    BYTE *pBits;\\r\\n    } \\tDXGI_MAPPED_RECT;"},"DXGI_MAP_DISCARD":{"comment":"","exp":"( 4UL )","file":"dxgi.h","line":895,"type":"Integer","value":4},"DXGI_MAP_READ":{"comment":"","exp":"( 1UL )","file":"dxgi.h","line":891,"type":"Integer","value":1},"DXGI_MAP_WRITE":{"comment":"","exp":"( 2UL )","file":"dxgi.h","line":893,"type":"Integer","value":2},"DXGI_MATRIX_3X2_F":{"comment":"","exp":"","file":"dxgi1_3.h","line":343,"type":"Struct","value":"typedef struct DXGI_MATRIX_3X2_F\\r\\n    {\\r\\n    FLOAT _11;\\r\\n    FLOAT _12;\\r\\n    FLOAT _21;\\r\\n    FLOAT _22;\\r\\n    FLOAT _31;\\r\\n    FLOAT _32;\\r\\n    } \\tDXGI_MATRIX_3X2_F;"},"DXGI_MAX_SWAP_CHAIN_BUFFERS":{"comment":"","exp":"( 16 )","file":"dxgi.h","line":1684,"type":"Integer","value":16},"DXGI_MEMORY_SEGMENT_GROUP":{"comment":"","exp":"","file":"dxgi1_4.h","line":1194,"type":"Enum","value":"typedef\\r\\nenum DXGI_MEMORY_SEGMENT_GROUP\\r\\n    {\\r\\n        DXGI_MEMORY_SEGMENT_GROUP_LOCAL\\t= 0,\\r\\n        DXGI_MEMORY_SEGMENT_GROUP_NON_LOCAL\\t= 1\\r\\n    } \\tDXGI_MEMORY_SEGMENT_GROUP;"},"DXGI_MODE_DESC1":{"comment":"","exp":"","file":"dxgi1_2.h","line":1167,"type":"Struct","value":"typedef struct DXGI_MODE_DESC1\\r\\n    {\\r\\n    UINT Width;\\r\\n    UINT Height;\\r\\n    DXGI_RATIONAL RefreshRate;\\r\\n    DXGI_FORMAT Format;\\r\\n    DXGI_MODE_SCANLINE_ORDER ScanlineOrdering;\\r\\n    DXGI_MODE_SCALING Scaling;\\r\\n    BOOL Stereo;\\r\\n    } \\tDXGI_MODE_DESC1;"},"DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS":{"comment":"","exp":"","file":"dxgi1_3.h","line":1333,"type":"Enum","value":"typedef\\r\\nenum DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS\\r\\n    {\\r\\n        DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_NOMINAL_RANGE\\t= 0x1,\\r\\n        DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_BT709\\t= 0x2,\\r\\n        DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAG_xvYCC\\t= 0x4\\r\\n    } \\tDXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS;"},"DXGI_MWA_NO_ALT_ENTER":{"comment":"","exp":"( 1 << 1 )","file":"dxgi.h","line":1966,"type":"Integer","value":2},"DXGI_MWA_NO_PRINT_SCREEN":{"comment":"","exp":"( 1 << 2 )","file":"dxgi.h","line":1967,"type":"Integer","value":4},"DXGI_MWA_NO_WINDOW_CHANGES":{"comment":"","exp":"( 1 << 0 )","file":"dxgi.h","line":1965,"type":"Integer","value":1},"DXGI_MWA_VALID":{"comment":"","exp":"( 0x7 )","file":"dxgi.h","line":1968,"type":"Integer","value":7},"DXGI_OUTDUPL_DESC":{"comment":"","exp":"","file":"dxgi1_2.h","line":221,"type":"Struct","value":"typedef struct DXGI_OUTDUPL_DESC\\r\\n    {\\r\\n    DXGI_MODE_DESC ModeDesc;\\r\\n    DXGI_MODE_ROTATION Rotation;\\r\\n    BOOL DesktopImageInSystemMemory;\\r\\n    } \\tDXGI_OUTDUPL_DESC;"},"DXGI_OUTDUPL_FLAG":{"comment":"","exp":"","file":"dxgi1_5.h","line":84,"type":"Enum","value":"typedef\\r\\nenum DXGI_OUTDUPL_FLAG\\r\\n    {\\r\\n        DXGI_OUTDUPL_COMPOSITED_UI_CAPTURE_ONLY\\t= 1\\r\\n    } \\tDXGI_OUTDUPL_FLAG;"},"DXGI_OUTDUPL_FRAME_INFO":{"comment":"","exp":"","file":"dxgi1_2.h","line":251,"type":"Struct","value":"typedef struct DXGI_OUTDUPL_FRAME_INFO\\r\\n    {\\r\\n    LARGE_INTEGER LastPresentTime;\\r\\n    LARGE_INTEGER LastMouseUpdateTime;\\r\\n    UINT AccumulatedFrames;\\r\\n    BOOL RectsCoalesced;\\r\\n    BOOL ProtectedContentMaskedOut;\\r\\n    DXGI_OUTDUPL_POINTER_POSITION PointerPosition;\\r\\n    UINT TotalMetadataBufferSize;\\r\\n    UINT PointerShapeBufferSize;\\r\\n    } \\tDXGI_OUTDUPL_FRAME_INFO;"},"DXGI_OUTDUPL_MOVE_RECT":{"comment":"","exp":"","file":"dxgi1_2.h","line":215,"type":"Struct","value":"typedef struct DXGI_OUTDUPL_MOVE_RECT\\r\\n    {\\r\\n    POINT SourcePoint;\\r\\n    RECT DestinationRect;\\r\\n    } \\tDXGI_OUTDUPL_MOVE_RECT;"},"DXGI_OUTDUPL_POINTER_POSITION":{"comment":"","exp":"","file":"dxgi1_2.h","line":228,"type":"Struct","value":"typedef struct DXGI_OUTDUPL_POINTER_POSITION\\r\\n    {\\r\\n    POINT Position;\\r\\n    BOOL Visible;\\r\\n    } \\tDXGI_OUTDUPL_POINTER_POSITION;"},"DXGI_OUTDUPL_POINTER_SHAPE_INFO":{"comment":"","exp":"","file":"dxgi1_2.h","line":242,"type":"Struct","value":"typedef struct DXGI_OUTDUPL_POINTER_SHAPE_INFO\\r\\n    {\\r\\n    UINT Type;\\r\\n    UINT Width;\\r\\n    UINT Height;\\r\\n    UINT Pitch;\\r\\n    POINT HotSpot;\\r\\n    } \\tDXGI_OUTDUPL_POINTER_SHAPE_INFO;"},"DXGI_OUTDUPL_POINTER_SHAPE_TYPE":{"comment":"","exp":"","file":"dxgi1_2.h","line":234,"type":"Enum","value":"typedef\\r\\nenum DXGI_OUTDUPL_POINTER_SHAPE_TYPE\\r\\n    {\\r\\n        DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MONOCHROME\\t= 0x1,\\r\\n        DXGI_OUTDUPL_POINTER_SHAPE_TYPE_COLOR\\t= 0x2,\\r\\n        DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MASKED_COLOR\\t= 0x4\\r\\n    } \\tDXGI_OUTDUPL_POINTER_SHAPE_TYPE;"},"DXGI_OUTPUT_DESC":{"comment":"","exp":"","file":"dxgi.h","line":218,"type":"Struct","value":"typedef struct DXGI_OUTPUT_DESC\\r\\n    {\\r\\n    WCHAR DeviceName[ 32 ];\\r\\n    RECT DesktopCoordinates;\\r\\n    BOOL AttachedToDesktop;\\r\\n    DXGI_MODE_ROTATION Rotation;\\r\\n    HMONITOR Monitor;\\r\\n    } \\tDXGI_OUTPUT_DESC;"},"DXGI_OUTPUT_DESC1":{"comment":"","exp":"","file":"dxgi1_6.h","line":357,"type":"Struct","value":"typedef struct DXGI_OUTPUT_DESC1\\r\\n    {\\r\\n    WCHAR DeviceName[ 32 ];\\r\\n    RECT DesktopCoordinates;\\r\\n    BOOL AttachedToDesktop;\\r\\n    DXGI_MODE_ROTATION Rotation;\\r\\n    HMONITOR Monitor;\\r\\n    UINT BitsPerColor;\\r\\n    DXGI_COLOR_SPACE_TYPE ColorSpace;\\r\\n    FLOAT RedPrimary[ 2 ];\\r\\n    FLOAT GreenPrimary[ 2 ];\\r\\n    FLOAT BluePrimary[ 2 ];\\r\\n    FLOAT WhitePoint[ 2 ];\\r\\n    FLOAT MinLuminance;\\r\\n    FLOAT MaxLuminance;\\r\\n    FLOAT MaxFullFrameLuminance;\\r\\n    } \\tDXGI_OUTPUT_DESC1;"},"DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG":{"comment":"","exp":"","file":"dxgi1_4.h","line":532,"type":"Enum","value":"typedef\\r\\nenum DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG\\r\\n    {\\r\\n        DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG_PRESENT\\t= 0x1\\r\\n    } \\tDXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG;"},"DXGI_OVERLAY_SUPPORT_FLAG":{"comment":"","exp":"","file":"dxgi1_3.h","line":1791,"type":"Enum","value":"typedef\\r\\nenum DXGI_OVERLAY_SUPPORT_FLAG\\r\\n    {\\r\\n        DXGI_OVERLAY_SUPPORT_FLAG_DIRECT\\t= 0x1,\\r\\n        DXGI_OVERLAY_SUPPORT_FLAG_SCALING\\t= 0x2\\r\\n    } \\tDXGI_OVERLAY_SUPPORT_FLAG;"},"DXGI_PRESENT_ALLOW_TEARING":{"comment":"","exp":"0x00000200UL","file":"dxgi.h","line":1693,"type":"Integer","value":512},"DXGI_PRESENT_DO_NOT_SEQUENCE":{"comment":"","exp":"0x00000002UL","file":"dxgi.h","line":1686,"type":"Integer","value":2},"DXGI_PRESENT_DO_NOT_WAIT":{"comment":"","exp":"0x00000008UL","file":"dxgi.h","line":1688,"type":"Integer","value":8},"DXGI_PRESENT_PARAMETERS":{"comment":"","exp":"","file":"dxgi1_2.h","line":1209,"type":"Struct","value":"typedef struct DXGI_PRESENT_PARAMETERS\\r\\n    {\\r\\n    UINT DirtyRectsCount;\\r\\n    \/* [annotation] *\/ \\r\\n    _Field_size_full_opt_(DirtyRectsCount)  RECT *pDirtyRects;\\r\\n    RECT *pScrollRect;\\r\\n    POINT *pScrollOffset;\\r\\n    } \\tDXGI_PRESENT_PARAMETERS;"},"DXGI_PRESENT_RESTART":{"comment":"","exp":"0x00000004UL","file":"dxgi.h","line":1687,"type":"Integer","value":4},"DXGI_PRESENT_RESTRICT_TO_OUTPUT":{"comment":"","exp":"0x00000040UL","file":"dxgi.h","line":1691,"type":"Integer","value":64},"DXGI_PRESENT_STEREO_PREFER_RIGHT":{"comment":"","exp":"0x00000010UL","file":"dxgi.h","line":1689,"type":"Integer","value":16},"DXGI_PRESENT_STEREO_TEMPORARY_MONO":{"comment":"","exp":"0x00000020UL","file":"dxgi.h","line":1690,"type":"Integer","value":32},"DXGI_PRESENT_TEST":{"comment":"","exp":"0x00000001UL","file":"dxgi.h","line":1685,"type":"Integer","value":1},"DXGI_PRESENT_USE_DURATION":{"comment":"","exp":"0x00000100UL","file":"dxgi.h","line":1692,"type":"Integer","value":256},"DXGI_QUERY_VIDEO_MEMORY_INFO":{"comment":"","exp":"","file":"dxgi1_4.h","line":1201,"type":"Struct","value":"typedef struct DXGI_QUERY_VIDEO_MEMORY_INFO\\r\\n    {\\r\\n    UINT64 Budget;\\r\\n    UINT64 CurrentUsage;\\r\\n    UINT64 AvailableForReservation;\\r\\n    UINT64 CurrentReservation;\\r\\n    } \\tDXGI_QUERY_VIDEO_MEMORY_INFO;"},"DXGI_RATIONAL":{"comment":"","exp":"","file":"dxgicommon.h","line":9,"type":"Struct","value":"typedef struct DXGI_RATIONAL\\r\\n{\\r\\n    UINT Numerator;\\r\\n    UINT Denominator;\\r\\n} DXGI_RATIONAL;"},"DXGI_RESIDENCY":{"comment":"","exp":"","file":"dxgi.h","line":242,"type":"Enum","value":"typedef\\r\\nenum DXGI_RESIDENCY\\r\\n    {\\r\\n        DXGI_RESIDENCY_FULLY_RESIDENT\\t= 1,\\r\\n        DXGI_RESIDENCY_RESIDENT_IN_SHARED_MEMORY\\t= 2,\\r\\n        DXGI_RESIDENCY_EVICTED_TO_DISK\\t= 3\\r\\n    } \\tDXGI_RESIDENCY;"},"DXGI_RESOURCE_PRIORITY_HIGH":{"comment":"","exp":"( 0xa0000000 )","file":"dxgi.h","line":238,"type":"Integer","value":2684354560},"DXGI_RESOURCE_PRIORITY_LOW":{"comment":"","exp":"( 0x50000000 )","file":"dxgi.h","line":234,"type":"Integer","value":1342177280},"DXGI_RESOURCE_PRIORITY_MAXIMUM":{"comment":"","exp":"( 0xc8000000 )","file":"dxgi.h","line":240,"type":"Integer","value":3355443200},"DXGI_RESOURCE_PRIORITY_MINIMUM":{"comment":"","exp":"( 0x28000000 )","file":"dxgi.h","line":232,"type":"Integer","value":671088640},"DXGI_RESOURCE_PRIORITY_NORMAL":{"comment":"","exp":"( 0x78000000 )","file":"dxgi.h","line":236,"type":"Integer","value":2013265920},"DXGI_SAMPLE_DESC":{"comment":"","exp":"","file":"dxgicommon.h","line":19,"type":"Struct","value":"typedef struct DXGI_SAMPLE_DESC\\r\\n{\\r\\n    UINT Count;\\r\\n    UINT Quality;\\r\\n} DXGI_SAMPLE_DESC;"},"DXGI_SCALING":{"comment":"","exp":"","file":"dxgi1_2.h","line":1178,"type":"Enum","value":"typedef\\r\\nenum DXGI_SCALING\\r\\n    {\\r\\n        DXGI_SCALING_STRETCH\\t= 0,\\r\\n        DXGI_SCALING_NONE\\t= 1,\\r\\n        DXGI_SCALING_ASPECT_RATIO_STRETCH\\t= 2\\r\\n    } \\tDXGI_SCALING;"},"DXGI_SHARED_RESOURCE":{"comment":"","exp":"","file":"dxgi.h","line":227,"type":"Struct","value":"typedef struct DXGI_SHARED_RESOURCE\\r\\n    {\\r\\n    HANDLE Handle;\\r\\n    } \\tDXGI_SHARED_RESOURCE;"},"DXGI_SHARED_RESOURCE_READ":{"comment":"","exp":"( 0x80000000L )","file":"dxgi1_2.h","line":1163,"type":"Integer","value":2147483648},"DXGI_SHARED_RESOURCE_WRITE":{"comment":"","exp":"( 1 )","file":"dxgi1_2.h","line":1165,"type":"Integer","value":1},"DXGI_STANDARD_MULTISAMPLE_QUALITY_PATTERN":{"comment":"","exp":"0xffffffff","file":"dxgicommon.h","line":16,"type":"Integer","value":4294967295},"DXGI_SURFACE_DESC":{"comment":"","exp":"","file":"dxgi.h","line":250,"type":"Struct","value":"typedef struct DXGI_SURFACE_DESC\\r\\n    {\\r\\n    UINT Width;\\r\\n    UINT Height;\\r\\n    DXGI_FORMAT Format;\\r\\n    DXGI_SAMPLE_DESC SampleDesc;\\r\\n    } \\tDXGI_SURFACE_DESC;"},"DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG":{"comment":"","exp":"","file":"dxgi1_4.h","line":84,"type":"Enum","value":"typedef\\r\\nenum DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG\\r\\n    {\\r\\n        DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_PRESENT\\t= 0x1,\\r\\n        DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_OVERLAY_PRESENT\\t= 0x2\\r\\n    } \\tDXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG;"},"DXGI_SWAP_CHAIN_DESC":{"comment":"","exp":"","file":"dxgi.h","line":285,"type":"Struct","value":"typedef struct DXGI_SWAP_CHAIN_DESC\\r\\n    {\\r\\n    DXGI_MODE_DESC BufferDesc;\\r\\n    DXGI_SAMPLE_DESC SampleDesc;\\r\\n    DXGI_USAGE BufferUsage;\\r\\n    UINT BufferCount;\\r\\n    HWND OutputWindow;\\r\\n    BOOL Windowed;\\r\\n    DXGI_SWAP_EFFECT SwapEffect;\\r\\n    UINT Flags;\\r\\n    } \\tDXGI_SWAP_CHAIN_DESC;"},"DXGI_SWAP_CHAIN_DESC1":{"comment":"","exp":"","file":"dxgi1_2.h","line":1186,"type":"Struct","value":"typedef struct DXGI_SWAP_CHAIN_DESC1\\r\\n    {\\r\\n    UINT Width;\\r\\n    UINT Height;\\r\\n    DXGI_FORMAT Format;\\r\\n    BOOL Stereo;\\r\\n    DXGI_SAMPLE_DESC SampleDesc;\\r\\n    DXGI_USAGE BufferUsage;\\r\\n    UINT BufferCount;\\r\\n    DXGI_SCALING Scaling;\\r\\n    DXGI_SWAP_EFFECT SwapEffect;\\r\\n    DXGI_ALPHA_MODE AlphaMode;\\r\\n    UINT Flags;\\r\\n    } \\tDXGI_SWAP_CHAIN_DESC1;"},"DXGI_SWAP_CHAIN_FLAG":{"comment":"","exp":"","file":"dxgi.h","line":267,"type":"Enum","value":"typedef\\r\\nenum DXGI_SWAP_CHAIN_FLAG\\r\\n    {\\r\\n        DXGI_SWAP_CHAIN_FLAG_NONPREROTATED\\t= 1,\\r\\n        DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH\\t= 2,\\r\\n        DXGI_SWAP_CHAIN_FLAG_GDI_COMPATIBLE\\t= 4,\\r\\n        DXGI_SWAP_CHAIN_FLAG_RESTRICTED_CONTENT\\t= 8,\\r\\n        DXGI_SWAP_CHAIN_FLAG_RESTRICT_SHARED_RESOURCE_DRIVER\\t= 16,\\r\\n        DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY\\t= 32,\\r\\n        DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT\\t= 64,\\r\\n        DXGI_SWAP_CHAIN_FLAG_FOREGROUND_LAYER\\t= 128,\\r\\n        DXGI_SWAP_CHAIN_FLAG_FULLSCREEN_VIDEO\\t= 256,\\r\\n        DXGI_SWAP_CHAIN_FLAG_YUV_VIDEO\\t= 512,\\r\\n        DXGI_SWAP_CHAIN_FLAG_HW_PROTECTED\\t= 1024,\\r\\n        DXGI_SWAP_CHAIN_FLAG_ALLOW_TEARING\\t= 2048,\\r\\n        DXGI_SWAP_CHAIN_FLAG_RESTRICTED_TO_ALL_HOLOGRAPHIC_DISPLAYS\\t= 4096\\r\\n    } \\tDXGI_SWAP_CHAIN_FLAG;"},"DXGI_SWAP_CHAIN_FULLSCREEN_DESC":{"comment":"","exp":"","file":"dxgi1_2.h","line":1201,"type":"Struct","value":"typedef struct DXGI_SWAP_CHAIN_FULLSCREEN_DESC\\r\\n    {\\r\\n    DXGI_RATIONAL RefreshRate;\\r\\n    DXGI_MODE_SCANLINE_ORDER ScanlineOrdering;\\r\\n    DXGI_MODE_SCALING Scaling;\\r\\n    BOOL Windowed;\\r\\n    } \\tDXGI_SWAP_CHAIN_FULLSCREEN_DESC;"},"DXGI_SWAP_EFFECT":{"comment":"","exp":"","file":"dxgi.h","line":258,"type":"Enum","value":"typedef\\r\\nenum DXGI_SWAP_EFFECT\\r\\n    {\\r\\n        DXGI_SWAP_EFFECT_DISCARD\\t= 0,\\r\\n        DXGI_SWAP_EFFECT_SEQUENTIAL\\t= 1,\\r\\n        DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL\\t= 3,\\r\\n        DXGI_SWAP_EFFECT_FLIP_DISCARD\\t= 4\\r\\n    } \\tDXGI_SWAP_EFFECT;"},"DXGI_USAGE_BACK_BUFFER":{"comment":"","exp":"0x00000040UL","file":"dxgi.h","line":162,"type":"Integer","value":64},"DXGI_USAGE_DISCARD_ON_PRESENT":{"comment":"","exp":"0x00000200UL","file":"dxgi.h","line":165,"type":"Integer","value":512},"DXGI_USAGE_READ_ONLY":{"comment":"","exp":"0x00000100UL","file":"dxgi.h","line":164,"type":"Integer","value":256},"DXGI_USAGE_RENDER_TARGET_OUTPUT":{"comment":"","exp":"0x00000020UL","file":"dxgi.h","line":161,"type":"Integer","value":32},"DXGI_USAGE_SHADER_INPUT":{"comment":"","exp":"0x00000010UL","file":"dxgi.h","line":160,"type":"Integer","value":16},"DXGI_USAGE_SHARED":{"comment":"","exp":"0x00000080UL","file":"dxgi.h","line":163,"type":"Integer","value":128},"DXGI_USAGE_UNORDERED_ACCESS":{"comment":"","exp":"0x00000400UL","file":"dxgi.h","line":166,"type":"Integer","value":1024},"IDXGIAdapter1Vtbl":{"comment":"","exp":"","file":"dxgi.h","line":2609,"type":"Struct","value":"typedef struct IDXGIAdapter1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIAdapter1 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIAdapter1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIAdapter1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIAdapter1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIAdapter1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIAdapter1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIAdapter1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumOutputs )( \\r\\n            IDXGIAdapter1 * This,\\r\\n            \/* [in] *\/ UINT Output,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _COM_Outptr_  IDXGIOutput **ppOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIAdapter1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckInterfaceSupport )( \\r\\n            IDXGIAdapter1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID InterfaceName,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LARGE_INTEGER *pUMDVersion);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc1 )( \\r\\n            IDXGIAdapter1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC1 *pDesc);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIAdapter1Vtbl;"},"IDXGIAdapter2Vtbl":{"comment":"","exp":"","file":"dxgi1_2.h","line":2023,"type":"Struct","value":"typedef struct IDXGIAdapter2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIAdapter2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIAdapter2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIAdapter2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIAdapter2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIAdapter2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIAdapter2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIAdapter2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumOutputs )( \\r\\n            IDXGIAdapter2 * This,\\r\\n            \/* [in] *\/ UINT Output,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _COM_Outptr_  IDXGIOutput **ppOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIAdapter2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckInterfaceSupport )( \\r\\n            IDXGIAdapter2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID InterfaceName,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LARGE_INTEGER *pUMDVersion);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc1 )( \\r\\n            IDXGIAdapter2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc2 )( \\r\\n            IDXGIAdapter2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC2 *pDesc);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIAdapter2Vtbl;"},"IDXGIAdapter3Vtbl":{"comment":"","exp":"","file":"dxgi1_4.h","line":1270,"type":"Struct","value":"typedef struct IDXGIAdapter3Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIAdapter3 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIAdapter3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumOutputs )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [in] *\/ UINT Output,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _COM_Outptr_  IDXGIOutput **ppOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckInterfaceSupport )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID InterfaceName,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LARGE_INTEGER *pUMDVersion);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc1 )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc2 )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC2 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterHardwareContentProtectionTeardownStatusEvent )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterHardwareContentProtectionTeardownStatus )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryVideoMemoryInfo )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NodeIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_MEMORY_SEGMENT_GROUP MemorySegmentGroup,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_QUERY_VIDEO_MEMORY_INFO *pVideoMemoryInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVideoMemoryReservation )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NodeIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_MEMORY_SEGMENT_GROUP MemorySegmentGroup,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT64 Reservation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterVideoMemoryBudgetChangeNotificationEvent )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterVideoMemoryBudgetChangeNotification )( \\r\\n            IDXGIAdapter3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIAdapter3Vtbl;"},"IDXGIAdapter4Vtbl":{"comment":"","exp":"","file":"dxgi1_6.h","line":145,"type":"Struct","value":"typedef struct IDXGIAdapter4Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIAdapter4 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIAdapter4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumOutputs )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [in] *\/ UINT Output,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _COM_Outptr_  IDXGIOutput **ppOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckInterfaceSupport )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID InterfaceName,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LARGE_INTEGER *pUMDVersion);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc1 )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc2 )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC2 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterHardwareContentProtectionTeardownStatusEvent )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterHardwareContentProtectionTeardownStatus )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryVideoMemoryInfo )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NodeIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_MEMORY_SEGMENT_GROUP MemorySegmentGroup,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_QUERY_VIDEO_MEMORY_INFO *pVideoMemoryInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVideoMemoryReservation )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NodeIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_MEMORY_SEGMENT_GROUP MemorySegmentGroup,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT64 Reservation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterVideoMemoryBudgetChangeNotificationEvent )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterVideoMemoryBudgetChangeNotification )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc3 )( \\r\\n            IDXGIAdapter4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC3 *pDesc);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIAdapter4Vtbl;"},"IDXGIAdapterVtbl":{"comment":"","exp":"","file":"dxgi.h","line":1280,"type":"Struct","value":"typedef struct IDXGIAdapterVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIAdapter * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIAdapter * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIAdapter * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIAdapter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIAdapter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIAdapter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIAdapter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumOutputs )( \\r\\n            IDXGIAdapter * This,\\r\\n            \/* [in] *\/ UINT Output,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _COM_Outptr_  IDXGIOutput **ppOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIAdapter * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_ADAPTER_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckInterfaceSupport )( \\r\\n            IDXGIAdapter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID InterfaceName,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LARGE_INTEGER *pUMDVersion);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIAdapterVtbl;"},"IDXGIDebug1Vtbl":{"comment":"","exp":"","file":"dxgidebug.h","line":891,"type":"Struct","value":"typedef struct IDXGIDebug1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIDebug1 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIDebug1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIDebug1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReportLiveObjects )( \\r\\n            IDXGIDebug1 * This,\\r\\n            GUID apiid,\\r\\n            DXGI_DEBUG_RLO_FLAGS flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EnableLeakTrackingForThread )( \\r\\n            IDXGIDebug1 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DisableLeakTrackingForThread )( \\r\\n            IDXGIDebug1 * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsLeakTrackingEnabledForThread )( \\r\\n            IDXGIDebug1 * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIDebug1Vtbl;"},"IDXGIDebugVtbl":{"comment":"","exp":"","file":"dxgidebug.h","line":807,"type":"Struct","value":"typedef struct IDXGIDebugVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIDebug * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIDebug * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIDebug * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReportLiveObjects )( \\r\\n            IDXGIDebug * This,\\r\\n            GUID apiid,\\r\\n            DXGI_DEBUG_RLO_FLAGS flags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIDebugVtbl;"},"IDXGIDecodeSwapChainVtbl":{"comment":"","exp":"","file":"dxgi1_3.h","line":1400,"type":"Struct","value":"typedef struct IDXGIDecodeSwapChainVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIDecodeSwapChain * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIDecodeSwapChain * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIDecodeSwapChain * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PresentBuffer )( \\r\\n            IDXGIDecodeSwapChain * This,\\r\\n            UINT BufferToPresent,\\r\\n            UINT SyncInterval,\\r\\n            UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSourceRect )( \\r\\n            IDXGIDecodeSwapChain * This,\\r\\n            const RECT *pRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetTargetRect )( \\r\\n            IDXGIDecodeSwapChain * This,\\r\\n            const RECT *pRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDestSize )( \\r\\n            IDXGIDecodeSwapChain * This,\\r\\n            UINT Width,\\r\\n            UINT Height);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSourceRect )( \\r\\n            IDXGIDecodeSwapChain * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  RECT *pRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTargetRect )( \\r\\n            IDXGIDecodeSwapChain * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  RECT *pRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDestSize )( \\r\\n            IDXGIDecodeSwapChain * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pWidth,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pHeight);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetColorSpace )( \\r\\n            IDXGIDecodeSwapChain * This,\\r\\n            DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS ColorSpace);\\r\\n        \\r\\n        DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS ( STDMETHODCALLTYPE *GetColorSpace )( \\r\\n            IDXGIDecodeSwapChain * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIDecodeSwapChainVtbl;"},"IDXGIDevice1Vtbl":{"comment":"","exp":"","file":"dxgi.h","line":2766,"type":"Struct","value":"typedef struct IDXGIDevice1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIDevice1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIDevice1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAdapter )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **pAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSurface )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SURFACE_DESC *pDesc,\\r\\n            \/* [in] *\/ UINT NumSurfaces,\\r\\n            \/* [in] *\/ DXGI_USAGE Usage,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const DXGI_SHARED_RESOURCE *pSharedResource,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISurface **ppSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryResourceResidency )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IUnknown *const *ppResources,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(NumResources)  DXGI_RESIDENCY *pResidencyStatus,\\r\\n            \/* [in] *\/ UINT NumResources);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGPUThreadPriority )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [in] *\/ INT Priority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGPUThreadPriority )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _Out_  INT *pPriority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMaximumFrameLatency )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [in] *\/ UINT MaxLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaximumFrameLatency )( \\r\\n            IDXGIDevice1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pMaxLatency);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIDevice1Vtbl;"},"IDXGIDevice2Vtbl":{"comment":"","exp":"","file":"dxgi1_2.h","line":965,"type":"Struct","value":"typedef struct IDXGIDevice2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIDevice2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIDevice2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAdapter )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **pAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSurface )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SURFACE_DESC *pDesc,\\r\\n            \/* [in] *\/ UINT NumSurfaces,\\r\\n            \/* [in] *\/ DXGI_USAGE Usage,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const DXGI_SHARED_RESOURCE *pSharedResource,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISurface **ppSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryResourceResidency )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IUnknown *const *ppResources,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(NumResources)  DXGI_RESIDENCY *pResidencyStatus,\\r\\n            \/* [in] *\/ UINT NumResources);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGPUThreadPriority )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [in] *\/ INT Priority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGPUThreadPriority )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _Out_  INT *pPriority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMaximumFrameLatency )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [in] *\/ UINT MaxLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaximumFrameLatency )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pMaxLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OfferResources )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NumResources,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IDXGIResource *const *ppResources,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_OFFER_RESOURCE_PRIORITY Priority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReclaimResources )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NumResources,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IDXGIResource *const *ppResources,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_all_opt_(NumResources)  BOOL *pDiscarded);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnqueueSetEvent )( \\r\\n            IDXGIDevice2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIDevice2Vtbl;"},"IDXGIDevice3Vtbl":{"comment":"","exp":"","file":"dxgi1_3.h","line":142,"type":"Struct","value":"typedef struct IDXGIDevice3Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIDevice3 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIDevice3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAdapter )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **pAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSurface )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SURFACE_DESC *pDesc,\\r\\n            \/* [in] *\/ UINT NumSurfaces,\\r\\n            \/* [in] *\/ DXGI_USAGE Usage,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const DXGI_SHARED_RESOURCE *pSharedResource,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISurface **ppSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryResourceResidency )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IUnknown *const *ppResources,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(NumResources)  DXGI_RESIDENCY *pResidencyStatus,\\r\\n            \/* [in] *\/ UINT NumResources);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGPUThreadPriority )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [in] *\/ INT Priority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGPUThreadPriority )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _Out_  INT *pPriority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMaximumFrameLatency )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [in] *\/ UINT MaxLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaximumFrameLatency )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pMaxLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OfferResources )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NumResources,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IDXGIResource *const *ppResources,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_OFFER_RESOURCE_PRIORITY Priority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReclaimResources )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NumResources,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IDXGIResource *const *ppResources,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_all_opt_(NumResources)  BOOL *pDiscarded);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnqueueSetEvent )( \\r\\n            IDXGIDevice3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Trim )( \\r\\n            IDXGIDevice3 * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIDevice3Vtbl;"},"IDXGIDevice4Vtbl":{"comment":"","exp":"","file":"dxgi1_5.h","line":934,"type":"Struct","value":"typedef struct IDXGIDevice4Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIDevice4 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIDevice4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAdapter )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **pAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSurface )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SURFACE_DESC *pDesc,\\r\\n            \/* [in] *\/ UINT NumSurfaces,\\r\\n            \/* [in] *\/ DXGI_USAGE Usage,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const DXGI_SHARED_RESOURCE *pSharedResource,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISurface **ppSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryResourceResidency )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IUnknown *const *ppResources,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(NumResources)  DXGI_RESIDENCY *pResidencyStatus,\\r\\n            \/* [in] *\/ UINT NumResources);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGPUThreadPriority )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [in] *\/ INT Priority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGPUThreadPriority )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _Out_  INT *pPriority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMaximumFrameLatency )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [in] *\/ UINT MaxLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaximumFrameLatency )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pMaxLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OfferResources )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NumResources,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IDXGIResource *const *ppResources,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_OFFER_RESOURCE_PRIORITY Priority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReclaimResources )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NumResources,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IDXGIResource *const *ppResources,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_all_opt_(NumResources)  BOOL *pDiscarded);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnqueueSetEvent )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Trim )( \\r\\n            IDXGIDevice4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OfferResources1 )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NumResources,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IDXGIResource *const *ppResources,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_OFFER_RESOURCE_PRIORITY Priority,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReclaimResources1 )( \\r\\n            IDXGIDevice4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NumResources,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IDXGIResource *const *ppResources,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_all_(NumResources)  DXGI_RECLAIM_RESOURCE_RESULTS *pResults);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIDevice4Vtbl;"},"IDXGIDeviceSubObjectVtbl":{"comment":"","exp":"","file":"dxgi.h","line":468,"type":"Struct","value":"typedef struct IDXGIDeviceSubObjectVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIDeviceSubObject * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIDeviceSubObject * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIDeviceSubObject * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIDeviceSubObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIDeviceSubObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIDeviceSubObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIDeviceSubObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGIDeviceSubObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIDeviceSubObjectVtbl;"},"IDXGIDeviceVtbl":{"comment":"","exp":"","file":"dxgi.h","line":2222,"type":"Struct","value":"typedef struct IDXGIDeviceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIDevice * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIDevice * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIDevice * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIDevice * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIDevice * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIDevice * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIDevice * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAdapter )( \\r\\n            IDXGIDevice * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **pAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSurface )( \\r\\n            IDXGIDevice * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SURFACE_DESC *pDesc,\\r\\n            \/* [in] *\/ UINT NumSurfaces,\\r\\n            \/* [in] *\/ DXGI_USAGE Usage,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const DXGI_SHARED_RESOURCE *pSharedResource,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISurface **ppSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryResourceResidency )( \\r\\n            IDXGIDevice * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumResources)  IUnknown *const *ppResources,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(NumResources)  DXGI_RESIDENCY *pResidencyStatus,\\r\\n            \/* [in] *\/ UINT NumResources);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGPUThreadPriority )( \\r\\n            IDXGIDevice * This,\\r\\n            \/* [in] *\/ INT Priority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGPUThreadPriority )( \\r\\n            IDXGIDevice * This,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _Out_  INT *pPriority);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIDeviceVtbl;"},"IDXGIDisplayControlVtbl":{"comment":"","exp":"","file":"dxgi1_2.h","line":149,"type":"Struct","value":"typedef struct IDXGIDisplayControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIDisplayControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIDisplayControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIDisplayControl * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsStereoEnabled )( \\r\\n            IDXGIDisplayControl * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetStereoEnabled )( \\r\\n            IDXGIDisplayControl * This,\\r\\n            BOOL enabled);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIDisplayControlVtbl;"},"IDXGIFactory1Vtbl":{"comment":"","exp":"","file":"dxgi.h","line":2429,"type":"Struct","value":"typedef struct IDXGIFactory1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIFactory1 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIFactory1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIFactory1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIFactory1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIFactory1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIFactory1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIFactory1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters )( \\r\\n            IDXGIFactory1 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeWindowAssociation )( \\r\\n            IDXGIFactory1 * This,\\r\\n            HWND WindowHandle,\\r\\n            UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetWindowAssociation )( \\r\\n            IDXGIFactory1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pWindowHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChain )( \\r\\n            IDXGIFactory1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_SWAP_CHAIN_DESC *pDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSoftwareAdapter )( \\r\\n            IDXGIFactory1 * This,\\r\\n            \/* [in] *\/ HMODULE Module,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters1 )( \\r\\n            IDXGIFactory1 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter1 **ppAdapter);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsCurrent )( \\r\\n            IDXGIFactory1 * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIFactory1Vtbl;"},"IDXGIFactory2Vtbl":{"comment":"","exp":"","file":"dxgi1_2.h","line":1674,"type":"Struct","value":"typedef struct IDXGIFactory2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIFactory2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIFactory2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeWindowAssociation )( \\r\\n            IDXGIFactory2 * This,\\r\\n            HWND WindowHandle,\\r\\n            UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetWindowAssociation )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pWindowHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChain )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_SWAP_CHAIN_DESC *pDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSoftwareAdapter )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [in] *\/ HMODULE Module,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters1 )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter1 **ppAdapter);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsCurrent )( \\r\\n            IDXGIFactory2 * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsWindowedStereoEnabled )( \\r\\n            IDXGIFactory2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForHwnd )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND hWnd,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pFullscreenDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForCoreWindow )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pWindow,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSharedResourceAdapterLuid )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HANDLE hResource,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  LUID *pLuid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusWindow )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusEvent )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterStereoStatus )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusWindow )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusEvent )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterOcclusionStatus )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForComposition )( \\r\\n            IDXGIFactory2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIFactory2Vtbl;"},"IDXGIFactory3Vtbl":{"comment":"","exp":"","file":"dxgi1_3.h","line":1033,"type":"Struct","value":"typedef struct IDXGIFactory3Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIFactory3 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIFactory3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeWindowAssociation )( \\r\\n            IDXGIFactory3 * This,\\r\\n            HWND WindowHandle,\\r\\n            UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetWindowAssociation )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pWindowHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChain )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_SWAP_CHAIN_DESC *pDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSoftwareAdapter )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [in] *\/ HMODULE Module,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters1 )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter1 **ppAdapter);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsCurrent )( \\r\\n            IDXGIFactory3 * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsWindowedStereoEnabled )( \\r\\n            IDXGIFactory3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForHwnd )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND hWnd,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pFullscreenDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForCoreWindow )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pWindow,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSharedResourceAdapterLuid )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HANDLE hResource,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  LUID *pLuid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusWindow )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusEvent )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterStereoStatus )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusWindow )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusEvent )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterOcclusionStatus )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForComposition )( \\r\\n            IDXGIFactory3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetCreationFlags )( \\r\\n            IDXGIFactory3 * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIFactory3Vtbl;"},"IDXGIFactory4Vtbl":{"comment":"","exp":"","file":"dxgi1_4.h","line":880,"type":"Struct","value":"typedef struct IDXGIFactory4Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIFactory4 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIFactory4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeWindowAssociation )( \\r\\n            IDXGIFactory4 * This,\\r\\n            HWND WindowHandle,\\r\\n            UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetWindowAssociation )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pWindowHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChain )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_SWAP_CHAIN_DESC *pDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSoftwareAdapter )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [in] *\/ HMODULE Module,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters1 )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter1 **ppAdapter);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsCurrent )( \\r\\n            IDXGIFactory4 * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsWindowedStereoEnabled )( \\r\\n            IDXGIFactory4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForHwnd )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND hWnd,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pFullscreenDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForCoreWindow )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pWindow,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSharedResourceAdapterLuid )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HANDLE hResource,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  LUID *pLuid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusWindow )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusEvent )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterStereoStatus )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusWindow )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusEvent )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterOcclusionStatus )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForComposition )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetCreationFlags )( \\r\\n            IDXGIFactory4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapterByLuid )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  LUID AdapterLuid,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  void **ppvAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumWarpAdapter )( \\r\\n            IDXGIFactory4 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  void **ppvAdapter);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIFactory4Vtbl;"},"IDXGIFactory5Vtbl":{"comment":"","exp":"","file":"dxgi1_5.h","line":1199,"type":"Struct","value":"typedef struct IDXGIFactory5Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIFactory5 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIFactory5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeWindowAssociation )( \\r\\n            IDXGIFactory5 * This,\\r\\n            HWND WindowHandle,\\r\\n            UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetWindowAssociation )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pWindowHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChain )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_SWAP_CHAIN_DESC *pDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSoftwareAdapter )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [in] *\/ HMODULE Module,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters1 )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter1 **ppAdapter);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsCurrent )( \\r\\n            IDXGIFactory5 * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsWindowedStereoEnabled )( \\r\\n            IDXGIFactory5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForHwnd )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND hWnd,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pFullscreenDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForCoreWindow )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pWindow,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSharedResourceAdapterLuid )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HANDLE hResource,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  LUID *pLuid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusWindow )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusEvent )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterStereoStatus )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusWindow )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusEvent )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterOcclusionStatus )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForComposition )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetCreationFlags )( \\r\\n            IDXGIFactory5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapterByLuid )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  LUID AdapterLuid,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  void **ppvAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumWarpAdapter )( \\r\\n            IDXGIFactory5 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  void **ppvAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            IDXGIFactory5 * This,\\r\\n            DXGI_FEATURE Feature,\\r\\n            \/* [annotation] *\/ \\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIFactory5Vtbl;"},"IDXGIFactory6Vtbl":{"comment":"","exp":"","file":"dxgi1_6.h","line":769,"type":"Struct","value":"typedef struct IDXGIFactory6Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIFactory6 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIFactory6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeWindowAssociation )( \\r\\n            IDXGIFactory6 * This,\\r\\n            HWND WindowHandle,\\r\\n            UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetWindowAssociation )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pWindowHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChain )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_SWAP_CHAIN_DESC *pDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSoftwareAdapter )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [in] *\/ HMODULE Module,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters1 )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter1 **ppAdapter);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsCurrent )( \\r\\n            IDXGIFactory6 * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsWindowedStereoEnabled )( \\r\\n            IDXGIFactory6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForHwnd )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND hWnd,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pFullscreenDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForCoreWindow )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pWindow,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSharedResourceAdapterLuid )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HANDLE hResource,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  LUID *pLuid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusWindow )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusEvent )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterStereoStatus )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusWindow )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusEvent )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterOcclusionStatus )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForComposition )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetCreationFlags )( \\r\\n            IDXGIFactory6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapterByLuid )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  LUID AdapterLuid,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  void **ppvAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumWarpAdapter )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  void **ppvAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            IDXGIFactory6 * This,\\r\\n            DXGI_FEATURE Feature,\\r\\n            \/* [annotation] *\/ \\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapterByGpuPreference )( \\r\\n            IDXGIFactory6 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  UINT Adapter,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_GPU_PREFERENCE GpuPreference,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  void **ppvAdapter);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIFactory6Vtbl;"},"IDXGIFactory7Vtbl":{"comment":"","exp":"","file":"dxgi1_6.h","line":1136,"type":"Struct","value":"typedef struct IDXGIFactory7Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIFactory7 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIFactory7 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeWindowAssociation )( \\r\\n            IDXGIFactory7 * This,\\r\\n            HWND WindowHandle,\\r\\n            UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetWindowAssociation )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pWindowHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChain )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_SWAP_CHAIN_DESC *pDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSoftwareAdapter )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [in] *\/ HMODULE Module,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters1 )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter1 **ppAdapter);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsCurrent )( \\r\\n            IDXGIFactory7 * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsWindowedStereoEnabled )( \\r\\n            IDXGIFactory7 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForHwnd )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND hWnd,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pFullscreenDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForCoreWindow )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pWindow,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSharedResourceAdapterLuid )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HANDLE hResource,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  LUID *pLuid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusWindow )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusEvent )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterStereoStatus )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusWindow )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND WindowHandle,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT wMsg,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusEvent )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UnregisterOcclusionStatus )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForComposition )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetCreationFlags )( \\r\\n            IDXGIFactory7 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapterByLuid )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  LUID AdapterLuid,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  void **ppvAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumWarpAdapter )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  void **ppvAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            IDXGIFactory7 * This,\\r\\n            DXGI_FEATURE Feature,\\r\\n            \/* [annotation] *\/ \\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapterByGpuPreference )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  UINT Adapter,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_GPU_PREFERENCE GpuPreference,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  void **ppvAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterAdaptersChangedEvent )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hEvent,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnregisterAdaptersChangedEvent )( \\r\\n            IDXGIFactory7 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwCookie);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIFactory7Vtbl;"},"IDXGIFactoryMediaVtbl":{"comment":"","exp":"","file":"dxgi1_3.h","line":1566,"type":"Struct","value":"typedef struct IDXGIFactoryMediaVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIFactoryMedia * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIFactoryMedia * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIFactoryMedia * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForCompositionSurfaceHandle )( \\r\\n            IDXGIFactoryMedia * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  HANDLE hSurface,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_SWAP_CHAIN_DESC1 *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain1 **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDecodeSwapChainForCompositionSurfaceHandle )( \\r\\n            IDXGIFactoryMedia * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  HANDLE hSurface,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_DECODE_SWAP_CHAIN_DESC *pDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGIResource *pYuvDecodeBuffers,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pRestrictToOutput,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIDecodeSwapChain **ppSwapChain);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIFactoryMediaVtbl;"},"IDXGIFactoryVtbl":{"comment":"","exp":"","file":"dxgi.h","line":2020,"type":"Struct","value":"typedef struct IDXGIFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIFactory * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIFactory * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumAdapters )( \\r\\n            IDXGIFactory * This,\\r\\n            \/* [in] *\/ UINT Adapter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeWindowAssociation )( \\r\\n            IDXGIFactory * This,\\r\\n            HWND WindowHandle,\\r\\n            UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetWindowAssociation )( \\r\\n            IDXGIFactory * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pWindowHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSwapChain )( \\r\\n            IDXGIFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_SWAP_CHAIN_DESC *pDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISwapChain **ppSwapChain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSoftwareAdapter )( \\r\\n            IDXGIFactory * This,\\r\\n            \/* [in] *\/ HMODULE Module,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIAdapter **ppAdapter);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIFactoryVtbl;"},"IDXGIInfoQueueVtbl":{"comment":"","exp":"","file":"dxgidebug.h","line":383,"type":"Struct","value":"typedef struct IDXGIInfoQueueVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIInfoQueue * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIInfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMessageCountLimit )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  UINT64 MessageCountLimit);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearStoredMessages )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMessage )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  UINT64 MessageIndex,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_writes_bytes_opt_(*pMessageByteLength)  DXGI_INFO_QUEUE_MESSAGE *pMessage,\\r\\n            \/* [annotation] *\/ \\r\\n            _Inout_  SIZE_T *pMessageByteLength);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetNumStoredMessagesAllowedByRetrievalFilters )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetNumStoredMessages )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetNumMessagesDiscardedByMessageCountLimit )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetMessageCountLimit )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetNumMessagesAllowedByStorageFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetNumMessagesDeniedByStorageFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStorageFilterEntries )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_FILTER *pFilter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStorageFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_writes_bytes_opt_(*pFilterByteLength)  DXGI_INFO_QUEUE_FILTER *pFilter,\\r\\n            \/* [annotation] *\/ \\r\\n            _Inout_  SIZE_T *pFilterByteLength);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearStorageFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushEmptyStorageFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushDenyAllStorageFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushCopyOfStorageFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushStorageFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_FILTER *pFilter);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *PopStorageFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetStorageFilterStackSize )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddRetrievalFilterEntries )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_FILTER *pFilter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRetrievalFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_writes_bytes_opt_(*pFilterByteLength)  DXGI_INFO_QUEUE_FILTER *pFilter,\\r\\n            \/* [annotation] *\/ \\r\\n            _Inout_  SIZE_T *pFilterByteLength);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearRetrievalFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushEmptyRetrievalFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushDenyAllRetrievalFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushCopyOfRetrievalFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushRetrievalFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_FILTER *pFilter);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *PopRetrievalFilter )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetRetrievalFilterStackSize )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddMessage )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_MESSAGE_ID ID,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  LPCSTR pDescription);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddApplicationMessage )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  LPCSTR pDescription);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBreakOnCategory )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BOOL bEnable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBreakOnSeverity )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BOOL bEnable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBreakOnID )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_MESSAGE_ID ID,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BOOL bEnable);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetBreakOnCategory )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetBreakOnSeverity )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetBreakOnID )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_INFO_QUEUE_MESSAGE_ID ID);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetMuteDebugOutput )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BOOL bMute);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetMuteDebugOutput )( \\r\\n            IDXGIInfoQueue * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DXGI_DEBUG_ID Producer);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIInfoQueueVtbl;"},"IDXGIKeyedMutexVtbl":{"comment":"","exp":"","file":"dxgi.h","line":768,"type":"Struct","value":"typedef struct IDXGIKeyedMutexVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIKeyedMutex * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIKeyedMutex * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIKeyedMutex * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIKeyedMutex * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIKeyedMutex * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIKeyedMutex * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIKeyedMutex * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGIKeyedMutex * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AcquireSync )( \\r\\n            IDXGIKeyedMutex * This,\\r\\n            \/* [in] *\/ UINT64 Key,\\r\\n            \/* [in] *\/ DWORD dwMilliseconds);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReleaseSync )( \\r\\n            IDXGIKeyedMutex * This,\\r\\n            \/* [in] *\/ UINT64 Key);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIKeyedMutexVtbl;"},"IDXGIObjectVtbl":{"comment":"","exp":"","file":"dxgi.h","line":349,"type":"Struct","value":"typedef struct IDXGIObjectVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIObject * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIObject * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIObject * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIObjectVtbl;"},"IDXGIOutput1Vtbl":{"comment":"","exp":"","file":"dxgi1_2.h","line":2208,"type":"Struct","value":"typedef struct IDXGIOutput1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIOutput1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIOutput1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_OUTPUT_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WaitForVBlank )( \\r\\n            IDXGIOutput1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            BOOL Exclusive);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseOwnership )( \\r\\n            IDXGIOutput1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControlCapabilities )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGammaControl )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControl )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisplaySurface )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pScanoutSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList1 )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode1 )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC1 *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC1 *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData1 )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGIResource *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DuplicateOutput )( \\r\\n            IDXGIOutput1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutputDuplication **ppOutputDuplication);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIOutput1Vtbl;"},"IDXGIOutput2Vtbl":{"comment":"","exp":"","file":"dxgi1_3.h","line":766,"type":"Struct","value":"typedef struct IDXGIOutput2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIOutput2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIOutput2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_OUTPUT_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WaitForVBlank )( \\r\\n            IDXGIOutput2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            BOOL Exclusive);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseOwnership )( \\r\\n            IDXGIOutput2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControlCapabilities )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGammaControl )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControl )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisplaySurface )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pScanoutSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList1 )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode1 )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC1 *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC1 *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData1 )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGIResource *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DuplicateOutput )( \\r\\n            IDXGIOutput2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutputDuplication **ppOutputDuplication);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *SupportsOverlays )( \\r\\n            IDXGIOutput2 * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIOutput2Vtbl;"},"IDXGIOutput3Vtbl":{"comment":"","exp":"","file":"dxgi1_3.h","line":1835,"type":"Struct","value":"typedef struct IDXGIOutput3Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIOutput3 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIOutput3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_OUTPUT_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WaitForVBlank )( \\r\\n            IDXGIOutput3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            BOOL Exclusive);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseOwnership )( \\r\\n            IDXGIOutput3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControlCapabilities )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGammaControl )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControl )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisplaySurface )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pScanoutSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList1 )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode1 )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC1 *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC1 *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData1 )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGIResource *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DuplicateOutput )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutputDuplication **ppOutputDuplication);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *SupportsOverlays )( \\r\\n            IDXGIOutput3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckOverlaySupport )( \\r\\n            IDXGIOutput3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_FORMAT EnumFormat,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _In_  IUnknown *pConcernedDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIOutput3Vtbl;"},"IDXGIOutput4Vtbl":{"comment":"","exp":"","file":"dxgi1_4.h","line":573,"type":"Struct","value":"typedef struct IDXGIOutput4Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIOutput4 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIOutput4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_OUTPUT_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WaitForVBlank )( \\r\\n            IDXGIOutput4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            BOOL Exclusive);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseOwnership )( \\r\\n            IDXGIOutput4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControlCapabilities )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGammaControl )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControl )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisplaySurface )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pScanoutSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList1 )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode1 )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC1 *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC1 *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData1 )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGIResource *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DuplicateOutput )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutputDuplication **ppOutputDuplication);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *SupportsOverlays )( \\r\\n            IDXGIOutput4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckOverlaySupport )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_FORMAT EnumFormat,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _In_  IUnknown *pConcernedDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckOverlayColorSpaceSupport )( \\r\\n            IDXGIOutput4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_FORMAT Format,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_COLOR_SPACE_TYPE ColorSpace,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pConcernedDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIOutput4Vtbl;"},"IDXGIOutput5Vtbl":{"comment":"","exp":"","file":"dxgi1_5.h","line":126,"type":"Struct","value":"typedef struct IDXGIOutput5Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIOutput5 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIOutput5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_OUTPUT_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WaitForVBlank )( \\r\\n            IDXGIOutput5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            BOOL Exclusive);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseOwnership )( \\r\\n            IDXGIOutput5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControlCapabilities )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGammaControl )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControl )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisplaySurface )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pScanoutSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList1 )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode1 )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC1 *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC1 *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData1 )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGIResource *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DuplicateOutput )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutputDuplication **ppOutputDuplication);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *SupportsOverlays )( \\r\\n            IDXGIOutput5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckOverlaySupport )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_FORMAT EnumFormat,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _In_  IUnknown *pConcernedDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckOverlayColorSpaceSupport )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_FORMAT Format,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_COLOR_SPACE_TYPE ColorSpace,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pConcernedDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DuplicateOutput1 )( \\r\\n            IDXGIOutput5 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT SupportedFormatsCount,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_(SupportedFormatsCount)  const DXGI_FORMAT *pSupportedFormats,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutputDuplication **ppOutputDuplication);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIOutput5Vtbl;"},"IDXGIOutput6Vtbl":{"comment":"","exp":"","file":"dxgi1_6.h","line":417,"type":"Struct","value":"typedef struct IDXGIOutput6Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIOutput6 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIOutput6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_OUTPUT_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WaitForVBlank )( \\r\\n            IDXGIOutput6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            BOOL Exclusive);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseOwnership )( \\r\\n            IDXGIOutput6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControlCapabilities )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGammaControl )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControl )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisplaySurface )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pScanoutSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList1 )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode1 )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC1 *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC1 *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData1 )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGIResource *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DuplicateOutput )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutputDuplication **ppOutputDuplication);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *SupportsOverlays )( \\r\\n            IDXGIOutput6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckOverlaySupport )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_FORMAT EnumFormat,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _In_  IUnknown *pConcernedDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckOverlayColorSpaceSupport )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_FORMAT Format,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_COLOR_SPACE_TYPE ColorSpace,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pConcernedDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DuplicateOutput1 )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT SupportedFormatsCount,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_(SupportedFormatsCount)  const DXGI_FORMAT *pSupportedFormats,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutputDuplication **ppOutputDuplication);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc1 )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_OUTPUT_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckHardwareCompositionSupport )( \\r\\n            IDXGIOutput6 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIOutput6Vtbl;"},"IDXGIOutputDuplicationVtbl":{"comment":"","exp":"","file":"dxgi1_2.h","line":334,"type":"Struct","value":"typedef struct IDXGIOutputDuplicationVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIOutputDuplication * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIOutputDuplication * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIOutputDuplication * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIOutputDuplication * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIOutputDuplication * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIOutputDuplication * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIOutputDuplication * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIOutputDuplication * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_OUTDUPL_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AcquireNextFrame )( \\r\\n            IDXGIOutputDuplication * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT TimeoutInMilliseconds,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_OUTDUPL_FRAME_INFO *pFrameInfo,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIResource **ppDesktopResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameDirtyRects )( \\r\\n            IDXGIOutputDuplication * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT DirtyRectsBufferSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_to_(DirtyRectsBufferSize, *pDirtyRectsBufferSizeRequired)  RECT *pDirtyRectsBuffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pDirtyRectsBufferSizeRequired);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameMoveRects )( \\r\\n            IDXGIOutputDuplication * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT MoveRectsBufferSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_to_(MoveRectsBufferSize, *pMoveRectsBufferSizeRequired)  DXGI_OUTDUPL_MOVE_RECT *pMoveRectBuffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pMoveRectsBufferSizeRequired);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFramePointerShape )( \\r\\n            IDXGIOutputDuplication * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT PointerShapeBufferSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_to_(PointerShapeBufferSize, *pPointerShapeBufferSizeRequired)  void *pPointerShapeBuffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pPointerShapeBufferSizeRequired,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_OUTDUPL_POINTER_SHAPE_INFO *pPointerShapeInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MapDesktopSurface )( \\r\\n            IDXGIOutputDuplication * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MAPPED_RECT *pLockedRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnMapDesktopSurface )( \\r\\n            IDXGIOutputDuplication * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReleaseFrame )( \\r\\n            IDXGIOutputDuplication * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIOutputDuplicationVtbl;"},"IDXGIOutputVtbl":{"comment":"","exp":"","file":"dxgi.h","line":1486,"type":"Struct","value":"typedef struct IDXGIOutputVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIOutput * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIOutput * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_OUTPUT_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [in] *\/ DXGI_FORMAT EnumFormat,\\r\\n            \/* [in] *\/ UINT Flags,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pNumModes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_to_opt_(*pNumModes,*pNumModes)  DXGI_MODE_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pModeToMatch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_DESC *pClosestMatch,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pConcernedDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WaitForVBlank )( \\r\\n            IDXGIOutput * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDevice,\\r\\n            BOOL Exclusive);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseOwnership )( \\r\\n            IDXGIOutput * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControlCapabilities )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGammaControl )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGammaControl )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_GAMMA_CONTROL *pArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisplaySurface )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pScanoutSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDXGISurface *pDestination);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGIOutput * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIOutputVtbl;"},"IDXGIResource1Vtbl":{"comment":"","exp":"","file":"dxgi1_2.h","line":750,"type":"Struct","value":"typedef struct IDXGIResource1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIResource1 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIResource1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIResource1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIResource1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIResource1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIResource1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIResource1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGIResource1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSharedHandle )( \\r\\n            IDXGIResource1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pSharedHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUsage )( \\r\\n            IDXGIResource1 * This,\\r\\n            \/* [out] *\/ DXGI_USAGE *pUsage);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEvictionPriority )( \\r\\n            IDXGIResource1 * This,\\r\\n            \/* [in] *\/ UINT EvictionPriority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEvictionPriority )( \\r\\n            IDXGIResource1 * This,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _Out_  UINT *pEvictionPriority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSubresourceSurface )( \\r\\n            IDXGIResource1 * This,\\r\\n            UINT index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGISurface2 **ppSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSharedHandle )( \\r\\n            IDXGIResource1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const SECURITY_ATTRIBUTES *pAttributes,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwAccess,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCWSTR lpName,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pHandle);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIResource1Vtbl;"},"IDXGIResourceVtbl":{"comment":"","exp":"","file":"dxgi.h","line":606,"type":"Struct","value":"typedef struct IDXGIResourceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGIResource * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGIResource * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGIResource * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGIResource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGIResource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGIResource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGIResource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGIResource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSharedHandle )( \\r\\n            IDXGIResource * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pSharedHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUsage )( \\r\\n            IDXGIResource * This,\\r\\n            \/* [out] *\/ DXGI_USAGE *pUsage);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEvictionPriority )( \\r\\n            IDXGIResource * This,\\r\\n            \/* [in] *\/ UINT EvictionPriority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEvictionPriority )( \\r\\n            IDXGIResource * This,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _Out_  UINT *pEvictionPriority);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGIResourceVtbl;"},"IDXGISurface1Vtbl":{"comment":"","exp":"","file":"dxgi.h","line":1090,"type":"Struct","value":"typedef struct IDXGISurface1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGISurface1 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGISurface1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGISurface1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGISurface1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGISurface1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGISurface1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGISurface1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGISurface1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGISurface1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SURFACE_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Map )( \\r\\n            IDXGISurface1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MAPPED_RECT *pLockedRect,\\r\\n            \/* [in] *\/ UINT MapFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Unmap )( \\r\\n            IDXGISurface1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDC )( \\r\\n            IDXGISurface1 * This,\\r\\n            \/* [in] *\/ BOOL Discard,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HDC *phdc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReleaseDC )( \\r\\n            IDXGISurface1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  RECT *pDirtyRect);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGISurface1Vtbl;"},"IDXGISurface2Vtbl":{"comment":"","exp":"","file":"dxgi1_2.h","line":556,"type":"Struct","value":"typedef struct IDXGISurface2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGISurface2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGISurface2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGISurface2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGISurface2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGISurface2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGISurface2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGISurface2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGISurface2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGISurface2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SURFACE_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Map )( \\r\\n            IDXGISurface2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MAPPED_RECT *pLockedRect,\\r\\n            \/* [in] *\/ UINT MapFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Unmap )( \\r\\n            IDXGISurface2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDC )( \\r\\n            IDXGISurface2 * This,\\r\\n            \/* [in] *\/ BOOL Discard,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HDC *phdc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReleaseDC )( \\r\\n            IDXGISurface2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  RECT *pDirtyRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetResource )( \\r\\n            IDXGISurface2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  void **ppParentResource,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pSubresourceIndex);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGISurface2Vtbl;"},"IDXGISurfaceVtbl":{"comment":"","exp":"","file":"dxgi.h","line":933,"type":"Struct","value":"typedef struct IDXGISurfaceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGISurface * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGISurface * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGISurface * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGISurface * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGISurface * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGISurface * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGISurface * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGISurface * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGISurface * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SURFACE_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Map )( \\r\\n            IDXGISurface * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MAPPED_RECT *pLockedRect,\\r\\n            \/* [in] *\/ UINT MapFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Unmap )( \\r\\n            IDXGISurface * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGISurfaceVtbl;"},"IDXGISwapChain1Vtbl":{"comment":"","exp":"","file":"dxgi1_2.h","line":1289,"type":"Struct","value":"typedef struct IDXGISwapChain1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGISwapChain1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGISwapChain1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Present )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [in] *\/ UINT SyncInterval,\\r\\n            \/* [in] *\/ UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [in] *\/ UINT Buffer,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _COM_Outptr_  void **ppSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFullscreenState )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [in] *\/ BOOL Fullscreen,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pTarget);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullscreenState )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  BOOL *pFullscreen,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_opt_result_maybenull_  IDXGIOutput **ppTarget);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeBuffers )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [in] *\/ UINT BufferCount,\\r\\n            \/* [in] *\/ UINT Width,\\r\\n            \/* [in] *\/ UINT Height,\\r\\n            \/* [in] *\/ DXGI_FORMAT NewFormat,\\r\\n            \/* [in] *\/ UINT SwapChainFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeTarget )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pNewTargetParameters);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContainingOutput )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutput **ppOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLastPresentCount )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pLastPresentCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc1 )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullscreenDesc )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetHwnd )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pHwnd);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCoreWindow )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID refiid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  void **ppUnk);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Present1 )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [in] *\/ UINT SyncInterval,\\r\\n            \/* [in] *\/ UINT PresentFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_PRESENT_PARAMETERS *pPresentParameters);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsTemporaryMonoSupported )( \\r\\n            IDXGISwapChain1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRestrictToOutput )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IDXGIOutput **ppRestrictToOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBackgroundColor )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_RGBA *pColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBackgroundColor )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_RGBA *pColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotation )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_MODE_ROTATION Rotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRotation )( \\r\\n            IDXGISwapChain1 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_ROTATION *pRotation);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGISwapChain1Vtbl;"},"IDXGISwapChain2Vtbl":{"comment":"","exp":"","file":"dxgi1_3.h","line":404,"type":"Struct","value":"typedef struct IDXGISwapChain2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGISwapChain2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGISwapChain2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Present )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [in] *\/ UINT SyncInterval,\\r\\n            \/* [in] *\/ UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [in] *\/ UINT Buffer,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _COM_Outptr_  void **ppSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFullscreenState )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [in] *\/ BOOL Fullscreen,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pTarget);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullscreenState )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  BOOL *pFullscreen,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_opt_result_maybenull_  IDXGIOutput **ppTarget);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeBuffers )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [in] *\/ UINT BufferCount,\\r\\n            \/* [in] *\/ UINT Width,\\r\\n            \/* [in] *\/ UINT Height,\\r\\n            \/* [in] *\/ DXGI_FORMAT NewFormat,\\r\\n            \/* [in] *\/ UINT SwapChainFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeTarget )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pNewTargetParameters);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContainingOutput )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutput **ppOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLastPresentCount )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pLastPresentCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc1 )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullscreenDesc )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetHwnd )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pHwnd);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCoreWindow )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID refiid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  void **ppUnk);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Present1 )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [in] *\/ UINT SyncInterval,\\r\\n            \/* [in] *\/ UINT PresentFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_PRESENT_PARAMETERS *pPresentParameters);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsTemporaryMonoSupported )( \\r\\n            IDXGISwapChain2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRestrictToOutput )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IDXGIOutput **ppRestrictToOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBackgroundColor )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_RGBA *pColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBackgroundColor )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_RGBA *pColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotation )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_MODE_ROTATION Rotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRotation )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_ROTATION *pRotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSourceSize )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            UINT Width,\\r\\n            UINT Height);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSourceSize )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pWidth,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pHeight);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMaximumFrameLatency )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            UINT MaxLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaximumFrameLatency )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pMaxLatency);\\r\\n        \\r\\n        HANDLE ( STDMETHODCALLTYPE *GetFrameLatencyWaitableObject )( \\r\\n            IDXGISwapChain2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMatrixTransform )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            const DXGI_MATRIX_3X2_F *pMatrix);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMatrixTransform )( \\r\\n            IDXGISwapChain2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MATRIX_3X2_F *pMatrix);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGISwapChain2Vtbl;"},"IDXGISwapChain3Vtbl":{"comment":"","exp":"","file":"dxgi1_4.h","line":144,"type":"Struct","value":"typedef struct IDXGISwapChain3Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGISwapChain3 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGISwapChain3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Present )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [in] *\/ UINT SyncInterval,\\r\\n            \/* [in] *\/ UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [in] *\/ UINT Buffer,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _COM_Outptr_  void **ppSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFullscreenState )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [in] *\/ BOOL Fullscreen,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pTarget);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullscreenState )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  BOOL *pFullscreen,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_opt_result_maybenull_  IDXGIOutput **ppTarget);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeBuffers )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [in] *\/ UINT BufferCount,\\r\\n            \/* [in] *\/ UINT Width,\\r\\n            \/* [in] *\/ UINT Height,\\r\\n            \/* [in] *\/ DXGI_FORMAT NewFormat,\\r\\n            \/* [in] *\/ UINT SwapChainFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeTarget )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pNewTargetParameters);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContainingOutput )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutput **ppOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLastPresentCount )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pLastPresentCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc1 )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullscreenDesc )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetHwnd )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pHwnd);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCoreWindow )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID refiid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  void **ppUnk);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Present1 )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [in] *\/ UINT SyncInterval,\\r\\n            \/* [in] *\/ UINT PresentFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_PRESENT_PARAMETERS *pPresentParameters);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsTemporaryMonoSupported )( \\r\\n            IDXGISwapChain3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRestrictToOutput )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IDXGIOutput **ppRestrictToOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBackgroundColor )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_RGBA *pColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBackgroundColor )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_RGBA *pColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotation )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_MODE_ROTATION Rotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRotation )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_ROTATION *pRotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSourceSize )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            UINT Width,\\r\\n            UINT Height);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSourceSize )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pWidth,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pHeight);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMaximumFrameLatency )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            UINT MaxLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaximumFrameLatency )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pMaxLatency);\\r\\n        \\r\\n        HANDLE ( STDMETHODCALLTYPE *GetFrameLatencyWaitableObject )( \\r\\n            IDXGISwapChain3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMatrixTransform )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            const DXGI_MATRIX_3X2_F *pMatrix);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMatrixTransform )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MATRIX_3X2_F *pMatrix);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetCurrentBackBufferIndex )( \\r\\n            IDXGISwapChain3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckColorSpaceSupport )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_COLOR_SPACE_TYPE ColorSpace,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pColorSpaceSupport);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetColorSpace1 )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_COLOR_SPACE_TYPE ColorSpace);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeBuffers1 )( \\r\\n            IDXGISwapChain3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT BufferCount,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Width,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Height,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_FORMAT Format,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT SwapChainFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_(BufferCount)  const UINT *pCreationNodeMask,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_(BufferCount)  IUnknown *const *ppPresentQueue);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGISwapChain3Vtbl;"},"IDXGISwapChain4Vtbl":{"comment":"","exp":"","file":"dxgi1_5.h","line":476,"type":"Struct","value":"typedef struct IDXGISwapChain4Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGISwapChain4 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGISwapChain4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Present )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [in] *\/ UINT SyncInterval,\\r\\n            \/* [in] *\/ UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [in] *\/ UINT Buffer,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _COM_Outptr_  void **ppSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFullscreenState )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [in] *\/ BOOL Fullscreen,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pTarget);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullscreenState )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  BOOL *pFullscreen,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_opt_result_maybenull_  IDXGIOutput **ppTarget);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeBuffers )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [in] *\/ UINT BufferCount,\\r\\n            \/* [in] *\/ UINT Width,\\r\\n            \/* [in] *\/ UINT Height,\\r\\n            \/* [in] *\/ DXGI_FORMAT NewFormat,\\r\\n            \/* [in] *\/ UINT SwapChainFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeTarget )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pNewTargetParameters);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContainingOutput )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutput **ppOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLastPresentCount )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pLastPresentCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc1 )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_DESC1 *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullscreenDesc )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetHwnd )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *pHwnd);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCoreWindow )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID refiid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  void **ppUnk);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Present1 )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [in] *\/ UINT SyncInterval,\\r\\n            \/* [in] *\/ UINT PresentFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_PRESENT_PARAMETERS *pPresentParameters);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsTemporaryMonoSupported )( \\r\\n            IDXGISwapChain4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRestrictToOutput )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IDXGIOutput **ppRestrictToOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBackgroundColor )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_RGBA *pColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBackgroundColor )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_RGBA *pColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotation )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_MODE_ROTATION Rotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRotation )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MODE_ROTATION *pRotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSourceSize )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            UINT Width,\\r\\n            UINT Height);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSourceSize )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pWidth,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pHeight);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMaximumFrameLatency )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            UINT MaxLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaximumFrameLatency )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pMaxLatency);\\r\\n        \\r\\n        HANDLE ( STDMETHODCALLTYPE *GetFrameLatencyWaitableObject )( \\r\\n            IDXGISwapChain4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMatrixTransform )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            const DXGI_MATRIX_3X2_F *pMatrix);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMatrixTransform )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_MATRIX_3X2_F *pMatrix);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetCurrentBackBufferIndex )( \\r\\n            IDXGISwapChain4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckColorSpaceSupport )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_COLOR_SPACE_TYPE ColorSpace,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pColorSpaceSupport);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetColorSpace1 )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_COLOR_SPACE_TYPE ColorSpace);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeBuffers1 )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT BufferCount,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Width,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Height,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_FORMAT Format,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT SwapChainFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_(BufferCount)  const UINT *pCreationNodeMask,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_(BufferCount)  IUnknown *const *ppPresentQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetHDRMetaData )( \\r\\n            IDXGISwapChain4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXGI_HDR_METADATA_TYPE Type,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Size,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_opt_(Size)  void *pMetaData);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGISwapChain4Vtbl;"},"IDXGISwapChainMediaVtbl":{"comment":"","exp":"","file":"dxgi1_3.h","line":1712,"type":"Struct","value":"typedef struct IDXGISwapChainMediaVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGISwapChainMedia * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGISwapChainMedia * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGISwapChainMedia * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatisticsMedia )( \\r\\n            IDXGISwapChainMedia * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS_MEDIA *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPresentDuration )( \\r\\n            IDXGISwapChainMedia * This,\\r\\n            UINT Duration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckPresentDurationSupport )( \\r\\n            IDXGISwapChainMedia * This,\\r\\n            UINT DesiredPresentDuration,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pClosestSmallerPresentDuration,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pClosestLargerPresentDuration);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGISwapChainMediaVtbl;"},"IDXGISwapChainVtbl":{"comment":"","exp":"","file":"dxgi.h","line":1768,"type":"Struct","value":"typedef struct IDXGISwapChainVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXGISwapChain * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXGISwapChain * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [in] *\/ UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Name,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  UINT *pDataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(*pDataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParent )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppParent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _COM_Outptr_  void **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Present )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [in] *\/ UINT SyncInterval,\\r\\n            \/* [in] *\/ UINT Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [in] *\/ UINT Buffer,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _COM_Outptr_  void **ppSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFullscreenState )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [in] *\/ BOOL Fullscreen,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IDXGIOutput *pTarget);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullscreenState )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  BOOL *pFullscreen,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_opt_result_maybenull_  IDXGIOutput **ppTarget);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_SWAP_CHAIN_DESC *pDesc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeBuffers )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [in] *\/ UINT BufferCount,\\r\\n            \/* [in] *\/ UINT Width,\\r\\n            \/* [in] *\/ UINT Height,\\r\\n            \/* [in] *\/ DXGI_FORMAT NewFormat,\\r\\n            \/* [in] *\/ UINT SwapChainFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResizeTarget )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXGI_MODE_DESC *pNewTargetParameters);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContainingOutput )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IDXGIOutput **ppOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXGI_FRAME_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLastPresentCount )( \\r\\n            IDXGISwapChain * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pLastPresentCount);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXGISwapChainVtbl;"},"LUID_DEFINED":{"comment":"","exp":"1","file":"dxgi.h","line":186,"type":"Integer","value":1},"_DXGI_OFFER_RESOURCE_FLAGS":{"comment":"","exp":"","file":"dxgi1_5.h","line":877,"type":"Enum","value":"typedef\\r\\nenum _DXGI_OFFER_RESOURCE_FLAGS\\r\\n    {\\r\\n        DXGI_OFFER_RESOURCE_FLAG_ALLOW_DECOMMIT\\t= 0x1\\r\\n    } \\tDXGI_OFFER_RESOURCE_FLAGS;"},"_DXGI_OFFER_RESOURCE_PRIORITY":{"comment":"","exp":"","file":"dxgi1_2.h","line":912,"type":"Enum","value":"typedef\\r\\nenum _DXGI_OFFER_RESOURCE_PRIORITY\\r\\n    {\\r\\n        DXGI_OFFER_RESOURCE_PRIORITY_LOW\\t= 1,\\r\\n        DXGI_OFFER_RESOURCE_PRIORITY_NORMAL\\t= ( DXGI_OFFER_RESOURCE_PRIORITY_LOW + 1 ) ,\\r\\n        DXGI_OFFER_RESOURCE_PRIORITY_HIGH\\t= ( DXGI_OFFER_RESOURCE_PRIORITY_NORMAL + 1 ) \\r\\n    } \\tDXGI_OFFER_RESOURCE_PRIORITY;"},"_DXGI_RECLAIM_RESOURCE_RESULTS":{"comment":"","exp":"","file":"dxgi1_5.h","line":883,"type":"Enum","value":"typedef\\r\\nenum _DXGI_RECLAIM_RESOURCE_RESULTS\\r\\n    {\\r\\n        DXGI_RECLAIM_RESOURCE_RESULT_OK\\t= 0,\\r\\n        DXGI_RECLAIM_RESOURCE_RESULT_DISCARDED\\t= 1,\\r\\n        DXGI_RECLAIM_RESOURCE_RESULT_NOT_COMMITTED\\t= 2\\r\\n    } \\tDXGI_RECLAIM_RESOURCE_RESULTS;"},"_LUID":{"comment":"","exp":"","file":"dxgi.h","line":187,"type":"Struct","value":"typedef struct _LUID\\r\\n    {\\r\\n    DWORD LowPart;\\r\\n    LONG HighPart;\\r\\n    } \\tLUID;"},"__REQUIRED_RPCNDR_H_VERSION__":{"comment":"","exp":"500","file":"dxgi.h","line":13,"type":"Integer","value":500},"__REQUIRED_RPCSAL_H_VERSION__":{"comment":"","exp":"100","file":"dxgi.h","line":18,"type":"Integer","value":100}},"__includes_list":{"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|dxgi.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["oaidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OAIdl.h"],["ocidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OCIdl.h"],["dxgicommon.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\dxgicommon.h"],["dxgitype.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\dxgitype.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|dxgi1_2.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["dxgi.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\dxgi.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|dxgi1_3.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["dxgi1_2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\dxgi1_2.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|dxgi1_4.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["dxgi1_3.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\dxgi1_3.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|dxgi1_5.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["dxgi1_4.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\dxgi1_4.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|dxgi1_6.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["dxgi1_5.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\dxgi1_5.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|dxgidebug.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["oaidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OAIdl.h"],["ocidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OCIdl.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]]}}