{"__const_list":{"ALPHA_MASK":{"comment":"","exp":"((ARGB) 0xff << ALPHA_SHIFT)","file":"gdipluspixelformats.h","line":39,"type":"Integer","value":4278190080},"ALPHA_SHIFT":{"comment":"","exp":"24","file":"gdipluspixelformats.h","line":35,"type":"Integer","value":24},"BLUE_SHIFT":{"comment":"","exp":"0","file":"gdipluspixelformats.h","line":38,"type":"Integer","value":0},"BlurParams":{"comment":"","exp":"","file":"gdipluseffects.h","line":83,"type":"Struct","value":"struct BlurParams\\r\\n{\\r\\n    float radius;\\r\\n    BOOL expandEdge;\\r\\n};"},"BrightnessContrastParams":{"comment":"","exp":"","file":"gdipluseffects.h","line":89,"type":"Struct","value":"struct BrightnessContrastParams\\r\\n{\\r\\n    INT brightnessLevel;\\r\\n    INT contrastLevel;\\r\\n};"},"BrushType":{"comment":"","exp":"","file":"gdiplusenums.h","line":377,"type":"Enum","value":"enum BrushType\\r\\n{\\r\\n   BrushTypeSolidColor       = 0,\\r\\n   BrushTypeHatchFill        = 1,\\r\\n   BrushTypeTextureFill      = 2,\\r\\n   BrushTypePathGradient     = 3,\\r\\n   BrushTypeLinearGradient   = 4\\r\\n};"},"ColorAdjustType":{"comment":"","exp":"","file":"gdipluscolormatrix.h","line":71,"type":"Enum","value":"enum ColorAdjustType\\r\\n{\\r\\n    ColorAdjustTypeDefault,\\r\\n    ColorAdjustTypeBitmap,\\r\\n    ColorAdjustTypeBrush,\\r\\n    ColorAdjustTypePen,\\r\\n    ColorAdjustTypeText,\\r\\n    ColorAdjustTypeCount,\\r\\n    ColorAdjustTypeAny      \/\/ Reserved\\r\\n};"},"ColorBalanceParams":{"comment":"","exp":"","file":"gdipluseffects.h","line":121,"type":"Struct","value":"struct ColorBalanceParams\\r\\n{\\r\\n    INT cyanRed;\\r\\n    INT magentaGreen;\\r\\n    INT yellowBlue;\\r\\n};"},"ColorChannelFlags":{"comment":"","exp":"","file":"gdipluscolor.h","line":37,"type":"Enum","value":"enum ColorChannelFlags\\r\\n{\\r\\n    ColorChannelFlagsC = 0,\\r\\n    ColorChannelFlagsM,\\r\\n    ColorChannelFlagsY,\\r\\n    ColorChannelFlagsK,\\r\\n    ColorChannelFlagsLast\\r\\n};"},"ColorCurveParams":{"comment":"","exp":"","file":"gdipluseffects.h","line":158,"type":"Struct","value":"struct ColorCurveParams\\r\\n{\\r\\n    CurveAdjustments adjustment;\\r\\n    CurveChannel channel;\\r\\n    INT adjustValue;\\r\\n};"},"ColorLUTParams":{"comment":"","exp":"","file":"gdipluseffects.h","line":128,"type":"Struct","value":"struct ColorLUTParams\\r\\n{\\r\\n    \/\/ look up tables for each color channel.\\r\\n    \\r\\n    ColorChannelLUT lutB;\\r\\n    ColorChannelLUT lutG;\\r\\n    ColorChannelLUT lutR;\\r\\n    ColorChannelLUT lutA;\\r\\n};"},"ColorMap":{"comment":"","exp":"","file":"gdipluscolormatrix.h","line":86,"type":"Struct","value":"struct ColorMap\\r\\n{\\r\\n    Color oldColor;\\r\\n    Color newColor;\\r\\n};"},"ColorMatrix":{"comment":"","exp":"","file":"gdipluscolormatrix.h","line":51,"type":"Struct","value":"struct ColorMatrix\\r\\n{\\r\\n    REAL m[5][5];\\r\\n};"},"ColorMatrixFlags":{"comment":"","exp":"","file":"gdipluscolormatrix.h","line":60,"type":"Enum","value":"enum ColorMatrixFlags\\r\\n{\\r\\n    ColorMatrixFlagsDefault   = 0,\\r\\n    ColorMatrixFlagsSkipGrays = 1,\\r\\n    ColorMatrixFlagsAltGray   = 2\\r\\n};"},"ColorMode":{"comment":"","exp":"","file":"gdipluscolor.h","line":27,"type":"Enum","value":"enum ColorMode\\r\\n{\\r\\n    ColorModeARGB32 = 0,\\r\\n    ColorModeARGB64 = 1\\r\\n};"},"ColorPalette":{"comment":"","exp":"","file":"gdipluspixelformats.h","line":191,"type":"Struct","value":"struct ColorPalette\\r\\n{\\r\\npublic:\\r\\n    UINT Flags;             \/\/ Palette flags\\r\\n    UINT Count;             \/\/ Number of color entries\\r\\n    ARGB Entries[1];        \/\/ Palette color entries\\r\\n};"},"CombineMode":{"comment":"","exp":"","file":"gdiplusenums.h","line":325,"type":"Enum","value":"enum CombineMode\\r\\n{\\r\\n    CombineModeReplace,     \/\/ 0\\r\\n    CombineModeIntersect,   \/\/ 1\\r\\n    CombineModeUnion,       \/\/ 2\\r\\n    CombineModeXor,         \/\/ 3\\r\\n    CombineModeExclude,     \/\/ 4\\r\\n    CombineModeComplement   \/\/ 5 (Exclude From)\\r\\n};"},"CompositingMode":{"comment":"","exp":"","file":"gdiplusenums.h","line":62,"type":"Enum","value":"enum CompositingMode\\r\\n{\\r\\n    CompositingModeSourceOver,    \/\/ 0\\r\\n    CompositingModeSourceCopy     \/\/ 1\\r\\n};"},"CompositingQuality":{"comment":"","exp":"","file":"gdiplusenums.h","line":72,"type":"Enum","value":"enum CompositingQuality\\r\\n{\\r\\n    CompositingQualityInvalid          = QualityModeInvalid,\\r\\n    CompositingQualityDefault          = QualityModeDefault,\\r\\n    CompositingQualityHighSpeed        = QualityModeLow,\\r\\n    CompositingQualityHighQuality      = QualityModeHigh,\\r\\n    CompositingQualityGammaCorrected,\\r\\n    CompositingQualityAssumeLinear\\r\\n};"},"ConvertToEmfPlusFlags":{"comment":"","exp":"","file":"gdiplusenums.h","line":1097,"type":"Enum","value":"enum ConvertToEmfPlusFlags\\r\\n{\\r\\n    ConvertToEmfPlusFlagsDefault       = 0x00000000,\\r\\n    ConvertToEmfPlusFlagsRopUsed       = 0x00000001,\\r\\n    ConvertToEmfPlusFlagsText          = 0x00000002,\\r\\n    ConvertToEmfPlusFlagsInvalidRecord = 0x00000004\\r\\n};"},"CoordinateSpace":{"comment":"","exp":"","file":"gdiplusenums.h","line":121,"type":"Enum","value":"enum CoordinateSpace\\r\\n{\\r\\n    CoordinateSpaceWorld,     \/\/ 0\\r\\n    CoordinateSpacePage,      \/\/ 1\\r\\n    CoordinateSpaceDevice     \/\/ 2\\r\\n};"},"CurveAdjustments":{"comment":"","exp":"","file":"gdipluseffects.h","line":138,"type":"Enum","value":"enum CurveAdjustments\\r\\n{\\r\\n    AdjustExposure,\\r\\n    AdjustDensity,\\r\\n    AdjustContrast,\\r\\n    AdjustHighlight,\\r\\n    AdjustShadow,\\r\\n    AdjustMidtone,\\r\\n    AdjustWhiteSaturation,\\r\\n    AdjustBlackSaturation\\r\\n};"},"CurveChannel":{"comment":"","exp":"","file":"gdipluseffects.h","line":150,"type":"Enum","value":"enum CurveChannel\\r\\n{\\r\\n    CurveChannelAll,\\r\\n    CurveChannelRed,\\r\\n    CurveChannelGreen,\\r\\n    CurveChannelBlue\\r\\n};"},"CustomLineCapType":{"comment":"","exp":"","file":"gdiplusenums.h","line":259,"type":"Enum","value":"enum CustomLineCapType\\r\\n{\\r\\n    CustomLineCapTypeDefault         = 0,\\r\\n    CustomLineCapTypeAdjustableArrow = 1\\r\\n};"},"DashCap":{"comment":"","exp":"","file":"gdiplusenums.h","line":226,"type":"Enum","value":"enum DashCap\\r\\n{\\r\\n    DashCapFlat             = 0,\\r\\n    DashCapRound            = 2,\\r\\n    DashCapTriangle         = 3\\r\\n};"},"DashStyle":{"comment":"","exp":"","file":"gdiplusenums.h","line":212,"type":"Enum","value":"enum DashStyle\\r\\n{\\r\\n    DashStyleSolid,          \/\/ 0\\r\\n    DashStyleDash,           \/\/ 1\\r\\n    DashStyleDot,            \/\/ 2\\r\\n    DashStyleDashDot,        \/\/ 3\\r\\n    DashStyleDashDotDot,     \/\/ 4\\r\\n    DashStyleCustom          \/\/ 5\\r\\n};"},"DebugEventLevel":{"comment":"","exp":"","file":"gdiplusinit.h","line":27,"type":"Enum","value":"enum DebugEventLevel\\r\\n{\\r\\n    DebugEventLevelFatal,\\r\\n    DebugEventLevelWarning\\r\\n};"},"DitherType":{"comment":"","exp":"","file":"gdipluspixelformats.h","line":153,"type":"Enum","value":"enum DitherType\\r\\n{\\r\\n    DitherTypeNone          = 0,\\r\\n    \\r\\n    \/\/ Solid color - picks the nearest matching color with no attempt to \\r\\n    \/\/ halftone or dither. May be used on an arbitrary palette.\\r\\n    \\r\\n    DitherTypeSolid         = 1,\\r\\n    \\r\\n    \/\/ Ordered dithers and spiral dithers must be used with a fixed palette.\\r\\n    \\r\\n    \/\/ NOTE: DitherOrdered4x4 is unique in that it may apply to 16bpp \\r\\n    \/\/ conversions also.\\r\\n    \\r\\n    DitherTypeOrdered4x4    = 2,\\r\\n    \\r\\n    DitherTypeOrdered8x8    = 3,\\r\\n    DitherTypeOrdered16x16  = 4,\\r\\n    DitherTypeSpiral4x4     = 5,\\r\\n    DitherTypeSpiral8x8     = 6,\\r\\n    DitherTypeDualSpiral4x4 = 7,\\r\\n    DitherTypeDualSpiral8x8 = 8,\\r\\n    \\r\\n    \/\/ Error diffusion. May be used with any palette.\\r\\n    \\r\\n    DitherTypeErrorDiffusion   = 9,\\r\\n    DitherTypeMax              = 10\\r\\n};"},"DriverStringOptions":{"comment":"","exp":"","file":"gdiplusenums.h","line":995,"type":"Enum","value":"enum DriverStringOptions\\r\\n{\\r\\n    DriverStringOptionsCmapLookup             = 1,\\r\\n    DriverStringOptionsVertical               = 2,\\r\\n    DriverStringOptionsRealizedAdvance        = 4,\\r\\n    DriverStringOptionsLimitSubpixel          = 8\\r\\n};"},"EmfPlusRecordType":{"comment":"","exp":"","file":"gdiplusenums.h","line":554,"type":"Enum","value":"enum EmfPlusRecordType\\r\\n{\\r\\n   \/\/ Since we have to enumerate GDI records right along with GDI+ records,\\r\\n   \/\/ We list all the GDI records here so that they can be part of the\\r\\n   \/\/ same enumeration type which is used in the enumeration callback.\\r\\n    WmfRecordTypeSetBkColor              = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETBKCOLOR),\\r\\n    WmfRecordTypeSetBkMode               = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETBKMODE),\\r\\n    WmfRecordTypeSetMapMode              = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETMAPMODE),\\r\\n    WmfRecordTypeSetROP2                 = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETROP2),\\r\\n    WmfRecordTypeSetRelAbs               = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETRELABS),\\r\\n    WmfRecordTypeSetPolyFillMode         = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETPOLYFILLMODE),\\r\\n    WmfRecordTypeSetStretchBltMode       = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETSTRETCHBLTMODE),\\r\\n    WmfRecordTypeSetTextCharExtra        = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETTEXTCHAREXTRA),\\r\\n    WmfRecordTypeSetTextColor            = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETTEXTCOLOR),\\r\\n    WmfRecordTypeSetTextJustification    = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETTEXTJUSTIFICATION),\\r\\n    WmfRecordTypeSetWindowOrg            = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETWINDOWORG),\\r\\n    WmfRecordTypeSetWindowExt            = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETWINDOWEXT),\\r\\n    WmfRecordTypeSetViewportOrg          = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETVIEWPORTORG),\\r\\n    WmfRecordTypeSetViewportExt          = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETVIEWPORTEXT),\\r\\n    WmfRecordTypeOffsetWindowOrg         = GDIP_WMF_RECORD_TO_EMFPLUS(META_OFFSETWINDOWORG),\\r\\n    WmfRecordTypeScaleWindowExt          = GDIP_WMF_RECORD_TO_EMFPLUS(META_SCALEWINDOWEXT),\\r\\n    WmfRecordTypeOffsetViewportOrg       = GDIP_WMF_RECORD_TO_EMFPLUS(META_OFFSETVIEWPORTORG),\\r\\n    WmfRecordTypeScaleViewportExt        = GDIP_WMF_RECORD_TO_EMFPLUS(META_SCALEVIEWPORTEXT),\\r\\n    WmfRecordTypeLineTo                  = GDIP_WMF_RECORD_TO_EMFPLUS(META_LINETO),\\r\\n    WmfRecordTypeMoveTo                  = GDIP_WMF_RECORD_TO_EMFPLUS(META_MOVETO),\\r\\n    WmfRecordTypeExcludeClipRect         = GDIP_WMF_RECORD_TO_EMFPLUS(META_EXCLUDECLIPRECT),\\r\\n    WmfRecordTypeIntersectClipRect       = GDIP_WMF_RECORD_TO_EMFPLUS(META_INTERSECTCLIPRECT),\\r\\n    WmfRecordTypeArc                     = GDIP_WMF_RECORD_TO_EMFPLUS(META_ARC),\\r\\n    WmfRecordTypeEllipse                 = GDIP_WMF_RECORD_TO_EMFPLUS(META_ELLIPSE),\\r\\n    WmfRecordTypeFloodFill               = GDIP_WMF_RECORD_TO_EMFPLUS(META_FLOODFILL),\\r\\n    WmfRecordTypePie                     = GDIP_WMF_RECORD_TO_EMFPLUS(META_PIE),\\r\\n    WmfRecordTypeRectangle               = GDIP_WMF_RECORD_TO_EMFPLUS(META_RECTANGLE),\\r\\n    WmfRecordTypeRoundRect               = GDIP_WMF_RECORD_TO_EMFPLUS(META_ROUNDRECT),\\r\\n    WmfRecordTypePatBlt                  = GDIP_WMF_RECORD_TO_EMFPLUS(META_PATBLT),\\r\\n    WmfRecordTypeSaveDC                  = GDIP_WMF_RECORD_TO_EMFPLUS(META_SAVEDC),\\r\\n    WmfRecordTypeSetPixel                = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETPIXEL),\\r\\n    WmfRecordTypeOffsetClipRgn           = GDIP_WMF_RECORD_TO_EMFPLUS(META_OFFSETCLIPRGN),\\r\\n    WmfRecordTypeTextOut                 = GDIP_WMF_RECORD_TO_EMFPLUS(META_TEXTOUT),\\r\\n    WmfRecordTypeBitBlt                  = GDIP_WMF_RECORD_TO_EMFPLUS(META_BITBLT),\\r\\n    WmfRecordTypeStretchBlt              = GDIP_WMF_RECORD_TO_EMFPLUS(META_STRETCHBLT),\\r\\n    WmfRecordTypePolygon                 = GDIP_WMF_RECORD_TO_EMFPLUS(META_POLYGON),\\r\\n    WmfRecordTypePolyline                = GDIP_WMF_RECORD_TO_EMFPLUS(META_POLYLINE),\\r\\n    WmfRecordTypeEscape                  = GDIP_WMF_RECORD_TO_EMFPLUS(META_ESCAPE),\\r\\n    WmfRecordTypeRestoreDC               = GDIP_WMF_RECORD_TO_EMFPLUS(META_RESTOREDC),\\r\\n    WmfRecordTypeFillRegion              = GDIP_WMF_RECORD_TO_EMFPLUS(META_FILLREGION),\\r\\n    WmfRecordTypeFrameRegion             = GDIP_WMF_RECORD_TO_EMFPLUS(META_FRAMEREGION),\\r\\n    WmfRecordTypeInvertRegion            = GDIP_WMF_RECORD_TO_EMFPLUS(META_INVERTREGION),\\r\\n    WmfRecordTypePaintRegion             = GDIP_WMF_RECORD_TO_EMFPLUS(META_PAINTREGION),\\r\\n    WmfRecordTypeSelectClipRegion        = GDIP_WMF_RECORD_TO_EMFPLUS(META_SELECTCLIPREGION),\\r\\n    WmfRecordTypeSelectObject            = GDIP_WMF_RECORD_TO_EMFPLUS(META_SELECTOBJECT),\\r\\n    WmfRecordTypeSetTextAlign            = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETTEXTALIGN),\\r\\n    WmfRecordTypeDrawText                = GDIP_WMF_RECORD_TO_EMFPLUS(0x062F),  \/\/ META_DRAWTEXT\\r\\n    WmfRecordTypeChord                   = GDIP_WMF_RECORD_TO_EMFPLUS(META_CHORD),\\r\\n    WmfRecordTypeSetMapperFlags          = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETMAPPERFLAGS),\\r\\n    WmfRecordTypeExtTextOut              = GDIP_WMF_RECORD_TO_EMFPLUS(META_EXTTEXTOUT),\\r\\n    WmfRecordTypeSetDIBToDev             = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETDIBTODEV),\\r\\n    WmfRecordTypeSelectPalette           = GDIP_WMF_RECORD_TO_EMFPLUS(META_SELECTPALETTE),\\r\\n    WmfRecordTypeRealizePalette          = GDIP_WMF_RECORD_TO_EMFPLUS(META_REALIZEPALETTE),\\r\\n    WmfRecordTypeAnimatePalette          = GDIP_WMF_RECORD_TO_EMFPLUS(META_ANIMATEPALETTE),\\r\\n    WmfRecordTypeSetPalEntries           = GDIP_WMF_RECORD_TO_EMFPLUS(META_SETPALENTRIES),\\r\\n    WmfRecordTypePolyPolygon             = GDIP_WMF_RECORD_TO_EMFPLUS(META_POLYPOLYGON),\\r\\n    WmfRecordTypeResizePalette           = GDIP_WMF_RECORD_TO_EMFPLUS(META_RESIZEPALETTE),\\r\\n    WmfRecordTypeDIBBitBlt               = GDIP_WMF_RECORD_TO_EMFPLUS(META_DIBBITBLT),\\r\\n    WmfRecordTypeDIBStretchBlt           = GDIP_WMF_RECORD_TO_EMFPLUS(META_DIBSTRETCHBLT),\\r\\n    WmfRecordTypeDIBCreatePatternBrush   = GDIP_WMF_RECORD_TO_EMFPLUS(META_DIBCREATEPATTERNBRUSH),\\r\\n    WmfRecordTypeStretchDIB              = GDIP_WMF_RECORD_TO_EMFPLUS(META_STRETCHDIB),\\r\\n    WmfRecordTypeExtFloodFill            = GDIP_WMF_RECORD_TO_EMFPLUS(META_EXTFLOODFILL),\\r\\n    WmfRecordTypeSetLayout               = GDIP_WMF_RECORD_TO_EMFPLUS(0x0149),  \/\/ META_SETLAYOUT\\r\\n    WmfRecordTypeResetDC                 = GDIP_WMF_RECORD_TO_EMFPLUS(0x014C),  \/\/ META_RESETDC\\r\\n    WmfRecordTypeStartDoc                = GDIP_WMF_RECORD_TO_EMFPLUS(0x014D),  \/\/ META_STARTDOC\\r\\n    WmfRecordTypeStartPage               = GDIP_WMF_RECORD_TO_EMFPLUS(0x004F),  \/\/ META_STARTPAGE\\r\\n    WmfRecordTypeEndPage                 = GDIP_WMF_RECORD_TO_EMFPLUS(0x0050),  \/\/ META_ENDPAGE\\r\\n    WmfRecordTypeAbortDoc                = GDIP_WMF_RECORD_TO_EMFPLUS(0x0052),  \/\/ META_ABORTDOC\\r\\n    WmfRecordTypeEndDoc                  = GDIP_WMF_RECORD_TO_EMFPLUS(0x005E),  \/\/ META_ENDDOC\\r\\n    WmfRecordTypeDeleteObject            = GDIP_WMF_RECORD_TO_EMFPLUS(META_DELETEOBJECT),\\r\\n    WmfRecordTypeCreatePalette           = GDIP_WMF_RECORD_TO_EMFPLUS(META_CREATEPALETTE),\\r\\n    WmfRecordTypeCreateBrush             = GDIP_WMF_RECORD_TO_EMFPLUS(0x00F8),  \/\/ META_CREATEBRUSH\\r\\n    WmfRecordTypeCreatePatternBrush      = GDIP_WMF_RECORD_TO_EMFPLUS(META_CREATEPATTERNBRUSH),\\r\\n    WmfRecordTypeCreatePenIndirect       = GDIP_WMF_RECORD_TO_EMFPLUS(META_CREATEPENINDIRECT),\\r\\n    WmfRecordTypeCreateFontIndirect      = GDIP_WMF_RECORD_TO_EMFPLUS(META_CREATEFONTINDIRECT),\\r\\n    WmfRecordTypeCreateBrushIndirect     = GDIP_WMF_RECORD_TO_EMFPLUS(META_CREATEBRUSHINDIRECT),\\r\\n    WmfRecordTypeCreateBitmapIndirect    = GDIP_WMF_RECORD_TO_EMFPLUS(0x02FD),  \/\/ META_CREATEBITMAPINDIRECT\\r\\n    WmfRecordTypeCreateBitmap            = GDIP_WMF_RECORD_TO_EMFPLUS(0x06FE),  \/\/ META_CREATEBITMAP\\r\\n    WmfRecordTypeCreateRegion            = GDIP_WMF_RECORD_TO_EMFPLUS(META_CREATEREGION),\\r\\n    EmfRecordTypeHeader                  = EMR_HEADER,\\r\\n    EmfRecordTypePolyBezier              = EMR_POLYBEZIER,\\r\\n    EmfRecordTypePolygon                 = EMR_POLYGON,\\r\\n    EmfRecordTypePolyline                = EMR_POLYLINE,\\r\\n    EmfRecordTypePolyBezierTo            = EMR_POLYBEZIERTO,\\r\\n    EmfRecordTypePolyLineTo              = EMR_POLYLINETO,\\r\\n    EmfRecordTypePolyPolyline            = EMR_POLYPOLYLINE,\\r\\n    EmfRecordTypePolyPolygon             = EMR_POLYPOLYGON,\\r\\n    EmfRecordTypeSetWindowExtEx          = EMR_SETWINDOWEXTEX,\\r\\n    EmfRecordTypeSetWindowOrgEx          = EMR_SETWINDOWORGEX,\\r\\n    EmfRecordTypeSetViewportExtEx        = EMR_SETVIEWPORTEXTEX,\\r\\n    EmfRecordTypeSetViewportOrgEx        = EMR_SETVIEWPORTORGEX,\\r\\n    EmfRecordTypeSetBrushOrgEx           = EMR_SETBRUSHORGEX,\\r\\n    EmfRecordTypeEOF                     = EMR_EOF,\\r\\n    EmfRecordTypeSetPixelV               = EMR_SETPIXELV,\\r\\n    EmfRecordTypeSetMapperFlags          = EMR_SETMAPPERFLAGS,\\r\\n    EmfRecordTypeSetMapMode              = EMR_SETMAPMODE,\\r\\n    EmfRecordTypeSetBkMode               = EMR_SETBKMODE,\\r\\n    EmfRecordTypeSetPolyFillMode         = EMR_SETPOLYFILLMODE,\\r\\n    EmfRecordTypeSetROP2                 = EMR_SETROP2,\\r\\n    EmfRecordTypeSetStretchBltMode       = EMR_SETSTRETCHBLTMODE,\\r\\n    EmfRecordTypeSetTextAlign            = EMR_SETTEXTALIGN,\\r\\n    EmfRecordTypeSetColorAdjustment      = EMR_SETCOLORADJUSTMENT,\\r\\n    EmfRecordTypeSetTextColor            = EMR_SETTEXTCOLOR,\\r\\n    EmfRecordTypeSetBkColor              = EMR_SETBKCOLOR,\\r\\n    EmfRecordTypeOffsetClipRgn           = EMR_OFFSETCLIPRGN,\\r\\n    EmfRecordTypeMoveToEx                = EMR_MOVETOEX,\\r\\n    EmfRecordTypeSetMetaRgn              = EMR_SETMETARGN,\\r\\n    EmfRecordTypeExcludeClipRect         = EMR_EXCLUDECLIPRECT,\\r\\n    EmfRecordTypeIntersectClipRect       = EMR_INTERSECTCLIPRECT,\\r\\n    EmfRecordTypeScaleViewportExtEx      = EMR_SCALEVIEWPORTEXTEX,\\r\\n    EmfRecordTypeScaleWindowExtEx        = EMR_SCALEWINDOWEXTEX,\\r\\n    EmfRecordTypeSaveDC                  = EMR_SAVEDC,\\r\\n    EmfRecordTypeRestoreDC               = EMR_RESTOREDC,\\r\\n    EmfRecordTypeSetWorldTransform       = EMR_SETWORLDTRANSFORM,\\r\\n    EmfRecordTypeModifyWorldTransform    = EMR_MODIFYWORLDTRANSFORM,\\r\\n    EmfRecordTypeSelectObject            = EMR_SELECTOBJECT,\\r\\n    EmfRecordTypeCreatePen               = EMR_CREATEPEN,\\r\\n    EmfRecordTypeCreateBrushIndirect     = EMR_CREATEBRUSHINDIRECT,\\r\\n    EmfRecordTypeDeleteObject            = EMR_DELETEOBJECT,\\r\\n    EmfRecordTypeAngleArc                = EMR_ANGLEARC,\\r\\n    EmfRecordTypeEllipse                 = EMR_ELLIPSE,\\r\\n    EmfRecordTypeRectangle               = EMR_RECTANGLE,\\r\\n    EmfRecordTypeRoundRect               = EMR_ROUNDRECT,\\r\\n    EmfRecordTypeArc                     = EMR_ARC,\\r\\n    EmfRecordTypeChord                   = EMR_CHORD,\\r\\n    EmfRecordTypePie                     = EMR_PIE,\\r\\n    EmfRecordTypeSelectPalette           = EMR_SELECTPALETTE,\\r\\n    EmfRecordTypeCreatePalette           = EMR_CREATEPALETTE,\\r\\n    EmfRecordTypeSetPaletteEntries       = EMR_SETPALETTEENTRIES,\\r\\n    EmfRecordTypeResizePalette           = EMR_RESIZEPALETTE,\\r\\n    EmfRecordTypeRealizePalette          = EMR_REALIZEPALETTE,\\r\\n    EmfRecordTypeExtFloodFill            = EMR_EXTFLOODFILL,\\r\\n    EmfRecordTypeLineTo                  = EMR_LINETO,\\r\\n    EmfRecordTypeArcTo                   = EMR_ARCTO,\\r\\n    EmfRecordTypePolyDraw                = EMR_POLYDRAW,\\r\\n    EmfRecordTypeSetArcDirection         = EMR_SETARCDIRECTION,\\r\\n    EmfRecordTypeSetMiterLimit           = EMR_SETMITERLIMIT,\\r\\n    EmfRecordTypeBeginPath               = EMR_BEGINPATH,\\r\\n    EmfRecordTypeEndPath                 = EMR_ENDPATH,\\r\\n    EmfRecordTypeCloseFigure             = EMR_CLOSEFIGURE,\\r\\n    EmfRecordTypeFillPath                = EMR_FILLPATH,\\r\\n    EmfRecordTypeStrokeAndFillPath       = EMR_STROKEANDFILLPATH,\\r\\n    EmfRecordTypeStrokePath              = EMR_STROKEPATH,\\r\\n    EmfRecordTypeFlattenPath             = EMR_FLATTENPATH,\\r\\n    EmfRecordTypeWidenPath               = EMR_WIDENPATH,\\r\\n    EmfRecordTypeSelectClipPath          = EMR_SELECTCLIPPATH,\\r\\n    EmfRecordTypeAbortPath               = EMR_ABORTPATH,\\r\\n    EmfRecordTypeReserved_069            = 69,  \/\/ Not Used\\r\\n    EmfRecordTypeGdiComment              = EMR_GDICOMMENT,\\r\\n    EmfRecordTypeFillRgn                 = EMR_FILLRGN,\\r\\n    EmfRecordTypeFrameRgn                = EMR_FRAMERGN,\\r\\n    EmfRecordTypeInvertRgn               = EMR_INVERTRGN,\\r\\n    EmfRecordTypePaintRgn                = EMR_PAINTRGN,\\r\\n    EmfRecordTypeExtSelectClipRgn        = EMR_EXTSELECTCLIPRGN,\\r\\n    EmfRecordTypeBitBlt                  = EMR_BITBLT,\\r\\n    EmfRecordTypeStretchBlt              = EMR_STRETCHBLT,\\r\\n    EmfRecordTypeMaskBlt                 = EMR_MASKBLT,\\r\\n    EmfRecordTypePlgBlt                  = EMR_PLGBLT,\\r\\n    EmfRecordTypeSetDIBitsToDevice       = EMR_SETDIBITSTODEVICE,\\r\\n    EmfRecordTypeStretchDIBits           = EMR_STRETCHDIBITS,\\r\\n    EmfRecordTypeExtCreateFontIndirect   = EMR_EXTCREATEFONTINDIRECTW,\\r\\n    EmfRecordTypeExtTextOutA             = EMR_EXTTEXTOUTA,\\r\\n    EmfRecordTypeExtTextOutW             = EMR_EXTTEXTOUTW,\\r\\n    EmfRecordTypePolyBezier16            = EMR_POLYBEZIER16,\\r\\n    EmfRecordTypePolygon16               = EMR_POLYGON16,\\r\\n    EmfRecordTypePolyline16              = EMR_POLYLINE16,\\r\\n    EmfRecordTypePolyBezierTo16          = EMR_POLYBEZIERTO16,\\r\\n    EmfRecordTypePolylineTo16            = EMR_POLYLINETO16,\\r\\n    EmfRecordTypePolyPolyline16          = EMR_POLYPOLYLINE16,\\r\\n    EmfRecordTypePolyPolygon16           = EMR_POLYPOLYGON16,\\r\\n    EmfRecordTypePolyDraw16              = EMR_POLYDRAW16,\\r\\n    EmfRecordTypeCreateMonoBrush         = EMR_CREATEMONOBRUSH,\\r\\n    EmfRecordTypeCreateDIBPatternBrushPt = EMR_CREATEDIBPATTERNBRUSHPT,\\r\\n    EmfRecordTypeExtCreatePen            = EMR_EXTCREATEPEN,\\r\\n    EmfRecordTypePolyTextOutA            = EMR_POLYTEXTOUTA,\\r\\n    EmfRecordTypePolyTextOutW            = EMR_POLYTEXTOUTW,\\r\\n    EmfRecordTypeSetICMMode              = 98,  \/\/ EMR_SETICMMODE,\\r\\n    EmfRecordTypeCreateColorSpace        = 99,  \/\/ EMR_CREATECOLORSPACE,\\r\\n    EmfRecordTypeSetColorSpace           = 100, \/\/ EMR_SETCOLORSPACE,\\r\\n    EmfRecordTypeDeleteColorSpace        = 101, \/\/ EMR_DELETECOLORSPACE,\\r\\n    EmfRecordTypeGLSRecord               = 102, \/\/ EMR_GLSRECORD,\\r\\n    EmfRecordTypeGLSBoundedRecord        = 103, \/\/ EMR_GLSBOUNDEDRECORD,\\r\\n    EmfRecordTypePixelFormat             = 104, \/\/ EMR_PIXELFORMAT,\\r\\n    EmfRecordTypeDrawEscape              = 105, \/\/ EMR_RESERVED_105,\\r\\n    EmfRecordTypeExtEscape               = 106, \/\/ EMR_RESERVED_106,\\r\\n    EmfRecordTypeStartDoc                = 107, \/\/ EMR_RESERVED_107,\\r\\n    EmfRecordTypeSmallTextOut            = 108, \/\/ EMR_RESERVED_108,\\r\\n    EmfRecordTypeForceUFIMapping         = 109, \/\/ EMR_RESERVED_109,\\r\\n    EmfRecordTypeNamedEscape             = 110, \/\/ EMR_RESERVED_110,\\r\\n    EmfRecordTypeColorCorrectPalette     = 111, \/\/ EMR_COLORCORRECTPALETTE,\\r\\n    EmfRecordTypeSetICMProfileA          = 112, \/\/ EMR_SETICMPROFILEA,\\r\\n    EmfRecordTypeSetICMProfileW          = 113, \/\/ EMR_SETICMPROFILEW,\\r\\n    EmfRecordTypeAlphaBlend              = 114, \/\/ EMR_ALPHABLEND,\\r\\n    EmfRecordTypeSetLayout               = 115, \/\/ EMR_SETLAYOUT,\\r\\n    EmfRecordTypeTransparentBlt          = 116, \/\/ EMR_TRANSPARENTBLT,\\r\\n    EmfRecordTypeReserved_117            = 117, \/\/ Not Used\\r\\n    EmfRecordTypeGradientFill            = 118, \/\/ EMR_GRADIENTFILL,\\r\\n    EmfRecordTypeSetLinkedUFIs           = 119, \/\/ EMR_RESERVED_119,\\r\\n    EmfRecordTypeSetTextJustification    = 120, \/\/ EMR_RESERVED_120,\\r\\n    EmfRecordTypeColorMatchToTargetW     = 121, \/\/ EMR_COLORMATCHTOTARGETW,\\r\\n    EmfRecordTypeCreateColorSpaceW       = 122, \/\/ EMR_CREATECOLORSPACEW,\\r\\n    EmfRecordTypeMax                     = 122,\\r\\n    EmfRecordTypeMin                     = 1,\\r\\n    \/\/ That is the END of the GDI EMF records.\\r\\n    \/\/ Now we start the list of EMF+ records.  We leave quite\\r\\n    \/\/ a bit of room here for the addition of any new GDI\\r\\n    \/\/ records that may be added later.\\r\\n    EmfPlusRecordTypeInvalid = GDIP_EMFPLUS_RECORD_BASE,\\r\\n    EmfPlusRecordTypeHeader,\\r\\n    EmfPlusRecordTypeEndOfFile,\\r\\n    EmfPlusRecordTypeComment,\\r\\n    EmfPlusRecordTypeGetDC,\\r\\n    EmfPlusRecordTypeMultiFormatStart,\\r\\n    EmfPlusRecordTypeMultiFormatSection,\\r\\n    EmfPlusRecordTypeMultiFormatEnd,\\r\\n    \/\/ For all persistent objects\\r\\n    \\r\\n    EmfPlusRecordTypeObject,\\r\\n    \/\/ Drawing Records\\r\\n    \\r\\n    EmfPlusRecordTypeClear,\\r\\n    EmfPlusRecordTypeFillRects,\\r\\n    EmfPlusRecordTypeDrawRects,\\r\\n    EmfPlusRecordTypeFillPolygon,\\r\\n    EmfPlusRecordTypeDrawLines,\\r\\n    EmfPlusRecordTypeFillEllipse,\\r\\n    EmfPlusRecordTypeDrawEllipse,\\r\\n    EmfPlusRecordTypeFillPie,\\r\\n    EmfPlusRecordTypeDrawPie,\\r\\n    EmfPlusRecordTypeDrawArc,\\r\\n    EmfPlusRecordTypeFillRegion,\\r\\n    EmfPlusRecordTypeFillPath,\\r\\n    EmfPlusRecordTypeDrawPath,\\r\\n    EmfPlusRecordTypeFillClosedCurve,\\r\\n    EmfPlusRecordTypeDrawClosedCurve,\\r\\n    EmfPlusRecordTypeDrawCurve,\\r\\n    EmfPlusRecordTypeDrawBeziers,\\r\\n    EmfPlusRecordTypeDrawImage,\\r\\n    EmfPlusRecordTypeDrawImagePoints,\\r\\n    EmfPlusRecordTypeDrawString,\\r\\n    \/\/ Graphics State Records\\r\\n    \\r\\n    EmfPlusRecordTypeSetRenderingOrigin,\\r\\n    EmfPlusRecordTypeSetAntiAliasMode,\\r\\n    EmfPlusRecordTypeSetTextRenderingHint,\\r\\n    EmfPlusRecordTypeSetTextContrast,\\r\\n    EmfPlusRecordTypeSetInterpolationMode,\\r\\n    EmfPlusRecordTypeSetPixelOffsetMode,\\r\\n    EmfPlusRecordTypeSetCompositingMode,\\r\\n    EmfPlusRecordTypeSetCompositingQuality,\\r\\n    EmfPlusRecordTypeSave,\\r\\n    EmfPlusRecordTypeRestore,\\r\\n    EmfPlusRecordTypeBeginContainer,\\r\\n    EmfPlusRecordTypeBeginContainerNoParams,\\r\\n    EmfPlusRecordTypeEndContainer,\\r\\n    EmfPlusRecordTypeSetWorldTransform,\\r\\n    EmfPlusRecordTypeResetWorldTransform,\\r\\n    EmfPlusRecordTypeMultiplyWorldTransform,\\r\\n    EmfPlusRecordTypeTranslateWorldTransform,\\r\\n    EmfPlusRecordTypeScaleWorldTransform,\\r\\n    EmfPlusRecordTypeRotateWorldTransform,\\r\\n    EmfPlusRecordTypeSetPageTransform,\\r\\n    EmfPlusRecordTypeResetClip,\\r\\n    EmfPlusRecordTypeSetClipRect,\\r\\n    EmfPlusRecordTypeSetClipPath,\\r\\n    EmfPlusRecordTypeSetClipRegion,\\r\\n    EmfPlusRecordTypeOffsetClip,\\r\\n    EmfPlusRecordTypeDrawDriverString,\\r\\n#if (GDIPVER >= 0x0110)\\r\\n    EmfPlusRecordTypeStrokeFillPath,\\r\\n    EmfPlusRecordTypeSerializableObject,\\r\\n    EmfPlusRecordTypeSetTSGraphics,\\r\\n    EmfPlusRecordTypeSetTSClip,\\r\\n#endif\\r\\n    \/\/ NOTE: New records *must* be added immediately before this line.\\r\\n    EmfPlusRecordTotal,\\r\\n    EmfPlusRecordTypeMax = EmfPlusRecordTotal-1,\\r\\n    EmfPlusRecordTypeMin = EmfPlusRecordTypeHeader,\\r\\n};"},"EmfToWmfBitsFlags":{"comment":"","exp":"","file":"gdiplusenums.h","line":1084,"type":"Enum","value":"enum EmfToWmfBitsFlags\\r\\n{\\r\\n    EmfToWmfBitsFlagsDefault          = 0x00000000,\\r\\n    EmfToWmfBitsFlagsEmbedEmf         = 0x00000001,\\r\\n    EmfToWmfBitsFlagsIncludePlaceable = 0x00000002,\\r\\n    EmfToWmfBitsFlagsNoXORClip        = 0x00000004\\r\\n};"},"EmfType":{"comment":"","exp":"","file":"gdiplusenums.h","line":500,"type":"Enum","value":"enum EmfType\\r\\n{\\r\\n    EmfTypeEmfOnly     = MetafileTypeEmf,          \/\/ no EMF+, only EMF\\r\\n    EmfTypeEmfPlusOnly = MetafileTypeEmfPlusOnly,  \/\/ no EMF, only EMF+\\r\\n    EmfTypeEmfPlusDual = MetafileTypeEmfPlusDual   \/\/ both EMF+ and EMF\\r\\n};"},"EncoderParameterValueType":{"comment":"","exp":"","file":"gdiplusenums.h","line":1018,"type":"Enum","value":"enum EncoderParameterValueType\\r\\n{\\r\\n    EncoderParameterValueTypeByte           = 1,    \/\/ 8-bit unsigned int\\r\\n    EncoderParameterValueTypeASCII          = 2,    \/\/ 8-bit byte containing one 7-bit ASCII\\r\\n                                                    \/\/ code. NULL terminated.\\r\\n    EncoderParameterValueTypeShort          = 3,    \/\/ 16-bit unsigned int\\r\\n    EncoderParameterValueTypeLong           = 4,    \/\/ 32-bit unsigned int\\r\\n    EncoderParameterValueTypeRational       = 5,    \/\/ Two Longs. The first Long is the\\r\\n                                                    \/\/ numerator, the second Long expresses the\\r\\n                                                    \/\/ denomintor.\\r\\n    EncoderParameterValueTypeLongRange      = 6,    \/\/ Two longs which specify a range of\\r\\n                                                    \/\/ integer values. The first Long specifies\\r\\n                                                    \/\/ the lower end and the second one\\r\\n                                                    \/\/ specifies the higher end. All values\\r\\n                                                    \/\/ are inclusive at both ends\\r\\n    EncoderParameterValueTypeUndefined      = 7,    \/\/ 8-bit byte that can take any value\\r\\n                                                    \/\/ depending on field definition\\r\\n    EncoderParameterValueTypeRationalRange  = 8,    \/\/ Two Rationals. The first Rational\\r\\n                                                    \/\/ specifies the lower end and the second\\r\\n                                                    \/\/ specifies the higher end. All values\\r\\n                                                    \/\/ are inclusive at both ends\\r\\n#if (GDIPVER >= 0x0110)\\r\\n    EncoderParameterValueTypePointer        = 9     \/\/ a pointer to a parameter defined data.\\r\\n#endif \/\/(GDIPVER >= 0x0110)\\r\\n};"},"EncoderValue":{"comment":"","exp":"","file":"gdiplusenums.h","line":1048,"type":"Enum","value":"enum EncoderValue\\r\\n{\\r\\n    EncoderValueColorTypeCMYK,\\r\\n    EncoderValueColorTypeYCCK,\\r\\n    EncoderValueCompressionLZW,\\r\\n    EncoderValueCompressionCCITT3,\\r\\n    EncoderValueCompressionCCITT4,\\r\\n    EncoderValueCompressionRle,\\r\\n    EncoderValueCompressionNone,\\r\\n    EncoderValueScanMethodInterlaced,\\r\\n    EncoderValueScanMethodNonInterlaced,\\r\\n    EncoderValueVersionGif87,\\r\\n    EncoderValueVersionGif89,\\r\\n    EncoderValueRenderProgressive,\\r\\n    EncoderValueRenderNonProgressive,\\r\\n    EncoderValueTransformRotate90,\\r\\n    EncoderValueTransformRotate180,\\r\\n    EncoderValueTransformRotate270,\\r\\n    EncoderValueTransformFlipHorizontal,\\r\\n    EncoderValueTransformFlipVertical,\\r\\n    EncoderValueMultiFrame,\\r\\n    EncoderValueLastFrame,\\r\\n    EncoderValueFlush,\\r\\n    EncoderValueFrameDimensionTime,\\r\\n    EncoderValueFrameDimensionResolution,\\r\\n    EncoderValueFrameDimensionPage,\\r\\n#if (GDIPVER >= 0x0110)\\r\\n    EncoderValueColorTypeGray,\\r\\n    EncoderValueColorTypeRGB,\\r\\n#endif\\r\\n};"},"FillMode":{"comment":"","exp":"","file":"gdiplusenums.h","line":40,"type":"Enum","value":"enum FillMode\\r\\n{\\r\\n    FillModeAlternate,        \/\/ 0\\r\\n    FillModeWinding           \/\/ 1\\r\\n};"},"FlushIntention":{"comment":"","exp":"","file":"gdiplusenums.h","line":1007,"type":"Enum","value":"enum FlushIntention\\r\\n{\\r\\n    FlushIntentionFlush = 0,        \/\/ Flush all batched rendering operations\\r\\n    FlushIntentionSync = 1          \/\/ Flush all batched rendering operations\\r\\n                                    \/\/ and wait for them to complete\\r\\n};"},"FontStyle":{"comment":"","exp":"","file":"gdiplusenums.h","line":426,"type":"Enum","value":"enum FontStyle\\r\\n{\\r\\n    FontStyleRegular    = 0,\\r\\n    FontStyleBold       = 1,\\r\\n    FontStyleItalic     = 2,\\r\\n    FontStyleBoldItalic = 3,\\r\\n    FontStyleUnderline  = 4,\\r\\n    FontStyleStrikeout  = 8\\r\\n};"},"GDIP_EMFPLUSFLAGS_DISPLAY":{"comment":"","exp":"0x00000001","file":"gdiplusmetaheader.h","line":114,"type":"Integer","value":1},"GDIP_EMFPLUS_RECORD_BASE":{"comment":"","exp":"0x00004000","file":"gdiplusenums.h","line":548,"type":"Integer","value":16384},"GDIP_WMF_RECORD_BASE":{"comment":"","exp":"0x00010000","file":"gdiplusenums.h","line":549,"type":"Integer","value":65536},"GREEN_SHIFT":{"comment":"","exp":"8","file":"gdipluspixelformats.h","line":37,"type":"Integer","value":8},"GdiplusStartupInput":{"comment":"","exp":"","file":"gdiplusinit.h","line":46,"type":"Struct","value":"struct GdiplusStartupInput\\r\\n{\\r\\n    UINT32 GdiplusVersion;             \/\/ Must be 1  (or 2 for the Ex version)\\r\\n    DebugEventProc DebugEventCallback; \/\/ Ignored on free builds\\r\\n    BOOL SuppressBackgroundThread;     \/\/ FALSE unless you're prepared to call \\r\\n                                       \/\/ the hook\/unhook functions properly\\r\\n    BOOL SuppressExternalCodecs;       \/\/ FALSE unless you want GDI+ only to use\\r\\n                                       \/\/ its internal image codecs.\\r\\n    \\r\\n    GdiplusStartupInput(\\r\\n        DebugEventProc debugEventCallback = NULL,\\r\\n        BOOL suppressBackgroundThread = FALSE,\\r\\n        BOOL suppressExternalCodecs = FALSE)\\r\\n    {\\r\\n        GdiplusVersion = 1;\\r\\n        DebugEventCallback = debugEventCallback;\\r\\n        SuppressBackgroundThread = suppressBackgroundThread;\\r\\n        SuppressExternalCodecs = suppressExternalCodecs;\\r\\n    }\\r\\n};"},"GdiplusStartupOutput":{"comment":"","exp":"","file":"gdiplusinit.h","line":99,"type":"Struct","value":"struct GdiplusStartupOutput\\r\\n{\\r\\n    \/\/ The following 2 fields are NULL if SuppressBackgroundThread is FALSE.\\r\\n    \/\/ Otherwise, they are functions which must be called appropriately to\\r\\n    \/\/ replace the background thread.\\r\\n    \/\/\\r\\n    \/\/ These should be called on the application's main message loop - i.e.\\r\\n    \/\/ a message loop which is active for the lifetime of GDI+.\\r\\n    \/\/ \"NotificationHook\" should be called before starting the loop,\\r\\n    \/\/ and \"NotificationUnhook\" should be called after the loop ends.\\r\\n    \\r\\n    NotificationHookProc NotificationHook;\\r\\n    NotificationUnhookProc NotificationUnhook;\\r\\n};"},"GdiplusStartupParams":{"comment":"","exp":"","file":"gdiplusinit.h","line":86,"type":"Enum","value":"enum GdiplusStartupParams\\r\\n{\\r\\n    GdiplusStartupDefault = 0,\\r\\n    GdiplusStartupNoSetRound = 1,\\r\\n    GdiplusStartupSetPSValue = 2,\\r\\n    GdiplusStartupTransparencyMask = 0xFF000000\\r\\n};"},"GenericFontFamily":{"comment":"","exp":"","file":"gdiplusenums.h","line":414,"type":"Enum","value":"enum GenericFontFamily\\r\\n{\\r\\n    GenericFontFamilySerif,\\r\\n    GenericFontFamilySansSerif,\\r\\n    GenericFontFamilyMonospace\\r\\n};"},"GpTestControlEnum":{"comment":"","exp":"","file":"gdiplusenums.h","line":1111,"type":"Enum","value":"enum GpTestControlEnum\\r\\n{\\r\\n    TestControlForceBilinear = 0,\\r\\n    TestControlNoICM = 1,\\r\\n    TestControlGetBuildNumber = 2\\r\\n};"},"HatchStyle":{"comment":"","exp":"","file":"gdiplusenums.h","line":145,"type":"Enum","value":"enum HatchStyle\\r\\n{\\r\\n    HatchStyleHorizontal,                   \/\/ 0\\r\\n    HatchStyleVertical,                     \/\/ 1\\r\\n    HatchStyleForwardDiagonal,              \/\/ 2\\r\\n    HatchStyleBackwardDiagonal,             \/\/ 3\\r\\n    HatchStyleCross,                        \/\/ 4\\r\\n    HatchStyleDiagonalCross,                \/\/ 5\\r\\n    HatchStyle05Percent,                    \/\/ 6\\r\\n    HatchStyle10Percent,                    \/\/ 7\\r\\n    HatchStyle20Percent,                    \/\/ 8\\r\\n    HatchStyle25Percent,                    \/\/ 9\\r\\n    HatchStyle30Percent,                    \/\/ 10\\r\\n    HatchStyle40Percent,                    \/\/ 11\\r\\n    HatchStyle50Percent,                    \/\/ 12\\r\\n    HatchStyle60Percent,                    \/\/ 13\\r\\n    HatchStyle70Percent,                    \/\/ 14\\r\\n    HatchStyle75Percent,                    \/\/ 15\\r\\n    HatchStyle80Percent,                    \/\/ 16\\r\\n    HatchStyle90Percent,                    \/\/ 17\\r\\n    HatchStyleLightDownwardDiagonal,        \/\/ 18\\r\\n    HatchStyleLightUpwardDiagonal,          \/\/ 19\\r\\n    HatchStyleDarkDownwardDiagonal,         \/\/ 20\\r\\n    HatchStyleDarkUpwardDiagonal,           \/\/ 21\\r\\n    HatchStyleWideDownwardDiagonal,         \/\/ 22\\r\\n    HatchStyleWideUpwardDiagonal,           \/\/ 23\\r\\n    HatchStyleLightVertical,                \/\/ 24\\r\\n    HatchStyleLightHorizontal,              \/\/ 25\\r\\n    HatchStyleNarrowVertical,               \/\/ 26\\r\\n    HatchStyleNarrowHorizontal,             \/\/ 27\\r\\n    HatchStyleDarkVertical,                 \/\/ 28\\r\\n    HatchStyleDarkHorizontal,               \/\/ 29\\r\\n    HatchStyleDashedDownwardDiagonal,       \/\/ 30\\r\\n    HatchStyleDashedUpwardDiagonal,         \/\/ 31\\r\\n    HatchStyleDashedHorizontal,             \/\/ 32\\r\\n    HatchStyleDashedVertical,               \/\/ 33\\r\\n    HatchStyleSmallConfetti,                \/\/ 34\\r\\n    HatchStyleLargeConfetti,                \/\/ 35\\r\\n    HatchStyleZigZag,                       \/\/ 36\\r\\n    HatchStyleWave,                         \/\/ 37\\r\\n    HatchStyleDiagonalBrick,                \/\/ 38\\r\\n    HatchStyleHorizontalBrick,              \/\/ 39\\r\\n    HatchStyleWeave,                        \/\/ 40\\r\\n    HatchStylePlaid,                        \/\/ 41\\r\\n    HatchStyleDivot,                        \/\/ 42\\r\\n    HatchStyleDottedGrid,                   \/\/ 43\\r\\n    HatchStyleDottedDiamond,                \/\/ 44\\r\\n    HatchStyleShingle,                      \/\/ 45\\r\\n    HatchStyleTrellis,                      \/\/ 46\\r\\n    HatchStyleSphere,                       \/\/ 47\\r\\n    HatchStyleSmallGrid,                    \/\/ 48\\r\\n    HatchStyleSmallCheckerBoard,            \/\/ 49\\r\\n    HatchStyleLargeCheckerBoard,            \/\/ 50\\r\\n    HatchStyleOutlinedDiamond,              \/\/ 51\\r\\n    HatchStyleSolidDiamond,                 \/\/ 52\\r\\n    HatchStyleTotal,   \\r\\n    HatchStyleLargeGrid = HatchStyleCross,  \/\/ 4\\r\\n    HatchStyleMin       = HatchStyleHorizontal,\\r\\n    HatchStyleMax       = HatchStyleTotal - 1,\\r\\n};"},"HistogramFormat":{"comment":"","exp":"","file":"gdipluscolormatrix.h","line":34,"type":"Enum","value":"enum HistogramFormat\\r\\n{\\r\\n    HistogramFormatARGB,\\r\\n    HistogramFormatPARGB,\\r\\n    HistogramFormatRGB,\\r\\n    HistogramFormatGray,\\r\\n    HistogramFormatB,\\r\\n    HistogramFormatG,\\r\\n    HistogramFormatR,\\r\\n    HistogramFormatA    \\r\\n};"},"HotkeyPrefix":{"comment":"","exp":"","file":"gdiplusenums.h","line":970,"type":"Enum","value":"enum HotkeyPrefix\\r\\n{\\r\\n    HotkeyPrefixNone        = 0,\\r\\n    HotkeyPrefixShow        = 1,\\r\\n    HotkeyPrefixHide        = 2\\r\\n};"},"HueSaturationLightnessParams":{"comment":"","exp":"","file":"gdipluseffects.h","line":101,"type":"Struct","value":"struct HueSaturationLightnessParams\\r\\n{\\r\\n    INT hueLevel;\\r\\n    INT saturationLevel;\\r\\n    INT lightnessLevel;\\r\\n};"},"ImageCodecFlags":{"comment":"","exp":"","file":"gdiplusimaging.h","line":139,"type":"Enum","value":"enum ImageCodecFlags\\r\\n{\\r\\n    ImageCodecFlagsEncoder            = 0x00000001,\\r\\n    ImageCodecFlagsDecoder            = 0x00000002,\\r\\n    ImageCodecFlagsSupportBitmap      = 0x00000004,\\r\\n    ImageCodecFlagsSupportVector      = 0x00000008,\\r\\n    ImageCodecFlagsSeekableEncode     = 0x00000010,\\r\\n    ImageCodecFlagsBlockingDecode     = 0x00000020,\\r\\n    ImageCodecFlagsBuiltin            = 0x00010000,\\r\\n    ImageCodecFlagsSystem             = 0x00020000,\\r\\n    ImageCodecFlagsUser               = 0x00040000\\r\\n};"},"ImageFlags":{"comment":"","exp":"","file":"gdiplusimaging.h","line":183,"type":"Enum","value":"enum ImageFlags\\r\\n{\\r\\n    ImageFlagsNone                = 0,\\r\\n    \/\/ Low-word: shared with SINKFLAG_x\\r\\n    ImageFlagsScalable            = 0x0001,\\r\\n    ImageFlagsHasAlpha            = 0x0002,\\r\\n    ImageFlagsHasTranslucent      = 0x0004,\\r\\n    ImageFlagsPartiallyScalable   = 0x0008,\\r\\n    \/\/ Low-word: color space definition\\r\\n    ImageFlagsColorSpaceRGB       = 0x0010,\\r\\n    ImageFlagsColorSpaceCMYK      = 0x0020,\\r\\n    ImageFlagsColorSpaceGRAY      = 0x0040,\\r\\n    ImageFlagsColorSpaceYCBCR     = 0x0080,\\r\\n    ImageFlagsColorSpaceYCCK      = 0x0100,\\r\\n \\r\\n    \/\/ Low-word: image size info\\r\\n    ImageFlagsHasRealDPI          = 0x1000,\\r\\n    ImageFlagsHasRealPixelSize    = 0x2000,\\r\\n    \/\/ High-word\\r\\n    ImageFlagsReadOnly            = 0x00010000,\\r\\n    ImageFlagsCaching             = 0x00020000\\r\\n};"},"ImageLockMode":{"comment":"","exp":"","file":"gdiplusimaging.h","line":157,"type":"Enum","value":"enum ImageLockMode\\r\\n{\\r\\n    ImageLockModeRead        = 0x0001,\\r\\n    ImageLockModeWrite       = 0x0002,\\r\\n    ImageLockModeUserInputBuf= 0x0004\\r\\n};"},"ImageType":{"comment":"","exp":"","file":"gdiplusenums.h","line":339,"type":"Enum","value":"enum ImageType\\r\\n{\\r\\n    ImageTypeUnknown,   \/\/ 0\\r\\n    ImageTypeBitmap,    \/\/ 1\\r\\n    ImageTypeMetafile   \/\/ 2\\r\\n};"},"InterpolationMode":{"comment":"","exp":"","file":"gdiplusenums.h","line":350,"type":"Enum","value":"enum InterpolationMode\\r\\n{\\r\\n    InterpolationModeInvalid          = QualityModeInvalid,\\r\\n    InterpolationModeDefault          = QualityModeDefault,\\r\\n    InterpolationModeLowQuality       = QualityModeLow,\\r\\n    InterpolationModeHighQuality      = QualityModeHigh,\\r\\n    InterpolationModeBilinear,\\r\\n    InterpolationModeBicubic,\\r\\n    InterpolationModeNearestNeighbor,\\r\\n    InterpolationModeHighQualityBilinear,\\r\\n    InterpolationModeHighQualityBicubic\\r\\n};"},"ItemDataPosition":{"comment":"","exp":"","file":"gdiplusimaging.h","line":259,"type":"Enum","value":"enum ItemDataPosition\\r\\n{\\r\\n    ItemDataPositionAfterHeader    = 0x0,\\r\\n    ItemDataPositionAfterPalette   = 0x1,\\r\\n    ItemDataPositionAfterBits      = 0x2,\\r\\n};"},"LevelsParams":{"comment":"","exp":"","file":"gdipluseffects.h","line":114,"type":"Struct","value":"struct LevelsParams\\r\\n{\\r\\n    INT highlight;\\r\\n    INT midtone;\\r\\n    INT shadow;\\r\\n};"},"LineCap":{"comment":"","exp":"","file":"gdiplusenums.h","line":237,"type":"Enum","value":"enum LineCap\\r\\n{\\r\\n    LineCapFlat             = 0,\\r\\n    LineCapSquare           = 1,\\r\\n    LineCapRound            = 2,\\r\\n    LineCapTriangle         = 3,\\r\\n    LineCapNoAnchor         = 0x10, \/\/ corresponds to flat cap\\r\\n    LineCapSquareAnchor     = 0x11, \/\/ corresponds to square cap\\r\\n    LineCapRoundAnchor      = 0x12, \/\/ corresponds to round cap\\r\\n    LineCapDiamondAnchor    = 0x13, \/\/ corresponds to triangle cap\\r\\n    LineCapArrowAnchor      = 0x14, \/\/ no correspondence\\r\\n    LineCapCustom           = 0xff, \/\/ custom cap\\r\\n    LineCapAnchorMask       = 0xf0  \/\/ mask to check for anchor or not.\\r\\n};"},"LineJoin":{"comment":"","exp":"","file":"gdiplusenums.h","line":269,"type":"Enum","value":"enum LineJoin\\r\\n{\\r\\n    LineJoinMiter        = 0,\\r\\n    LineJoinBevel        = 1,\\r\\n    LineJoinRound        = 2,\\r\\n    LineJoinMiterClipped = 3\\r\\n};"},"LinearGradientMode":{"comment":"","exp":"","file":"gdiplusenums.h","line":313,"type":"Enum","value":"enum LinearGradientMode\\r\\n{\\r\\n    LinearGradientModeHorizontal,         \/\/ 0\\r\\n    LinearGradientModeVertical,           \/\/ 1\\r\\n    LinearGradientModeForwardDiagonal,    \/\/ 2\\r\\n    LinearGradientModeBackwardDiagonal    \/\/ 3\\r\\n};"},"MatrixOrder":{"comment":"","exp":"","file":"gdiplusenums.h","line":404,"type":"Enum","value":"enum MatrixOrder\\r\\n{\\r\\n    MatrixOrderPrepend    = 0,\\r\\n    MatrixOrderAppend     = 1\\r\\n};"},"MetafileFrameUnit":{"comment":"","exp":"","file":"gdiplusenums.h","line":107,"type":"Enum","value":"enum MetafileFrameUnit\\r\\n{\\r\\n    MetafileFrameUnitPixel      = UnitPixel,\\r\\n    MetafileFrameUnitPoint      = UnitPoint,\\r\\n    MetafileFrameUnitInch       = UnitInch,\\r\\n    MetafileFrameUnitDocument   = UnitDocument,\\r\\n    MetafileFrameUnitMillimeter = UnitMillimeter,\\r\\n    MetafileFrameUnitGdi                        \/\/ GDI compatible .01 MM units\\r\\n};"},"MetafileType":{"comment":"","exp":"","file":"gdiplusenums.h","line":486,"type":"Enum","value":"enum MetafileType\\r\\n{\\r\\n    MetafileTypeInvalid,            \/\/ Invalid metafile\\r\\n    MetafileTypeWmf,                \/\/ Standard WMF\\r\\n    MetafileTypeWmfPlaceable,       \/\/ Placeable WMF\\r\\n    MetafileTypeEmf,                \/\/ EMF (not EMF+)\\r\\n    MetafileTypeEmfPlusOnly,        \/\/ EMF+ without dual, down-level records\\r\\n    MetafileTypeEmfPlusDual         \/\/ EMF+ with dual, down-level records\\r\\n};"},"ObjectType":{"comment":"","exp":"","file":"gdiplusenums.h","line":511,"type":"Enum","value":"enum ObjectType\\r\\n{\\r\\n    ObjectTypeInvalid,\\r\\n    ObjectTypeBrush,\\r\\n    ObjectTypePen,\\r\\n    ObjectTypePath,\\r\\n    ObjectTypeRegion,\\r\\n    ObjectTypeImage,\\r\\n    ObjectTypeFont,\\r\\n    ObjectTypeStringFormat,\\r\\n    ObjectTypeImageAttributes,\\r\\n    ObjectTypeCustomLineCap,\\r\\n#if (GDIPVER >= 0x0110)\\r\\n    ObjectTypeGraphics,\\r\\n    ObjectTypeMax = ObjectTypeGraphics,\\r\\n#else\\r\\n    ObjectTypeMax = ObjectTypeCustomLineCap,\\r\\n#endif \/\/(GDIPVER >= 0x0110)\\r\\n    ObjectTypeMin = ObjectTypeBrush\\r\\n};"},"PaletteFlags":{"comment":"","exp":"","file":"gdipluspixelformats.h","line":184,"type":"Enum","value":"enum PaletteFlags\\r\\n{\\r\\n    PaletteFlagsHasAlpha    = 0x0001,\\r\\n    PaletteFlagsGrayScale   = 0x0002,\\r\\n    PaletteFlagsHalftone    = 0x0004\\r\\n};"},"PaletteType":{"comment":"","exp":"","file":"gdipluspixelformats.h","line":119,"type":"Enum","value":"enum PaletteType\\r\\n{\\r\\n    \/\/ Arbitrary custom palette provided by caller.\\r\\n    \\r\\n    PaletteTypeCustom           = 0,\\r\\n    \\r\\n    \/\/ Optimal palette generated using a median-cut algorithm.\\r\\n    \\r\\n    PaletteTypeOptimal        = 1,\\r\\n    \\r\\n    \/\/ Black and white palette.\\r\\n    \\r\\n    PaletteTypeFixedBW          = 2,\\r\\n    \\r\\n    \/\/ Symmetric halftone palettes.\\r\\n    \/\/ Each of these halftone palettes will be a superset of the system palette.\\r\\n    \/\/ E.g. Halftone8 will have it's 8-color on-off primaries and the 16 system\\r\\n    \/\/ colors added. With duplicates removed, that leaves 16 colors.\\r\\n    \\r\\n    PaletteTypeFixedHalftone8   = 3, \/\/ 8-color, on-off primaries\\r\\n    PaletteTypeFixedHalftone27  = 4, \/\/ 3 intensity levels of each color\\r\\n    PaletteTypeFixedHalftone64  = 5, \/\/ 4 intensity levels of each color\\r\\n    PaletteTypeFixedHalftone125 = 6, \/\/ 5 intensity levels of each color\\r\\n    PaletteTypeFixedHalftone216 = 7, \/\/ 6 intensity levels of each color\\r\\n    \/\/ Assymetric halftone palettes.\\r\\n    \/\/ These are somewhat less useful than the symmetric ones, but are \\r\\n    \/\/ included for completeness. These do not include all of the system\\r\\n    \/\/ colors.\\r\\n    \\r\\n    PaletteTypeFixedHalftone252 = 8, \/\/ 6-red, 7-green, 6-blue intensities\\r\\n    PaletteTypeFixedHalftone256 = 9, \/\/ 8-red, 8-green, 4-blue intensities\\r\\n};"},"PathPointType":{"comment":"","exp":"","file":"gdiplusenums.h","line":283,"type":"Enum","value":"enum PathPointType\\r\\n{\\r\\n    PathPointTypeStart           = 0,    \/\/ move\\r\\n    PathPointTypeLine            = 1,    \/\/ line\\r\\n    PathPointTypeBezier          = 3,    \/\/ default Bezier (= cubic Bezier)\\r\\n    PathPointTypePathTypeMask    = 0x07, \/\/ type mask (lowest 3 bits).\\r\\n    PathPointTypeDashMode        = 0x10, \/\/ currently in dash mode.\\r\\n    PathPointTypePathMarker      = 0x20, \/\/ a marker for the path.\\r\\n    PathPointTypeCloseSubpath    = 0x80, \/\/ closed flag\\r\\n    \/\/ Path types used for advanced path.\\r\\n    PathPointTypeBezier3    = 3,         \/\/ cubic Bezier\\r\\n};"},"PenAlignment":{"comment":"","exp":"","file":"gdiplusenums.h","line":367,"type":"Enum","value":"enum PenAlignment\\r\\n{\\r\\n    PenAlignmentCenter       = 0,\\r\\n    PenAlignmentInset        = 1\\r\\n};"},"PenType":{"comment":"","exp":"","file":"gdiplusenums.h","line":390,"type":"Enum","value":"enum PenType\\r\\n{\\r\\n   PenTypeSolidColor       = BrushTypeSolidColor,\\r\\n   PenTypeHatchFill        = BrushTypeHatchFill,\\r\\n   PenTypeTextureFill      = BrushTypeTextureFill,\\r\\n   PenTypePathGradient     = BrushTypePathGradient,\\r\\n   PenTypeLinearGradient   = BrushTypeLinearGradient,\\r\\n   PenTypeUnknown          = -1\\r\\n};"},"PixelFormat16bppARGB1555":{"comment":"","exp":"(7 | (16 << 8) | PixelFormatAlpha | PixelFormatGDI)","file":"gdipluspixelformats.h","line":65,"type":"Integer","value":397319},"PixelFormat16bppGrayScale":{"comment":"","exp":"(4 | (16 << 8) | PixelFormatExtended)","file":"gdipluspixelformats.h","line":62,"type":"Integer","value":1052676},"PixelFormat16bppRGB555":{"comment":"","exp":"(5 | (16 << 8) | PixelFormatGDI)","file":"gdipluspixelformats.h","line":63,"type":"Integer","value":135173},"PixelFormat16bppRGB565":{"comment":"","exp":"(6 | (16 << 8) | PixelFormatGDI)","file":"gdipluspixelformats.h","line":64,"type":"Integer","value":135174},"PixelFormat1bppIndexed":{"comment":"","exp":"(1 | ( 1 << 8) | PixelFormatIndexed | PixelFormatGDI)","file":"gdipluspixelformats.h","line":59,"type":"Integer","value":196865},"PixelFormat24bppRGB":{"comment":"","exp":"(8 | (24 << 8) | PixelFormatGDI)","file":"gdipluspixelformats.h","line":66,"type":"Integer","value":137224},"PixelFormat32bppARGB":{"comment":"","exp":"(10 | (32 << 8) | PixelFormatAlpha | PixelFormatGDI | PixelFormatCanonical)","file":"gdipluspixelformats.h","line":68,"type":"Integer","value":2498570},"PixelFormat32bppCMYK":{"comment":"","exp":"(15 | (32 << 8))","file":"gdipluspixelformats.h","line":73,"type":"Integer","value":8207},"PixelFormat32bppPARGB":{"comment":"","exp":"(11 | (32 << 8) | PixelFormatAlpha | PixelFormatPAlpha | PixelFormatGDI)","file":"gdipluspixelformats.h","line":69,"type":"Integer","value":925707},"PixelFormat32bppRGB":{"comment":"","exp":"(9 | (32 << 8) | PixelFormatGDI)","file":"gdipluspixelformats.h","line":67,"type":"Integer","value":139273},"PixelFormat48bppRGB":{"comment":"","exp":"(12 | (48 << 8) | PixelFormatExtended)","file":"gdipluspixelformats.h","line":70,"type":"Integer","value":1060876},"PixelFormat4bppIndexed":{"comment":"","exp":"(2 | ( 4 << 8) | PixelFormatIndexed | PixelFormatGDI)","file":"gdipluspixelformats.h","line":60,"type":"Integer","value":197634},"PixelFormat64bppARGB":{"comment":"","exp":"(13 | (64 << 8) | PixelFormatAlpha | PixelFormatCanonical | PixelFormatExtended)","file":"gdipluspixelformats.h","line":71,"type":"Integer","value":3424269},"PixelFormat64bppPARGB":{"comment":"","exp":"(14 | (64 << 8) | PixelFormatAlpha | PixelFormatPAlpha | PixelFormatExtended)","file":"gdipluspixelformats.h","line":72,"type":"Integer","value":1851406},"PixelFormat8bppIndexed":{"comment":"","exp":"(3 | ( 8 << 8) | PixelFormatIndexed | PixelFormatGDI)","file":"gdipluspixelformats.h","line":61,"type":"Integer","value":198659},"PixelFormatAlpha":{"comment":"\/\/ Has an alpha component","exp":"0x00040000","file":"gdipluspixelformats.h","line":51,"type":"Integer","value":262144},"PixelFormatCanonical":{"comment":"","exp":"0x00200000","file":"gdipluspixelformats.h","line":54,"type":"Integer","value":2097152},"PixelFormatDontCare":{"comment":"","exp":"0","file":"gdipluspixelformats.h","line":57,"type":"Integer","value":0},"PixelFormatExtended":{"comment":"\/\/ Extended color 16 bits\/channel","exp":"0x00100000","file":"gdipluspixelformats.h","line":53,"type":"Integer","value":1048576},"PixelFormatGDI":{"comment":"\/\/ Is a GDI-supported format","exp":"0x00020000","file":"gdipluspixelformats.h","line":50,"type":"Integer","value":131072},"PixelFormatIndexed":{"comment":"\/\/ Indexes into a palette","exp":"0x00010000","file":"gdipluspixelformats.h","line":49,"type":"Integer","value":65536},"PixelFormatMax":{"comment":"","exp":"16","file":"gdipluspixelformats.h","line":74,"type":"Integer","value":16},"PixelFormatPAlpha":{"comment":"\/\/ Pre-multiplied alpha","exp":"0x00080000","file":"gdipluspixelformats.h","line":52,"type":"Integer","value":524288},"PixelFormatUndefined":{"comment":"","exp":"0","file":"gdipluspixelformats.h","line":56,"type":"Integer","value":0},"PixelOffsetMode":{"comment":"","exp":"","file":"gdiplusenums.h","line":458,"type":"Enum","value":"enum PixelOffsetMode\\r\\n{\\r\\n    PixelOffsetModeInvalid     = QualityModeInvalid,\\r\\n    PixelOffsetModeDefault     = QualityModeDefault,\\r\\n    PixelOffsetModeHighSpeed   = QualityModeLow,\\r\\n    PixelOffsetModeHighQuality = QualityModeHigh,\\r\\n    PixelOffsetModeNone,    \/\/ No pixel offset\\r\\n    PixelOffsetModeHalf     \/\/ Offset by -0.5, -0.5 for fast anti-alias perf\\r\\n};"},"PropertyTagArtist":{"comment":"","exp":"0x013B","file":"gdiplusimaging.h","line":356,"type":"Integer","value":315},"PropertyTagBitsPerSample":{"comment":"","exp":"0x0102","file":"gdiplusimaging.h","line":321,"type":"Integer","value":258},"PropertyTagCellHeight":{"comment":"","exp":"0x0109","file":"gdiplusimaging.h","line":326,"type":"Integer","value":265},"PropertyTagCellWidth":{"comment":"","exp":"0x0108","file":"gdiplusimaging.h","line":325,"type":"Integer","value":264},"PropertyTagChrominanceTable":{"comment":"","exp":"0x5091","file":"gdiplusimaging.h","line":481,"type":"Integer","value":20625},"PropertyTagColorMap":{"comment":"","exp":"0x0140","file":"gdiplusimaging.h","line":361,"type":"Integer","value":320},"PropertyTagColorTransferFunction":{"comment":"","exp":"0x501A","file":"gdiplusimaging.h","line":429,"type":"Integer","value":20506},"PropertyTagCompression":{"comment":"","exp":"0x0103","file":"gdiplusimaging.h","line":322,"type":"Integer","value":259},"PropertyTagCopyright":{"comment":"","exp":"0x8298","file":"gdiplusimaging.h","line":400,"type":"Integer","value":33432},"PropertyTagDateTime":{"comment":"","exp":"0x0132","file":"gdiplusimaging.h","line":355,"type":"Integer","value":306},"PropertyTagDocumentName":{"comment":"","exp":"0x010D","file":"gdiplusimaging.h","line":328,"type":"Integer","value":269},"PropertyTagDotRange":{"comment":"","exp":"0x0150","file":"gdiplusimaging.h","line":370,"type":"Integer","value":336},"PropertyTagEquipMake":{"comment":"","exp":"0x010F","file":"gdiplusimaging.h","line":330,"type":"Integer","value":271},"PropertyTagEquipModel":{"comment":"","exp":"0x0110","file":"gdiplusimaging.h","line":331,"type":"Integer","value":272},"PropertyTagExifAperture":{"comment":"","exp":"0x9202","file":"gdiplusimaging.h","line":515,"type":"Integer","value":37378},"PropertyTagExifBrightness":{"comment":"","exp":"0x9203","file":"gdiplusimaging.h","line":516,"type":"Integer","value":37379},"PropertyTagExifCfaPattern":{"comment":"","exp":"0xA302","file":"gdiplusimaging.h","line":547,"type":"Integer","value":41730},"PropertyTagExifColorSpace":{"comment":"","exp":"0xA001","file":"gdiplusimaging.h","line":532,"type":"Integer","value":40961},"PropertyTagExifCompBPP":{"comment":"","exp":"0x9102","file":"gdiplusimaging.h","line":512,"type":"Integer","value":37122},"PropertyTagExifCompConfig":{"comment":"","exp":"0x9101","file":"gdiplusimaging.h","line":511,"type":"Integer","value":37121},"PropertyTagExifContrast":{"comment":"","exp":"0xA408","file":"gdiplusimaging.h","line":558,"type":"Integer","value":41992},"PropertyTagExifCustomRendered":{"comment":"","exp":"0xA401","file":"gdiplusimaging.h","line":551,"type":"Integer","value":41985},"PropertyTagExifDTDigSS":{"comment":"\/\/ Date & TIme digitized subseconds","exp":"0x9292","file":"gdiplusimaging.h","line":529,"type":"Integer","value":37522},"PropertyTagExifDTDigitized":{"comment":"\/\/ Date & time of digital data generation","exp":"0x9004","file":"gdiplusimaging.h","line":509,"type":"Integer","value":36868},"PropertyTagExifDTOrig":{"comment":"\/\/ Date & time of original","exp":"0x9003","file":"gdiplusimaging.h","line":508,"type":"Integer","value":36867},"PropertyTagExifDTOrigSS":{"comment":"\/\/ Date & Time original subseconds","exp":"0x9291","file":"gdiplusimaging.h","line":528,"type":"Integer","value":37521},"PropertyTagExifDTSubsec":{"comment":"\/\/ Date & Time subseconds","exp":"0x9290","file":"gdiplusimaging.h","line":527,"type":"Integer","value":37520},"PropertyTagExifDeviceSettingDesc":{"comment":"","exp":"0xA40B","file":"gdiplusimaging.h","line":561,"type":"Integer","value":41995},"PropertyTagExifDigitalZoomRatio":{"comment":"","exp":"0xA404","file":"gdiplusimaging.h","line":554,"type":"Integer","value":41988},"PropertyTagExifExposureBias":{"comment":"","exp":"0x9204","file":"gdiplusimaging.h","line":517,"type":"Integer","value":37380},"PropertyTagExifExposureIndex":{"comment":"","exp":"0xA215","file":"gdiplusimaging.h","line":543,"type":"Integer","value":41493},"PropertyTagExifExposureMode":{"comment":"","exp":"0xA402","file":"gdiplusimaging.h","line":552,"type":"Integer","value":41986},"PropertyTagExifExposureProg":{"comment":"","exp":"0x8822","file":"gdiplusimaging.h","line":502,"type":"Integer","value":34850},"PropertyTagExifExposureTime":{"comment":"","exp":"0x829A","file":"gdiplusimaging.h","line":499,"type":"Integer","value":33434},"PropertyTagExifFNumber":{"comment":"","exp":"0x829D","file":"gdiplusimaging.h","line":500,"type":"Integer","value":33437},"PropertyTagExifFPXVer":{"comment":"","exp":"0xA000","file":"gdiplusimaging.h","line":531,"type":"Integer","value":40960},"PropertyTagExifFileSource":{"comment":"","exp":"0xA300","file":"gdiplusimaging.h","line":545,"type":"Integer","value":41728},"PropertyTagExifFlash":{"comment":"","exp":"0x9209","file":"gdiplusimaging.h","line":522,"type":"Integer","value":37385},"PropertyTagExifFlashEnergy":{"comment":"","exp":"0xA20B","file":"gdiplusimaging.h","line":537,"type":"Integer","value":41483},"PropertyTagExifFocalLength":{"comment":"","exp":"0x920A","file":"gdiplusimaging.h","line":523,"type":"Integer","value":37386},"PropertyTagExifFocalLengthIn35mmFilm":{"comment":"","exp":"0xA405","file":"gdiplusimaging.h","line":555,"type":"Integer","value":41989},"PropertyTagExifFocalResUnit":{"comment":"\/\/ Focal Plane Resolution Unit","exp":"0xA210","file":"gdiplusimaging.h","line":541,"type":"Integer","value":41488},"PropertyTagExifFocalXRes":{"comment":"\/\/ Focal Plane X Resolution","exp":"0xA20E","file":"gdiplusimaging.h","line":539,"type":"Integer","value":41486},"PropertyTagExifFocalYRes":{"comment":"\/\/ Focal Plane Y Resolution","exp":"0xA20F","file":"gdiplusimaging.h","line":540,"type":"Integer","value":41487},"PropertyTagExifGainControl":{"comment":"","exp":"0xA407","file":"gdiplusimaging.h","line":557,"type":"Integer","value":41991},"PropertyTagExifIFD":{"comment":"","exp":"0x8769","file":"gdiplusimaging.h","line":314,"type":"Integer","value":34665},"PropertyTagExifISOSpeed":{"comment":"","exp":"0x8827","file":"gdiplusimaging.h","line":504,"type":"Integer","value":34855},"PropertyTagExifInterop":{"comment":"","exp":"0xA005","file":"gdiplusimaging.h","line":536,"type":"Integer","value":40965},"PropertyTagExifLightSource":{"comment":"","exp":"0x9208","file":"gdiplusimaging.h","line":521,"type":"Integer","value":37384},"PropertyTagExifMakerNote":{"comment":"","exp":"0x927C","file":"gdiplusimaging.h","line":525,"type":"Integer","value":37500},"PropertyTagExifMaxAperture":{"comment":"","exp":"0x9205","file":"gdiplusimaging.h","line":518,"type":"Integer","value":37381},"PropertyTagExifMeteringMode":{"comment":"","exp":"0x9207","file":"gdiplusimaging.h","line":520,"type":"Integer","value":37383},"PropertyTagExifOECF":{"comment":"","exp":"0x8828","file":"gdiplusimaging.h","line":505,"type":"Integer","value":34856},"PropertyTagExifPixXDim":{"comment":"","exp":"0xA002","file":"gdiplusimaging.h","line":533,"type":"Integer","value":40962},"PropertyTagExifPixYDim":{"comment":"","exp":"0xA003","file":"gdiplusimaging.h","line":534,"type":"Integer","value":40963},"PropertyTagExifRelatedWav":{"comment":"\/\/ related sound file","exp":"0xA004","file":"gdiplusimaging.h","line":535,"type":"Integer","value":40964},"PropertyTagExifSaturation":{"comment":"","exp":"0xA409","file":"gdiplusimaging.h","line":559,"type":"Integer","value":41993},"PropertyTagExifSceneCaptureType":{"comment":"","exp":"0xA406","file":"gdiplusimaging.h","line":556,"type":"Integer","value":41990},"PropertyTagExifSceneType":{"comment":"","exp":"0xA301","file":"gdiplusimaging.h","line":546,"type":"Integer","value":41729},"PropertyTagExifSensingMethod":{"comment":"","exp":"0xA217","file":"gdiplusimaging.h","line":544,"type":"Integer","value":41495},"PropertyTagExifSharpness":{"comment":"","exp":"0xA40A","file":"gdiplusimaging.h","line":560,"type":"Integer","value":41994},"PropertyTagExifShutterSpeed":{"comment":"","exp":"0x9201","file":"gdiplusimaging.h","line":514,"type":"Integer","value":37377},"PropertyTagExifSpatialFR":{"comment":"\/\/ Spatial Frequency Response","exp":"0xA20C","file":"gdiplusimaging.h","line":538,"type":"Integer","value":41484},"PropertyTagExifSpectralSense":{"comment":"","exp":"0x8824","file":"gdiplusimaging.h","line":503,"type":"Integer","value":34852},"PropertyTagExifSubjectArea":{"comment":"\/\/ exif 2.2 Subject Area","exp":"0x9214","file":"gdiplusimaging.h","line":524,"type":"Integer","value":37396},"PropertyTagExifSubjectDist":{"comment":"","exp":"0x9206","file":"gdiplusimaging.h","line":519,"type":"Integer","value":37382},"PropertyTagExifSubjectDistanceRange":{"comment":"","exp":"0xA40C","file":"gdiplusimaging.h","line":562,"type":"Integer","value":41996},"PropertyTagExifSubjectLoc":{"comment":"","exp":"0xA214","file":"gdiplusimaging.h","line":542,"type":"Integer","value":41492},"PropertyTagExifUniqueImageID":{"comment":"","exp":"0xA420","file":"gdiplusimaging.h","line":563,"type":"Integer","value":42016},"PropertyTagExifUserComment":{"comment":"","exp":"0x9286","file":"gdiplusimaging.h","line":526,"type":"Integer","value":37510},"PropertyTagExifVer":{"comment":"","exp":"0x9000","file":"gdiplusimaging.h","line":507,"type":"Integer","value":36864},"PropertyTagExifWhiteBalance":{"comment":"","exp":"0xA403","file":"gdiplusimaging.h","line":553,"type":"Integer","value":41987},"PropertyTagExtraSamples":{"comment":"","exp":"0x0152","file":"gdiplusimaging.h","line":372,"type":"Integer","value":338},"PropertyTagFillOrder":{"comment":"","exp":"0x010A","file":"gdiplusimaging.h","line":327,"type":"Integer","value":266},"PropertyTagFrameDelay":{"comment":"","exp":"0x5100","file":"gdiplusimaging.h","line":483,"type":"Integer","value":20736},"PropertyTagFreeByteCounts":{"comment":"","exp":"0x0121","file":"gdiplusimaging.h","line":346,"type":"Integer","value":289},"PropertyTagFreeOffset":{"comment":"","exp":"0x0120","file":"gdiplusimaging.h","line":345,"type":"Integer","value":288},"PropertyTagGamma":{"comment":"","exp":"0x0301","file":"gdiplusimaging.h","line":395,"type":"Integer","value":769},"PropertyTagGlobalPalette":{"comment":"","exp":"0x5102","file":"gdiplusimaging.h","line":487,"type":"Integer","value":20738},"PropertyTagGpsAltitude":{"comment":"","exp":"0x0006","file":"gdiplusimaging.h","line":572,"type":"Integer","value":6},"PropertyTagGpsAltitudeRef":{"comment":"","exp":"0x0005","file":"gdiplusimaging.h","line":571,"type":"Integer","value":5},"PropertyTagGpsAreaInformation":{"comment":"","exp":"0x001C","file":"gdiplusimaging.h","line":594,"type":"Integer","value":28},"PropertyTagGpsDate":{"comment":"","exp":"0x001D","file":"gdiplusimaging.h","line":595,"type":"Integer","value":29},"PropertyTagGpsDestBear":{"comment":"","exp":"0x0018","file":"gdiplusimaging.h","line":590,"type":"Integer","value":24},"PropertyTagGpsDestBearRef":{"comment":"","exp":"0x0017","file":"gdiplusimaging.h","line":589,"type":"Integer","value":23},"PropertyTagGpsDestDist":{"comment":"","exp":"0x001A","file":"gdiplusimaging.h","line":592,"type":"Integer","value":26},"PropertyTagGpsDestDistRef":{"comment":"","exp":"0x0019","file":"gdiplusimaging.h","line":591,"type":"Integer","value":25},"PropertyTagGpsDestLat":{"comment":"","exp":"0x0014","file":"gdiplusimaging.h","line":586,"type":"Integer","value":20},"PropertyTagGpsDestLatRef":{"comment":"","exp":"0x0013","file":"gdiplusimaging.h","line":585,"type":"Integer","value":19},"PropertyTagGpsDestLong":{"comment":"","exp":"0x0016","file":"gdiplusimaging.h","line":588,"type":"Integer","value":22},"PropertyTagGpsDestLongRef":{"comment":"","exp":"0x0015","file":"gdiplusimaging.h","line":587,"type":"Integer","value":21},"PropertyTagGpsDifferential":{"comment":"","exp":"0x001E","file":"gdiplusimaging.h","line":596,"type":"Integer","value":30},"PropertyTagGpsGpsDop":{"comment":"\/\/ Measurement precision","exp":"0x000B","file":"gdiplusimaging.h","line":577,"type":"Integer","value":11},"PropertyTagGpsGpsMeasureMode":{"comment":"","exp":"0x00A","file":"gdiplusimaging.h","line":576,"type":"Integer","value":10},"PropertyTagGpsGpsSatellites":{"comment":"","exp":"0x0008","file":"gdiplusimaging.h","line":574,"type":"Integer","value":8},"PropertyTagGpsGpsStatus":{"comment":"","exp":"0x0009","file":"gdiplusimaging.h","line":575,"type":"Integer","value":9},"PropertyTagGpsGpsTime":{"comment":"","exp":"0x0007","file":"gdiplusimaging.h","line":573,"type":"Integer","value":7},"PropertyTagGpsIFD":{"comment":"","exp":"0x8825","file":"gdiplusimaging.h","line":315,"type":"Integer","value":34853},"PropertyTagGpsImgDir":{"comment":"","exp":"0x0011","file":"gdiplusimaging.h","line":583,"type":"Integer","value":17},"PropertyTagGpsImgDirRef":{"comment":"","exp":"0x0010","file":"gdiplusimaging.h","line":582,"type":"Integer","value":16},"PropertyTagGpsLatitude":{"comment":"","exp":"0x0002","file":"gdiplusimaging.h","line":568,"type":"Integer","value":2},"PropertyTagGpsLatitudeRef":{"comment":"","exp":"0x0001","file":"gdiplusimaging.h","line":567,"type":"Integer","value":1},"PropertyTagGpsLongitude":{"comment":"","exp":"0x0004","file":"gdiplusimaging.h","line":570,"type":"Integer","value":4},"PropertyTagGpsLongitudeRef":{"comment":"","exp":"0x0003","file":"gdiplusimaging.h","line":569,"type":"Integer","value":3},"PropertyTagGpsMapDatum":{"comment":"","exp":"0x0012","file":"gdiplusimaging.h","line":584,"type":"Integer","value":18},"PropertyTagGpsProcessingMethod":{"comment":"","exp":"0x001B","file":"gdiplusimaging.h","line":593,"type":"Integer","value":27},"PropertyTagGpsSpeed":{"comment":"","exp":"0x000D","file":"gdiplusimaging.h","line":579,"type":"Integer","value":13},"PropertyTagGpsSpeedRef":{"comment":"","exp":"0x000C","file":"gdiplusimaging.h","line":578,"type":"Integer","value":12},"PropertyTagGpsTrack":{"comment":"","exp":"0x000F","file":"gdiplusimaging.h","line":581,"type":"Integer","value":15},"PropertyTagGpsTrackRef":{"comment":"","exp":"0x000E","file":"gdiplusimaging.h","line":580,"type":"Integer","value":14},"PropertyTagGpsVer":{"comment":"","exp":"0x0000","file":"gdiplusimaging.h","line":566,"type":"Integer","value":0},"PropertyTagGrayResponseCurve":{"comment":"","exp":"0x0123","file":"gdiplusimaging.h","line":348,"type":"Integer","value":291},"PropertyTagGrayResponseUnit":{"comment":"","exp":"0x0122","file":"gdiplusimaging.h","line":347,"type":"Integer","value":290},"PropertyTagGridSize":{"comment":"","exp":"0x5011","file":"gdiplusimaging.h","line":420,"type":"Integer","value":20497},"PropertyTagHalftoneDegree":{"comment":"","exp":"0x500C","file":"gdiplusimaging.h","line":415,"type":"Integer","value":20492},"PropertyTagHalftoneHints":{"comment":"","exp":"0x0141","file":"gdiplusimaging.h","line":362,"type":"Integer","value":321},"PropertyTagHalftoneLPI":{"comment":"","exp":"0x500A","file":"gdiplusimaging.h","line":413,"type":"Integer","value":20490},"PropertyTagHalftoneLPIUnit":{"comment":"","exp":"0x500B","file":"gdiplusimaging.h","line":414,"type":"Integer","value":20491},"PropertyTagHalftoneMisc":{"comment":"","exp":"0x500E","file":"gdiplusimaging.h","line":417,"type":"Integer","value":20494},"PropertyTagHalftoneScreen":{"comment":"","exp":"0x500F","file":"gdiplusimaging.h","line":418,"type":"Integer","value":20495},"PropertyTagHalftoneShape":{"comment":"","exp":"0x500D","file":"gdiplusimaging.h","line":416,"type":"Integer","value":20493},"PropertyTagHostComputer":{"comment":"","exp":"0x013C","file":"gdiplusimaging.h","line":357,"type":"Integer","value":316},"PropertyTagICCProfile":{"comment":"\/\/ This TAG is defined by ICC","exp":"0x8773","file":"gdiplusimaging.h","line":393,"type":"Integer","value":34675},"PropertyTagICCProfileDescriptor":{"comment":"","exp":"0x0302","file":"gdiplusimaging.h","line":396,"type":"Integer","value":770},"PropertyTagImageDescription":{"comment":"","exp":"0x010E","file":"gdiplusimaging.h","line":329,"type":"Integer","value":270},"PropertyTagImageHeight":{"comment":"","exp":"0x0101","file":"gdiplusimaging.h","line":320,"type":"Integer","value":257},"PropertyTagImageTitle":{"comment":"","exp":"0x0320","file":"gdiplusimaging.h","line":399,"type":"Integer","value":800},"PropertyTagImageWidth":{"comment":"","exp":"0x0100","file":"gdiplusimaging.h","line":319,"type":"Integer","value":256},"PropertyTagIndexBackground":{"comment":"","exp":"0x5103","file":"gdiplusimaging.h","line":488,"type":"Integer","value":20739},"PropertyTagIndexTransparent":{"comment":"","exp":"0x5104","file":"gdiplusimaging.h","line":489,"type":"Integer","value":20740},"PropertyTagInkNames":{"comment":"","exp":"0x014D","file":"gdiplusimaging.h","line":368,"type":"Integer","value":333},"PropertyTagInkSet":{"comment":"","exp":"0x014C","file":"gdiplusimaging.h","line":367,"type":"Integer","value":332},"PropertyTagJPEGACTables":{"comment":"","exp":"0x0209","file":"gdiplusimaging.h","line":386,"type":"Integer","value":521},"PropertyTagJPEGDCTables":{"comment":"","exp":"0x0208","file":"gdiplusimaging.h","line":385,"type":"Integer","value":520},"PropertyTagJPEGInterFormat":{"comment":"","exp":"0x0201","file":"gdiplusimaging.h","line":379,"type":"Integer","value":513},"PropertyTagJPEGInterLength":{"comment":"","exp":"0x0202","file":"gdiplusimaging.h","line":380,"type":"Integer","value":514},"PropertyTagJPEGLosslessPredictors":{"comment":"","exp":"0x0205","file":"gdiplusimaging.h","line":382,"type":"Integer","value":517},"PropertyTagJPEGPointTransforms":{"comment":"","exp":"0x0206","file":"gdiplusimaging.h","line":383,"type":"Integer","value":518},"PropertyTagJPEGProc":{"comment":"","exp":"0x0200","file":"gdiplusimaging.h","line":378,"type":"Integer","value":512},"PropertyTagJPEGQTables":{"comment":"","exp":"0x0207","file":"gdiplusimaging.h","line":384,"type":"Integer","value":519},"PropertyTagJPEGQuality":{"comment":"","exp":"0x5010","file":"gdiplusimaging.h","line":419,"type":"Integer","value":20496},"PropertyTagJPEGRestartInterval":{"comment":"","exp":"0x0203","file":"gdiplusimaging.h","line":381,"type":"Integer","value":515},"PropertyTagLoopCount":{"comment":"","exp":"0x5101","file":"gdiplusimaging.h","line":484,"type":"Integer","value":20737},"PropertyTagLuminanceTable":{"comment":"","exp":"0x5090","file":"gdiplusimaging.h","line":480,"type":"Integer","value":20624},"PropertyTagMaxSampleValue":{"comment":"","exp":"0x0119","file":"gdiplusimaging.h","line":338,"type":"Integer","value":281},"PropertyTagMinSampleValue":{"comment":"","exp":"0x0118","file":"gdiplusimaging.h","line":337,"type":"Integer","value":280},"PropertyTagNewSubfileType":{"comment":"","exp":"0x00FE","file":"gdiplusimaging.h","line":317,"type":"Integer","value":254},"PropertyTagNumberOfInks":{"comment":"","exp":"0x014E","file":"gdiplusimaging.h","line":369,"type":"Integer","value":334},"PropertyTagOrientation":{"comment":"","exp":"0x0112","file":"gdiplusimaging.h","line":333,"type":"Integer","value":274},"PropertyTagPageName":{"comment":"","exp":"0x011D","file":"gdiplusimaging.h","line":342,"type":"Integer","value":285},"PropertyTagPageNumber":{"comment":"","exp":"0x0129","file":"gdiplusimaging.h","line":352,"type":"Integer","value":297},"PropertyTagPaletteHistogram":{"comment":"\/\/ Palette histogram","exp":"0x5113","file":"gdiplusimaging.h","line":495,"type":"Integer","value":20755},"PropertyTagPhotometricInterp":{"comment":"","exp":"0x0106","file":"gdiplusimaging.h","line":323,"type":"Integer","value":262},"PropertyTagPixelPerUnitX":{"comment":"\/\/ Pixels per unit in X","exp":"0x5111","file":"gdiplusimaging.h","line":493,"type":"Integer","value":20753},"PropertyTagPixelPerUnitY":{"comment":"\/\/ Pixels per unit in Y","exp":"0x5112","file":"gdiplusimaging.h","line":494,"type":"Integer","value":20754},"PropertyTagPixelUnit":{"comment":"\/\/ Unit specifier for pixel\/unit","exp":"0x5110","file":"gdiplusimaging.h","line":492,"type":"Integer","value":20752},"PropertyTagPlanarConfig":{"comment":"\/\/ Image data arrangement","exp":"0x011C","file":"gdiplusimaging.h","line":341,"type":"Integer","value":284},"PropertyTagPredictor":{"comment":"","exp":"0x013D","file":"gdiplusimaging.h","line":358,"type":"Integer","value":317},"PropertyTagPrimaryChromaticities":{"comment":"","exp":"0x013F","file":"gdiplusimaging.h","line":360,"type":"Integer","value":319},"PropertyTagPrintFlags":{"comment":"","exp":"0x5005","file":"gdiplusimaging.h","line":408,"type":"Integer","value":20485},"PropertyTagPrintFlagsBleedWidth":{"comment":"","exp":"0x5008","file":"gdiplusimaging.h","line":411,"type":"Integer","value":20488},"PropertyTagPrintFlagsBleedWidthScale":{"comment":"","exp":"0x5009","file":"gdiplusimaging.h","line":412,"type":"Integer","value":20489},"PropertyTagPrintFlagsCrop":{"comment":"","exp":"0x5007","file":"gdiplusimaging.h","line":410,"type":"Integer","value":20487},"PropertyTagPrintFlagsVersion":{"comment":"","exp":"0x5006","file":"gdiplusimaging.h","line":409,"type":"Integer","value":20486},"PropertyTagREFBlackWhite":{"comment":"","exp":"0x0214","file":"gdiplusimaging.h","line":391,"type":"Integer","value":532},"PropertyTagResolutionUnit":{"comment":"\/\/ Unit of X and Y resolution","exp":"0x0128","file":"gdiplusimaging.h","line":351,"type":"Integer","value":296},"PropertyTagResolutionXLengthUnit":{"comment":"","exp":"0x5003","file":"gdiplusimaging.h","line":406,"type":"Integer","value":20483},"PropertyTagResolutionXUnit":{"comment":"","exp":"0x5001","file":"gdiplusimaging.h","line":404,"type":"Integer","value":20481},"PropertyTagResolutionYLengthUnit":{"comment":"","exp":"0x5004","file":"gdiplusimaging.h","line":407,"type":"Integer","value":20484},"PropertyTagResolutionYUnit":{"comment":"","exp":"0x5002","file":"gdiplusimaging.h","line":405,"type":"Integer","value":20482},"PropertyTagRowsPerStrip":{"comment":"","exp":"0x0116","file":"gdiplusimaging.h","line":335,"type":"Integer","value":278},"PropertyTagSMaxSampleValue":{"comment":"","exp":"0x0155","file":"gdiplusimaging.h","line":375,"type":"Integer","value":341},"PropertyTagSMinSampleValue":{"comment":"","exp":"0x0154","file":"gdiplusimaging.h","line":374,"type":"Integer","value":340},"PropertyTagSRGBRenderingIntent":{"comment":"","exp":"0x0303","file":"gdiplusimaging.h","line":397,"type":"Integer","value":771},"PropertyTagSampleFormat":{"comment":"","exp":"0x0153","file":"gdiplusimaging.h","line":373,"type":"Integer","value":339},"PropertyTagSamplesPerPixel":{"comment":"","exp":"0x0115","file":"gdiplusimaging.h","line":334,"type":"Integer","value":277},"PropertyTagSoftwareUsed":{"comment":"","exp":"0x0131","file":"gdiplusimaging.h","line":354,"type":"Integer","value":305},"PropertyTagStripBytesCount":{"comment":"","exp":"0x0117","file":"gdiplusimaging.h","line":336,"type":"Integer","value":279},"PropertyTagStripOffsets":{"comment":"","exp":"0x0111","file":"gdiplusimaging.h","line":332,"type":"Integer","value":273},"PropertyTagSubfileType":{"comment":"","exp":"0x00FF","file":"gdiplusimaging.h","line":318,"type":"Integer","value":255},"PropertyTagT4Option":{"comment":"","exp":"0x0124","file":"gdiplusimaging.h","line":349,"type":"Integer","value":292},"PropertyTagT6Option":{"comment":"","exp":"0x0125","file":"gdiplusimaging.h","line":350,"type":"Integer","value":293},"PropertyTagTargetPrinter":{"comment":"","exp":"0x0151","file":"gdiplusimaging.h","line":371,"type":"Integer","value":337},"PropertyTagThreshHolding":{"comment":"","exp":"0x0107","file":"gdiplusimaging.h","line":324,"type":"Integer","value":263},"PropertyTagThumbnailArtist":{"comment":"\/\/ Person who created the","exp":"0x5034","file":"gdiplusimaging.h","line":465,"type":"Integer","value":20532},"PropertyTagThumbnailBitsPerSample":{"comment":"\/\/ Number of bits per","exp":"0x5022","file":"gdiplusimaging.h","line":439,"type":"Integer","value":20514},"PropertyTagThumbnailColorDepth":{"comment":"","exp":"0x5015","file":"gdiplusimaging.h","line":424,"type":"Integer","value":20501},"PropertyTagThumbnailCompressedSize":{"comment":"","exp":"0x5019","file":"gdiplusimaging.h","line":428,"type":"Integer","value":20505},"PropertyTagThumbnailCompression":{"comment":"\/\/ Compression Scheme","exp":"0x5023","file":"gdiplusimaging.h","line":441,"type":"Integer","value":20515},"PropertyTagThumbnailCopyRight":{"comment":"\/\/ CopyRight holder","exp":"0x503B","file":"gdiplusimaging.h","line":478,"type":"Integer","value":20539},"PropertyTagThumbnailData":{"comment":"\/\/ RAW thumbnail bits in","exp":"0x501B","file":"gdiplusimaging.h","line":430,"type":"Integer","value":20507},"PropertyTagThumbnailDateTime":{"comment":"\/\/ File change date and","exp":"0x5033","file":"gdiplusimaging.h","line":463,"type":"Integer","value":20531},"PropertyTagThumbnailEquipMake":{"comment":"\/\/ Manufacturer of Image","exp":"0x5026","file":"gdiplusimaging.h","line":444,"type":"Integer","value":20518},"PropertyTagThumbnailEquipModel":{"comment":"\/\/ Model of Image input","exp":"0x5027","file":"gdiplusimaging.h","line":446,"type":"Integer","value":20519},"PropertyTagThumbnailFormat":{"comment":"\/\/ 1 = JPEG, 0 = RAW RGB","exp":"0x5012","file":"gdiplusimaging.h","line":421,"type":"Integer","value":20498},"PropertyTagThumbnailHeight":{"comment":"","exp":"0x5014","file":"gdiplusimaging.h","line":423,"type":"Integer","value":20500},"PropertyTagThumbnailImageDescription":{"comment":"\/\/ Image Tile","exp":"0x5025","file":"gdiplusimaging.h","line":443,"type":"Integer","value":20517},"PropertyTagThumbnailImageHeight":{"comment":"\/\/ Thumbnail height","exp":"0x5021","file":"gdiplusimaging.h","line":438,"type":"Integer","value":20513},"PropertyTagThumbnailImageWidth":{"comment":"\/\/ Thumbnail width","exp":"0x5020","file":"gdiplusimaging.h","line":437,"type":"Integer","value":20512},"PropertyTagThumbnailOrientation":{"comment":"\/\/ Orientation of image","exp":"0x5029","file":"gdiplusimaging.h","line":449,"type":"Integer","value":20521},"PropertyTagThumbnailPhotometricInterp":{"comment":"\/\/ Pixel composition","exp":"0x5024","file":"gdiplusimaging.h","line":442,"type":"Integer","value":20516},"PropertyTagThumbnailPlanarConfig":{"comment":"\/\/ Image data arrangement","exp":"0x502F","file":"gdiplusimaging.h","line":458,"type":"Integer","value":20527},"PropertyTagThumbnailPlanes":{"comment":"","exp":"0x5016","file":"gdiplusimaging.h","line":425,"type":"Integer","value":20502},"PropertyTagThumbnailPrimaryChromaticities":{"comment":"","exp":"0x5036","file":"gdiplusimaging.h","line":468,"type":"Integer","value":20534},"PropertyTagThumbnailRawBytes":{"comment":"","exp":"0x5017","file":"gdiplusimaging.h","line":426,"type":"Integer","value":20503},"PropertyTagThumbnailRefBlackWhite":{"comment":"\/\/ Pair of black and white","exp":"0x503A","file":"gdiplusimaging.h","line":476,"type":"Integer","value":20538},"PropertyTagThumbnailResolutionUnit":{"comment":"\/\/ Unit of X and Y","exp":"0x5030","file":"gdiplusimaging.h","line":459,"type":"Integer","value":20528},"PropertyTagThumbnailResolutionX":{"comment":"\/\/ Resolution in width","exp":"0x502D","file":"gdiplusimaging.h","line":454,"type":"Integer","value":20525},"PropertyTagThumbnailResolutionY":{"comment":"\/\/ Resolution in height","exp":"0x502E","file":"gdiplusimaging.h","line":456,"type":"Integer","value":20526},"PropertyTagThumbnailRowsPerStrip":{"comment":"\/\/ Number of rows per strip","exp":"0x502B","file":"gdiplusimaging.h","line":451,"type":"Integer","value":20523},"PropertyTagThumbnailSamplesPerPixel":{"comment":"\/\/ Number of components","exp":"0x502A","file":"gdiplusimaging.h","line":450,"type":"Integer","value":20522},"PropertyTagThumbnailSize":{"comment":"","exp":"0x5018","file":"gdiplusimaging.h","line":427,"type":"Integer","value":20504},"PropertyTagThumbnailSoftwareUsed":{"comment":"\/\/ Software used","exp":"0x5032","file":"gdiplusimaging.h","line":462,"type":"Integer","value":20530},"PropertyTagThumbnailStripBytesCount":{"comment":"\/\/ Bytes per compressed","exp":"0x502C","file":"gdiplusimaging.h","line":452,"type":"Integer","value":20524},"PropertyTagThumbnailStripOffsets":{"comment":"\/\/ Image data location","exp":"0x5028","file":"gdiplusimaging.h","line":448,"type":"Integer","value":20520},"PropertyTagThumbnailTransferFunction":{"comment":"\/\/ Transfer function","exp":"0x5031","file":"gdiplusimaging.h","line":461,"type":"Integer","value":20529},"PropertyTagThumbnailWhitePoint":{"comment":"\/\/ White point chromaticity","exp":"0x5035","file":"gdiplusimaging.h","line":467,"type":"Integer","value":20533},"PropertyTagThumbnailWidth":{"comment":"","exp":"0x5013","file":"gdiplusimaging.h","line":422,"type":"Integer","value":20499},"PropertyTagThumbnailYCbCrCoefficients":{"comment":"\/\/ Color space transforma-","exp":"0x5037","file":"gdiplusimaging.h","line":471,"type":"Integer","value":20535},"PropertyTagThumbnailYCbCrPositioning":{"comment":"\/\/ Y and C position","exp":"0x5039","file":"gdiplusimaging.h","line":475,"type":"Integer","value":20537},"PropertyTagThumbnailYCbCrSubsampling":{"comment":"\/\/ Subsampling ratio of Y","exp":"0x5038","file":"gdiplusimaging.h","line":473,"type":"Integer","value":20536},"PropertyTagTileByteCounts":{"comment":"","exp":"0x0145","file":"gdiplusimaging.h","line":366,"type":"Integer","value":325},"PropertyTagTileLength":{"comment":"","exp":"0x0143","file":"gdiplusimaging.h","line":364,"type":"Integer","value":323},"PropertyTagTileOffset":{"comment":"","exp":"0x0144","file":"gdiplusimaging.h","line":365,"type":"Integer","value":324},"PropertyTagTileWidth":{"comment":"","exp":"0x0142","file":"gdiplusimaging.h","line":363,"type":"Integer","value":322},"PropertyTagTransferFuncition":{"comment":"","exp":"0x012D","file":"gdiplusimaging.h","line":353,"type":"Integer","value":301},"PropertyTagTransferRange":{"comment":"","exp":"0x0156","file":"gdiplusimaging.h","line":376,"type":"Integer","value":342},"PropertyTagTypeASCII":{"comment":"","exp":"2","file":"gdiplusimaging.h","line":302,"type":"Integer","value":2},"PropertyTagTypeByte":{"comment":"","exp":"1","file":"gdiplusimaging.h","line":301,"type":"Integer","value":1},"PropertyTagTypeLong":{"comment":"","exp":"4","file":"gdiplusimaging.h","line":304,"type":"Integer","value":4},"PropertyTagTypeRational":{"comment":"","exp":"5","file":"gdiplusimaging.h","line":305,"type":"Integer","value":5},"PropertyTagTypeSLONG":{"comment":"","exp":"9","file":"gdiplusimaging.h","line":307,"type":"Integer","value":9},"PropertyTagTypeSRational":{"comment":"","exp":"10","file":"gdiplusimaging.h","line":308,"type":"Integer","value":10},"PropertyTagTypeShort":{"comment":"","exp":"3","file":"gdiplusimaging.h","line":303,"type":"Integer","value":3},"PropertyTagTypeUndefined":{"comment":"","exp":"7","file":"gdiplusimaging.h","line":306,"type":"Integer","value":7},"PropertyTagWhitePoint":{"comment":"","exp":"0x013E","file":"gdiplusimaging.h","line":359,"type":"Integer","value":318},"PropertyTagXPosition":{"comment":"","exp":"0x011E","file":"gdiplusimaging.h","line":343,"type":"Integer","value":286},"PropertyTagXResolution":{"comment":"\/\/ Image resolution in width direction","exp":"0x011A","file":"gdiplusimaging.h","line":339,"type":"Integer","value":282},"PropertyTagYCbCrCoefficients":{"comment":"","exp":"0x0211","file":"gdiplusimaging.h","line":388,"type":"Integer","value":529},"PropertyTagYCbCrPositioning":{"comment":"","exp":"0x0213","file":"gdiplusimaging.h","line":390,"type":"Integer","value":531},"PropertyTagYCbCrSubsampling":{"comment":"","exp":"0x0212","file":"gdiplusimaging.h","line":389,"type":"Integer","value":530},"PropertyTagYPosition":{"comment":"","exp":"0x011F","file":"gdiplusimaging.h","line":344,"type":"Integer","value":287},"PropertyTagYResolution":{"comment":"\/\/ Image resolution in height direction","exp":"0x011B","file":"gdiplusimaging.h","line":340,"type":"Integer","value":283},"QualityMode":{"comment":"","exp":"","file":"gdiplusenums.h","line":50,"type":"Enum","value":"enum QualityMode\\r\\n{\\r\\n    QualityModeInvalid   = -1,\\r\\n    QualityModeDefault   = 0,\\r\\n    QualityModeLow       = 1, \/\/ Best performance\\r\\n    QualityModeHigh      = 2  \/\/ Best rendering quality\\r\\n};"},"REAL_EPSILON":{"comment":"\/* FLT_EPSILON *\/","exp":"1.192092896e-07F","file":"gdiplustypes.h","line":87,"type":"Float","value":1.1920928960000001e-07},"REAL_MAX":{"comment":"","exp":"FLT_MAX","file":"gdiplustypes.h","line":84,"type":"Float","value":3.4028234660000002e+38},"REAL_MIN":{"comment":"","exp":"FLT_MIN","file":"gdiplustypes.h","line":85,"type":"Float","value":1.175494351e-38},"REAL_TOLERANCE":{"comment":"","exp":"(FLT_MIN * 100)","file":"gdiplustypes.h","line":86,"type":"Float","value":1.175494351e-36},"RED_SHIFT":{"comment":"","exp":"16","file":"gdipluspixelformats.h","line":36,"type":"Integer","value":16},"RedEyeCorrectionParams":{"comment":"","exp":"","file":"gdipluseffects.h","line":95,"type":"Struct","value":"struct RedEyeCorrectionParams\\r\\n{\\r\\n    UINT numberOfAreas;\\r\\n    RECT *areas;\\r\\n};"},"RotateFlipType":{"comment":"","exp":"","file":"gdiplusimaging.h","line":213,"type":"Enum","value":"enum RotateFlipType\\r\\n{\\r\\n    RotateNoneFlipNone = 0,\\r\\n    Rotate90FlipNone   = 1,\\r\\n    Rotate180FlipNone  = 2,\\r\\n    Rotate270FlipNone  = 3,\\r\\n    RotateNoneFlipX    = 4,\\r\\n    Rotate90FlipX      = 5,\\r\\n    Rotate180FlipX     = 6,\\r\\n    Rotate270FlipX     = 7,\\r\\n    RotateNoneFlipY    = Rotate180FlipX,\\r\\n    Rotate90FlipY      = Rotate270FlipX,\\r\\n    Rotate180FlipY     = RotateNoneFlipX,\\r\\n    Rotate270FlipY     = Rotate90FlipX,\\r\\n    RotateNoneFlipXY   = Rotate180FlipNone,\\r\\n    Rotate90FlipXY     = Rotate270FlipNone,\\r\\n    Rotate180FlipXY    = RotateNoneFlipNone,\\r\\n    Rotate270FlipXY    = Rotate90FlipNone\\r\\n};"},"SharpenParams":{"comment":"","exp":"","file":"gdipluseffects.h","line":77,"type":"Struct","value":"struct SharpenParams\\r\\n{\\r\\n    float radius;\\r\\n    float amount;\\r\\n};"},"SmoothingMode":{"comment":"","exp":"","file":"gdiplusenums.h","line":440,"type":"Enum","value":"enum SmoothingMode\\r\\n{\\r\\n    SmoothingModeInvalid     = QualityModeInvalid,\\r\\n    SmoothingModeDefault     = QualityModeDefault,\\r\\n    SmoothingModeHighSpeed   = QualityModeLow,\\r\\n    SmoothingModeHighQuality = QualityModeHigh,\\r\\n    SmoothingModeNone,\\r\\n    SmoothingModeAntiAlias,\\r\\n#if (GDIPVER >= 0x0110)\\r\\n    SmoothingModeAntiAlias8x4 = SmoothingModeAntiAlias,\\r\\n    SmoothingModeAntiAlias8x8\\r\\n#endif \/\/(GDIPVER >= 0x0110) \\r\\n};"},"StringAlignment":{"comment":"","exp":"","file":"gdiplusenums.h","line":981,"type":"Enum","value":"enum StringAlignment\\r\\n{\\r\\n    \/\/ Left edge for left-to-right text,\\r\\n    \/\/ right for right-to-left text,\\r\\n    \/\/ and top for vertical\\r\\n    StringAlignmentNear   = 0,\\r\\n    StringAlignmentCenter = 1,\\r\\n    StringAlignmentFar    = 2\\r\\n};"},"StringDigitSubstitute":{"comment":"","exp":"","file":"gdiplusenums.h","line":958,"type":"Enum","value":"enum StringDigitSubstitute\\r\\n{\\r\\n    StringDigitSubstituteUser        = 0,  \/\/ As NLS setting\\r\\n    StringDigitSubstituteNone        = 1,\\r\\n    StringDigitSubstituteNational    = 2,\\r\\n    StringDigitSubstituteTraditional = 3\\r\\n};"},"StringFormatFlags":{"comment":"","exp":"","file":"gdiplusenums.h","line":926,"type":"Enum","value":"enum StringFormatFlags\\r\\n{\\r\\n    StringFormatFlagsDirectionRightToLeft        = 0x00000001,\\r\\n    StringFormatFlagsDirectionVertical           = 0x00000002,\\r\\n    StringFormatFlagsNoFitBlackBox               = 0x00000004,\\r\\n    StringFormatFlagsDisplayFormatControl        = 0x00000020,\\r\\n    StringFormatFlagsNoFontFallback              = 0x00000400,\\r\\n    StringFormatFlagsMeasureTrailingSpaces       = 0x00000800,\\r\\n    StringFormatFlagsNoWrap                      = 0x00001000,\\r\\n    StringFormatFlagsLineLimit                   = 0x00002000,\\r\\n    StringFormatFlagsNoClip                      = 0x00004000,\\r\\n    StringFormatFlagsBypassGDI                   = 0x80000000\\r\\n};"},"StringTrimming":{"comment":"","exp":"","file":"gdiplusenums.h","line":945,"type":"Enum","value":"enum StringTrimming {\\r\\n    StringTrimmingNone              = 0,\\r\\n    StringTrimmingCharacter         = 1,\\r\\n    StringTrimmingWord              = 2,\\r\\n    StringTrimmingEllipsisCharacter = 3,\\r\\n    StringTrimmingEllipsisWord      = 4,\\r\\n    StringTrimmingEllipsisPath      = 5\\r\\n};"},"TextRenderingHint":{"comment":"","exp":"","file":"gdiplusenums.h","line":472,"type":"Enum","value":"enum TextRenderingHint\\r\\n{\\r\\n    TextRenderingHintSystemDefault = 0,            \/\/ Glyph with system default rendering hint\\r\\n    TextRenderingHintSingleBitPerPixelGridFit,     \/\/ Glyph bitmap with hinting\\r\\n    TextRenderingHintSingleBitPerPixel,            \/\/ Glyph bitmap without hinting\\r\\n    TextRenderingHintAntiAliasGridFit,             \/\/ Glyph anti-alias bitmap with hinting\\r\\n    TextRenderingHintAntiAlias,                    \/\/ Glyph anti-alias bitmap without hinting\\r\\n    TextRenderingHintClearTypeGridFit              \/\/ Glyph CT bitmap with hinting\\r\\n};"},"TintParams":{"comment":"","exp":"","file":"gdipluseffects.h","line":108,"type":"Struct","value":"struct TintParams\\r\\n{\\r\\n    INT hue;\\r\\n    INT amount;\\r\\n};"},"Unit":{"comment":"","exp":"","file":"gdiplusenums.h","line":86,"type":"Enum","value":"enum Unit\\r\\n{\\r\\n    UnitWorld,      \/\/ 0 -- World coordinate (non-physical unit)\\r\\n    UnitDisplay,    \/\/ 1 -- Variable -- for PageTransform only\\r\\n    UnitPixel,      \/\/ 2 -- Each unit is one device pixel.\\r\\n    UnitPoint,      \/\/ 3 -- Each unit is a printer's point, or 1\/72 inch.\\r\\n    UnitInch,       \/\/ 4 -- Each unit is 1 inch.\\r\\n    UnitDocument,   \/\/ 5 -- Each unit is 1\/300 inch.\\r\\n    UnitMillimeter  \/\/ 6 -- Each unit is 1 millimeter.\\r\\n};"},"WarpMode":{"comment":"","exp":"","file":"gdiplusenums.h","line":303,"type":"Enum","value":"enum WarpMode\\r\\n{\\r\\n    WarpModePerspective,    \/\/ 0\\r\\n    WarpModeBilinear        \/\/ 1\\r\\n};"},"WrapMode":{"comment":"","exp":"","file":"gdiplusenums.h","line":132,"type":"Enum","value":"enum WrapMode\\r\\n{\\r\\n    WrapModeTile,        \/\/ 0\\r\\n    WrapModeTileFlipX,   \/\/ 1\\r\\n    WrapModeTileFlipY,   \/\/ 2\\r\\n    WrapModeTileFlipXY,  \/\/ 3\\r\\n    WrapModeClamp        \/\/ 4\\r\\n};"}},"__includes_list":{"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusbase.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusbrush.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdipluscolor.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdipluscolormatrix.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdipluseffects.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusenums.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusgraphics.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusheaders.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusimageattributes.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusimagecodec.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusimaging.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusinit.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdipluslinecaps.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusmatrix.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusmetaheader.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["pshpack2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\pshpack2.h"],["poppack.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\poppack.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdipluspath.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdipluspen.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdipluspixelformats.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplusstringformat.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|gdiplustypes.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]]}}