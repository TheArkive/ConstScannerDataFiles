{"__const_list":{"D3D11_RESOURCE_FLAGS":{"comment":"","exp":"","file":"d3d11on12.h","line":150,"type":"Struct","value":"typedef struct D3D11_RESOURCE_FLAGS\\r\\n    {\\r\\n    UINT BindFlags;\\r\\n    UINT MiscFlags;\\r\\n    UINT CPUAccessFlags;\\r\\n    UINT StructureByteStride;\\r\\n    } \\tD3D11_RESOURCE_FLAGS;"},"D3D12_16BIT_INDEX_STRIP_CUT_VALUE":{"comment":"","exp":"( 0xffff )","file":"d3d12.h","line":430,"type":"Integer","value":65535},"D3D12_32BIT_INDEX_STRIP_CUT_VALUE":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":432,"type":"Integer","value":4294967295},"D3D12_8BIT_INDEX_STRIP_CUT_VALUE":{"comment":"","exp":"( 0xff )","file":"d3d12.h","line":434,"type":"Integer","value":255},"D3D12_ANISOTROPIC_FILTERING_BIT":{"comment":"","exp":"( 0x40 )","file":"d3d12.h","line":3056,"type":"Integer","value":64},"D3D12_APPEND_ALIGNED_ELEMENT":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":436,"type":"Integer","value":4294967295},"D3D12_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT":{"comment":"","exp":"( 9 )","file":"d3d12.h","line":438,"type":"Integer","value":9},"D3D12_AUTO_BREADCRUMB_NODE":{"comment":"","exp":"","file":"d3d12.h","line":13302,"type":"Struct","value":"typedef struct D3D12_AUTO_BREADCRUMB_NODE\\r\\n    {\\r\\n    const char *pCommandListDebugNameA;\\r\\n    const wchar_t *pCommandListDebugNameW;\\r\\n    const char *pCommandQueueDebugNameA;\\r\\n    const wchar_t *pCommandQueueDebugNameW;\\r\\n    ID3D12GraphicsCommandList *pCommandList;\\r\\n    ID3D12CommandQueue *pCommandQueue;\\r\\n    UINT32 BreadcrumbCount;\\r\\n    const UINT32 *pLastBreadcrumbValue;\\r\\n    const D3D12_AUTO_BREADCRUMB_OP *pCommandHistory;\\r\\n    const struct D3D12_AUTO_BREADCRUMB_NODE *pNext;\\r\\n    } \\tD3D12_AUTO_BREADCRUMB_NODE;"},"D3D12_AUTO_BREADCRUMB_NODE1":{"comment":"","exp":"","file":"d3d12.h","line":13322,"type":"Struct","value":"typedef struct D3D12_AUTO_BREADCRUMB_NODE1\\r\\n    {\\r\\n    const char *pCommandListDebugNameA;\\r\\n    const wchar_t *pCommandListDebugNameW;\\r\\n    const char *pCommandQueueDebugNameA;\\r\\n    const wchar_t *pCommandQueueDebugNameW;\\r\\n    ID3D12GraphicsCommandList *pCommandList;\\r\\n    ID3D12CommandQueue *pCommandQueue;\\r\\n    UINT BreadcrumbCount;\\r\\n    const UINT *pLastBreadcrumbValue;\\r\\n    const D3D12_AUTO_BREADCRUMB_OP *pCommandHistory;\\r\\n    const struct D3D12_AUTO_BREADCRUMB_NODE1 *pNext;\\r\\n    UINT BreadcrumbContextsCount;\\r\\n    D3D12_DRED_BREADCRUMB_CONTEXT *pBreadcrumbContexts;\\r\\n    } \\tD3D12_AUTO_BREADCRUMB_NODE1;"},"D3D12_AUTO_BREADCRUMB_OP":{"comment":"","exp":"","file":"d3d12.h","line":13254,"type":"Enum","value":"typedef\\r\\nenum D3D12_AUTO_BREADCRUMB_OP\\r\\n    {\\r\\n        D3D12_AUTO_BREADCRUMB_OP_SETMARKER\\t= 0,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_BEGINEVENT\\t= 1,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_ENDEVENT\\t= 2,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_DRAWINSTANCED\\t= 3,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_DRAWINDEXEDINSTANCED\\t= 4,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_EXECUTEINDIRECT\\t= 5,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_DISPATCH\\t= 6,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_COPYBUFFERREGION\\t= 7,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_COPYTEXTUREREGION\\t= 8,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_COPYRESOURCE\\t= 9,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_COPYTILES\\t= 10,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCE\\t= 11,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_CLEARRENDERTARGETVIEW\\t= 12,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_CLEARUNORDEREDACCESSVIEW\\t= 13,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_CLEARDEPTHSTENCILVIEW\\t= 14,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_RESOURCEBARRIER\\t= 15,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_EXECUTEBUNDLE\\t= 16,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_PRESENT\\t= 17,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_RESOLVEQUERYDATA\\t= 18,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_BEGINSUBMISSION\\t= 19,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_ENDSUBMISSION\\t= 20,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME\\t= 21,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES\\t= 22,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT\\t= 23,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT64\\t= 24,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCEREGION\\t= 25,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_WRITEBUFFERIMMEDIATE\\t= 26,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME1\\t= 27,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_SETPROTECTEDRESOURCESESSION\\t= 28,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME2\\t= 29,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES1\\t= 30,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_BUILDRAYTRACINGACCELERATIONSTRUCTURE\\t= 31,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_EMITRAYTRACINGACCELERATIONSTRUCTUREPOSTBUILDINFO\\t= 32,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_COPYRAYTRACINGACCELERATIONSTRUCTURE\\t= 33,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_DISPATCHRAYS\\t= 34,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_INITIALIZEMETACOMMAND\\t= 35,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_EXECUTEMETACOMMAND\\t= 36,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_ESTIMATEMOTION\\t= 37,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_RESOLVEMOTIONVECTORHEAP\\t= 38,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_SETPIPELINESTATE1\\t= 39,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_INITIALIZEEXTENSIONCOMMAND\\t= 40,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_EXECUTEEXTENSIONCOMMAND\\t= 41,\\r\\n        D3D12_AUTO_BREADCRUMB_OP_DISPATCHMESH\\t= 42\\r\\n    } \\tD3D12_AUTO_BREADCRUMB_OP;"},"D3D12_AXIS_SHADING_RATE":{"comment":"","exp":"","file":"d3d12.h","line":18646,"type":"Enum","value":"typedef\\r\\nenum D3D12_AXIS_SHADING_RATE\\r\\n    {\\r\\n        D3D12_AXIS_SHADING_RATE_1X\\t= 0,\\r\\n        D3D12_AXIS_SHADING_RATE_2X\\t= 0x1,\\r\\n        D3D12_AXIS_SHADING_RATE_4X\\t= 0x2\\r\\n    } \\tD3D12_AXIS_SHADING_RATE;"},"D3D12_BACKGROUND_PROCESSING_MODE":{"comment":"","exp":"","file":"d3d12.h","line":13868,"type":"Enum","value":"typedef\\r\\nenum D3D12_BACKGROUND_PROCESSING_MODE\\r\\n    {\\r\\n        D3D12_BACKGROUND_PROCESSING_MODE_ALLOWED\\t= 0,\\r\\n        D3D12_BACKGROUND_PROCESSING_MODE_ALLOW_INTRUSIVE_MEASUREMENTS\\t= ( D3D12_BACKGROUND_PROCESSING_MODE_ALLOWED + 1 ) ,\\r\\n        D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_BACKGROUND_WORK\\t= ( D3D12_BACKGROUND_PROCESSING_MODE_ALLOW_INTRUSIVE_MEASUREMENTS + 1 ) ,\\r\\n        D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_PROFILING_BY_SYSTEM\\t= ( D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_BACKGROUND_WORK + 1 ) \\r\\n    } \\tD3D12_BACKGROUND_PROCESSING_MODE;"},"D3D12_BLEND":{"comment":"","exp":"","file":"d3d12.h","line":1408,"type":"Enum","value":"typedef\\r\\nenum D3D12_BLEND\\r\\n    {\\r\\n        D3D12_BLEND_ZERO\\t= 1,\\r\\n        D3D12_BLEND_ONE\\t= 2,\\r\\n        D3D12_BLEND_SRC_COLOR\\t= 3,\\r\\n        D3D12_BLEND_INV_SRC_COLOR\\t= 4,\\r\\n        D3D12_BLEND_SRC_ALPHA\\t= 5,\\r\\n        D3D12_BLEND_INV_SRC_ALPHA\\t= 6,\\r\\n        D3D12_BLEND_DEST_ALPHA\\t= 7,\\r\\n        D3D12_BLEND_INV_DEST_ALPHA\\t= 8,\\r\\n        D3D12_BLEND_DEST_COLOR\\t= 9,\\r\\n        D3D12_BLEND_INV_DEST_COLOR\\t= 10,\\r\\n        D3D12_BLEND_SRC_ALPHA_SAT\\t= 11,\\r\\n        D3D12_BLEND_BLEND_FACTOR\\t= 14,\\r\\n        D3D12_BLEND_INV_BLEND_FACTOR\\t= 15,\\r\\n        D3D12_BLEND_SRC1_COLOR\\t= 16,\\r\\n        D3D12_BLEND_INV_SRC1_COLOR\\t= 17,\\r\\n        D3D12_BLEND_SRC1_ALPHA\\t= 18,\\r\\n        D3D12_BLEND_INV_SRC1_ALPHA\\t= 19\\r\\n    } \\tD3D12_BLEND;"},"D3D12_BLEND_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1485,"type":"Struct","value":"typedef struct D3D12_BLEND_DESC\\r\\n    {\\r\\n    BOOL AlphaToCoverageEnable;\\r\\n    BOOL IndependentBlendEnable;\\r\\n    D3D12_RENDER_TARGET_BLEND_DESC RenderTarget[ 8 ];\\r\\n    } \\tD3D12_BLEND_DESC;"},"D3D12_BLEND_OP":{"comment":"","exp":"","file":"d3d12.h","line":1430,"type":"Enum","value":"typedef\\r\\nenum D3D12_BLEND_OP\\r\\n    {\\r\\n        D3D12_BLEND_OP_ADD\\t= 1,\\r\\n        D3D12_BLEND_OP_SUBTRACT\\t= 2,\\r\\n        D3D12_BLEND_OP_REV_SUBTRACT\\t= 3,\\r\\n        D3D12_BLEND_OP_MIN\\t= 4,\\r\\n        D3D12_BLEND_OP_MAX\\t= 5\\r\\n    } \\tD3D12_BLEND_OP;"},"D3D12_BOX":{"comment":"","exp":"","file":"d3d12.h","line":1332,"type":"Struct","value":"typedef struct D3D12_BOX\\r\\n    {\\r\\n    UINT left;\\r\\n    UINT top;\\r\\n    UINT front;\\r\\n    UINT right;\\r\\n    UINT bottom;\\r\\n    UINT back;\\r\\n    } \\tD3D12_BOX;"},"D3D12_BUFFER_RTV":{"comment":"","exp":"","file":"d3d12.h","line":3191,"type":"Struct","value":"typedef struct D3D12_BUFFER_RTV\\r\\n    {\\r\\n    UINT64 FirstElement;\\r\\n    UINT NumElements;\\r\\n    } \\tD3D12_BUFFER_RTV;"},"D3D12_BUFFER_SRV":{"comment":"","exp":"","file":"d3d12.h","line":2862,"type":"Struct","value":"typedef struct D3D12_BUFFER_SRV\\r\\n    {\\r\\n    UINT64 FirstElement;\\r\\n    UINT NumElements;\\r\\n    UINT StructureByteStride;\\r\\n    D3D12_BUFFER_SRV_FLAGS Flags;\\r\\n    } \\tD3D12_BUFFER_SRV;"},"D3D12_BUFFER_SRV_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":2854,"type":"Enum","value":"typedef\\r\\nenum D3D12_BUFFER_SRV_FLAGS\\r\\n    {\\r\\n        D3D12_BUFFER_SRV_FLAG_NONE\\t= 0,\\r\\n        D3D12_BUFFER_SRV_FLAG_RAW\\t= 0x1\\r\\n    } \\tD3D12_BUFFER_SRV_FLAGS;"},"D3D12_BUFFER_UAV":{"comment":"","exp":"","file":"d3d12.h","line":3122,"type":"Struct","value":"typedef struct D3D12_BUFFER_UAV\\r\\n    {\\r\\n    UINT64 FirstElement;\\r\\n    UINT NumElements;\\r\\n    UINT StructureByteStride;\\r\\n    UINT64 CounterOffsetInBytes;\\r\\n    D3D12_BUFFER_UAV_FLAGS Flags;\\r\\n    } \\tD3D12_BUFFER_UAV;"},"D3D12_BUFFER_UAV_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":3114,"type":"Enum","value":"typedef\\r\\nenum D3D12_BUFFER_UAV_FLAGS\\r\\n    {\\r\\n        D3D12_BUFFER_UAV_FLAG_NONE\\t= 0,\\r\\n        D3D12_BUFFER_UAV_FLAG_RAW\\t= 0x1\\r\\n    } \\tD3D12_BUFFER_UAV_FLAGS;"},"D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12505,"type":"Struct","value":"typedef struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS DestAccelerationStructureData;\\r\\n    D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS Inputs;\\r\\n    _In_opt_  D3D12_GPU_VIRTUAL_ADDRESS SourceAccelerationStructureData;\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS ScratchAccelerationStructureData;\\r\\n    } \\tD3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC;"},"D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS":{"comment":"","exp":"","file":"d3d12.h","line":12491,"type":"Struct","value":"typedef struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS\\r\\n    {\\r\\n    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE Type;\\r\\n    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS Flags;\\r\\n    UINT NumDescs;\\r\\n    D3D12_ELEMENTS_LAYOUT DescsLayout;\\r\\n    union \\r\\n        {\\r\\n        D3D12_GPU_VIRTUAL_ADDRESS InstanceDescs;\\r\\n        const D3D12_RAYTRACING_GEOMETRY_DESC *pGeometryDescs;\\r\\n        const D3D12_RAYTRACING_GEOMETRY_DESC *const *ppGeometryDescs;\\r\\n        } \\t;\\r\\n    } \\tD3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS;"},"D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER":{"comment":"","exp":"","file":"d3d12.h","line":12417,"type":"Struct","value":"typedef struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER\\r\\n    {\\r\\n    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE Type;\\r\\n    UINT NumDescs;\\r\\n    } \\tD3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER;"},"D3D12_CACHED_PIPELINE_STATE":{"comment":"","exp":"","file":"d3d12.h","line":1899,"type":"Struct","value":"typedef struct D3D12_CACHED_PIPELINE_STATE\\r\\n    {\\r\\n    _Field_size_bytes_full_(CachedBlobSizeInBytes)  const void *pCachedBlob;\\r\\n    SIZE_T CachedBlobSizeInBytes;\\r\\n    } \\tD3D12_CACHED_PIPELINE_STATE;"},"D3D12_CLEAR_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":3344,"type":"Enum","value":"typedef\\r\\nenum D3D12_CLEAR_FLAGS\\r\\n    {\\r\\n        D3D12_CLEAR_FLAG_DEPTH\\t= 0x1,\\r\\n        D3D12_CLEAR_FLAG_STENCIL\\t= 0x2\\r\\n    } \\tD3D12_CLEAR_FLAGS;"},"D3D12_CLEAR_VALUE":{"comment":"","exp":"","file":"d3d12.h","line":2579,"type":"Struct","value":"typedef struct D3D12_CLEAR_VALUE\\r\\n    {\\r\\n    DXGI_FORMAT Format;\\r\\n    union \\r\\n        {\\r\\n        FLOAT Color[ 4 ];\\r\\n        D3D12_DEPTH_STENCIL_VALUE DepthStencil;\\r\\n        } \\t;\\r\\n    } \\tD3D12_CLEAR_VALUE;"},"D3D12_CLIP_OR_CULL_DISTANCE_COUNT":{"comment":"","exp":"( 8 )","file":"d3d12.h","line":440,"type":"Integer","value":8},"D3D12_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":442,"type":"Integer","value":2},"D3D12_COLOR_WRITE_ENABLE":{"comment":"","exp":"","file":"d3d12.h","line":1440,"type":"Enum","value":"typedef\\r\\nenum D3D12_COLOR_WRITE_ENABLE\\r\\n    {\\r\\n        D3D12_COLOR_WRITE_ENABLE_RED\\t= 1,\\r\\n        D3D12_COLOR_WRITE_ENABLE_GREEN\\t= 2,\\r\\n        D3D12_COLOR_WRITE_ENABLE_BLUE\\t= 4,\\r\\n        D3D12_COLOR_WRITE_ENABLE_ALPHA\\t= 8,\\r\\n        D3D12_COLOR_WRITE_ENABLE_ALL\\t= ( ( ( D3D12_COLOR_WRITE_ENABLE_RED | D3D12_COLOR_WRITE_ENABLE_GREEN )  | D3D12_COLOR_WRITE_ENABLE_BLUE )  | D3D12_COLOR_WRITE_ENABLE_ALPHA ) \\r\\n    } \\tD3D12_COLOR_WRITE_ENABLE;"},"D3D12_COMMAND_LIST_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":10522,"type":"Enum","value":"typedef\\r\\nenum D3D12_COMMAND_LIST_FLAGS\\r\\n    {\\r\\n        D3D12_COMMAND_LIST_FLAG_NONE\\t= 0\\r\\n    } \\tD3D12_COMMAND_LIST_FLAGS;"},"D3D12_COMMAND_LIST_SUPPORT_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":2293,"type":"Enum","value":"typedef\\r\\nenum D3D12_COMMAND_LIST_SUPPORT_FLAGS\\r\\n    {\\r\\n        D3D12_COMMAND_LIST_SUPPORT_FLAG_NONE\\t= 0,\\r\\n        D3D12_COMMAND_LIST_SUPPORT_FLAG_DIRECT\\t= ( 1 << D3D12_COMMAND_LIST_TYPE_DIRECT ) ,\\r\\n        D3D12_COMMAND_LIST_SUPPORT_FLAG_BUNDLE\\t= ( 1 << D3D12_COMMAND_LIST_TYPE_BUNDLE ) ,\\r\\n        D3D12_COMMAND_LIST_SUPPORT_FLAG_COMPUTE\\t= ( 1 << D3D12_COMMAND_LIST_TYPE_COMPUTE ) ,\\r\\n        D3D12_COMMAND_LIST_SUPPORT_FLAG_COPY\\t= ( 1 << D3D12_COMMAND_LIST_TYPE_COPY ) ,\\r\\n        D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_DECODE\\t= ( 1 << D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE ) ,\\r\\n        D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_PROCESS\\t= ( 1 << D3D12_COMMAND_LIST_TYPE_VIDEO_PROCESS ) ,\\r\\n        D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_ENCODE\\t= ( 1 << D3D12_COMMAND_LIST_TYPE_VIDEO_ENCODE ) \\r\\n    } \\tD3D12_COMMAND_LIST_SUPPORT_FLAGS;"},"D3D12_COMMAND_LIST_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":1227,"type":"Enum","value":"typedef\\r\\nenum D3D12_COMMAND_LIST_TYPE\\r\\n    {\\r\\n        D3D12_COMMAND_LIST_TYPE_DIRECT\\t= 0,\\r\\n        D3D12_COMMAND_LIST_TYPE_BUNDLE\\t= 1,\\r\\n        D3D12_COMMAND_LIST_TYPE_COMPUTE\\t= 2,\\r\\n        D3D12_COMMAND_LIST_TYPE_COPY\\t= 3,\\r\\n        D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE\\t= 4,\\r\\n        D3D12_COMMAND_LIST_TYPE_VIDEO_PROCESS\\t= 5,\\r\\n        D3D12_COMMAND_LIST_TYPE_VIDEO_ENCODE\\t= 6\\r\\n    } \\tD3D12_COMMAND_LIST_TYPE;"},"D3D12_COMMAND_POOL_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":10529,"type":"Enum","value":"typedef\\r\\nenum D3D12_COMMAND_POOL_FLAGS\\r\\n    {\\r\\n        D3D12_COMMAND_POOL_FLAG_NONE\\t= 0\\r\\n    } \\tD3D12_COMMAND_POOL_FLAGS;"},"D3D12_COMMAND_QUEUE_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1255,"type":"Struct","value":"typedef struct D3D12_COMMAND_QUEUE_DESC\\r\\n    {\\r\\n    D3D12_COMMAND_LIST_TYPE Type;\\r\\n    INT Priority;\\r\\n    D3D12_COMMAND_QUEUE_FLAGS Flags;\\r\\n    UINT NodeMask;\\r\\n    } \\tD3D12_COMMAND_QUEUE_DESC;"},"D3D12_COMMAND_QUEUE_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":1239,"type":"Enum","value":"typedef\\r\\nenum D3D12_COMMAND_QUEUE_FLAGS\\r\\n    {\\r\\n        D3D12_COMMAND_QUEUE_FLAG_NONE\\t= 0,\\r\\n        D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT\\t= 0x1\\r\\n    } \\tD3D12_COMMAND_QUEUE_FLAGS;"},"D3D12_COMMAND_QUEUE_PRIORITY":{"comment":"","exp":"","file":"d3d12.h","line":1247,"type":"Enum","value":"typedef\\r\\nenum D3D12_COMMAND_QUEUE_PRIORITY\\r\\n    {\\r\\n        D3D12_COMMAND_QUEUE_PRIORITY_NORMAL\\t= 0,\\r\\n        D3D12_COMMAND_QUEUE_PRIORITY_HIGH\\t= 100,\\r\\n        D3D12_COMMAND_QUEUE_PRIORITY_GLOBAL_REALTIME\\t= 10000\\r\\n    } \\tD3D12_COMMAND_QUEUE_PRIORITY;"},"D3D12_COMMAND_RECORDER_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":10536,"type":"Enum","value":"typedef\\r\\nenum D3D12_COMMAND_RECORDER_FLAGS\\r\\n    {\\r\\n        D3D12_COMMAND_RECORDER_FLAG_NONE\\t= 0\\r\\n    } \\tD3D12_COMMAND_RECORDER_FLAGS;"},"D3D12_COMMAND_SIGNATURE_DESC":{"comment":"","exp":"","file":"d3d12.h","line":3978,"type":"Struct","value":"typedef struct D3D12_COMMAND_SIGNATURE_DESC\\r\\n    {\\r\\n    UINT ByteStride;\\r\\n    UINT NumArgumentDescs;\\r\\n    _Field_size_full_(NumArgumentDescs)  const D3D12_INDIRECT_ARGUMENT_DESC *pArgumentDescs;\\r\\n    UINT NodeMask;\\r\\n    } \\tD3D12_COMMAND_SIGNATURE_DESC;"},"D3D12_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT":{"comment":"","exp":"( 14 )","file":"d3d12.h","line":444,"type":"Integer","value":14},"D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":446,"type":"Integer","value":4},"D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":448,"type":"Integer","value":32},"D3D12_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT":{"comment":"","exp":"( 15 )","file":"d3d12.h","line":450,"type":"Integer","value":15},"D3D12_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":452,"type":"Integer","value":16},"D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":454,"type":"Integer","value":4},"D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT":{"comment":"","exp":"( 15 )","file":"d3d12.h","line":456,"type":"Integer","value":15},"D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":458,"type":"Integer","value":1},"D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":460,"type":"Integer","value":1},"D3D12_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":462,"type":"Integer","value":64},"D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":464,"type":"Integer","value":4},"D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":466,"type":"Integer","value":1},"D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":468,"type":"Integer","value":1},"D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":470,"type":"Integer","value":1},"D3D12_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":472,"type":"Integer","value":32},"D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":474,"type":"Integer","value":1},"D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT":{"comment":"","exp":"( 128 )","file":"d3d12.h","line":476,"type":"Integer","value":128},"D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":478,"type":"Integer","value":1},"D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":480,"type":"Integer","value":1},"D3D12_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT":{"comment":"","exp":"( 128 )","file":"d3d12.h","line":482,"type":"Integer","value":128},"D3D12_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":484,"type":"Integer","value":1},"D3D12_COMMONSHADER_SAMPLER_REGISTER_COUNT":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":486,"type":"Integer","value":16},"D3D12_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":488,"type":"Integer","value":1},"D3D12_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":490,"type":"Integer","value":1},"D3D12_COMMONSHADER_SAMPLER_SLOT_COUNT":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":492,"type":"Integer","value":16},"D3D12_COMMONSHADER_SUBROUTINE_NESTING_LIMIT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":494,"type":"Integer","value":32},"D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":496,"type":"Integer","value":4},"D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":498,"type":"Integer","value":32},"D3D12_COMMONSHADER_TEMP_REGISTER_COUNT":{"comment":"","exp":"( 4096 )","file":"d3d12.h","line":500,"type":"Integer","value":4096},"D3D12_COMMONSHADER_TEMP_REGISTER_READS_PER_INST":{"comment":"","exp":"( 3 )","file":"d3d12.h","line":502,"type":"Integer","value":3},"D3D12_COMMONSHADER_TEMP_REGISTER_READ_PORTS":{"comment":"","exp":"( 3 )","file":"d3d12.h","line":504,"type":"Integer","value":3},"D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX":{"comment":"","exp":"( 10 )","file":"d3d12.h","line":506,"type":"Integer","value":10},"D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN":{"comment":"","exp":"( -10 )","file":"d3d12.h","line":508,"type":"Integer","value":-10},"D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE":{"comment":"","exp":"( -8 )","file":"d3d12.h","line":510,"type":"Integer","value":-8},"D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE":{"comment":"","exp":"( 7 )","file":"d3d12.h","line":512,"type":"Integer","value":7},"D3D12_COMPARISON_FUNC":{"comment":"","exp":"","file":"d3d12.h","line":1342,"type":"Enum","value":"typedef\\r\\nenum D3D12_COMPARISON_FUNC\\r\\n    {\\r\\n        D3D12_COMPARISON_FUNC_NEVER\\t= 1,\\r\\n        D3D12_COMPARISON_FUNC_LESS\\t= 2,\\r\\n        D3D12_COMPARISON_FUNC_EQUAL\\t= 3,\\r\\n        D3D12_COMPARISON_FUNC_LESS_EQUAL\\t= 4,\\r\\n        D3D12_COMPARISON_FUNC_GREATER\\t= 5,\\r\\n        D3D12_COMPARISON_FUNC_NOT_EQUAL\\t= 6,\\r\\n        D3D12_COMPARISON_FUNC_GREATER_EQUAL\\t= 7,\\r\\n        D3D12_COMPARISON_FUNC_ALWAYS\\t= 8\\r\\n    } \\tD3D12_COMPARISON_FUNC;"},"D3D12_COMPUTE_PIPELINE_STATE_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1938,"type":"Struct","value":"typedef struct D3D12_COMPUTE_PIPELINE_STATE_DESC\\r\\n    {\\r\\n    ID3D12RootSignature *pRootSignature;\\r\\n    D3D12_SHADER_BYTECODE CS;\\r\\n    UINT NodeMask;\\r\\n    D3D12_CACHED_PIPELINE_STATE CachedPSO;\\r\\n    D3D12_PIPELINE_STATE_FLAGS Flags;\\r\\n    } \\tD3D12_COMPUTE_PIPELINE_STATE_DESC;"},"D3D12_CONSERVATIVE_RASTERIZATION_MODE":{"comment":"","exp":"","file":"d3d12.h","line":1494,"type":"Enum","value":"typedef\\r\\nenum D3D12_CONSERVATIVE_RASTERIZATION_MODE\\r\\n    {\\r\\n        D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF\\t= 0,\\r\\n        D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON\\t= 1\\r\\n    } \\tD3D12_CONSERVATIVE_RASTERIZATION_MODE;"},"D3D12_CONSERVATIVE_RASTERIZATION_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2047,"type":"Enum","value":"typedef\\r\\nenum D3D12_CONSERVATIVE_RASTERIZATION_TIER\\r\\n    {\\r\\n        D3D12_CONSERVATIVE_RASTERIZATION_TIER_NOT_SUPPORTED\\t= 0,\\r\\n        D3D12_CONSERVATIVE_RASTERIZATION_TIER_1\\t= 1,\\r\\n        D3D12_CONSERVATIVE_RASTERIZATION_TIER_2\\t= 2,\\r\\n        D3D12_CONSERVATIVE_RASTERIZATION_TIER_3\\t= 3\\r\\n    } \\tD3D12_CONSERVATIVE_RASTERIZATION_TIER;"},"D3D12_CONSTANT_BUFFER_DATA_PLACEMENT_ALIGNMENT":{"comment":"","exp":"( 256 )","file":"d3d12.h","line":514,"type":"Integer","value":256},"D3D12_CONSTANT_BUFFER_VIEW_DESC":{"comment":"","exp":"","file":"d3d12.h","line":2981,"type":"Struct","value":"typedef struct D3D12_CONSTANT_BUFFER_VIEW_DESC\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS BufferLocation;\\r\\n    UINT SizeInBytes;\\r\\n    } \\tD3D12_CONSTANT_BUFFER_VIEW_DESC;"},"D3D12_CPU_DESCRIPTOR_HANDLE":{"comment":"","exp":"","file":"d3d12.h","line":3807,"type":"Struct","value":"typedef struct D3D12_CPU_DESCRIPTOR_HANDLE\\r\\n    {\\r\\n    SIZE_T ptr;\\r\\n    } \\tD3D12_CPU_DESCRIPTOR_HANDLE;"},"D3D12_CPU_PAGE_PROPERTY":{"comment":"","exp":"","file":"d3d12.h","line":2448,"type":"Enum","value":"typedef\\r\\nenum D3D12_CPU_PAGE_PROPERTY\\r\\n    {\\r\\n        D3D12_CPU_PAGE_PROPERTY_UNKNOWN\\t= 0,\\r\\n        D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE\\t= 1,\\r\\n        D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE\\t= 2,\\r\\n        D3D12_CPU_PAGE_PROPERTY_WRITE_BACK\\t= 3\\r\\n    } \\tD3D12_CPU_PAGE_PROPERTY;"},"D3D12_CROSS_NODE_SHARING_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2119,"type":"Enum","value":"typedef\\r\\nenum D3D12_CROSS_NODE_SHARING_TIER\\r\\n    {\\r\\n        D3D12_CROSS_NODE_SHARING_TIER_NOT_SUPPORTED\\t= 0,\\r\\n        D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED\\t= 1,\\r\\n        D3D12_CROSS_NODE_SHARING_TIER_1\\t= 2,\\r\\n        D3D12_CROSS_NODE_SHARING_TIER_2\\t= 3,\\r\\n        D3D12_CROSS_NODE_SHARING_TIER_3\\t= 4\\r\\n    } \\tD3D12_CROSS_NODE_SHARING_TIER;"},"D3D12_CS_4_X_BUCKET00_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 256 )","file":"d3d12.h","line":516,"type":"Integer","value":256},"D3D12_CS_4_X_BUCKET00_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":518,"type":"Integer","value":64},"D3D12_CS_4_X_BUCKET01_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 240 )","file":"d3d12.h","line":520,"type":"Integer","value":240},"D3D12_CS_4_X_BUCKET01_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 68 )","file":"d3d12.h","line":522,"type":"Integer","value":68},"D3D12_CS_4_X_BUCKET02_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 224 )","file":"d3d12.h","line":524,"type":"Integer","value":224},"D3D12_CS_4_X_BUCKET02_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 72 )","file":"d3d12.h","line":526,"type":"Integer","value":72},"D3D12_CS_4_X_BUCKET03_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 208 )","file":"d3d12.h","line":528,"type":"Integer","value":208},"D3D12_CS_4_X_BUCKET03_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 76 )","file":"d3d12.h","line":530,"type":"Integer","value":76},"D3D12_CS_4_X_BUCKET04_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 192 )","file":"d3d12.h","line":532,"type":"Integer","value":192},"D3D12_CS_4_X_BUCKET04_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 84 )","file":"d3d12.h","line":534,"type":"Integer","value":84},"D3D12_CS_4_X_BUCKET05_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 176 )","file":"d3d12.h","line":536,"type":"Integer","value":176},"D3D12_CS_4_X_BUCKET05_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 92 )","file":"d3d12.h","line":538,"type":"Integer","value":92},"D3D12_CS_4_X_BUCKET06_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 160 )","file":"d3d12.h","line":540,"type":"Integer","value":160},"D3D12_CS_4_X_BUCKET06_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 100 )","file":"d3d12.h","line":542,"type":"Integer","value":100},"D3D12_CS_4_X_BUCKET07_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 144 )","file":"d3d12.h","line":544,"type":"Integer","value":144},"D3D12_CS_4_X_BUCKET07_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 112 )","file":"d3d12.h","line":546,"type":"Integer","value":112},"D3D12_CS_4_X_BUCKET08_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 128 )","file":"d3d12.h","line":548,"type":"Integer","value":128},"D3D12_CS_4_X_BUCKET08_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 128 )","file":"d3d12.h","line":550,"type":"Integer","value":128},"D3D12_CS_4_X_BUCKET09_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 112 )","file":"d3d12.h","line":552,"type":"Integer","value":112},"D3D12_CS_4_X_BUCKET09_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 144 )","file":"d3d12.h","line":554,"type":"Integer","value":144},"D3D12_CS_4_X_BUCKET10_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 96 )","file":"d3d12.h","line":556,"type":"Integer","value":96},"D3D12_CS_4_X_BUCKET10_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 168 )","file":"d3d12.h","line":558,"type":"Integer","value":168},"D3D12_CS_4_X_BUCKET11_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 80 )","file":"d3d12.h","line":560,"type":"Integer","value":80},"D3D12_CS_4_X_BUCKET11_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 204 )","file":"d3d12.h","line":562,"type":"Integer","value":204},"D3D12_CS_4_X_BUCKET12_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":564,"type":"Integer","value":64},"D3D12_CS_4_X_BUCKET12_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 256 )","file":"d3d12.h","line":566,"type":"Integer","value":256},"D3D12_CS_4_X_BUCKET13_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 48 )","file":"d3d12.h","line":568,"type":"Integer","value":48},"D3D12_CS_4_X_BUCKET13_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 340 )","file":"d3d12.h","line":570,"type":"Integer","value":340},"D3D12_CS_4_X_BUCKET14_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":572,"type":"Integer","value":32},"D3D12_CS_4_X_BUCKET14_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 512 )","file":"d3d12.h","line":574,"type":"Integer","value":512},"D3D12_CS_4_X_BUCKET15_MAX_BYTES_TGSM_WRITABLE_PER_THREAD":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":576,"type":"Integer","value":16},"D3D12_CS_4_X_BUCKET15_MAX_NUM_THREADS_PER_GROUP":{"comment":"","exp":"( 768 )","file":"d3d12.h","line":578,"type":"Integer","value":768},"D3D12_CS_4_X_DISPATCH_MAX_THREAD_GROUPS_IN_Z_DIMENSION":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":580,"type":"Integer","value":1},"D3D12_CS_4_X_RAW_UAV_BYTE_ALIGNMENT":{"comment":"","exp":"( 256 )","file":"d3d12.h","line":582,"type":"Integer","value":256},"D3D12_CS_4_X_THREAD_GROUP_MAX_THREADS_PER_GROUP":{"comment":"","exp":"( 768 )","file":"d3d12.h","line":584,"type":"Integer","value":768},"D3D12_CS_4_X_THREAD_GROUP_MAX_X":{"comment":"","exp":"( 768 )","file":"d3d12.h","line":586,"type":"Integer","value":768},"D3D12_CS_4_X_THREAD_GROUP_MAX_Y":{"comment":"","exp":"( 768 )","file":"d3d12.h","line":588,"type":"Integer","value":768},"D3D12_CS_4_X_UAV_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":590,"type":"Integer","value":1},"D3D12_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION":{"comment":"","exp":"( 65535 )","file":"d3d12.h","line":592,"type":"Integer","value":65535},"D3D12_CS_TGSM_REGISTER_COUNT":{"comment":"","exp":"( 8192 )","file":"d3d12.h","line":594,"type":"Integer","value":8192},"D3D12_CS_TGSM_REGISTER_READS_PER_INST":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":596,"type":"Integer","value":1},"D3D12_CS_TGSM_RESOURCE_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":598,"type":"Integer","value":1},"D3D12_CS_TGSM_RESOURCE_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":600,"type":"Integer","value":1},"D3D12_CS_THREADGROUPID_REGISTER_COMPONENTS":{"comment":"","exp":"( 3 )","file":"d3d12.h","line":602,"type":"Integer","value":3},"D3D12_CS_THREADGROUPID_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":604,"type":"Integer","value":1},"D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":606,"type":"Integer","value":1},"D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":608,"type":"Integer","value":1},"D3D12_CS_THREADIDINGROUP_REGISTER_COMPONENTS":{"comment":"","exp":"( 3 )","file":"d3d12.h","line":610,"type":"Integer","value":3},"D3D12_CS_THREADIDINGROUP_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":612,"type":"Integer","value":1},"D3D12_CS_THREADID_REGISTER_COMPONENTS":{"comment":"","exp":"( 3 )","file":"d3d12.h","line":614,"type":"Integer","value":3},"D3D12_CS_THREADID_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":616,"type":"Integer","value":1},"D3D12_CS_THREAD_GROUP_MAX_THREADS_PER_GROUP":{"comment":"","exp":"( 1024 )","file":"d3d12.h","line":618,"type":"Integer","value":1024},"D3D12_CS_THREAD_GROUP_MAX_X":{"comment":"","exp":"( 1024 )","file":"d3d12.h","line":620,"type":"Integer","value":1024},"D3D12_CS_THREAD_GROUP_MAX_Y":{"comment":"","exp":"( 1024 )","file":"d3d12.h","line":622,"type":"Integer","value":1024},"D3D12_CS_THREAD_GROUP_MAX_Z":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":624,"type":"Integer","value":64},"D3D12_CS_THREAD_GROUP_MIN_X":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":626,"type":"Integer","value":1},"D3D12_CS_THREAD_GROUP_MIN_Y":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":628,"type":"Integer","value":1},"D3D12_CS_THREAD_GROUP_MIN_Z":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":630,"type":"Integer","value":1},"D3D12_CS_THREAD_LOCAL_TEMP_REGISTER_POOL":{"comment":"","exp":"( 16384 )","file":"d3d12.h","line":632,"type":"Integer","value":16384},"D3D12_CULL_MODE":{"comment":"","exp":"","file":"d3d12.h","line":1302,"type":"Enum","value":"typedef\\r\\nenum D3D12_CULL_MODE\\r\\n    {\\r\\n        D3D12_CULL_MODE_NONE\\t= 1,\\r\\n        D3D12_CULL_MODE_FRONT\\t= 2,\\r\\n        D3D12_CULL_MODE_BACK\\t= 3\\r\\n    } \\tD3D12_CULL_MODE;"},"D3D12_DEBUG_COMMAND_LIST_GPU_BASED_VALIDATION_SETTINGS":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":1026,"type":"Struct","value":"typedef struct D3D12_DEBUG_COMMAND_LIST_GPU_BASED_VALIDATION_SETTINGS\\r\\n    {\\r\\n    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE ShaderPatchMode;\\r\\n    } \\tD3D12_DEBUG_COMMAND_LIST_GPU_BASED_VALIDATION_SETTINGS;"},"D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":1020,"type":"Enum","value":"typedef\\r\\nenum D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE\\r\\n    {\\r\\n        D3D12_DEBUG_COMMAND_LIST_PARAMETER_GPU_BASED_VALIDATION_SETTINGS\\t= 0\\r\\n    } \\tD3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE;"},"D3D12_DEBUG_DEVICE_GPU_BASED_VALIDATION_SETTINGS":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":586,"type":"Struct","value":"typedef struct D3D12_DEBUG_DEVICE_GPU_BASED_VALIDATION_SETTINGS\\r\\n    {\\r\\n    UINT MaxMessagesPerCommandList;\\r\\n    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE DefaultShaderPatchMode;\\r\\n    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS PipelineStateCreateFlags;\\r\\n    } \\tD3D12_DEBUG_DEVICE_GPU_BASED_VALIDATION_SETTINGS;"},"D3D12_DEBUG_DEVICE_GPU_SLOWDOWN_PERFORMANCE_FACTOR":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":593,"type":"Struct","value":"typedef struct D3D12_DEBUG_DEVICE_GPU_SLOWDOWN_PERFORMANCE_FACTOR\\r\\n    {\\r\\n    FLOAT SlowdownFactor;\\r\\n    } \\tD3D12_DEBUG_DEVICE_GPU_SLOWDOWN_PERFORMANCE_FACTOR;"},"D3D12_DEBUG_DEVICE_PARAMETER_TYPE":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":546,"type":"Enum","value":"typedef\\r\\nenum D3D12_DEBUG_DEVICE_PARAMETER_TYPE\\r\\n    {\\r\\n        D3D12_DEBUG_DEVICE_PARAMETER_FEATURE_FLAGS\\t= 0,\\r\\n        D3D12_DEBUG_DEVICE_PARAMETER_GPU_BASED_VALIDATION_SETTINGS\\t= ( D3D12_DEBUG_DEVICE_PARAMETER_FEATURE_FLAGS + 1 ) ,\\r\\n        D3D12_DEBUG_DEVICE_PARAMETER_GPU_SLOWDOWN_PERFORMANCE_FACTOR\\t= ( D3D12_DEBUG_DEVICE_PARAMETER_GPU_BASED_VALIDATION_SETTINGS + 1 ) \\r\\n    } \\tD3D12_DEBUG_DEVICE_PARAMETER_TYPE;"},"D3D12_DEBUG_FEATURE":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":554,"type":"Enum","value":"typedef\\r\\nenum D3D12_DEBUG_FEATURE\\r\\n    {\\r\\n        D3D12_DEBUG_FEATURE_NONE\\t= 0,\\r\\n        D3D12_DEBUG_FEATURE_ALLOW_BEHAVIOR_CHANGING_DEBUG_AIDS\\t= 0x1,\\r\\n        D3D12_DEBUG_FEATURE_CONSERVATIVE_RESOURCE_STATE_TRACKING\\t= 0x2,\\r\\n        D3D12_DEBUG_FEATURE_DISABLE_VIRTUALIZED_BUNDLES_VALIDATION\\t= 0x4,\\r\\n        D3D12_DEBUG_FEATURE_EMULATE_WINDOWS7\\t= 0x8\\r\\n    } \\tD3D12_DEBUG_FEATURE;"},"D3D12_DEFAULT_BLEND_FACTOR_ALPHA":{"comment":"","exp":"( 1.0f )","file":"d3d12.h","line":634,"type":"Float","value":1.0},"D3D12_DEFAULT_BLEND_FACTOR_BLUE":{"comment":"","exp":"( 1.0f )","file":"d3d12.h","line":635,"type":"Float","value":1.0},"D3D12_DEFAULT_BLEND_FACTOR_GREEN":{"comment":"","exp":"( 1.0f )","file":"d3d12.h","line":636,"type":"Float","value":1.0},"D3D12_DEFAULT_BLEND_FACTOR_RED":{"comment":"","exp":"( 1.0f )","file":"d3d12.h","line":637,"type":"Float","value":1.0},"D3D12_DEFAULT_BORDER_COLOR_COMPONENT":{"comment":"","exp":"( 0.0f )","file":"d3d12.h","line":638,"type":"Float","value":0.0},"D3D12_DEFAULT_DEPTH_BIAS":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":639,"type":"Integer","value":0},"D3D12_DEFAULT_DEPTH_BIAS_CLAMP":{"comment":"","exp":"( 0.0f )","file":"d3d12.h","line":641,"type":"Float","value":0.0},"D3D12_DEFAULT_MAX_ANISOTROPY":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":642,"type":"Integer","value":16},"D3D12_DEFAULT_MIP_LOD_BIAS":{"comment":"","exp":"( 0.0f )","file":"d3d12.h","line":644,"type":"Float","value":0.0},"D3D12_DEFAULT_MSAA_RESOURCE_PLACEMENT_ALIGNMENT":{"comment":"","exp":"( 4194304 )","file":"d3d12.h","line":645,"type":"Integer","value":4194304},"D3D12_DEFAULT_RENDER_TARGET_ARRAY_INDEX":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":647,"type":"Integer","value":0},"D3D12_DEFAULT_RESOURCE_PLACEMENT_ALIGNMENT":{"comment":"","exp":"( 65536 )","file":"d3d12.h","line":649,"type":"Integer","value":65536},"D3D12_DEFAULT_SAMPLE_MASK":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":651,"type":"Integer","value":4294967295},"D3D12_DEFAULT_SCISSOR_ENDX":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":653,"type":"Integer","value":0},"D3D12_DEFAULT_SCISSOR_ENDY":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":655,"type":"Integer","value":0},"D3D12_DEFAULT_SCISSOR_STARTX":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":657,"type":"Integer","value":0},"D3D12_DEFAULT_SCISSOR_STARTY":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":659,"type":"Integer","value":0},"D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING":{"comment":"","exp":"D3D12_ENCODE_SHADER_4_COMPONENT_MAPPING(0,1,2,3)","file":"d3d12.h","line":2853,"type":"Other","value":"D3D12_ENCODE_SHADER_4_COMPONENT_MAPPING(0,1,2,3)"},"D3D12_DEFAULT_SLOPE_SCALED_DEPTH_BIAS":{"comment":"","exp":"( 0.0f )","file":"d3d12.h","line":661,"type":"Float","value":0.0},"D3D12_DEFAULT_STENCIL_READ_MASK":{"comment":"","exp":"( 0xff )","file":"d3d12.h","line":662,"type":"Integer","value":255},"D3D12_DEFAULT_STENCIL_REFERENCE":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":664,"type":"Integer","value":0},"D3D12_DEFAULT_STENCIL_WRITE_MASK":{"comment":"","exp":"( 0xff )","file":"d3d12.h","line":666,"type":"Integer","value":255},"D3D12_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":668,"type":"Integer","value":0},"D3D12_DEFAULT_VIEWPORT_HEIGHT":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":670,"type":"Integer","value":0},"D3D12_DEFAULT_VIEWPORT_MAX_DEPTH":{"comment":"","exp":"( 0.0f )","file":"d3d12.h","line":672,"type":"Float","value":0.0},"D3D12_DEFAULT_VIEWPORT_MIN_DEPTH":{"comment":"","exp":"( 0.0f )","file":"d3d12.h","line":673,"type":"Float","value":0.0},"D3D12_DEFAULT_VIEWPORT_TOPLEFTX":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":674,"type":"Integer","value":0},"D3D12_DEFAULT_VIEWPORT_TOPLEFTY":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":676,"type":"Integer","value":0},"D3D12_DEFAULT_VIEWPORT_WIDTH":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":678,"type":"Integer","value":0},"D3D12_DEPTH_STENCILOP_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1375,"type":"Struct","value":"typedef struct D3D12_DEPTH_STENCILOP_DESC\\r\\n    {\\r\\n    D3D12_STENCIL_OP StencilFailOp;\\r\\n    D3D12_STENCIL_OP StencilDepthFailOp;\\r\\n    D3D12_STENCIL_OP StencilPassOp;\\r\\n    D3D12_COMPARISON_FUNC StencilFunc;\\r\\n    } \\tD3D12_DEPTH_STENCILOP_DESC;"},"D3D12_DEPTH_STENCIL_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1383,"type":"Struct","value":"typedef struct D3D12_DEPTH_STENCIL_DESC\\r\\n    {\\r\\n    BOOL DepthEnable;\\r\\n    D3D12_DEPTH_WRITE_MASK DepthWriteMask;\\r\\n    D3D12_COMPARISON_FUNC DepthFunc;\\r\\n    BOOL StencilEnable;\\r\\n    UINT8 StencilReadMask;\\r\\n    UINT8 StencilWriteMask;\\r\\n    D3D12_DEPTH_STENCILOP_DESC FrontFace;\\r\\n    D3D12_DEPTH_STENCILOP_DESC BackFace;\\r\\n    } \\tD3D12_DEPTH_STENCIL_DESC;"},"D3D12_DEPTH_STENCIL_DESC1":{"comment":"","exp":"","file":"d3d12.h","line":1395,"type":"Struct","value":"typedef struct D3D12_DEPTH_STENCIL_DESC1\\r\\n    {\\r\\n    BOOL DepthEnable;\\r\\n    D3D12_DEPTH_WRITE_MASK DepthWriteMask;\\r\\n    D3D12_COMPARISON_FUNC DepthFunc;\\r\\n    BOOL StencilEnable;\\r\\n    UINT8 StencilReadMask;\\r\\n    UINT8 StencilWriteMask;\\r\\n    D3D12_DEPTH_STENCILOP_DESC FrontFace;\\r\\n    D3D12_DEPTH_STENCILOP_DESC BackFace;\\r\\n    BOOL DepthBoundsTestEnable;\\r\\n    } \\tD3D12_DEPTH_STENCIL_DESC1;"},"D3D12_DEPTH_STENCIL_VALUE":{"comment":"","exp":"","file":"d3d12.h","line":2573,"type":"Struct","value":"typedef struct D3D12_DEPTH_STENCIL_VALUE\\r\\n    {\\r\\n    FLOAT Depth;\\r\\n    UINT8 Stencil;\\r\\n    } \\tD3D12_DEPTH_STENCIL_VALUE;"},"D3D12_DEPTH_STENCIL_VIEW_DESC":{"comment":"","exp":"","file":"d3d12.h","line":3328,"type":"Struct","value":"typedef struct D3D12_DEPTH_STENCIL_VIEW_DESC\\r\\n    {\\r\\n    DXGI_FORMAT Format;\\r\\n    D3D12_DSV_DIMENSION ViewDimension;\\r\\n    D3D12_DSV_FLAGS Flags;\\r\\n    union \\r\\n        {\\r\\n        D3D12_TEX1D_DSV Texture1D;\\r\\n        D3D12_TEX1D_ARRAY_DSV Texture1DArray;\\r\\n        D3D12_TEX2D_DSV Texture2D;\\r\\n        D3D12_TEX2D_ARRAY_DSV Texture2DArray;\\r\\n        D3D12_TEX2DMS_DSV Texture2DMS;\\r\\n        D3D12_TEX2DMS_ARRAY_DSV Texture2DMSArray;\\r\\n        } \\t;\\r\\n    } \\tD3D12_DEPTH_STENCIL_VIEW_DESC;"},"D3D12_DEPTH_WRITE_MASK":{"comment":"","exp":"","file":"d3d12.h","line":1355,"type":"Enum","value":"typedef\\r\\nenum D3D12_DEPTH_WRITE_MASK\\r\\n    {\\r\\n        D3D12_DEPTH_WRITE_MASK_ZERO\\t= 0,\\r\\n        D3D12_DEPTH_WRITE_MASK_ALL\\t= 1\\r\\n    } \\tD3D12_DEPTH_WRITE_MASK;"},"D3D12_DESCRIPTOR_HEAP_DESC":{"comment":"","exp":"","file":"d3d12.h","line":3380,"type":"Struct","value":"typedef struct D3D12_DESCRIPTOR_HEAP_DESC\\r\\n    {\\r\\n    D3D12_DESCRIPTOR_HEAP_TYPE Type;\\r\\n    UINT NumDescriptors;\\r\\n    D3D12_DESCRIPTOR_HEAP_FLAGS Flags;\\r\\n    UINT NodeMask;\\r\\n    } \\tD3D12_DESCRIPTOR_HEAP_DESC;"},"D3D12_DESCRIPTOR_HEAP_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":3372,"type":"Enum","value":"typedef\\r\\nenum D3D12_DESCRIPTOR_HEAP_FLAGS\\r\\n    {\\r\\n        D3D12_DESCRIPTOR_HEAP_FLAG_NONE\\t= 0,\\r\\n        D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE\\t= 0x1\\r\\n    } \\tD3D12_DESCRIPTOR_HEAP_FLAGS;"},"D3D12_DESCRIPTOR_HEAP_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":3362,"type":"Enum","value":"typedef\\r\\nenum D3D12_DESCRIPTOR_HEAP_TYPE\\r\\n    {\\r\\n        D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV\\t= 0,\\r\\n        D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER\\t= ( D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV + 1 ) ,\\r\\n        D3D12_DESCRIPTOR_HEAP_TYPE_RTV\\t= ( D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER + 1 ) ,\\r\\n        D3D12_DESCRIPTOR_HEAP_TYPE_DSV\\t= ( D3D12_DESCRIPTOR_HEAP_TYPE_RTV + 1 ) ,\\r\\n        D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES\\t= ( D3D12_DESCRIPTOR_HEAP_TYPE_DSV + 1 ) \\r\\n    } \\tD3D12_DESCRIPTOR_HEAP_TYPE;"},"D3D12_DESCRIPTOR_RANGE":{"comment":"","exp":"","file":"d3d12.h","line":3397,"type":"Struct","value":"typedef struct D3D12_DESCRIPTOR_RANGE\\r\\n    {\\r\\n    D3D12_DESCRIPTOR_RANGE_TYPE RangeType;\\r\\n    UINT NumDescriptors;\\r\\n    UINT BaseShaderRegister;\\r\\n    UINT RegisterSpace;\\r\\n    UINT OffsetInDescriptorsFromTableStart;\\r\\n    } \\tD3D12_DESCRIPTOR_RANGE;"},"D3D12_DESCRIPTOR_RANGE1":{"comment":"","exp":"","file":"d3d12.h","line":3523,"type":"Struct","value":"typedef struct D3D12_DESCRIPTOR_RANGE1\\r\\n    {\\r\\n    D3D12_DESCRIPTOR_RANGE_TYPE RangeType;\\r\\n    UINT NumDescriptors;\\r\\n    UINT BaseShaderRegister;\\r\\n    UINT RegisterSpace;\\r\\n    D3D12_DESCRIPTOR_RANGE_FLAGS Flags;\\r\\n    UINT OffsetInDescriptorsFromTableStart;\\r\\n    } \\tD3D12_DESCRIPTOR_RANGE1;"},"D3D12_DESCRIPTOR_RANGE_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":3511,"type":"Enum","value":"typedef\\r\\nenum D3D12_DESCRIPTOR_RANGE_FLAGS\\r\\n    {\\r\\n        D3D12_DESCRIPTOR_RANGE_FLAG_NONE\\t= 0,\\r\\n        D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE\\t= 0x1,\\r\\n        D3D12_DESCRIPTOR_RANGE_FLAG_DATA_VOLATILE\\t= 0x2,\\r\\n        D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE\\t= 0x4,\\r\\n        D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC\\t= 0x8,\\r\\n        D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS\\t= 0x10000\\r\\n    } \\tD3D12_DESCRIPTOR_RANGE_FLAGS;"},"D3D12_DESCRIPTOR_RANGE_OFFSET_APPEND":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":680,"type":"Integer","value":4294967295},"D3D12_DESCRIPTOR_RANGE_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":3388,"type":"Enum","value":"typedef\\r\\nenum D3D12_DESCRIPTOR_RANGE_TYPE\\r\\n    {\\r\\n        D3D12_DESCRIPTOR_RANGE_TYPE_SRV\\t= 0,\\r\\n        D3D12_DESCRIPTOR_RANGE_TYPE_UAV\\t= ( D3D12_DESCRIPTOR_RANGE_TYPE_SRV + 1 ) ,\\r\\n        D3D12_DESCRIPTOR_RANGE_TYPE_CBV\\t= ( D3D12_DESCRIPTOR_RANGE_TYPE_UAV + 1 ) ,\\r\\n        D3D12_DESCRIPTOR_RANGE_TYPE_SAMPLER\\t= ( D3D12_DESCRIPTOR_RANGE_TYPE_CBV + 1 ) \\r\\n    } \\tD3D12_DESCRIPTOR_RANGE_TYPE;"},"D3D12_DEVICE_REMOVED_EXTENDED_DATA":{"comment":"","exp":"","file":"d3d12.h","line":13363,"type":"Struct","value":"typedef struct D3D12_DEVICE_REMOVED_EXTENDED_DATA\\r\\n    {\\r\\n    _In_  D3D12_DRED_FLAGS Flags;\\r\\n    _Out_  D3D12_AUTO_BREADCRUMB_NODE *pHeadAutoBreadcrumbNode;\\r\\n    } \\tD3D12_DEVICE_REMOVED_EXTENDED_DATA;"},"D3D12_DEVICE_REMOVED_EXTENDED_DATA1":{"comment":"","exp":"","file":"d3d12.h","line":13442,"type":"Struct","value":"typedef struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1\\r\\n    {\\r\\n    HRESULT DeviceRemovedReason;\\r\\n    D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT AutoBreadcrumbsOutput;\\r\\n    D3D12_DRED_PAGE_FAULT_OUTPUT PageFaultOutput;\\r\\n    } \\tD3D12_DEVICE_REMOVED_EXTENDED_DATA1;"},"D3D12_DEVICE_REMOVED_EXTENDED_DATA2":{"comment":"","exp":"","file":"d3d12.h","line":13449,"type":"Struct","value":"typedef struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2\\r\\n    {\\r\\n    HRESULT DeviceRemovedReason;\\r\\n    D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1 AutoBreadcrumbsOutput;\\r\\n    D3D12_DRED_PAGE_FAULT_OUTPUT1 PageFaultOutput;\\r\\n    } \\tD3D12_DEVICE_REMOVED_EXTENDED_DATA2;"},"D3D12_DISCARD_REGION":{"comment":"","exp":"","file":"d3d12.h","line":3819,"type":"Struct","value":"typedef struct D3D12_DISCARD_REGION\\r\\n    {\\r\\n    UINT NumRects;\\r\\n    _In_reads_(NumRects)  const D3D12_RECT *pRects;\\r\\n    UINT FirstSubresource;\\r\\n    UINT NumSubresources;\\r\\n    } \\tD3D12_DISCARD_REGION;"},"D3D12_DISPATCH_ARGUMENTS":{"comment":"","exp":"","file":"d3d12.h","line":3911,"type":"Struct","value":"typedef struct D3D12_DISPATCH_ARGUMENTS\\r\\n    {\\r\\n    UINT ThreadGroupCountX;\\r\\n    UINT ThreadGroupCountY;\\r\\n    UINT ThreadGroupCountZ;\\r\\n    } \\tD3D12_DISPATCH_ARGUMENTS;"},"D3D12_DISPATCH_MESH_ARGUMENTS":{"comment":"","exp":"","file":"d3d12.h","line":19443,"type":"Struct","value":"typedef struct D3D12_DISPATCH_MESH_ARGUMENTS\\r\\n    {\\r\\n    UINT ThreadGroupCountX;\\r\\n    UINT ThreadGroupCountY;\\r\\n    UINT ThreadGroupCountZ;\\r\\n    } \\tD3D12_DISPATCH_MESH_ARGUMENTS;"},"D3D12_DISPATCH_RAYS_DESC":{"comment":"","exp":"","file":"d3d12.h","line":17642,"type":"Struct","value":"typedef struct D3D12_DISPATCH_RAYS_DESC\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS_RANGE RayGenerationShaderRecord;\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE MissShaderTable;\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE HitGroupTable;\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE CallableShaderTable;\\r\\n    UINT Width;\\r\\n    UINT Height;\\r\\n    UINT Depth;\\r\\n    } \\tD3D12_DISPATCH_RAYS_DESC;"},"D3D12_DRAW_ARGUMENTS":{"comment":"","exp":"","file":"d3d12.h","line":3894,"type":"Struct","value":"typedef struct D3D12_DRAW_ARGUMENTS\\r\\n    {\\r\\n    UINT VertexCountPerInstance;\\r\\n    UINT InstanceCount;\\r\\n    UINT StartVertexLocation;\\r\\n    UINT StartInstanceLocation;\\r\\n    } \\tD3D12_DRAW_ARGUMENTS;"},"D3D12_DRAW_INDEXED_ARGUMENTS":{"comment":"","exp":"","file":"d3d12.h","line":3902,"type":"Struct","value":"typedef struct D3D12_DRAW_INDEXED_ARGUMENTS\\r\\n    {\\r\\n    UINT IndexCountPerInstance;\\r\\n    UINT InstanceCount;\\r\\n    UINT StartIndexLocation;\\r\\n    INT BaseVertexLocation;\\r\\n    UINT StartInstanceLocation;\\r\\n    } \\tD3D12_DRAW_INDEXED_ARGUMENTS;"},"D3D12_DRED_ALLOCATION_NODE":{"comment":"","exp":"","file":"d3d12.h","line":13401,"type":"Struct","value":"typedef struct D3D12_DRED_ALLOCATION_NODE\\r\\n    {\\r\\n    const char *ObjectNameA;\\r\\n    const wchar_t *ObjectNameW;\\r\\n    D3D12_DRED_ALLOCATION_TYPE AllocationType;\\r\\n    const struct D3D12_DRED_ALLOCATION_NODE *pNext;\\r\\n    } \\tD3D12_DRED_ALLOCATION_NODE;"},"D3D12_DRED_ALLOCATION_NODE1":{"comment":"","exp":"","file":"d3d12.h","line":13409,"type":"Struct","value":"typedef struct D3D12_DRED_ALLOCATION_NODE1\\r\\n    {\\r\\n    const char *ObjectNameA;\\r\\n    const wchar_t *ObjectNameW;\\r\\n    D3D12_DRED_ALLOCATION_TYPE AllocationType;\\r\\n    const struct D3D12_DRED_ALLOCATION_NODE1 *pNext;\\r\\n    const IUnknown *pObject;\\r\\n    } \\tD3D12_DRED_ALLOCATION_NODE1;"},"D3D12_DRED_ALLOCATION_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":13369,"type":"Enum","value":"typedef\\r\\nenum D3D12_DRED_ALLOCATION_TYPE\\r\\n    {\\r\\n        D3D12_DRED_ALLOCATION_TYPE_COMMAND_QUEUE\\t= 19,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_COMMAND_ALLOCATOR\\t= 20,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_PIPELINE_STATE\\t= 21,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_COMMAND_LIST\\t= 22,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_FENCE\\t= 23,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_DESCRIPTOR_HEAP\\t= 24,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_HEAP\\t= 25,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_QUERY_HEAP\\t= 27,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_COMMAND_SIGNATURE\\t= 28,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_PIPELINE_LIBRARY\\t= 29,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER\\t= 30,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_VIDEO_PROCESSOR\\t= 32,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_RESOURCE\\t= 34,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_PASS\\t= 35,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSION\\t= 36,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSIONPOLICY\\t= 37,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_PROTECTEDRESOURCESESSION\\t= 38,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER_HEAP\\t= 39,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_COMMAND_POOL\\t= 40,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_COMMAND_RECORDER\\t= 41,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_STATE_OBJECT\\t= 42,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_METACOMMAND\\t= 43,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_SCHEDULINGGROUP\\t= 44,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_ESTIMATOR\\t= 45,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_VECTOR_HEAP\\t= 46,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_VIDEO_EXTENSION_COMMAND\\t= 47,\\r\\n        D3D12_DRED_ALLOCATION_TYPE_INVALID\\t= 0xffffffff\\r\\n    } \\tD3D12_DRED_ALLOCATION_TYPE;"},"D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT":{"comment":"","exp":"","file":"d3d12.h","line":13418,"type":"Struct","value":"typedef struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT\\r\\n    {\\r\\n    _Out_  const D3D12_AUTO_BREADCRUMB_NODE *pHeadAutoBreadcrumbNode;\\r\\n    } \\tD3D12_DRED_AUTO_BREADCRUMBS_OUTPUT;"},"D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1":{"comment":"","exp":"","file":"d3d12.h","line":13423,"type":"Struct","value":"typedef struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1\\r\\n    {\\r\\n    _Out_  const D3D12_AUTO_BREADCRUMB_NODE1 *pHeadAutoBreadcrumbNode;\\r\\n    } \\tD3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1;"},"D3D12_DRED_BREADCRUMB_CONTEXT":{"comment":"","exp":"","file":"d3d12.h","line":13316,"type":"Struct","value":"typedef struct D3D12_DRED_BREADCRUMB_CONTEXT\\r\\n    {\\r\\n    UINT BreadcrumbIndex;\\r\\n    const wchar_t *pContextString;\\r\\n    } \\tD3D12_DRED_BREADCRUMB_CONTEXT;"},"D3D12_DRED_ENABLEMENT":{"comment":"","exp":"","file":"d3d12.h","line":13355,"type":"Enum","value":"typedef\\r\\nenum D3D12_DRED_ENABLEMENT\\r\\n    {\\r\\n        D3D12_DRED_ENABLEMENT_SYSTEM_CONTROLLED\\t= 0,\\r\\n        D3D12_DRED_ENABLEMENT_FORCED_OFF\\t= 1,\\r\\n        D3D12_DRED_ENABLEMENT_FORCED_ON\\t= 2\\r\\n    } \\tD3D12_DRED_ENABLEMENT;"},"D3D12_DRED_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":13346,"type":"Enum","value":"typedef\\r\\nenum D3D12_DRED_FLAGS\\r\\n    {\\r\\n        D3D12_DRED_FLAG_NONE\\t= 0,\\r\\n        D3D12_DRED_FLAG_FORCE_ENABLE\\t= 1,\\r\\n        D3D12_DRED_FLAG_DISABLE_AUTOBREADCRUMBS\\t= 2\\r\\n    } \\tD3D12_DRED_FLAGS;"},"D3D12_DRED_PAGE_FAULT_OUTPUT":{"comment":"","exp":"","file":"d3d12.h","line":13428,"type":"Struct","value":"typedef struct D3D12_DRED_PAGE_FAULT_OUTPUT\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS PageFaultVA;\\r\\n    _Out_  const D3D12_DRED_ALLOCATION_NODE *pHeadExistingAllocationNode;\\r\\n    _Out_  const D3D12_DRED_ALLOCATION_NODE *pHeadRecentFreedAllocationNode;\\r\\n    } \\tD3D12_DRED_PAGE_FAULT_OUTPUT;"},"D3D12_DRED_PAGE_FAULT_OUTPUT1":{"comment":"","exp":"","file":"d3d12.h","line":13435,"type":"Struct","value":"typedef struct D3D12_DRED_PAGE_FAULT_OUTPUT1\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS PageFaultVA;\\r\\n    _Out_  const D3D12_DRED_ALLOCATION_NODE1 *pHeadExistingAllocationNode;\\r\\n    _Out_  const D3D12_DRED_ALLOCATION_NODE1 *pHeadRecentFreedAllocationNode;\\r\\n    } \\tD3D12_DRED_PAGE_FAULT_OUTPUT1;"},"D3D12_DRED_VERSION":{"comment":"","exp":"","file":"d3d12.h","line":13338,"type":"Enum","value":"typedef\\r\\nenum D3D12_DRED_VERSION\\r\\n    {\\r\\n        D3D12_DRED_VERSION_1_0\\t= 0x1,\\r\\n        D3D12_DRED_VERSION_1_1\\t= 0x2,\\r\\n        D3D12_DRED_VERSION_1_2\\t= 0x3\\r\\n    } \\tD3D12_DRED_VERSION;"},"D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS":{"comment":"","exp":"","file":"d3d12.h","line":12447,"type":"Enum","value":"typedef\\r\\nenum D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS\\r\\n    {\\r\\n        D3D12_DRIVER_MATCHING_IDENTIFIER_COMPATIBLE_WITH_DEVICE\\t= 0,\\r\\n        D3D12_DRIVER_MATCHING_IDENTIFIER_UNSUPPORTED_TYPE\\t= 0x1,\\r\\n        D3D12_DRIVER_MATCHING_IDENTIFIER_UNRECOGNIZED\\t= 0x2,\\r\\n        D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_VERSION\\t= 0x3,\\r\\n        D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_TYPE\\t= 0x4\\r\\n    } \\tD3D12_DRIVER_MATCHING_IDENTIFIER_STATUS;"},"D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_END":{"comment":"","exp":"( 0xfffffff7 )","file":"d3d12.h","line":682,"type":"Integer","value":4294967287},"D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_START":{"comment":"","exp":"( 0xfffffff0 )","file":"d3d12.h","line":684,"type":"Integer","value":4294967280},"D3D12_DSV_DIMENSION":{"comment":"","exp":"","file":"d3d12.h","line":3316,"type":"Enum","value":"typedef\\r\\nenum D3D12_DSV_DIMENSION\\r\\n    {\\r\\n        D3D12_DSV_DIMENSION_UNKNOWN\\t= 0,\\r\\n        D3D12_DSV_DIMENSION_TEXTURE1D\\t= 1,\\r\\n        D3D12_DSV_DIMENSION_TEXTURE1DARRAY\\t= 2,\\r\\n        D3D12_DSV_DIMENSION_TEXTURE2D\\t= 3,\\r\\n        D3D12_DSV_DIMENSION_TEXTURE2DARRAY\\t= 4,\\r\\n        D3D12_DSV_DIMENSION_TEXTURE2DMS\\t= 5,\\r\\n        D3D12_DSV_DIMENSION_TEXTURE2DMSARRAY\\t= 6\\r\\n    } \\tD3D12_DSV_DIMENSION;"},"D3D12_DSV_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":3307,"type":"Enum","value":"typedef\\r\\nenum D3D12_DSV_FLAGS\\r\\n    {\\r\\n        D3D12_DSV_FLAG_NONE\\t= 0,\\r\\n        D3D12_DSV_FLAG_READ_ONLY_DEPTH\\t= 0x1,\\r\\n        D3D12_DSV_FLAG_READ_ONLY_STENCIL\\t= 0x2\\r\\n    } \\tD3D12_DSV_FLAGS;"},"D3D12_DS_INPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS":{"comment":"","exp":"( 3968 )","file":"d3d12.h","line":686,"type":"Integer","value":3968},"D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":688,"type":"Integer","value":4},"D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":690,"type":"Integer","value":32},"D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":692,"type":"Integer","value":32},"D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":694,"type":"Integer","value":2},"D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":696,"type":"Integer","value":1},"D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENTS":{"comment":"","exp":"( 3 )","file":"d3d12.h","line":698,"type":"Integer","value":3},"D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":700,"type":"Integer","value":32},"D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":702,"type":"Integer","value":1},"D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":704,"type":"Integer","value":2},"D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":706,"type":"Integer","value":1},"D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":708,"type":"Integer","value":4},"D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":710,"type":"Integer","value":32},"D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":712,"type":"Integer","value":32},"D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":714,"type":"Integer","value":2},"D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":716,"type":"Integer","value":1},"D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":718,"type":"Integer","value":1},"D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":720,"type":"Integer","value":32},"D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":722,"type":"Integer","value":1},"D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":724,"type":"Integer","value":2},"D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":726,"type":"Integer","value":1},"D3D12_DS_OUTPUT_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":728,"type":"Integer","value":4},"D3D12_DS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":730,"type":"Integer","value":32},"D3D12_DS_OUTPUT_REGISTER_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":732,"type":"Integer","value":32},"D3D12_DXIL_LIBRARY_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12198,"type":"Struct","value":"typedef struct D3D12_DXIL_LIBRARY_DESC\\r\\n    {\\r\\n    D3D12_SHADER_BYTECODE DXILLibrary;\\r\\n    UINT NumExports;\\r\\n    _In_reads_(NumExports)  D3D12_EXPORT_DESC *pExports;\\r\\n    } \\tD3D12_DXIL_LIBRARY_DESC;"},"D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION":{"comment":"","exp":"","file":"d3d12.h","line":12219,"type":"Struct","value":"typedef struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION\\r\\n    {\\r\\n    LPCWSTR SubobjectToAssociate;\\r\\n    UINT NumExports;\\r\\n    _In_reads_(NumExports)  LPCWSTR *pExports;\\r\\n    } \\tD3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION;"},"D3D12_ELEMENTS_LAYOUT":{"comment":"","exp":"","file":"d3d12.h","line":12385,"type":"Enum","value":"typedef\\r\\nenum D3D12_ELEMENTS_LAYOUT\\r\\n    {\\r\\n        D3D12_ELEMENTS_LAYOUT_ARRAY\\t= 0,\\r\\n        D3D12_ELEMENTS_LAYOUT_ARRAY_OF_POINTERS\\t= 0x1\\r\\n    } \\tD3D12_ELEMENTS_LAYOUT;"},"D3D12_EXISTING_COLLECTION_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12205,"type":"Struct","value":"typedef struct D3D12_EXISTING_COLLECTION_DESC\\r\\n    {\\r\\n    ID3D12StateObject *pExistingCollection;\\r\\n    UINT NumExports;\\r\\n    _In_reads_(NumExports)  D3D12_EXPORT_DESC *pExports;\\r\\n    } \\tD3D12_EXISTING_COLLECTION_DESC;"},"D3D12_EXPORT_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12191,"type":"Struct","value":"typedef struct D3D12_EXPORT_DESC\\r\\n    {\\r\\n    LPCWSTR Name;\\r\\n    _In_opt_  LPCWSTR ExportToRename;\\r\\n    D3D12_EXPORT_FLAGS Flags;\\r\\n    } \\tD3D12_EXPORT_DESC;"},"D3D12_EXPORT_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":12184,"type":"Enum","value":"typedef\\r\\nenum D3D12_EXPORT_FLAGS\\r\\n    {\\r\\n        D3D12_EXPORT_FLAG_NONE\\t= 0\\r\\n    } \\tD3D12_EXPORT_FLAGS;"},"D3D12_FEATURE":{"comment":"","exp":"","file":"d3d12.h","line":1989,"type":"Enum","value":"typedef\\r\\nenum D3D12_FEATURE\\r\\n    {\\r\\n        D3D12_FEATURE_D3D12_OPTIONS\\t= 0,\\r\\n        D3D12_FEATURE_ARCHITECTURE\\t= 1,\\r\\n        D3D12_FEATURE_FEATURE_LEVELS\\t= 2,\\r\\n        D3D12_FEATURE_FORMAT_SUPPORT\\t= 3,\\r\\n        D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS\\t= 4,\\r\\n        D3D12_FEATURE_FORMAT_INFO\\t= 5,\\r\\n        D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT\\t= 6,\\r\\n        D3D12_FEATURE_SHADER_MODEL\\t= 7,\\r\\n        D3D12_FEATURE_D3D12_OPTIONS1\\t= 8,\\r\\n        D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT\\t= 10,\\r\\n        D3D12_FEATURE_ROOT_SIGNATURE\\t= 12,\\r\\n        D3D12_FEATURE_ARCHITECTURE1\\t= 16,\\r\\n        D3D12_FEATURE_D3D12_OPTIONS2\\t= 18,\\r\\n        D3D12_FEATURE_SHADER_CACHE\\t= 19,\\r\\n        D3D12_FEATURE_COMMAND_QUEUE_PRIORITY\\t= 20,\\r\\n        D3D12_FEATURE_D3D12_OPTIONS3\\t= 21,\\r\\n        D3D12_FEATURE_EXISTING_HEAPS\\t= 22,\\r\\n        D3D12_FEATURE_D3D12_OPTIONS4\\t= 23,\\r\\n        D3D12_FEATURE_SERIALIZATION\\t= 24,\\r\\n        D3D12_FEATURE_CROSS_NODE\\t= 25,\\r\\n        D3D12_FEATURE_D3D12_OPTIONS5\\t= 27,\\r\\n        D3D12_FEATURE_D3D12_OPTIONS6\\t= 30,\\r\\n        D3D12_FEATURE_QUERY_META_COMMAND\\t= 31,\\r\\n        D3D12_FEATURE_D3D12_OPTIONS7\\t= 32,\\r\\n        D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT\\t= 33,\\r\\n        D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES\\t= 34\\r\\n    } \\tD3D12_FEATURE;"},"D3D12_FEATURE_DATA_ARCHITECTURE":{"comment":"","exp":"","file":"d3d12.h","line":2201,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_ARCHITECTURE\\r\\n    {\\r\\n    _In_  UINT NodeIndex;\\r\\n    _Out_  BOOL TileBasedRenderer;\\r\\n    _Out_  BOOL UMA;\\r\\n    _Out_  BOOL CacheCoherentUMA;\\r\\n    } \\tD3D12_FEATURE_DATA_ARCHITECTURE;"},"D3D12_FEATURE_DATA_ARCHITECTURE1":{"comment":"","exp":"","file":"d3d12.h","line":2209,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_ARCHITECTURE1\\r\\n    {\\r\\n    _In_  UINT NodeIndex;\\r\\n    _Out_  BOOL TileBasedRenderer;\\r\\n    _Out_  BOOL UMA;\\r\\n    _Out_  BOOL CacheCoherentUMA;\\r\\n    _Out_  BOOL IsolatedMMU;\\r\\n    } \\tD3D12_FEATURE_DATA_ARCHITECTURE1;"},"D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY":{"comment":"","exp":"","file":"d3d12.h","line":2286,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY\\r\\n    {\\r\\n    _In_  D3D12_COMMAND_LIST_TYPE CommandListType;\\r\\n    _In_  UINT Priority;\\r\\n    _Out_  BOOL PriorityForTypeIsSupported;\\r\\n    } \\tD3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY;"},"D3D12_FEATURE_DATA_CROSS_NODE":{"comment":"","exp":"","file":"d3d12.h","line":2349,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_CROSS_NODE\\r\\n    {\\r\\n    D3D12_CROSS_NODE_SHARING_TIER SharingTier;\\r\\n    BOOL AtomicShaderInstructions;\\r\\n    } \\tD3D12_FEATURE_DATA_CROSS_NODE;"},"D3D12_FEATURE_DATA_D3D12_OPTIONS":{"comment":"","exp":"","file":"d3d12.h","line":2153,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_D3D12_OPTIONS\\r\\n    {\\r\\n    _Out_  BOOL DoublePrecisionFloatShaderOps;\\r\\n    _Out_  BOOL OutputMergerLogicOp;\\r\\n    _Out_  D3D12_SHADER_MIN_PRECISION_SUPPORT MinPrecisionSupport;\\r\\n    _Out_  D3D12_TILED_RESOURCES_TIER TiledResourcesTier;\\r\\n    _Out_  D3D12_RESOURCE_BINDING_TIER ResourceBindingTier;\\r\\n    _Out_  BOOL PSSpecifiedStencilRefSupported;\\r\\n    _Out_  BOOL TypedUAVLoadAdditionalFormats;\\r\\n    _Out_  BOOL ROVsSupported;\\r\\n    _Out_  D3D12_CONSERVATIVE_RASTERIZATION_TIER ConservativeRasterizationTier;\\r\\n    _Out_  UINT MaxGPUVirtualAddressBitsPerResource;\\r\\n    _Out_  BOOL StandardSwizzle64KBSupported;\\r\\n    _Out_  D3D12_CROSS_NODE_SHARING_TIER CrossNodeSharingTier;\\r\\n    _Out_  BOOL CrossAdapterRowMajorTextureSupported;\\r\\n    _Out_  BOOL VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation;\\r\\n    _Out_  D3D12_RESOURCE_HEAP_TIER ResourceHeapTier;\\r\\n    } \\tD3D12_FEATURE_DATA_D3D12_OPTIONS;"},"D3D12_FEATURE_DATA_D3D12_OPTIONS1":{"comment":"","exp":"","file":"d3d12.h","line":2172,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_D3D12_OPTIONS1\\r\\n    {\\r\\n    _Out_  BOOL WaveOps;\\r\\n    _Out_  UINT WaveLaneCountMin;\\r\\n    _Out_  UINT WaveLaneCountMax;\\r\\n    _Out_  UINT TotalLaneCount;\\r\\n    _Out_  BOOL ExpandedComputeResourceStates;\\r\\n    _Out_  BOOL Int64ShaderOps;\\r\\n    } \\tD3D12_FEATURE_DATA_D3D12_OPTIONS1;"},"D3D12_FEATURE_DATA_D3D12_OPTIONS2":{"comment":"","exp":"","file":"d3d12.h","line":2182,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_D3D12_OPTIONS2\\r\\n    {\\r\\n    _Out_  BOOL DepthBoundsTestSupported;\\r\\n    _Out_  D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER ProgrammableSamplePositionsTier;\\r\\n    } \\tD3D12_FEATURE_DATA_D3D12_OPTIONS2;"},"D3D12_FEATURE_DATA_D3D12_OPTIONS3":{"comment":"","exp":"","file":"d3d12.h","line":2307,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_D3D12_OPTIONS3\\r\\n    {\\r\\n    _Out_  BOOL CopyQueueTimestampQueriesSupported;\\r\\n    _Out_  BOOL CastingFullyTypedFormatSupported;\\r\\n    _Out_  D3D12_COMMAND_LIST_SUPPORT_FLAGS WriteBufferImmediateSupportFlags;\\r\\n    _Out_  D3D12_VIEW_INSTANCING_TIER ViewInstancingTier;\\r\\n    _Out_  BOOL BarycentricsSupported;\\r\\n    } \\tD3D12_FEATURE_DATA_D3D12_OPTIONS3;"},"D3D12_FEATURE_DATA_D3D12_OPTIONS4":{"comment":"","exp":"","file":"d3d12.h","line":2329,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_D3D12_OPTIONS4\\r\\n    {\\r\\n    _Out_  BOOL MSAA64KBAlignedTextureSupported;\\r\\n    _Out_  D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER SharedResourceCompatibilityTier;\\r\\n    _Out_  BOOL Native16BitShaderOpsSupported;\\r\\n    } \\tD3D12_FEATURE_DATA_D3D12_OPTIONS4;"},"D3D12_FEATURE_DATA_D3D12_OPTIONS5":{"comment":"","exp":"","file":"d3d12.h","line":2371,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_D3D12_OPTIONS5\\r\\n    {\\r\\n    _Out_  BOOL SRVOnlyTiledResourceTier3;\\r\\n    _Out_  D3D12_RENDER_PASS_TIER RenderPassesTier;\\r\\n    _Out_  D3D12_RAYTRACING_TIER RaytracingTier;\\r\\n    } \\tD3D12_FEATURE_DATA_D3D12_OPTIONS5;"},"D3D12_FEATURE_DATA_D3D12_OPTIONS6":{"comment":"","exp":"","file":"d3d12.h","line":2386,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_D3D12_OPTIONS6\\r\\n    {\\r\\n    _Out_  BOOL AdditionalShadingRatesSupported;\\r\\n    _Out_  BOOL PerPrimitiveShadingRateSupportedWithViewportIndexing;\\r\\n    _Out_  D3D12_VARIABLE_SHADING_RATE_TIER VariableShadingRateTier;\\r\\n    _Out_  UINT ShadingRateImageTileSize;\\r\\n    _Out_  BOOL BackgroundProcessingSupported;\\r\\n    } \\tD3D12_FEATURE_DATA_D3D12_OPTIONS6;"},"D3D12_FEATURE_DATA_D3D12_OPTIONS7":{"comment":"","exp":"","file":"d3d12.h","line":2410,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_D3D12_OPTIONS7\\r\\n    {\\r\\n    _Out_  D3D12_MESH_SHADER_TIER MeshShaderTier;\\r\\n    _Out_  D3D12_SAMPLER_FEEDBACK_TIER SamplerFeedbackTier;\\r\\n    } \\tD3D12_FEATURE_DATA_D3D12_OPTIONS7;"},"D3D12_FEATURE_DATA_EXISTING_HEAPS":{"comment":"","exp":"","file":"d3d12.h","line":2316,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_EXISTING_HEAPS\\r\\n    {\\r\\n    _Out_  BOOL Supported;\\r\\n    } \\tD3D12_FEATURE_DATA_EXISTING_HEAPS;"},"D3D12_FEATURE_DATA_FEATURE_LEVELS":{"comment":"","exp":"","file":"d3d12.h","line":2218,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_FEATURE_LEVELS\\r\\n    {\\r\\n    _In_  UINT NumFeatureLevels;\\r\\n    _In_reads_(NumFeatureLevels)  const D3D_FEATURE_LEVEL *pFeatureLevelsRequested;\\r\\n    _Out_  D3D_FEATURE_LEVEL MaxSupportedFeatureLevel;\\r\\n    } \\tD3D12_FEATURE_DATA_FEATURE_LEVELS;"},"D3D12_FEATURE_DATA_FORMAT_INFO":{"comment":"","exp":"","file":"d3d12.h","line":2258,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_FORMAT_INFO\\r\\n    {\\r\\n    DXGI_FORMAT Format;\\r\\n    UINT8 PlaneCount;\\r\\n    } \\tD3D12_FEATURE_DATA_FORMAT_INFO;"},"D3D12_FEATURE_DATA_FORMAT_SUPPORT":{"comment":"","exp":"","file":"d3d12.h","line":2243,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_FORMAT_SUPPORT\\r\\n    {\\r\\n    _In_  DXGI_FORMAT Format;\\r\\n    _Out_  D3D12_FORMAT_SUPPORT1 Support1;\\r\\n    _Out_  D3D12_FORMAT_SUPPORT2 Support2;\\r\\n    } \\tD3D12_FEATURE_DATA_FORMAT_SUPPORT;"},"D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT":{"comment":"","exp":"","file":"d3d12.h","line":2264,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT\\r\\n    {\\r\\n    UINT MaxGPUVirtualAddressBitsPerResource;\\r\\n    UINT MaxGPUVirtualAddressBitsPerProcess;\\r\\n    } \\tD3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT;"},"D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS":{"comment":"","exp":"","file":"d3d12.h","line":2250,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS\\r\\n    {\\r\\n    _In_  DXGI_FORMAT Format;\\r\\n    _In_  UINT SampleCount;\\r\\n    _In_  D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS Flags;\\r\\n    _Out_  UINT NumQualityLevels;\\r\\n    } \\tD3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS;"},"D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT":{"comment":"","exp":"","file":"d3d12.h","line":10698,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT\\r\\n    {\\r\\n    UINT NodeIndex;\\r\\n    D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS Support;\\r\\n    } \\tD3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT;"},"D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES":{"comment":"","exp":"","file":"d3d12.h","line":14581,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES\\r\\n    {\\r\\n    UINT NodeIndex;\\r\\n    UINT Count;\\r\\n    GUID *pTypes;\\r\\n    } \\tD3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES;"},"D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT":{"comment":"","exp":"","file":"d3d12.h","line":14575,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT\\r\\n    {\\r\\n    UINT NodeIndex;\\r\\n    UINT Count;\\r\\n    } \\tD3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT;"},"D3D12_FEATURE_DATA_QUERY_META_COMMAND":{"comment":"","exp":"","file":"d3d12.h","line":2416,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_QUERY_META_COMMAND\\r\\n    {\\r\\n    _In_  GUID CommandId;\\r\\n    _In_  UINT NodeMask;\\r\\n    _Field_size_bytes_full_opt_( QueryInputDataSizeInBytes )  const void *pQueryInputData;\\r\\n    _In_  SIZE_T QueryInputDataSizeInBytes;\\r\\n    _Field_size_bytes_full_( QueryOutputDataSizeInBytes )  void *pQueryOutputData;\\r\\n    _In_  SIZE_T QueryOutputDataSizeInBytes;\\r\\n    } \\tD3D12_FEATURE_DATA_QUERY_META_COMMAND;"},"D3D12_FEATURE_DATA_ROOT_SIGNATURE":{"comment":"","exp":"","file":"d3d12.h","line":2196,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_ROOT_SIGNATURE\\r\\n    {\\r\\n    _Inout_  D3D_ROOT_SIGNATURE_VERSION HighestVersion;\\r\\n    } \\tD3D12_FEATURE_DATA_ROOT_SIGNATURE;"},"D3D12_FEATURE_DATA_SERIALIZATION":{"comment":"","exp":"","file":"d3d12.h","line":2343,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_SERIALIZATION\\r\\n    {\\r\\n    _In_  UINT NodeIndex;\\r\\n    _Out_  D3D12_HEAP_SERIALIZATION_TIER HeapSerializationTier;\\r\\n    } \\tD3D12_FEATURE_DATA_SERIALIZATION;"},"D3D12_FEATURE_DATA_SHADER_CACHE":{"comment":"","exp":"","file":"d3d12.h","line":2281,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_SHADER_CACHE\\r\\n    {\\r\\n    _Out_  D3D12_SHADER_CACHE_SUPPORT_FLAGS SupportFlags;\\r\\n    } \\tD3D12_FEATURE_DATA_SHADER_CACHE;"},"D3D12_FEATURE_DATA_SHADER_MODEL":{"comment":"","exp":"","file":"d3d12.h","line":2238,"type":"Struct","value":"typedef struct D3D12_FEATURE_DATA_SHADER_MODEL\\r\\n    {\\r\\n    _Inout_  D3D_SHADER_MODEL HighestShaderModel;\\r\\n    } \\tD3D12_FEATURE_DATA_SHADER_MODEL;"},"D3D12_FENCE_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":3352,"type":"Enum","value":"typedef\\r\\nenum D3D12_FENCE_FLAGS\\r\\n    {\\r\\n        D3D12_FENCE_FLAG_NONE\\t= 0,\\r\\n        D3D12_FENCE_FLAG_SHARED\\t= 0x1,\\r\\n        D3D12_FENCE_FLAG_SHARED_CROSS_ADAPTER\\t= 0x2,\\r\\n        D3D12_FENCE_FLAG_NON_MONITORED\\t= 0x4\\r\\n    } \\tD3D12_FENCE_FLAGS;"},"D3D12_FILL_MODE":{"comment":"","exp":"","file":"d3d12.h","line":1291,"type":"Enum","value":"typedef\\r\\nenum D3D12_FILL_MODE\\r\\n    {\\r\\n        D3D12_FILL_MODE_WIREFRAME\\t= 2,\\r\\n        D3D12_FILL_MODE_SOLID\\t= 3\\r\\n    } \\tD3D12_FILL_MODE;"},"D3D12_FILTER":{"comment":"","exp":"","file":"d3d12.h","line":2987,"type":"Enum","value":"typedef\\r\\nenum D3D12_FILTER\\r\\n    {\\r\\n        D3D12_FILTER_MIN_MAG_MIP_POINT\\t= 0,\\r\\n        D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR\\t= 0x1,\\r\\n        D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT\\t= 0x4,\\r\\n        D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR\\t= 0x5,\\r\\n        D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT\\t= 0x10,\\r\\n        D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR\\t= 0x11,\\r\\n        D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT\\t= 0x14,\\r\\n        D3D12_FILTER_MIN_MAG_MIP_LINEAR\\t= 0x15,\\r\\n        D3D12_FILTER_ANISOTROPIC\\t= 0x55,\\r\\n        D3D12_FILTER_COMPARISON_MIN_MAG_MIP_POINT\\t= 0x80,\\r\\n        D3D12_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR\\t= 0x81,\\r\\n        D3D12_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT\\t= 0x84,\\r\\n        D3D12_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR\\t= 0x85,\\r\\n        D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT\\t= 0x90,\\r\\n        D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR\\t= 0x91,\\r\\n        D3D12_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT\\t= 0x94,\\r\\n        D3D12_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR\\t= 0x95,\\r\\n        D3D12_FILTER_COMPARISON_ANISOTROPIC\\t= 0xd5,\\r\\n        D3D12_FILTER_MINIMUM_MIN_MAG_MIP_POINT\\t= 0x100,\\r\\n        D3D12_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR\\t= 0x101,\\r\\n        D3D12_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT\\t= 0x104,\\r\\n        D3D12_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR\\t= 0x105,\\r\\n        D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT\\t= 0x110,\\r\\n        D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR\\t= 0x111,\\r\\n        D3D12_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT\\t= 0x114,\\r\\n        D3D12_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR\\t= 0x115,\\r\\n        D3D12_FILTER_MINIMUM_ANISOTROPIC\\t= 0x155,\\r\\n        D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_POINT\\t= 0x180,\\r\\n        D3D12_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR\\t= 0x181,\\r\\n        D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT\\t= 0x184,\\r\\n        D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR\\t= 0x185,\\r\\n        D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT\\t= 0x190,\\r\\n        D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR\\t= 0x191,\\r\\n        D3D12_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT\\t= 0x194,\\r\\n        D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR\\t= 0x195,\\r\\n        D3D12_FILTER_MAXIMUM_ANISOTROPIC\\t= 0x1d5\\r\\n    } \\tD3D12_FILTER;"},"D3D12_FILTER_REDUCTION_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":3035,"type":"Enum","value":"typedef\\r\\nenum D3D12_FILTER_REDUCTION_TYPE\\r\\n    {\\r\\n        D3D12_FILTER_REDUCTION_TYPE_STANDARD\\t= 0,\\r\\n        D3D12_FILTER_REDUCTION_TYPE_COMPARISON\\t= 1,\\r\\n        D3D12_FILTER_REDUCTION_TYPE_MINIMUM\\t= 2,\\r\\n        D3D12_FILTER_REDUCTION_TYPE_MAXIMUM\\t= 3\\r\\n    } \\tD3D12_FILTER_REDUCTION_TYPE;"},"D3D12_FILTER_REDUCTION_TYPE_MASK":{"comment":"","exp":"( 0x3 )","file":"d3d12.h","line":3044,"type":"Integer","value":3},"D3D12_FILTER_REDUCTION_TYPE_SHIFT":{"comment":"","exp":"( 7 )","file":"d3d12.h","line":3046,"type":"Integer","value":7},"D3D12_FILTER_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":3028,"type":"Enum","value":"typedef\\r\\nenum D3D12_FILTER_TYPE\\r\\n    {\\r\\n        D3D12_FILTER_TYPE_POINT\\t= 0,\\r\\n        D3D12_FILTER_TYPE_LINEAR\\t= 1\\r\\n    } \\tD3D12_FILTER_TYPE;"},"D3D12_FILTER_TYPE_MASK":{"comment":"","exp":"( 0x3 )","file":"d3d12.h","line":3048,"type":"Integer","value":3},"D3D12_FLOAT16_FUSED_TOLERANCE_IN_ULP":{"comment":"","exp":"( 0.6 )","file":"d3d12.h","line":734,"type":"Float","value":0.59999999999999998},"D3D12_FLOAT32_MAX":{"comment":"","exp":"( 3.402823466e+38f )","file":"d3d12.h","line":735,"type":"Float","value":3.4028234660000002e+38},"D3D12_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP":{"comment":"","exp":"( 0.6f )","file":"d3d12.h","line":736,"type":"Float","value":0.59999999999999998},"D3D12_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR":{"comment":"","exp":"( 2.4f )","file":"d3d12.h","line":737,"type":"Float","value":2.3999999999999999},"D3D12_FLOAT_TO_SRGB_EXPONENT_NUMERATOR":{"comment":"","exp":"( 1.0f )","file":"d3d12.h","line":738,"type":"Float","value":1.0},"D3D12_FLOAT_TO_SRGB_OFFSET":{"comment":"","exp":"( 0.055f )","file":"d3d12.h","line":739,"type":"Float","value":0.055},"D3D12_FLOAT_TO_SRGB_SCALE_1":{"comment":"","exp":"( 12.92f )","file":"d3d12.h","line":740,"type":"Float","value":12.92},"D3D12_FLOAT_TO_SRGB_SCALE_2":{"comment":"","exp":"( 1.055f )","file":"d3d12.h","line":741,"type":"Float","value":1.0549999999999999},"D3D12_FLOAT_TO_SRGB_THRESHOLD":{"comment":"","exp":"( 0.0031308f )","file":"d3d12.h","line":742,"type":"Float","value":0.0031308},"D3D12_FORMAT_SUPPORT1":{"comment":"","exp":"","file":"d3d12.h","line":2056,"type":"Enum","value":"typedef\\r\\nenum D3D12_FORMAT_SUPPORT1\\r\\n    {\\r\\n        D3D12_FORMAT_SUPPORT1_NONE\\t= 0,\\r\\n        D3D12_FORMAT_SUPPORT1_BUFFER\\t= 0x1,\\r\\n        D3D12_FORMAT_SUPPORT1_IA_VERTEX_BUFFER\\t= 0x2,\\r\\n        D3D12_FORMAT_SUPPORT1_IA_INDEX_BUFFER\\t= 0x4,\\r\\n        D3D12_FORMAT_SUPPORT1_SO_BUFFER\\t= 0x8,\\r\\n        D3D12_FORMAT_SUPPORT1_TEXTURE1D\\t= 0x10,\\r\\n        D3D12_FORMAT_SUPPORT1_TEXTURE2D\\t= 0x20,\\r\\n        D3D12_FORMAT_SUPPORT1_TEXTURE3D\\t= 0x40,\\r\\n        D3D12_FORMAT_SUPPORT1_TEXTURECUBE\\t= 0x80,\\r\\n        D3D12_FORMAT_SUPPORT1_SHADER_LOAD\\t= 0x100,\\r\\n        D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE\\t= 0x200,\\r\\n        D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_COMPARISON\\t= 0x400,\\r\\n        D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_MONO_TEXT\\t= 0x800,\\r\\n        D3D12_FORMAT_SUPPORT1_MIP\\t= 0x1000,\\r\\n        D3D12_FORMAT_SUPPORT1_RENDER_TARGET\\t= 0x4000,\\r\\n        D3D12_FORMAT_SUPPORT1_BLENDABLE\\t= 0x8000,\\r\\n        D3D12_FORMAT_SUPPORT1_DEPTH_STENCIL\\t= 0x10000,\\r\\n        D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RESOLVE\\t= 0x40000,\\r\\n        D3D12_FORMAT_SUPPORT1_DISPLAY\\t= 0x80000,\\r\\n        D3D12_FORMAT_SUPPORT1_CAST_WITHIN_BIT_LAYOUT\\t= 0x100000,\\r\\n        D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RENDERTARGET\\t= 0x200000,\\r\\n        D3D12_FORMAT_SUPPORT1_MULTISAMPLE_LOAD\\t= 0x400000,\\r\\n        D3D12_FORMAT_SUPPORT1_SHADER_GATHER\\t= 0x800000,\\r\\n        D3D12_FORMAT_SUPPORT1_BACK_BUFFER_CAST\\t= 0x1000000,\\r\\n        D3D12_FORMAT_SUPPORT1_TYPED_UNORDERED_ACCESS_VIEW\\t= 0x2000000,\\r\\n        D3D12_FORMAT_SUPPORT1_SHADER_GATHER_COMPARISON\\t= 0x4000000,\\r\\n        D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT\\t= 0x8000000,\\r\\n        D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_OUTPUT\\t= 0x10000000,\\r\\n        D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_INPUT\\t= 0x20000000,\\r\\n        D3D12_FORMAT_SUPPORT1_VIDEO_ENCODER\\t= 0x40000000\\r\\n    } \\tD3D12_FORMAT_SUPPORT1;"},"D3D12_FORMAT_SUPPORT2":{"comment":"","exp":"","file":"d3d12.h","line":2092,"type":"Enum","value":"typedef\\r\\nenum D3D12_FORMAT_SUPPORT2\\r\\n    {\\r\\n        D3D12_FORMAT_SUPPORT2_NONE\\t= 0,\\r\\n        D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_ADD\\t= 0x1,\\r\\n        D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS\\t= 0x2,\\r\\n        D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE\\t= 0x4,\\r\\n        D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE\\t= 0x8,\\r\\n        D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX\\t= 0x10,\\r\\n        D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX\\t= 0x20,\\r\\n        D3D12_FORMAT_SUPPORT2_UAV_TYPED_LOAD\\t= 0x40,\\r\\n        D3D12_FORMAT_SUPPORT2_UAV_TYPED_STORE\\t= 0x80,\\r\\n        D3D12_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP\\t= 0x100,\\r\\n        D3D12_FORMAT_SUPPORT2_TILED\\t= 0x200,\\r\\n        D3D12_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY\\t= 0x4000,\\r\\n        D3D12_FORMAT_SUPPORT2_SAMPLER_FEEDBACK\\t= 0x8000\\r\\n    } \\tD3D12_FORMAT_SUPPORT2;"},"D3D12_FTOI_INSTRUCTION_MAX_INPUT":{"comment":"","exp":"( 2147483647.999f )","file":"d3d12.h","line":743,"type":"Float","value":2147483647.9990001},"D3D12_FTOI_INSTRUCTION_MIN_INPUT":{"comment":"","exp":"( -2147483648.999f )","file":"d3d12.h","line":744,"type":"Float","value":-2147483648.9990001},"D3D12_FTOU_INSTRUCTION_MAX_INPUT":{"comment":"","exp":"( 4294967295.999f )","file":"d3d12.h","line":745,"type":"Float","value":4294967295.9990001},"D3D12_FTOU_INSTRUCTION_MIN_INPUT":{"comment":"","exp":"( 0.0f )","file":"d3d12.h","line":746,"type":"Float","value":0.0},"D3D12_GLOBAL_ROOT_SIGNATURE":{"comment":"","exp":"","file":"d3d12.h","line":12169,"type":"Struct","value":"typedef struct D3D12_GLOBAL_ROOT_SIGNATURE\\r\\n    {\\r\\n    ID3D12RootSignature *pGlobalRootSignature;\\r\\n    } \\tD3D12_GLOBAL_ROOT_SIGNATURE;"},"D3D12_GPU_BASED_VALIDATION_FLAGS":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":238,"type":"Enum","value":"typedef\\r\\nenum D3D12_GPU_BASED_VALIDATION_FLAGS\\r\\n    {\\r\\n        D3D12_GPU_BASED_VALIDATION_FLAGS_NONE\\t= 0,\\r\\n        D3D12_GPU_BASED_VALIDATION_FLAGS_DISABLE_STATE_TRACKING\\t= 0x1\\r\\n    } \\tD3D12_GPU_BASED_VALIDATION_FLAGS;"},"D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":575,"type":"Enum","value":"typedef\\r\\nenum D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS\\r\\n    {\\r\\n        D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_NONE\\t= 0,\\r\\n        D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_TRACKING_ONLY_SHADERS\\t= 0x1,\\r\\n        D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_UNGUARDED_VALIDATION_SHADERS\\t= 0x2,\\r\\n        D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_GUARDED_VALIDATION_SHADERS\\t= 0x4,\\r\\n        D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS_VALID_MASK\\t= 0x7\\r\\n    } \\tD3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS;"},"D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":565,"type":"Enum","value":"typedef\\r\\nenum D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE\\r\\n    {\\r\\n        D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_NONE\\t= 0,\\r\\n        D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_STATE_TRACKING_ONLY\\t= ( D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_NONE + 1 ) ,\\r\\n        D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_UNGUARDED_VALIDATION\\t= ( D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_STATE_TRACKING_ONLY + 1 ) ,\\r\\n        D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_GUARDED_VALIDATION\\t= ( D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_UNGUARDED_VALIDATION + 1 ) ,\\r\\n        NUM_D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODES\\t= ( D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_GUARDED_VALIDATION + 1 ) \\r\\n    } \\tD3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE;"},"D3D12_GPU_DESCRIPTOR_HANDLE":{"comment":"","exp":"","file":"d3d12.h","line":3812,"type":"Struct","value":"typedef struct D3D12_GPU_DESCRIPTOR_HANDLE\\r\\n    {\\r\\n    UINT64 ptr;\\r\\n    } \\tD3D12_GPU_DESCRIPTOR_HANDLE;"},"D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE":{"comment":"","exp":"","file":"d3d12.h","line":12309,"type":"Struct","value":"typedef struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS StartAddress;\\r\\n    UINT64 StrideInBytes;\\r\\n    } \\tD3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE;"},"D3D12_GPU_VIRTUAL_ADDRESS_RANGE":{"comment":"","exp":"","file":"d3d12.h","line":12315,"type":"Struct","value":"typedef struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS StartAddress;\\r\\n    UINT64 SizeInBytes;\\r\\n    } \\tD3D12_GPU_VIRTUAL_ADDRESS_RANGE;"},"D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE":{"comment":"","exp":"","file":"d3d12.h","line":12321,"type":"Struct","value":"typedef struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS StartAddress;\\r\\n    UINT64 SizeInBytes;\\r\\n    UINT64 StrideInBytes;\\r\\n    } \\tD3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE;"},"D3D12_GRAPHICS_PIPELINE_STATE_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1913,"type":"Struct","value":"typedef struct D3D12_GRAPHICS_PIPELINE_STATE_DESC\\r\\n    {\\r\\n    ID3D12RootSignature *pRootSignature;\\r\\n    D3D12_SHADER_BYTECODE VS;\\r\\n    D3D12_SHADER_BYTECODE PS;\\r\\n    D3D12_SHADER_BYTECODE DS;\\r\\n    D3D12_SHADER_BYTECODE HS;\\r\\n    D3D12_SHADER_BYTECODE GS;\\r\\n    D3D12_STREAM_OUTPUT_DESC StreamOutput;\\r\\n    D3D12_BLEND_DESC BlendState;\\r\\n    UINT SampleMask;\\r\\n    D3D12_RASTERIZER_DESC RasterizerState;\\r\\n    D3D12_DEPTH_STENCIL_DESC DepthStencilState;\\r\\n    D3D12_INPUT_LAYOUT_DESC InputLayout;\\r\\n    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE IBStripCutValue;\\r\\n    D3D12_PRIMITIVE_TOPOLOGY_TYPE PrimitiveTopologyType;\\r\\n    UINT NumRenderTargets;\\r\\n    DXGI_FORMAT RTVFormats[ 8 ];\\r\\n    DXGI_FORMAT DSVFormat;\\r\\n    DXGI_SAMPLE_DESC SampleDesc;\\r\\n    UINT NodeMask;\\r\\n    D3D12_CACHED_PIPELINE_STATE CachedPSO;\\r\\n    D3D12_PIPELINE_STATE_FLAGS Flags;\\r\\n    } \\tD3D12_GRAPHICS_PIPELINE_STATE_DESC;"},"D3D12_GRAPHICS_STATES":{"comment":"","exp":"","file":"d3d12.h","line":11870,"type":"Enum","value":"typedef\\r\\nenum D3D12_GRAPHICS_STATES\\r\\n    {\\r\\n        D3D12_GRAPHICS_STATE_NONE\\t= 0,\\r\\n        D3D12_GRAPHICS_STATE_IA_VERTEX_BUFFERS\\t= ( 1 << 0 ) ,\\r\\n        D3D12_GRAPHICS_STATE_IA_INDEX_BUFFER\\t= ( 1 << 1 ) ,\\r\\n        D3D12_GRAPHICS_STATE_IA_PRIMITIVE_TOPOLOGY\\t= ( 1 << 2 ) ,\\r\\n        D3D12_GRAPHICS_STATE_DESCRIPTOR_HEAP\\t= ( 1 << 3 ) ,\\r\\n        D3D12_GRAPHICS_STATE_GRAPHICS_ROOT_SIGNATURE\\t= ( 1 << 4 ) ,\\r\\n        D3D12_GRAPHICS_STATE_COMPUTE_ROOT_SIGNATURE\\t= ( 1 << 5 ) ,\\r\\n        D3D12_GRAPHICS_STATE_RS_VIEWPORTS\\t= ( 1 << 6 ) ,\\r\\n        D3D12_GRAPHICS_STATE_RS_SCISSOR_RECTS\\t= ( 1 << 7 ) ,\\r\\n        D3D12_GRAPHICS_STATE_PREDICATION\\t= ( 1 << 8 ) ,\\r\\n        D3D12_GRAPHICS_STATE_OM_RENDER_TARGETS\\t= ( 1 << 9 ) ,\\r\\n        D3D12_GRAPHICS_STATE_OM_STENCIL_REF\\t= ( 1 << 10 ) ,\\r\\n        D3D12_GRAPHICS_STATE_OM_BLEND_FACTOR\\t= ( 1 << 11 ) ,\\r\\n        D3D12_GRAPHICS_STATE_PIPELINE_STATE\\t= ( 1 << 12 ) ,\\r\\n        D3D12_GRAPHICS_STATE_SO_TARGETS\\t= ( 1 << 13 ) ,\\r\\n        D3D12_GRAPHICS_STATE_OM_DEPTH_BOUNDS\\t= ( 1 << 14 ) ,\\r\\n        D3D12_GRAPHICS_STATE_SAMPLE_POSITIONS\\t= ( 1 << 15 ) ,\\r\\n        D3D12_GRAPHICS_STATE_VIEW_INSTANCE_MASK\\t= ( 1 << 16 ) \\r\\n    } \\tD3D12_GRAPHICS_STATES;"},"D3D12_GS_INPUT_INSTANCE_ID_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":747,"type":"Integer","value":2},"D3D12_GS_INPUT_INSTANCE_ID_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":749,"type":"Integer","value":1},"D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":751,"type":"Integer","value":1},"D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":753,"type":"Integer","value":32},"D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":755,"type":"Integer","value":1},"D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":757,"type":"Integer","value":1},"D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":759,"type":"Integer","value":32},"D3D12_GS_INPUT_PRIM_CONST_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":761,"type":"Integer","value":1},"D3D12_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":763,"type":"Integer","value":2},"D3D12_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":765,"type":"Integer","value":1},"D3D12_GS_INPUT_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":767,"type":"Integer","value":4},"D3D12_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":769,"type":"Integer","value":32},"D3D12_GS_INPUT_REGISTER_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":771,"type":"Integer","value":32},"D3D12_GS_INPUT_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":773,"type":"Integer","value":2},"D3D12_GS_INPUT_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":775,"type":"Integer","value":1},"D3D12_GS_INPUT_REGISTER_VERTICES":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":777,"type":"Integer","value":32},"D3D12_GS_MAX_INSTANCE_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":779,"type":"Integer","value":32},"D3D12_GS_MAX_OUTPUT_VERTEX_COUNT_ACROSS_INSTANCES":{"comment":"","exp":"( 1024 )","file":"d3d12.h","line":781,"type":"Integer","value":1024},"D3D12_GS_OUTPUT_ELEMENTS":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":783,"type":"Integer","value":32},"D3D12_GS_OUTPUT_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":785,"type":"Integer","value":4},"D3D12_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":787,"type":"Integer","value":32},"D3D12_GS_OUTPUT_REGISTER_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":789,"type":"Integer","value":32},"D3D12_HEAP_DESC":{"comment":"","exp":"","file":"d3d12.h","line":2496,"type":"Struct","value":"typedef struct D3D12_HEAP_DESC\\r\\n    {\\r\\n    UINT64 SizeInBytes;\\r\\n    D3D12_HEAP_PROPERTIES Properties;\\r\\n    UINT64 Alignment;\\r\\n    D3D12_HEAP_FLAGS Flags;\\r\\n    } \\tD3D12_HEAP_DESC;"},"D3D12_HEAP_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":2474,"type":"Enum","value":"typedef\\r\\nenum D3D12_HEAP_FLAGS\\r\\n    {\\r\\n        D3D12_HEAP_FLAG_NONE\\t= 0,\\r\\n        D3D12_HEAP_FLAG_SHARED\\t= 0x1,\\r\\n        D3D12_HEAP_FLAG_DENY_BUFFERS\\t= 0x4,\\r\\n        D3D12_HEAP_FLAG_ALLOW_DISPLAY\\t= 0x8,\\r\\n        D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER\\t= 0x20,\\r\\n        D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES\\t= 0x40,\\r\\n        D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES\\t= 0x80,\\r\\n        D3D12_HEAP_FLAG_HARDWARE_PROTECTED\\t= 0x100,\\r\\n        D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH\\t= 0x200,\\r\\n        D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS\\t= 0x400,\\r\\n        D3D12_HEAP_FLAG_CREATE_NOT_RESIDENT\\t= 0x800,\\r\\n        D3D12_HEAP_FLAG_CREATE_NOT_ZEROED\\t= 0x1000,\\r\\n        D3D12_HEAP_FLAG_ALLOW_ALL_BUFFERS_AND_TEXTURES\\t= 0,\\r\\n        D3D12_HEAP_FLAG_ALLOW_ONLY_BUFFERS\\t= 0xc0,\\r\\n        D3D12_HEAP_FLAG_ALLOW_ONLY_NON_RT_DS_TEXTURES\\t= 0x44,\\r\\n        D3D12_HEAP_FLAG_ALLOW_ONLY_RT_DS_TEXTURES\\t= 0x84\\r\\n    } \\tD3D12_HEAP_FLAGS;"},"D3D12_HEAP_PROPERTIES":{"comment":"","exp":"","file":"d3d12.h","line":2465,"type":"Struct","value":"typedef struct D3D12_HEAP_PROPERTIES\\r\\n    {\\r\\n    D3D12_HEAP_TYPE Type;\\r\\n    D3D12_CPU_PAGE_PROPERTY CPUPageProperty;\\r\\n    D3D12_MEMORY_POOL MemoryPoolPreference;\\r\\n    UINT CreationNodeMask;\\r\\n    UINT VisibleNodeMask;\\r\\n    } \\tD3D12_HEAP_PROPERTIES;"},"D3D12_HEAP_SERIALIZATION_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2336,"type":"Enum","value":"typedef\\r\\nenum D3D12_HEAP_SERIALIZATION_TIER\\r\\n    {\\r\\n        D3D12_HEAP_SERIALIZATION_TIER_0\\t= 0,\\r\\n        D3D12_HEAP_SERIALIZATION_TIER_10\\t= 10\\r\\n    } \\tD3D12_HEAP_SERIALIZATION_TIER;"},"D3D12_HEAP_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":2439,"type":"Enum","value":"typedef\\r\\nenum D3D12_HEAP_TYPE\\r\\n    {\\r\\n        D3D12_HEAP_TYPE_DEFAULT\\t= 1,\\r\\n        D3D12_HEAP_TYPE_UPLOAD\\t= 2,\\r\\n        D3D12_HEAP_TYPE_READBACK\\t= 3,\\r\\n        D3D12_HEAP_TYPE_CUSTOM\\t= 4\\r\\n    } \\tD3D12_HEAP_TYPE;"},"D3D12_HIT_GROUP_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12233,"type":"Struct","value":"typedef struct D3D12_HIT_GROUP_DESC\\r\\n    {\\r\\n    LPCWSTR HitGroupExport;\\r\\n    D3D12_HIT_GROUP_TYPE Type;\\r\\n    _In_opt_  LPCWSTR AnyHitShaderImport;\\r\\n    _In_opt_  LPCWSTR ClosestHitShaderImport;\\r\\n    _In_opt_  LPCWSTR IntersectionShaderImport;\\r\\n    } \\tD3D12_HIT_GROUP_DESC;"},"D3D12_HIT_GROUP_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":12226,"type":"Enum","value":"typedef\\r\\nenum D3D12_HIT_GROUP_TYPE\\r\\n    {\\r\\n        D3D12_HIT_GROUP_TYPE_TRIANGLES\\t= 0,\\r\\n        D3D12_HIT_GROUP_TYPE_PROCEDURAL_PRIMITIVE\\t= 0x1\\r\\n    } \\tD3D12_HIT_GROUP_TYPE;"},"D3D12_HIT_KIND":{"comment":"","exp":"","file":"d3d12.h","line":12537,"type":"Enum","value":"typedef\\r\\nenum D3D12_HIT_KIND\\r\\n    {\\r\\n        D3D12_HIT_KIND_TRIANGLE_FRONT_FACE\\t= 0xfe,\\r\\n        D3D12_HIT_KIND_TRIANGLE_BACK_FACE\\t= 0xff\\r\\n    } \\tD3D12_HIT_KIND;"},"D3D12_HS_CONTROL_POINT_PHASE_INPUT_REGISTER_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":791,"type":"Integer","value":32},"D3D12_HS_CONTROL_POINT_PHASE_OUTPUT_REGISTER_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":793,"type":"Integer","value":32},"D3D12_HS_CONTROL_POINT_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":795,"type":"Integer","value":4},"D3D12_HS_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":797,"type":"Integer","value":32},"D3D12_HS_CONTROL_POINT_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":799,"type":"Integer","value":2},"D3D12_HS_CONTROL_POINT_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":801,"type":"Integer","value":1},"D3D12_HS_FORK_PHASE_INSTANCE_COUNT_UPPER_BOUND":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":803,"type":"Integer","value":4294967295},"D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":805,"type":"Integer","value":1},"D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":807,"type":"Integer","value":32},"D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":809,"type":"Integer","value":1},"D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":811,"type":"Integer","value":2},"D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":813,"type":"Integer","value":1},"D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":815,"type":"Integer","value":1},"D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":817,"type":"Integer","value":32},"D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":819,"type":"Integer","value":1},"D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":821,"type":"Integer","value":2},"D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":823,"type":"Integer","value":1},"D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":825,"type":"Integer","value":1},"D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":827,"type":"Integer","value":32},"D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":829,"type":"Integer","value":1},"D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":831,"type":"Integer","value":2},"D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":833,"type":"Integer","value":1},"D3D12_HS_JOIN_PHASE_INSTANCE_COUNT_UPPER_BOUND":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":835,"type":"Integer","value":4294967295},"D3D12_HS_MAXTESSFACTOR_LOWER_BOUND":{"comment":"","exp":"( 1.0f )","file":"d3d12.h","line":837,"type":"Float","value":1.0},"D3D12_HS_MAXTESSFACTOR_UPPER_BOUND":{"comment":"","exp":"( 64.0f )","file":"d3d12.h","line":838,"type":"Float","value":64.0},"D3D12_HS_OUTPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS":{"comment":"","exp":"( 3968 )","file":"d3d12.h","line":839,"type":"Integer","value":3968},"D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":841,"type":"Integer","value":1},"D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":843,"type":"Integer","value":32},"D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":845,"type":"Integer","value":1},"D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":847,"type":"Integer","value":2},"D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":849,"type":"Integer","value":1},"D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":851,"type":"Integer","value":4},"D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":853,"type":"Integer","value":32},"D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":855,"type":"Integer","value":32},"D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":857,"type":"Integer","value":2},"D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":859,"type":"Integer","value":1},"D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_SCALAR_COMPONENTS":{"comment":"","exp":"( 128 )","file":"d3d12.h","line":861,"type":"Integer","value":128},"D3D12_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":863,"type":"Integer","value":0},"D3D12_IA_DEFAULT_PRIMITIVE_TOPOLOGY":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":865,"type":"Integer","value":0},"D3D12_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":867,"type":"Integer","value":0},"D3D12_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":869,"type":"Integer","value":1},"D3D12_IA_INSTANCE_ID_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":871,"type":"Integer","value":32},"D3D12_IA_INTEGER_ARITHMETIC_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":873,"type":"Integer","value":32},"D3D12_IA_PATCH_MAX_CONTROL_POINT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":875,"type":"Integer","value":32},"D3D12_IA_PRIMITIVE_ID_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":877,"type":"Integer","value":32},"D3D12_IA_VERTEX_ID_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":879,"type":"Integer","value":32},"D3D12_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":881,"type":"Integer","value":32},"D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS":{"comment":"","exp":"( 128 )","file":"d3d12.h","line":883,"type":"Integer","value":128},"D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":885,"type":"Integer","value":32},"D3D12_INDEX_BUFFER_STRIP_CUT_VALUE":{"comment":"","exp":"","file":"d3d12.h","line":1891,"type":"Enum","value":"typedef\\r\\nenum D3D12_INDEX_BUFFER_STRIP_CUT_VALUE\\r\\n    {\\r\\n        D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_DISABLED\\t= 0,\\r\\n        D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFF\\t= 1,\\r\\n        D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFFFFFF\\t= 2\\r\\n    } \\tD3D12_INDEX_BUFFER_STRIP_CUT_VALUE;"},"D3D12_INDEX_BUFFER_VIEW":{"comment":"","exp":"","file":"d3d12.h","line":3925,"type":"Struct","value":"typedef struct D3D12_INDEX_BUFFER_VIEW\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS BufferLocation;\\r\\n    UINT SizeInBytes;\\r\\n    DXGI_FORMAT Format;\\r\\n    } \\tD3D12_INDEX_BUFFER_VIEW;"},"D3D12_INDIRECT_ARGUMENT_DESC":{"comment":"","exp":"","file":"d3d12.h","line":3948,"type":"Struct","value":"typedef struct D3D12_INDIRECT_ARGUMENT_DESC\\r\\n    {\\r\\n    D3D12_INDIRECT_ARGUMENT_TYPE Type;\\r\\n    union \\r\\n        {\\r\\n        struct \\r\\n            {\\r\\n            UINT Slot;\\r\\n            } \\tVertexBuffer;\\r\\n        struct \\r\\n            {\\r\\n            UINT RootParameterIndex;\\r\\n            UINT DestOffsetIn32BitValues;\\r\\n            UINT Num32BitValuesToSet;\\r\\n            } \\tConstant;\\r\\n        struct \\r\\n            {\\r\\n            UINT RootParameterIndex;\\r\\n            } \\tConstantBufferView;\\r\\n        struct \\r\\n            {\\r\\n            UINT RootParameterIndex;\\r\\n            } \\tShaderResourceView;\\r\\n        struct \\r\\n            {\\r\\n            UINT RootParameterIndex;\\r\\n            } \\tUnorderedAccessView;\\r\\n        } \\t;\\r\\n    } \\tD3D12_INDIRECT_ARGUMENT_DESC;"},"D3D12_INDIRECT_ARGUMENT_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":3932,"type":"Enum","value":"typedef\\r\\nenum D3D12_INDIRECT_ARGUMENT_TYPE\\r\\n    {\\r\\n        D3D12_INDIRECT_ARGUMENT_TYPE_DRAW\\t= 0,\\r\\n        D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED\\t= ( D3D12_INDIRECT_ARGUMENT_TYPE_DRAW + 1 ) ,\\r\\n        D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH\\t= ( D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED + 1 ) ,\\r\\n        D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW\\t= ( D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH + 1 ) ,\\r\\n        D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW\\t= ( D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW + 1 ) ,\\r\\n        D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT\\t= ( D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW + 1 ) ,\\r\\n        D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW\\t= ( D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT + 1 ) ,\\r\\n        D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW\\t= ( D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW + 1 ) ,\\r\\n        D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW\\t= ( D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW + 1 ) ,\\r\\n        D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS\\t= ( D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW + 1 ) ,\\r\\n        D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_MESH\\t= ( D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS + 1 ) \\r\\n    } \\tD3D12_INDIRECT_ARGUMENT_TYPE;"},"D3D12_INFO_QUEUE_DEFAULT_MESSAGE_COUNT_LIMIT":{"comment":"","exp":"1024","file":"d3d12sdklayers.h","line":2386,"type":"Integer","value":1024},"D3D12_INFO_QUEUE_FILTER":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":2380,"type":"Struct","value":"typedef struct D3D12_INFO_QUEUE_FILTER\\r\\n    {\\r\\n    D3D12_INFO_QUEUE_FILTER_DESC AllowList;\\r\\n    D3D12_INFO_QUEUE_FILTER_DESC DenyList;\\r\\n    } \\tD3D12_INFO_QUEUE_FILTER;"},"D3D12_INFO_QUEUE_FILTER_DESC":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":2370,"type":"Struct","value":"typedef struct D3D12_INFO_QUEUE_FILTER_DESC\\r\\n    {\\r\\n    UINT NumCategories;\\r\\n    _Field_size_(NumCategories)  D3D12_MESSAGE_CATEGORY *pCategoryList;\\r\\n    UINT NumSeverities;\\r\\n    _Field_size_(NumSeverities)  D3D12_MESSAGE_SEVERITY *pSeverityList;\\r\\n    UINT NumIDs;\\r\\n    _Field_size_(NumIDs)  D3D12_MESSAGE_ID *pIDList;\\r\\n    } \\tD3D12_INFO_QUEUE_FILTER_DESC;"},"D3D12_INPUT_CLASSIFICATION":{"comment":"","exp":"","file":"d3d12.h","line":1273,"type":"Enum","value":"typedef\\r\\nenum D3D12_INPUT_CLASSIFICATION\\r\\n    {\\r\\n        D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA\\t= 0,\\r\\n        D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA\\t= 1\\r\\n    } \\tD3D12_INPUT_CLASSIFICATION;"},"D3D12_INPUT_ELEMENT_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1280,"type":"Struct","value":"typedef struct D3D12_INPUT_ELEMENT_DESC\\r\\n    {\\r\\n    LPCSTR SemanticName;\\r\\n    UINT SemanticIndex;\\r\\n    DXGI_FORMAT Format;\\r\\n    UINT InputSlot;\\r\\n    UINT AlignedByteOffset;\\r\\n    D3D12_INPUT_CLASSIFICATION InputSlotClass;\\r\\n    UINT InstanceDataStepRate;\\r\\n    } \\tD3D12_INPUT_ELEMENT_DESC;"},"D3D12_INPUT_LAYOUT_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1885,"type":"Struct","value":"typedef struct D3D12_INPUT_LAYOUT_DESC\\r\\n    {\\r\\n    _Field_size_full_(NumElements)  const D3D12_INPUT_ELEMENT_DESC *pInputElementDescs;\\r\\n    UINT NumElements;\\r\\n    } \\tD3D12_INPUT_LAYOUT_DESC;"},"D3D12_INTEGER_DIVIDE_BY_ZERO_QUOTIENT":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":887,"type":"Integer","value":4294967295},"D3D12_INTEGER_DIVIDE_BY_ZERO_REMAINDER":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":889,"type":"Integer","value":4294967295},"D3D12_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":891,"type":"Integer","value":4294967295},"D3D12_KEEP_UNORDERED_ACCESS_VIEWS":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":893,"type":"Integer","value":4294967295},"D3D12_LIFETIME_STATE":{"comment":"","exp":"","file":"d3d12.h","line":11501,"type":"Enum","value":"typedef\\r\\nenum D3D12_LIFETIME_STATE\\r\\n    {\\r\\n        D3D12_LIFETIME_STATE_IN_USE\\t= 0,\\r\\n        D3D12_LIFETIME_STATE_NOT_IN_USE\\t= ( D3D12_LIFETIME_STATE_IN_USE + 1 ) \\r\\n    } \\tD3D12_LIFETIME_STATE;"},"D3D12_LINEAR_GAMMA":{"comment":"","exp":"( 1.0f )","file":"d3d12.h","line":895,"type":"Float","value":1.0},"D3D12_LOCAL_ROOT_SIGNATURE":{"comment":"","exp":"","file":"d3d12.h","line":12174,"type":"Struct","value":"typedef struct D3D12_LOCAL_ROOT_SIGNATURE\\r\\n    {\\r\\n    ID3D12RootSignature *pLocalRootSignature;\\r\\n    } \\tD3D12_LOCAL_ROOT_SIGNATURE;"},"D3D12_LOGIC_OP":{"comment":"","exp":"","file":"d3d12.h","line":1450,"type":"Enum","value":"typedef\\r\\nenum D3D12_LOGIC_OP\\r\\n    {\\r\\n        D3D12_LOGIC_OP_CLEAR\\t= 0,\\r\\n        D3D12_LOGIC_OP_SET\\t= ( D3D12_LOGIC_OP_CLEAR + 1 ) ,\\r\\n        D3D12_LOGIC_OP_COPY\\t= ( D3D12_LOGIC_OP_SET + 1 ) ,\\r\\n        D3D12_LOGIC_OP_COPY_INVERTED\\t= ( D3D12_LOGIC_OP_COPY + 1 ) ,\\r\\n        D3D12_LOGIC_OP_NOOP\\t= ( D3D12_LOGIC_OP_COPY_INVERTED + 1 ) ,\\r\\n        D3D12_LOGIC_OP_INVERT\\t= ( D3D12_LOGIC_OP_NOOP + 1 ) ,\\r\\n        D3D12_LOGIC_OP_AND\\t= ( D3D12_LOGIC_OP_INVERT + 1 ) ,\\r\\n        D3D12_LOGIC_OP_NAND\\t= ( D3D12_LOGIC_OP_AND + 1 ) ,\\r\\n        D3D12_LOGIC_OP_OR\\t= ( D3D12_LOGIC_OP_NAND + 1 ) ,\\r\\n        D3D12_LOGIC_OP_NOR\\t= ( D3D12_LOGIC_OP_OR + 1 ) ,\\r\\n        D3D12_LOGIC_OP_XOR\\t= ( D3D12_LOGIC_OP_NOR + 1 ) ,\\r\\n        D3D12_LOGIC_OP_EQUIV\\t= ( D3D12_LOGIC_OP_XOR + 1 ) ,\\r\\n        D3D12_LOGIC_OP_AND_REVERSE\\t= ( D3D12_LOGIC_OP_EQUIV + 1 ) ,\\r\\n        D3D12_LOGIC_OP_AND_INVERTED\\t= ( D3D12_LOGIC_OP_AND_REVERSE + 1 ) ,\\r\\n        D3D12_LOGIC_OP_OR_REVERSE\\t= ( D3D12_LOGIC_OP_AND_INVERTED + 1 ) ,\\r\\n        D3D12_LOGIC_OP_OR_INVERTED\\t= ( D3D12_LOGIC_OP_OR_REVERSE + 1 ) \\r\\n    } \\tD3D12_LOGIC_OP;"},"D3D12_MAG_FILTER_SHIFT":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":3052,"type":"Integer","value":2},"D3D12_MAJOR_VERSION":{"comment":"","exp":"( 12 )","file":"d3d12.h","line":896,"type":"Integer","value":12},"D3D12_MAX_BORDER_COLOR_COMPONENT":{"comment":"","exp":"( 1.0f )","file":"d3d12.h","line":898,"type":"Float","value":1.0},"D3D12_MAX_DEPTH":{"comment":"","exp":"( 1.0f )","file":"d3d12.h","line":899,"type":"Float","value":1.0},"D3D12_MAX_LIVE_STATIC_SAMPLERS":{"comment":"","exp":"( 2032 )","file":"d3d12.h","line":900,"type":"Integer","value":2032},"D3D12_MAX_MAXANISOTROPY":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":902,"type":"Integer","value":16},"D3D12_MAX_MULTISAMPLE_SAMPLE_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":904,"type":"Integer","value":32},"D3D12_MAX_POSITION_VALUE":{"comment":"","exp":"( 3.402823466e+34f )","file":"d3d12.h","line":906,"type":"Float","value":3.402823466e+34},"D3D12_MAX_ROOT_COST":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":907,"type":"Integer","value":64},"D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_1":{"comment":"","exp":"( 1000000 )","file":"d3d12.h","line":909,"type":"Integer","value":1000000},"D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_2":{"comment":"","exp":"( 1000000 )","file":"d3d12.h","line":911,"type":"Integer","value":1000000},"D3D12_MAX_SHADER_VISIBLE_SAMPLER_HEAP_SIZE":{"comment":"","exp":"( 2048 )","file":"d3d12.h","line":913,"type":"Integer","value":2048},"D3D12_MAX_TEXTURE_DIMENSION_2_TO_EXP":{"comment":"","exp":"( 17 )","file":"d3d12.h","line":915,"type":"Integer","value":17},"D3D12_MAX_VIEW_INSTANCE_COUNT":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":917,"type":"Integer","value":4},"D3D12_MEASUREMENTS_ACTION":{"comment":"","exp":"","file":"d3d12.h","line":13877,"type":"Enum","value":"typedef\\r\\nenum D3D12_MEASUREMENTS_ACTION\\r\\n    {\\r\\n        D3D12_MEASUREMENTS_ACTION_KEEP_ALL\\t= 0,\\r\\n        D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS\\t= ( D3D12_MEASUREMENTS_ACTION_KEEP_ALL + 1 ) ,\\r\\n        D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS_HIGH_PRIORITY\\t= ( D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS + 1 ) ,\\r\\n        D3D12_MEASUREMENTS_ACTION_DISCARD_PREVIOUS\\t= ( D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS_HIGH_PRIORITY + 1 ) \\r\\n    } \\tD3D12_MEASUREMENTS_ACTION;"},"D3D12_MEMCPY_DEST":{"comment":"","exp":"","file":"d3d12.h","line":18525,"type":"Struct","value":"typedef struct D3D12_MEMCPY_DEST\\r\\n    {\\r\\n    void *pData;\\r\\n    SIZE_T RowPitch;\\r\\n    SIZE_T SlicePitch;\\r\\n    } \\tD3D12_MEMCPY_DEST;"},"D3D12_MEMORY_POOL":{"comment":"","exp":"","file":"d3d12.h","line":2457,"type":"Enum","value":"typedef\\r\\nenum D3D12_MEMORY_POOL\\r\\n    {\\r\\n        D3D12_MEMORY_POOL_UNKNOWN\\t= 0,\\r\\n        D3D12_MEMORY_POOL_L0\\t= 1,\\r\\n        D3D12_MEMORY_POOL_L1\\t= 2\\r\\n    } \\tD3D12_MEMORY_POOL;"},"D3D12_MESH_SHADER_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2395,"type":"Enum","value":"typedef\\r\\nenum D3D12_MESH_SHADER_TIER\\r\\n    {\\r\\n        D3D12_MESH_SHADER_TIER_NOT_SUPPORTED\\t= 0,\\r\\n        D3D12_MESH_SHADER_TIER_1\\t= 10\\r\\n    } \\tD3D12_MESH_SHADER_TIER;"},"D3D12_MESSAGE":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":2361,"type":"Struct","value":"typedef struct D3D12_MESSAGE\\r\\n    {\\r\\n    D3D12_MESSAGE_CATEGORY Category;\\r\\n    D3D12_MESSAGE_SEVERITY Severity;\\r\\n    D3D12_MESSAGE_ID ID;\\r\\n    _Field_size_(DescriptionByteLength)  const char *pDescription;\\r\\n    SIZE_T DescriptionByteLength;\\r\\n    } \\tD3D12_MESSAGE;"},"D3D12_MESSAGE_CATEGORY":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":1486,"type":"Enum","value":"typedef\\r\\nenum D3D12_MESSAGE_CATEGORY\\r\\n    {\\r\\n        D3D12_MESSAGE_CATEGORY_APPLICATION_DEFINED\\t= 0,\\r\\n        D3D12_MESSAGE_CATEGORY_MISCELLANEOUS\\t= ( D3D12_MESSAGE_CATEGORY_APPLICATION_DEFINED + 1 ) ,\\r\\n        D3D12_MESSAGE_CATEGORY_INITIALIZATION\\t= ( D3D12_MESSAGE_CATEGORY_MISCELLANEOUS + 1 ) ,\\r\\n        D3D12_MESSAGE_CATEGORY_CLEANUP\\t= ( D3D12_MESSAGE_CATEGORY_INITIALIZATION + 1 ) ,\\r\\n        D3D12_MESSAGE_CATEGORY_COMPILATION\\t= ( D3D12_MESSAGE_CATEGORY_CLEANUP + 1 ) ,\\r\\n        D3D12_MESSAGE_CATEGORY_STATE_CREATION\\t= ( D3D12_MESSAGE_CATEGORY_COMPILATION + 1 ) ,\\r\\n        D3D12_MESSAGE_CATEGORY_STATE_SETTING\\t= ( D3D12_MESSAGE_CATEGORY_STATE_CREATION + 1 ) ,\\r\\n        D3D12_MESSAGE_CATEGORY_STATE_GETTING\\t= ( D3D12_MESSAGE_CATEGORY_STATE_SETTING + 1 ) ,\\r\\n        D3D12_MESSAGE_CATEGORY_RESOURCE_MANIPULATION\\t= ( D3D12_MESSAGE_CATEGORY_STATE_GETTING + 1 ) ,\\r\\n        D3D12_MESSAGE_CATEGORY_EXECUTION\\t= ( D3D12_MESSAGE_CATEGORY_RESOURCE_MANIPULATION + 1 ) ,\\r\\n        D3D12_MESSAGE_CATEGORY_SHADER\\t= ( D3D12_MESSAGE_CATEGORY_EXECUTION + 1 ) \\r\\n    } \\tD3D12_MESSAGE_CATEGORY;"},"D3D12_MESSAGE_ID":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":1512,"type":"Enum","value":"typedef\\r\\nenum D3D12_MESSAGE_ID\\r\\n    {\\r\\n        D3D12_MESSAGE_ID_UNKNOWN\\t= 0,\\r\\n        D3D12_MESSAGE_ID_STRING_FROM_APPLICATION\\t= 1,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_THIS\\t= 2,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER1\\t= 3,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER2\\t= 4,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER3\\t= 5,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER4\\t= 6,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER5\\t= 7,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER6\\t= 8,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER7\\t= 9,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER8\\t= 10,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER9\\t= 11,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER10\\t= 12,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER11\\t= 13,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER12\\t= 14,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER13\\t= 15,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER14\\t= 16,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_PARAMETER15\\t= 17,\\r\\n        D3D12_MESSAGE_ID_CORRUPTED_MULTITHREADING\\t= 18,\\r\\n        D3D12_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY\\t= 19,\\r\\n        D3D12_MESSAGE_ID_GETPRIVATEDATA_MOREDATA\\t= 20,\\r\\n        D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA\\t= 21,\\r\\n        D3D12_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS\\t= 24,\\r\\n        D3D12_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY\\t= 25,\\r\\n        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT\\t= 26,\\r\\n        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC\\t= 27,\\r\\n        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT\\t= 28,\\r\\n        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANESLICE\\t= 29,\\r\\n        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANESLICE\\t= 30,\\r\\n        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS\\t= 31,\\r\\n        D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE\\t= 32,\\r\\n        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT\\t= 35,\\r\\n        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT\\t= 36,\\r\\n        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC\\t= 37,\\r\\n        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT\\t= 38,\\r\\n        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANESLICE\\t= 39,\\r\\n        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANESLICE\\t= 40,\\r\\n        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS\\t= 41,\\r\\n        D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE\\t= 42,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT\\t= 45,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC\\t= 46,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT\\t= 47,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS\\t= 48,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE\\t= 49,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY\\t= 52,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS\\t= 53,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT\\t= 54,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT\\t= 55,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT\\t= 56,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS\\t= 57,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH\\t= 58,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE\\t= 59,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE\\t= 60,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT\\t= 61,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC\\t= 62,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE\\t= 63,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC\\t= 64,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT\\t= 65,\\r\\n        D3D12_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY\\t= 66,\\r\\n        D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE\\t= 67,\\r\\n        D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE\\t= 68,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY\\t= 69,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE\\t= 70,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE\\t= 71,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY\\t= 72,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE\\t= 73,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE\\t= 74,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES\\t= 75,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED\\t= 76,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED\\t= 79,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT\\t= 80,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT\\t= 81,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT\\t= 82,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT\\t= 83,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION\\t= 84,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT\\t= 85,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE\\t= 86,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC\\t= 87,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH\\t= 88,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS\\t= 89,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX\\t= 90,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE\\t= 91,\\r\\n        D3D12_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY\\t= 92,\\r\\n        D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE\\t= 93,\\r\\n        D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE\\t= 94,\\r\\n        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE\\t= 95,\\r\\n        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE\\t= 96,\\r\\n        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP\\t= 97,\\r\\n        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS\\t= 98,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK\\t= 100,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC\\t= 101,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP\\t= 102,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP\\t= 103,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP\\t= 104,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC\\t= 105,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP\\t= 106,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP\\t= 107,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP\\t= 108,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC\\t= 109,\\r\\n        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND\\t= 111,\\r\\n        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND\\t= 112,\\r\\n        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP\\t= 113,\\r\\n        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA\\t= 114,\\r\\n        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA\\t= 115,\\r\\n        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA\\t= 116,\\r\\n        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK\\t= 117,\\r\\n        D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID\\t= 135,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_NOT_SET\\t= 200,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_MISMATCH\\t= 201,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_NOT_SET\\t= 202,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL\\t= 209,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_TOO_SMALL\\t= 210,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_NOT_SET\\t= 211,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_FORMAT_INVALID\\t= 212,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_TOO_SMALL\\t= 213,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INVALID_PRIMITIVETOPOLOGY\\t= 219,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_STRIDE_UNALIGNED\\t= 221,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_OFFSET_UNALIGNED\\t= 222,\\r\\n        D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT\\t= 232,\\r\\n        D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT\\t= 233,\\r\\n        D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT\\t= 234,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC\\t= 239,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC\\t= 240,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH\\t= 245,\\r\\n        D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT\\t= 253,\\r\\n        D3D12_MESSAGE_ID_LIVE_OBJECT_SUMMARY\\t= 255,\\r\\n        D3D12_MESSAGE_ID_LIVE_DEVICE\\t= 274,\\r\\n        D3D12_MESSAGE_ID_LIVE_SWAPCHAIN\\t= 275,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS\\t= 276,\\r\\n        D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE\\t= 277,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE\\t= 278,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER\\t= 280,\\r\\n        D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE\\t= 283,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM\\t= 284,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES\\t= 285,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES\\t= 286,\\r\\n        D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES\\t= 287,\\r\\n        D3D12_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY\\t= 289,\\r\\n        D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE\\t= 290,\\r\\n        D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE\\t= 291,\\r\\n        D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE\\t= 292,\\r\\n        D3D12_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY\\t= 294,\\r\\n        D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE\\t= 295,\\r\\n        D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE\\t= 296,\\r\\n        D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE\\t= 297,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED\\t= 310,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE\\t= 318,\\r\\n        D3D12_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY\\t= 321,\\r\\n        D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE\\t= 322,\\r\\n        D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE\\t= 323,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED\\t= 331,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED\\t= 332,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED\\t= 333,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED\\t= 334,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED\\t= 335,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED\\t= 336,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED\\t= 337,\\r\\n        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE\\t= 340,\\r\\n        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC\\t= 341,\\r\\n        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT\\t= 342,\\r\\n        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANESLICE\\t= 343,\\r\\n        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANESLICE\\t= 344,\\r\\n        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS\\t= 345,\\r\\n        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT\\t= 346,\\r\\n        D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS\\t= 354,\\r\\n        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT\\t= 401,\\r\\n        D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS\\t= 403,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED\\t= 410,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED\\t= 412,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED\\t= 414,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED\\t= 416,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED\\t= 418,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED\\t= 420,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED\\t= 422,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED\\t= 425,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED\\t= 426,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED\\t= 427,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED\\t= 428,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED\\t= 429,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED\\t= 430,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED\\t= 431,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT\\t= 447,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT\\t= 448,\\r\\n        D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER\\t= 493,\\r\\n        D3D12_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER\\t= 494,\\r\\n        D3D12_MESSAGE_ID_CREATEDEVICE_INVALIDARGS\\t= 506,\\r\\n        D3D12_MESSAGE_ID_CREATEDEVICE_WARNING\\t= 507,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_TYPE\\t= 519,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_NULL_POINTER\\t= 520,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SUBRESOURCE\\t= 521,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_RESERVED_BITS\\t= 522,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISSING_BIND_FLAGS\\t= 523,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_MISC_FLAGS\\t= 524,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_MATCHING_STATES\\t= 525,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINATION\\t= 526,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_BEFORE_AFTER_MISMATCH\\t= 527,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_RESOURCE\\t= 528,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_SAMPLE_COUNT\\t= 529,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS\\t= 530,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINED_FLAGS\\t= 531,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS_FOR_FORMAT\\t= 532,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SPLIT_BARRIER\\t= 533,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_END\\t= 534,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_BEGIN\\t= 535,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAG\\t= 536,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMMAND_LIST_TYPE\\t= 537,\\r\\n        D3D12_MESSAGE_ID_INVALID_SUBRESOURCE_STATE\\t= 538,\\r\\n        D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CONTENTION\\t= 540,\\r\\n        D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET\\t= 541,\\r\\n        D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET_BUNDLE\\t= 542,\\r\\n        D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CANNOT_RESET\\t= 543,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_OPEN\\t= 544,\\r\\n        D3D12_MESSAGE_ID_INVALID_BUNDLE_API\\t= 546,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_CLOSED\\t= 547,\\r\\n        D3D12_MESSAGE_ID_WRONG_COMMAND_ALLOCATOR_TYPE\\t= 549,\\r\\n        D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_SYNC\\t= 552,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_SYNC\\t= 553,\\r\\n        D3D12_MESSAGE_ID_SET_DESCRIPTOR_HEAP_INVALID\\t= 554,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMANDQUEUE\\t= 557,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMANDALLOCATOR\\t= 558,\\r\\n        D3D12_MESSAGE_ID_CREATE_PIPELINESTATE\\t= 559,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMANDLIST12\\t= 560,\\r\\n        D3D12_MESSAGE_ID_CREATE_RESOURCE\\t= 562,\\r\\n        D3D12_MESSAGE_ID_CREATE_DESCRIPTORHEAP\\t= 563,\\r\\n        D3D12_MESSAGE_ID_CREATE_ROOTSIGNATURE\\t= 564,\\r\\n        D3D12_MESSAGE_ID_CREATE_LIBRARY\\t= 565,\\r\\n        D3D12_MESSAGE_ID_CREATE_HEAP\\t= 566,\\r\\n        D3D12_MESSAGE_ID_CREATE_MONITOREDFENCE\\t= 567,\\r\\n        D3D12_MESSAGE_ID_CREATE_QUERYHEAP\\t= 568,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMANDSIGNATURE\\t= 569,\\r\\n        D3D12_MESSAGE_ID_LIVE_COMMANDQUEUE\\t= 570,\\r\\n        D3D12_MESSAGE_ID_LIVE_COMMANDALLOCATOR\\t= 571,\\r\\n        D3D12_MESSAGE_ID_LIVE_PIPELINESTATE\\t= 572,\\r\\n        D3D12_MESSAGE_ID_LIVE_COMMANDLIST12\\t= 573,\\r\\n        D3D12_MESSAGE_ID_LIVE_RESOURCE\\t= 575,\\r\\n        D3D12_MESSAGE_ID_LIVE_DESCRIPTORHEAP\\t= 576,\\r\\n        D3D12_MESSAGE_ID_LIVE_ROOTSIGNATURE\\t= 577,\\r\\n        D3D12_MESSAGE_ID_LIVE_LIBRARY\\t= 578,\\r\\n        D3D12_MESSAGE_ID_LIVE_HEAP\\t= 579,\\r\\n        D3D12_MESSAGE_ID_LIVE_MONITOREDFENCE\\t= 580,\\r\\n        D3D12_MESSAGE_ID_LIVE_QUERYHEAP\\t= 581,\\r\\n        D3D12_MESSAGE_ID_LIVE_COMMANDSIGNATURE\\t= 582,\\r\\n        D3D12_MESSAGE_ID_DESTROY_COMMANDQUEUE\\t= 583,\\r\\n        D3D12_MESSAGE_ID_DESTROY_COMMANDALLOCATOR\\t= 584,\\r\\n        D3D12_MESSAGE_ID_DESTROY_PIPELINESTATE\\t= 585,\\r\\n        D3D12_MESSAGE_ID_DESTROY_COMMANDLIST12\\t= 586,\\r\\n        D3D12_MESSAGE_ID_DESTROY_RESOURCE\\t= 588,\\r\\n        D3D12_MESSAGE_ID_DESTROY_DESCRIPTORHEAP\\t= 589,\\r\\n        D3D12_MESSAGE_ID_DESTROY_ROOTSIGNATURE\\t= 590,\\r\\n        D3D12_MESSAGE_ID_DESTROY_LIBRARY\\t= 591,\\r\\n        D3D12_MESSAGE_ID_DESTROY_HEAP\\t= 592,\\r\\n        D3D12_MESSAGE_ID_DESTROY_MONITOREDFENCE\\t= 593,\\r\\n        D3D12_MESSAGE_ID_DESTROY_QUERYHEAP\\t= 594,\\r\\n        D3D12_MESSAGE_ID_DESTROY_COMMANDSIGNATURE\\t= 595,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONS\\t= 597,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMISCFLAGS\\t= 599,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDARG_RETURN\\t= 602,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_OUTOFMEMORY_RETURN\\t= 603,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDESC\\t= 604,\\r\\n        D3D12_MESSAGE_ID_POSSIBLY_INVALID_SUBRESOURCE_STATE\\t= 607,\\r\\n        D3D12_MESSAGE_ID_INVALID_USE_OF_NON_RESIDENT_RESOURCE\\t= 608,\\r\\n        D3D12_MESSAGE_ID_POSSIBLE_INVALID_USE_OF_NON_RESIDENT_RESOURCE\\t= 609,\\r\\n        D3D12_MESSAGE_ID_BUNDLE_PIPELINE_STATE_MISMATCH\\t= 610,\\r\\n        D3D12_MESSAGE_ID_PRIMITIVE_TOPOLOGY_MISMATCH_PIPELINE_STATE\\t= 611,\\r\\n        D3D12_MESSAGE_ID_RENDER_TARGET_FORMAT_MISMATCH_PIPELINE_STATE\\t= 613,\\r\\n        D3D12_MESSAGE_ID_RENDER_TARGET_SAMPLE_DESC_MISMATCH_PIPELINE_STATE\\t= 614,\\r\\n        D3D12_MESSAGE_ID_DEPTH_STENCIL_FORMAT_MISMATCH_PIPELINE_STATE\\t= 615,\\r\\n        D3D12_MESSAGE_ID_DEPTH_STENCIL_SAMPLE_DESC_MISMATCH_PIPELINE_STATE\\t= 616,\\r\\n        D3D12_MESSAGE_ID_CREATESHADER_INVALIDBYTECODE\\t= 622,\\r\\n        D3D12_MESSAGE_ID_CREATEHEAP_NULLDESC\\t= 623,\\r\\n        D3D12_MESSAGE_ID_CREATEHEAP_INVALIDSIZE\\t= 624,\\r\\n        D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDHEAPTYPE\\t= 625,\\r\\n        D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES\\t= 626,\\r\\n        D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMEMORYPOOL\\t= 627,\\r\\n        D3D12_MESSAGE_ID_CREATEHEAP_INVALIDPROPERTIES\\t= 628,\\r\\n        D3D12_MESSAGE_ID_CREATEHEAP_INVALIDALIGNMENT\\t= 629,\\r\\n        D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMISCFLAGS\\t= 630,\\r\\n        D3D12_MESSAGE_ID_CREATEHEAP_INVALIDMISCFLAGS\\t= 631,\\r\\n        D3D12_MESSAGE_ID_CREATEHEAP_INVALIDARG_RETURN\\t= 632,\\r\\n        D3D12_MESSAGE_ID_CREATEHEAP_OUTOFMEMORY_RETURN\\t= 633,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAPPROPERTIES\\t= 634,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPTYPE\\t= 635,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES\\t= 636,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDMEMORYPOOL\\t= 637,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPPROPERTIES\\t= 638,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPMISCFLAGS\\t= 639,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPMISCFLAGS\\t= 640,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDARG_RETURN\\t= 641,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_OUTOFMEMORY_RETURN\\t= 642,\\r\\n        D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_UNRECOGNIZEDHEAPTYPE\\t= 643,\\r\\n        D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_INVALIDHEAPTYPE\\t= 644,\\r\\n        D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_INVALID_DESC\\t= 645,\\r\\n        D3D12_MESSAGE_ID_INVALID_DESCRIPTOR_HANDLE\\t= 646,\\r\\n        D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE\\t= 647,\\r\\n        D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_RESOURCE\\t= 649,\\r\\n        D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_DESC\\t= 650,\\r\\n        D3D12_MESSAGE_ID_CREATE_UNORDEREDACCESS_VIEW_INVALID_COUNTER_USAGE\\t= 652,\\r\\n        D3D12_MESSAGE_ID_COPY_DESCRIPTORS_INVALID_RANGES\\t= 653,\\r\\n        D3D12_MESSAGE_ID_COPY_DESCRIPTORS_WRITE_ONLY_DESCRIPTOR\\t= 654,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RTV_FORMAT_NOT_UNKNOWN\\t= 655,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_RENDER_TARGET_COUNT\\t= 656,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VERTEX_SHADER_NOT_SET\\t= 657,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_NOT_SET\\t= 658,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_HS_DS_SIGNATURE_MISMATCH\\t= 659,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERINDEX\\t= 660,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_COMPONENTTYPE\\t= 661,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERMASK\\t= 662,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SYSTEMVALUE\\t= 663,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS\\t= 664,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_MINPRECISION\\t= 665,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND\\t= 666,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_XOR_DS_MISMATCH\\t= 667,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH\\t= 668,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_CONTROL_POINT_COUNT_MISMATCH\\t= 669,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_TESSELLATOR_DOMAIN_MISMATCH\\t= 670,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN\\t= 671,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_FORCED_SAMPLE_COUNT\\t= 672,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_PRIMITIVETOPOLOGY\\t= 673,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SYSTEMVALUE\\t= 674,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0\\t= 675,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING\\t= 676,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_TYPE_MISMATCH\\t= 677,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS\\t= 678,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RENDERTARGETVIEW_NOT_SET\\t= 679,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DEPTHSTENCILVIEW_NOT_SET\\t= 680,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_INPUT_PRIMITIVE_MISMATCH\\t= 681,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_POSITION_NOT_PRESENT\\t= 682,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE_FLAGS\\t= 683,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_INDEX_BUFFER_PROPERTIES\\t= 684,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SAMPLE_DESC\\t= 685,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_ROOT_SIGNATURE_MISMATCH\\t= 686,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DS_ROOT_SIGNATURE_MISMATCH\\t= 687,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VS_ROOT_SIGNATURE_MISMATCH\\t= 688,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_ROOT_SIGNATURE_MISMATCH\\t= 689,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_ROOT_SIGNATURE_MISMATCH\\t= 690,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE\\t= 691,\\r\\n        D3D12_MESSAGE_ID_EXECUTE_BUNDLE_OPEN_BUNDLE\\t= 692,\\r\\n        D3D12_MESSAGE_ID_EXECUTE_BUNDLE_DESCRIPTOR_HEAP_MISMATCH\\t= 693,\\r\\n        D3D12_MESSAGE_ID_EXECUTE_BUNDLE_TYPE\\t= 694,\\r\\n        D3D12_MESSAGE_ID_DRAW_EMPTY_SCISSOR_RECTANGLE\\t= 695,\\r\\n        D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_BLOB_NOT_FOUND\\t= 696,\\r\\n        D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_DESERIALIZE_FAILED\\t= 697,\\r\\n        D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_INVALID_CONFIGURATION\\t= 698,\\r\\n        D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_SUPPORTED_ON_DEVICE\\t= 699,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLRESOURCEPROPERTIES\\t= 700,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAP\\t= 701,\\r\\n        D3D12_MESSAGE_ID_GETRESOURCEALLOCATIONINFO_INVALIDRDESCS\\t= 702,\\r\\n        D3D12_MESSAGE_ID_MAKERESIDENT_NULLOBJECTARRAY\\t= 703,\\r\\n        D3D12_MESSAGE_ID_EVICT_NULLOBJECTARRAY\\t= 705,\\r\\n        D3D12_MESSAGE_ID_SET_DESCRIPTOR_TABLE_INVALID\\t= 708,\\r\\n        D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_INVALID\\t= 709,\\r\\n        D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_BUFFER_VIEW_INVALID\\t= 710,\\r\\n        D3D12_MESSAGE_ID_SET_ROOT_SHADER_RESOURCE_VIEW_INVALID\\t= 711,\\r\\n        D3D12_MESSAGE_ID_SET_ROOT_UNORDERED_ACCESS_VIEW_INVALID\\t= 712,\\r\\n        D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID_DESC\\t= 713,\\r\\n        D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID_DESC\\t= 715,\\r\\n        D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID_DESC\\t= 717,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDDIMENSIONALITY\\t= 718,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDLAYOUT\\t= 719,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONALITY\\t= 720,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDALIGNMENT\\t= 721,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMIPLEVELS\\t= 722,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDSAMPLEDESC\\t= 723,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDLAYOUT\\t= 724,\\r\\n        D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID\\t= 725,\\r\\n        D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID\\t= 726,\\r\\n        D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID\\t= 727,\\r\\n        D3D12_MESSAGE_ID_SET_RENDER_TARGETS_INVALID\\t= 728,\\r\\n        D3D12_MESSAGE_ID_CREATEQUERY_HEAP_INVALID_PARAMETERS\\t= 729,\\r\\n        D3D12_MESSAGE_ID_BEGIN_END_QUERY_INVALID_PARAMETERS\\t= 731,\\r\\n        D3D12_MESSAGE_ID_CLOSE_COMMAND_LIST_OPEN_QUERY\\t= 732,\\r\\n        D3D12_MESSAGE_ID_RESOLVE_QUERY_DATA_INVALID_PARAMETERS\\t= 733,\\r\\n        D3D12_MESSAGE_ID_SET_PREDICATION_INVALID_PARAMETERS\\t= 734,\\r\\n        D3D12_MESSAGE_ID_TIMESTAMPS_NOT_SUPPORTED\\t= 735,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDFORMAT\\t= 737,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDFORMAT\\t= 738,\\r\\n        D3D12_MESSAGE_ID_GETCOPYABLEFOOTPRINTS_INVALIDSUBRESOURCERANGE\\t= 739,\\r\\n        D3D12_MESSAGE_ID_GETCOPYABLEFOOTPRINTS_INVALIDBASEOFFSET\\t= 740,\\r\\n        D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDSUBRESOURCERANGE\\t= 739,\\r\\n        D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDBASEOFFSET\\t= 740,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_HEAP\\t= 741,\\r\\n        D3D12_MESSAGE_ID_CREATE_SAMPLER_INVALID\\t= 742,\\r\\n        D3D12_MESSAGE_ID_CREATECOMMANDSIGNATURE_INVALID\\t= 743,\\r\\n        D3D12_MESSAGE_ID_EXECUTE_INDIRECT_INVALID_PARAMETERS\\t= 744,\\r\\n        D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_RESOURCE_DIMENSION\\t= 745,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUE\\t= 815,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDCLEARVALUEFORMAT\\t= 816,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUEFORMAT\\t= 817,\\r\\n        D3D12_MESSAGE_ID_CREATERESOURCE_CLEARVALUEDENORMFLUSH\\t= 818,\\r\\n        D3D12_MESSAGE_ID_CLEARRENDERTARGETVIEW_MISMATCHINGCLEARVALUE\\t= 820,\\r\\n        D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_MISMATCHINGCLEARVALUE\\t= 821,\\r\\n        D3D12_MESSAGE_ID_MAP_INVALIDHEAP\\t= 822,\\r\\n        D3D12_MESSAGE_ID_UNMAP_INVALIDHEAP\\t= 823,\\r\\n        D3D12_MESSAGE_ID_MAP_INVALIDRESOURCE\\t= 824,\\r\\n        D3D12_MESSAGE_ID_UNMAP_INVALIDRESOURCE\\t= 825,\\r\\n        D3D12_MESSAGE_ID_MAP_INVALIDSUBRESOURCE\\t= 826,\\r\\n        D3D12_MESSAGE_ID_UNMAP_INVALIDSUBRESOURCE\\t= 827,\\r\\n        D3D12_MESSAGE_ID_MAP_INVALIDRANGE\\t= 828,\\r\\n        D3D12_MESSAGE_ID_UNMAP_INVALIDRANGE\\t= 829,\\r\\n        D3D12_MESSAGE_ID_MAP_INVALIDDATAPOINTER\\t= 832,\\r\\n        D3D12_MESSAGE_ID_MAP_INVALIDARG_RETURN\\t= 833,\\r\\n        D3D12_MESSAGE_ID_MAP_OUTOFMEMORY_RETURN\\t= 834,\\r\\n        D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_BUNDLENOTSUPPORTED\\t= 835,\\r\\n        D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_COMMANDLISTMISMATCH\\t= 836,\\r\\n        D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_OPENCOMMANDLIST\\t= 837,\\r\\n        D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_FAILEDCOMMANDLIST\\t= 838,\\r\\n        D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLDST\\t= 839,\\r\\n        D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDDSTRESOURCEDIMENSION\\t= 840,\\r\\n        D3D12_MESSAGE_ID_COPYBUFFERREGION_DSTRANGEOUTOFBOUNDS\\t= 841,\\r\\n        D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLSRC\\t= 842,\\r\\n        D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDSRCRESOURCEDIMENSION\\t= 843,\\r\\n        D3D12_MESSAGE_ID_COPYBUFFERREGION_SRCRANGEOUTOFBOUNDS\\t= 844,\\r\\n        D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDCOPYFLAGS\\t= 845,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLDST\\t= 846,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTTYPE\\t= 847,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCEDIMENSION\\t= 848,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCE\\t= 849,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTSUBRESOURCE\\t= 850,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTOFFSET\\t= 851,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTFORMAT\\t= 852,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTFORMAT\\t= 853,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDIMENSIONS\\t= 854,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTROWPITCH\\t= 855,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTPLACEMENT\\t= 856,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDSPLACEDFOOTPRINTFORMAT\\t= 857,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_DSTREGIONOUTOFBOUNDS\\t= 858,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLSRC\\t= 859,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCTYPE\\t= 860,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCEDIMENSION\\t= 861,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCE\\t= 862,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCSUBRESOURCE\\t= 863,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCOFFSET\\t= 864,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCFORMAT\\t= 865,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCFORMAT\\t= 866,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDIMENSIONS\\t= 867,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCROWPITCH\\t= 868,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCPLACEMENT\\t= 869,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDSPLACEDFOOTPRINTFORMAT\\t= 870,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_SRCREGIONOUTOFBOUNDS\\t= 871,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTCOORDINATES\\t= 872,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCBOX\\t= 873,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_FORMATMISMATCH\\t= 874,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_EMPTYBOX\\t= 875,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDCOPYFLAGS\\t= 876,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SUBRESOURCE_INDEX\\t= 877,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_FORMAT\\t= 878,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_MISMATCH\\t= 879,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SAMPLE_COUNT\\t= 880,\\r\\n        D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_INVALID_SHADER\\t= 881,\\r\\n        D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_CS_ROOT_SIGNATURE_MISMATCH\\t= 882,\\r\\n        D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_MISSING_ROOT_SIGNATURE\\t= 883,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALIDCACHEDBLOB\\t= 884,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBADAPTERMISMATCH\\t= 885,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDRIVERVERSIONMISMATCH\\t= 886,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDESCMISMATCH\\t= 887,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBIGNORED\\t= 888,\\r\\n        D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDHEAP\\t= 889,\\r\\n        D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDRESOURCE\\t= 890,\\r\\n        D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDBOX\\t= 891,\\r\\n        D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDSUBRESOURCE\\t= 892,\\r\\n        D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_EMPTYBOX\\t= 893,\\r\\n        D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDHEAP\\t= 894,\\r\\n        D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDRESOURCE\\t= 895,\\r\\n        D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDBOX\\t= 896,\\r\\n        D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDSUBRESOURCE\\t= 897,\\r\\n        D3D12_MESSAGE_ID_READFROMSUBRESOURCE_EMPTYBOX\\t= 898,\\r\\n        D3D12_MESSAGE_ID_TOO_MANY_NODES_SPECIFIED\\t= 899,\\r\\n        D3D12_MESSAGE_ID_INVALID_NODE_INDEX\\t= 900,\\r\\n        D3D12_MESSAGE_ID_GETHEAPPROPERTIES_INVALIDRESOURCE\\t= 901,\\r\\n        D3D12_MESSAGE_ID_NODE_MASK_MISMATCH\\t= 902,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_OUTOFMEMORY\\t= 903,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_MULTIPLE_SWAPCHAIN_BUFFER_REFERENCES\\t= 904,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_TOO_MANY_SWAPCHAIN_REFERENCES\\t= 905,\\r\\n        D3D12_MESSAGE_ID_COMMAND_QUEUE_TOO_MANY_SWAPCHAIN_REFERENCES\\t= 906,\\r\\n        D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_WRONGSWAPCHAINBUFFERREFERENCE\\t= 907,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_SETRENDERTARGETS_INVALIDNUMRENDERTARGETS\\t= 908,\\r\\n        D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_TYPE\\t= 909,\\r\\n        D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_FLAGS\\t= 910,\\r\\n        D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFLAGS\\t= 911,\\r\\n        D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFORMAT\\t= 912,\\r\\n        D3D12_MESSAGE_ID_CREATESHAREDHEAP_INVALIDFLAGS\\t= 913,\\r\\n        D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_UNRECOGNIZEDPROPERTIES\\t= 914,\\r\\n        D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDSIZE\\t= 915,\\r\\n        D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDOBJECT\\t= 916,\\r\\n        D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDOBJECT\\t= 917,\\r\\n        D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDKEY\\t= 918,\\r\\n        D3D12_MESSAGE_ID_KEYEDMUTEX_WRONGSTATE\\t= 919,\\r\\n        D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_PRIORITY\\t= 920,\\r\\n        D3D12_MESSAGE_ID_OBJECT_DELETED_WHILE_STILL_IN_USE\\t= 921,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_FLAGS\\t= 922,\\r\\n        D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_HAS_NO_RESOURCE\\t= 923,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RENDER_TARGET_DELETED\\t= 924,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_ALL_RENDER_TARGETS_HAVE_UNKNOWN_FORMAT\\t= 925,\\r\\n        D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_INTERSECTS_MULTIPLE_BUFFERS\\t= 926,\\r\\n        D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_GPU_WRITTEN_READBACK_RESOURCE_MAPPED\\t= 927,\\r\\n        D3D12_MESSAGE_ID_UNMAP_RANGE_NOT_EMPTY\\t= 929,\\r\\n        D3D12_MESSAGE_ID_MAP_INVALID_NULLRANGE\\t= 930,\\r\\n        D3D12_MESSAGE_ID_UNMAP_INVALID_NULLRANGE\\t= 931,\\r\\n        D3D12_MESSAGE_ID_NO_GRAPHICS_API_SUPPORT\\t= 932,\\r\\n        D3D12_MESSAGE_ID_NO_COMPUTE_API_SUPPORT\\t= 933,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_FLAGS_NOT_SUPPORTED\\t= 934,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_ROOT_ARGUMENT_UNINITIALIZED\\t= 935,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_HEAP_INDEX_OUT_OF_BOUNDS\\t= 936,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_TABLE_REGISTER_INDEX_OUT_OF_BOUNDS\\t= 937,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_UNINITIALIZED\\t= 938,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_TYPE_MISMATCH\\t= 939,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_SRV_RESOURCE_DIMENSION_MISMATCH\\t= 940,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_UAV_RESOURCE_DIMENSION_MISMATCH\\t= 941,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_INCOMPATIBLE_RESOURCE_STATE\\t= 942,\\r\\n        D3D12_MESSAGE_ID_COPYRESOURCE_NULLDST\\t= 943,\\r\\n        D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDDSTRESOURCE\\t= 944,\\r\\n        D3D12_MESSAGE_ID_COPYRESOURCE_NULLSRC\\t= 945,\\r\\n        D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDSRCRESOURCE\\t= 946,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_NULLDST\\t= 947,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALIDDSTRESOURCE\\t= 948,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_NULLSRC\\t= 949,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALIDSRCRESOURCE\\t= 950,\\r\\n        D3D12_MESSAGE_ID_PIPELINE_STATE_TYPE_MISMATCH\\t= 951,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_NOT_SET\\t= 952,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_MISMATCH\\t= 953,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_ZERO_BARRIERS\\t= 954,\\r\\n        D3D12_MESSAGE_ID_BEGIN_END_EVENT_MISMATCH\\t= 955,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_POSSIBLE_BEFORE_AFTER_MISMATCH\\t= 956,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_BEGIN_END\\t= 957,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_INVALID_RESOURCE\\t= 958,\\r\\n        D3D12_MESSAGE_ID_USE_OF_ZERO_REFCOUNT_OBJECT\\t= 959,\\r\\n        D3D12_MESSAGE_ID_OBJECT_EVICTED_WHILE_STILL_IN_USE\\t= 960,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_ROOT_DESCRIPTOR_ACCESS_OUT_OF_BOUNDS\\t= 961,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_INVALIDLIBRARYBLOB\\t= 962,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_DRIVERVERSIONMISMATCH\\t= 963,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_ADAPTERVERSIONMISMATCH\\t= 964,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_UNSUPPORTED\\t= 965,\\r\\n        D3D12_MESSAGE_ID_CREATE_PIPELINELIBRARY\\t= 966,\\r\\n        D3D12_MESSAGE_ID_LIVE_PIPELINELIBRARY\\t= 967,\\r\\n        D3D12_MESSAGE_ID_DESTROY_PIPELINELIBRARY\\t= 968,\\r\\n        D3D12_MESSAGE_ID_STOREPIPELINE_NONAME\\t= 969,\\r\\n        D3D12_MESSAGE_ID_STOREPIPELINE_DUPLICATENAME\\t= 970,\\r\\n        D3D12_MESSAGE_ID_LOADPIPELINE_NAMENOTFOUND\\t= 971,\\r\\n        D3D12_MESSAGE_ID_LOADPIPELINE_INVALIDDESC\\t= 972,\\r\\n        D3D12_MESSAGE_ID_PIPELINELIBRARY_SERIALIZE_NOTENOUGHMEMORY\\t= 973,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_RT_OUTPUT_MISMATCH\\t= 974,\\r\\n        D3D12_MESSAGE_ID_SETEVENTONMULTIPLEFENCECOMPLETION_INVALIDFLAGS\\t= 975,\\r\\n        D3D12_MESSAGE_ID_CREATE_QUEUE_VIDEO_NOT_SUPPORTED\\t= 976,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMAND_ALLOCATOR_VIDEO_NOT_SUPPORTED\\t= 977,\\r\\n        D3D12_MESSAGE_ID_CREATEQUERY_HEAP_VIDEO_DECODE_STATISTICS_NOT_SUPPORTED\\t= 978,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEODECODECOMMANDLIST\\t= 979,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEODECODER\\t= 980,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEODECODESTREAM\\t= 981,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEODECODECOMMANDLIST\\t= 982,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEODECODER\\t= 983,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEODECODESTREAM\\t= 984,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEODECODECOMMANDLIST\\t= 985,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEODECODER\\t= 986,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEODECODESTREAM\\t= 987,\\r\\n        D3D12_MESSAGE_ID_DECODE_FRAME_INVALID_PARAMETERS\\t= 988,\\r\\n        D3D12_MESSAGE_ID_DEPRECATED_API\\t= 989,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_COMMAND_LIST_TYPE\\t= 990,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_DESCRIPTOR_TABLE_NOT_SET\\t= 991,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_CONSTANT_BUFFER_VIEW_NOT_SET\\t= 992,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_SHADER_RESOURCE_VIEW_NOT_SET\\t= 993,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_UNORDERED_ACCESS_VIEW_NOT_SET\\t= 994,\\r\\n        D3D12_MESSAGE_ID_DISCARD_INVALID_SUBRESOURCE_RANGE\\t= 995,\\r\\n        D3D12_MESSAGE_ID_DISCARD_ONE_SUBRESOURCE_FOR_MIPS_WITH_RECTS\\t= 996,\\r\\n        D3D12_MESSAGE_ID_DISCARD_NO_RECTS_FOR_NON_TEXTURE2D\\t= 997,\\r\\n        D3D12_MESSAGE_ID_COPY_ON_SAME_SUBRESOURCE\\t= 998,\\r\\n        D3D12_MESSAGE_ID_SETRESIDENCYPRIORITY_INVALID_PAGEABLE\\t= 999,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_UNSUPPORTED\\t= 1000,\\r\\n        D3D12_MESSAGE_ID_STATIC_DESCRIPTOR_INVALID_DESCRIPTOR_CHANGE\\t= 1001,\\r\\n        D3D12_MESSAGE_ID_DATA_STATIC_DESCRIPTOR_INVALID_DATA_CHANGE\\t= 1002,\\r\\n        D3D12_MESSAGE_ID_DATA_STATIC_WHILE_SET_AT_EXECUTE_DESCRIPTOR_INVALID_DATA_CHANGE\\t= 1003,\\r\\n        D3D12_MESSAGE_ID_EXECUTE_BUNDLE_STATIC_DESCRIPTOR_DATA_STATIC_NOT_SET\\t= 1004,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_RESOURCE_ACCESS_OUT_OF_BOUNDS\\t= 1005,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_SAMPLER_MODE_MISMATCH\\t= 1006,\\r\\n        D3D12_MESSAGE_ID_CREATE_FENCE_INVALID_FLAGS\\t= 1007,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_BARRIER_DUPLICATE_SUBRESOURCE_TRANSITIONS\\t= 1008,\\r\\n        D3D12_MESSAGE_ID_SETRESIDENCYPRIORITY_INVALID_PRIORITY\\t= 1009,\\r\\n        D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_LARGE_NUM_DESCRIPTORS\\t= 1013,\\r\\n        D3D12_MESSAGE_ID_BEGIN_EVENT\\t= 1014,\\r\\n        D3D12_MESSAGE_ID_END_EVENT\\t= 1015,\\r\\n        D3D12_MESSAGE_ID_CREATEDEVICE_DEBUG_LAYER_STARTUP_OPTIONS\\t= 1016,\\r\\n        D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_DEPTHBOUNDSTEST_UNSUPPORTED\\t= 1017,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_DUPLICATE_SUBOBJECT\\t= 1018,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_UNKNOWN_SUBOBJECT\\t= 1019,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_ZERO_SIZE_STREAM\\t= 1020,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_STREAM\\t= 1021,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CANNOT_DEDUCE_TYPE\\t= 1022,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_STATIC_DESCRIPTOR_RESOURCE_DIMENSION_MISMATCH\\t= 1023,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMAND_QUEUE_INSUFFICIENT_PRIVILEGE_FOR_GLOBAL_REALTIME\\t= 1024,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMAND_QUEUE_INSUFFICIENT_HARDWARE_SUPPORT_FOR_GLOBAL_REALTIME\\t= 1025,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_ARCHITECTURE\\t= 1026,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DST\\t= 1027,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DST_RESOURCE_DIMENSION\\t= 1028,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DST_RANGE_OUT_OF_BOUNDS\\t= 1029,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_SRC\\t= 1030,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE_DIMENSION\\t= 1031,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_SRC_RANGE_OUT_OF_BOUNDS\\t= 1032,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_OFFSET_ALIGNMENT\\t= 1033,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DEPENDENT_RESOURCES\\t= 1034,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DEPENDENT_SUBRESOURCE_RANGES\\t= 1035,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DEPENDENT_RESOURCE\\t= 1036,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DEPENDENT_SUBRESOURCE_RANGE\\t= 1037,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DEPENDENT_SUBRESOURCE_OUT_OF_BOUNDS\\t= 1038,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DEPENDENT_RANGE_OUT_OF_BOUNDS\\t= 1039,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_ZERO_DEPENDENCIES\\t= 1040,\\r\\n        D3D12_MESSAGE_ID_DEVICE_CREATE_SHARED_HANDLE_INVALIDARG\\t= 1041,\\r\\n        D3D12_MESSAGE_ID_DESCRIPTOR_HANDLE_WITH_INVALID_RESOURCE\\t= 1042,\\r\\n        D3D12_MESSAGE_ID_SETDEPTHBOUNDS_INVALIDARGS\\t= 1043,\\r\\n        D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_RESOURCE_STATE_IMPRECISE\\t= 1044,\\r\\n        D3D12_MESSAGE_ID_COMMAND_LIST_PIPELINE_STATE_NOT_SET\\t= 1045,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_MODEL_MISMATCH\\t= 1046,\\r\\n        D3D12_MESSAGE_ID_OBJECT_ACCESSED_WHILE_STILL_IN_USE\\t= 1047,\\r\\n        D3D12_MESSAGE_ID_PROGRAMMABLE_MSAA_UNSUPPORTED\\t= 1048,\\r\\n        D3D12_MESSAGE_ID_SETSAMPLEPOSITIONS_INVALIDARGS\\t= 1049,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCEREGION_INVALID_RECT\\t= 1050,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEODECODECOMMANDQUEUE\\t= 1051,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSCOMMANDLIST\\t= 1052,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSCOMMANDQUEUE\\t= 1053,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEODECODECOMMANDQUEUE\\t= 1054,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSCOMMANDLIST\\t= 1055,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSCOMMANDQUEUE\\t= 1056,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEODECODECOMMANDQUEUE\\t= 1057,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSCOMMANDLIST\\t= 1058,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSCOMMANDQUEUE\\t= 1059,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSOR\\t= 1060,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSSTREAM\\t= 1061,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSOR\\t= 1062,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSSTREAM\\t= 1063,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSOR\\t= 1064,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSSTREAM\\t= 1065,\\r\\n        D3D12_MESSAGE_ID_PROCESS_FRAME_INVALID_PARAMETERS\\t= 1066,\\r\\n        D3D12_MESSAGE_ID_COPY_INVALIDLAYOUT\\t= 1067,\\r\\n        D3D12_MESSAGE_ID_CREATE_CRYPTO_SESSION\\t= 1068,\\r\\n        D3D12_MESSAGE_ID_CREATE_CRYPTO_SESSION_POLICY\\t= 1069,\\r\\n        D3D12_MESSAGE_ID_CREATE_PROTECTED_RESOURCE_SESSION\\t= 1070,\\r\\n        D3D12_MESSAGE_ID_LIVE_CRYPTO_SESSION\\t= 1071,\\r\\n        D3D12_MESSAGE_ID_LIVE_CRYPTO_SESSION_POLICY\\t= 1072,\\r\\n        D3D12_MESSAGE_ID_LIVE_PROTECTED_RESOURCE_SESSION\\t= 1073,\\r\\n        D3D12_MESSAGE_ID_DESTROY_CRYPTO_SESSION\\t= 1074,\\r\\n        D3D12_MESSAGE_ID_DESTROY_CRYPTO_SESSION_POLICY\\t= 1075,\\r\\n        D3D12_MESSAGE_ID_DESTROY_PROTECTED_RESOURCE_SESSION\\t= 1076,\\r\\n        D3D12_MESSAGE_ID_PROTECTED_RESOURCE_SESSION_UNSUPPORTED\\t= 1077,\\r\\n        D3D12_MESSAGE_ID_FENCE_INVALIDOPERATION\\t= 1078,\\r\\n        D3D12_MESSAGE_ID_CREATEQUERY_HEAP_COPY_QUEUE_TIMESTAMPS_NOT_SUPPORTED\\t= 1079,\\r\\n        D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_DEFERRED\\t= 1080,\\r\\n        D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMFIRSTUSE\\t= 1081,\\r\\n        D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMCLEAR\\t= 1082,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEODECODERHEAP\\t= 1083,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEODECODERHEAP\\t= 1084,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEODECODERHEAP\\t= 1085,\\r\\n        D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDARG_RETURN\\t= 1086,\\r\\n        D3D12_MESSAGE_ID_OPENEXISTINGHEAP_OUTOFMEMORY_RETURN\\t= 1087,\\r\\n        D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDADDRESS\\t= 1088,\\r\\n        D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDHANDLE\\t= 1089,\\r\\n        D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_DEST\\t= 1090,\\r\\n        D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_MODE\\t= 1091,\\r\\n        D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_ALIGNMENT\\t= 1092,\\r\\n        D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_NOT_SUPPORTED\\t= 1093,\\r\\n        D3D12_MESSAGE_ID_SETVIEWINSTANCEMASK_INVALIDARGS\\t= 1094,\\r\\n        D3D12_MESSAGE_ID_VIEW_INSTANCING_UNSUPPORTED\\t= 1095,\\r\\n        D3D12_MESSAGE_ID_VIEW_INSTANCING_INVALIDARGS\\t= 1096,\\r\\n        D3D12_MESSAGE_ID_COPYTEXTUREREGION_MISMATCH_DECODE_REFERENCE_ONLY_FLAG\\t= 1097,\\r\\n        D3D12_MESSAGE_ID_COPYRESOURCE_MISMATCH_DECODE_REFERENCE_ONLY_FLAG\\t= 1098,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEO_DECODE_HEAP_CAPS_FAILURE\\t= 1099,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEO_DECODE_HEAP_CAPS_UNSUPPORTED\\t= 1100,\\r\\n        D3D12_MESSAGE_ID_VIDEO_DECODE_SUPPORT_INVALID_INPUT\\t= 1101,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEO_DECODER_UNSUPPORTED\\t= 1102,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_METADATA_ERROR\\t= 1103,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VIEW_INSTANCING_VERTEX_SIZE_EXCEEDED\\t= 1104,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RUNTIME_INTERNAL_ERROR\\t= 1105,\\r\\n        D3D12_MESSAGE_ID_NO_VIDEO_API_SUPPORT\\t= 1106,\\r\\n        D3D12_MESSAGE_ID_VIDEO_PROCESS_SUPPORT_INVALID_INPUT\\t= 1107,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEO_PROCESSOR_CAPS_FAILURE\\t= 1108,\\r\\n        D3D12_MESSAGE_ID_VIDEO_PROCESS_SUPPORT_UNSUPPORTED_FORMAT\\t= 1109,\\r\\n        D3D12_MESSAGE_ID_VIDEO_DECODE_FRAME_INVALID_ARGUMENT\\t= 1110,\\r\\n        D3D12_MESSAGE_ID_ENQUEUE_MAKE_RESIDENT_INVALID_FLAGS\\t= 1111,\\r\\n        D3D12_MESSAGE_ID_OPENEXISTINGHEAP_UNSUPPORTED\\t= 1112,\\r\\n        D3D12_MESSAGE_ID_VIDEO_PROCESS_FRAMES_INVALID_ARGUMENT\\t= 1113,\\r\\n        D3D12_MESSAGE_ID_VIDEO_DECODE_SUPPORT_UNSUPPORTED\\t= 1114,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMANDRECORDER\\t= 1115,\\r\\n        D3D12_MESSAGE_ID_LIVE_COMMANDRECORDER\\t= 1116,\\r\\n        D3D12_MESSAGE_ID_DESTROY_COMMANDRECORDER\\t= 1117,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_VIDEO_NOT_SUPPORTED\\t= 1118,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_INVALID_SUPPORT_FLAGS\\t= 1119,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_INVALID_FLAGS\\t= 1120,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_MORE_RECORDERS_THAN_LOGICAL_PROCESSORS\\t= 1121,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMANDPOOL\\t= 1122,\\r\\n        D3D12_MESSAGE_ID_LIVE_COMMANDPOOL\\t= 1123,\\r\\n        D3D12_MESSAGE_ID_DESTROY_COMMANDPOOL\\t= 1124,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMAND_POOL_INVALID_FLAGS\\t= 1125,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_VIDEO_NOT_SUPPORTED\\t= 1126,\\r\\n        D3D12_MESSAGE_ID_COMMAND_RECORDER_SUPPORT_FLAGS_MISMATCH\\t= 1127,\\r\\n        D3D12_MESSAGE_ID_COMMAND_RECORDER_CONTENTION\\t= 1128,\\r\\n        D3D12_MESSAGE_ID_COMMAND_RECORDER_USAGE_WITH_CREATECOMMANDLIST_COMMAND_LIST\\t= 1129,\\r\\n        D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_USAGE_WITH_CREATECOMMANDLIST1_COMMAND_LIST\\t= 1130,\\r\\n        D3D12_MESSAGE_ID_CANNOT_EXECUTE_EMPTY_COMMAND_LIST\\t= 1131,\\r\\n        D3D12_MESSAGE_ID_CANNOT_RESET_COMMAND_POOL_WITH_OPEN_COMMAND_LISTS\\t= 1132,\\r\\n        D3D12_MESSAGE_ID_CANNOT_USE_COMMAND_RECORDER_WITHOUT_CURRENT_TARGET\\t= 1133,\\r\\n        D3D12_MESSAGE_ID_CANNOT_CHANGE_COMMAND_RECORDER_TARGET_WHILE_RECORDING\\t= 1134,\\r\\n        D3D12_MESSAGE_ID_COMMAND_POOL_SYNC\\t= 1135,\\r\\n        D3D12_MESSAGE_ID_EVICT_UNDERFLOW\\t= 1136,\\r\\n        D3D12_MESSAGE_ID_CREATE_META_COMMAND\\t= 1137,\\r\\n        D3D12_MESSAGE_ID_LIVE_META_COMMAND\\t= 1138,\\r\\n        D3D12_MESSAGE_ID_DESTROY_META_COMMAND\\t= 1139,\\r\\n        D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALID_DST_RESOURCE\\t= 1140,\\r\\n        D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALID_SRC_RESOURCE\\t= 1141,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DST_RESOURCE\\t= 1142,\\r\\n        D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE\\t= 1143,\\r\\n        D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_NULL_BUFFER\\t= 1144,\\r\\n        D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_NULL_RESOURCE_DESC\\t= 1145,\\r\\n        D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_UNSUPPORTED\\t= 1146,\\r\\n        D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_DIMENSION\\t= 1147,\\r\\n        D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_FLAGS\\t= 1148,\\r\\n        D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_OFFSET\\t= 1149,\\r\\n        D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_DIMENSION\\t= 1150,\\r\\n        D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_FLAGS\\t= 1151,\\r\\n        D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_OUTOFMEMORY_RETURN\\t= 1152,\\r\\n        D3D12_MESSAGE_ID_CANNOT_CREATE_GRAPHICS_AND_VIDEO_COMMAND_RECORDER\\t= 1153,\\r\\n        D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_POSSIBLY_MISMATCHING_PROPERTIES\\t= 1154,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE\\t= 1155,\\r\\n        D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_INCOMPATIBLE_WITH_STRUCTURED_BUFFERS\\t= 1156,\\r\\n        D3D12_MESSAGE_ID_COMPUTE_ONLY_DEVICE_OPERATION_UNSUPPORTED\\t= 1157,\\r\\n        D3D12_MESSAGE_ID_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INVALID\\t= 1158,\\r\\n        D3D12_MESSAGE_ID_EMIT_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_INVALID\\t= 1159,\\r\\n        D3D12_MESSAGE_ID_COPY_RAYTRACING_ACCELERATION_STRUCTURE_INVALID\\t= 1160,\\r\\n        D3D12_MESSAGE_ID_DISPATCH_RAYS_INVALID\\t= 1161,\\r\\n        D3D12_MESSAGE_ID_GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO_INVALID\\t= 1162,\\r\\n        D3D12_MESSAGE_ID_CREATE_LIFETIMETRACKER\\t= 1163,\\r\\n        D3D12_MESSAGE_ID_LIVE_LIFETIMETRACKER\\t= 1164,\\r\\n        D3D12_MESSAGE_ID_DESTROY_LIFETIMETRACKER\\t= 1165,\\r\\n        D3D12_MESSAGE_ID_DESTROYOWNEDOBJECT_OBJECTNOTOWNED\\t= 1166,\\r\\n        D3D12_MESSAGE_ID_CREATE_TRACKEDWORKLOAD\\t= 1167,\\r\\n        D3D12_MESSAGE_ID_LIVE_TRACKEDWORKLOAD\\t= 1168,\\r\\n        D3D12_MESSAGE_ID_DESTROY_TRACKEDWORKLOAD\\t= 1169,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_ERROR\\t= 1170,\\r\\n        D3D12_MESSAGE_ID_META_COMMAND_ID_INVALID\\t= 1171,\\r\\n        D3D12_MESSAGE_ID_META_COMMAND_UNSUPPORTED_PARAMS\\t= 1172,\\r\\n        D3D12_MESSAGE_ID_META_COMMAND_FAILED_ENUMERATION\\t= 1173,\\r\\n        D3D12_MESSAGE_ID_META_COMMAND_PARAMETER_SIZE_MISMATCH\\t= 1174,\\r\\n        D3D12_MESSAGE_ID_UNINITIALIZED_META_COMMAND\\t= 1175,\\r\\n        D3D12_MESSAGE_ID_META_COMMAND_INVALID_GPU_VIRTUAL_ADDRESS\\t= 1176,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEOENCODECOMMANDLIST\\t= 1177,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEOENCODECOMMANDLIST\\t= 1178,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEOENCODECOMMANDLIST\\t= 1179,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEOENCODECOMMANDQUEUE\\t= 1180,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEOENCODECOMMANDQUEUE\\t= 1181,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEOENCODECOMMANDQUEUE\\t= 1182,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEOMOTIONESTIMATOR\\t= 1183,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEOMOTIONESTIMATOR\\t= 1184,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEOMOTIONESTIMATOR\\t= 1185,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEOMOTIONVECTORHEAP\\t= 1186,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEOMOTIONVECTORHEAP\\t= 1187,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEOMOTIONVECTORHEAP\\t= 1188,\\r\\n        D3D12_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOADS\\t= 1189,\\r\\n        D3D12_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOAD_PAIRS\\t= 1190,\\r\\n        D3D12_MESSAGE_ID_OUT_OF_ORDER_TRACKED_WORKLOAD_PAIR\\t= 1191,\\r\\n        D3D12_MESSAGE_ID_CANNOT_ADD_TRACKED_WORKLOAD\\t= 1192,\\r\\n        D3D12_MESSAGE_ID_INCOMPLETE_TRACKED_WORKLOAD_PAIR\\t= 1193,\\r\\n        D3D12_MESSAGE_ID_CREATE_STATE_OBJECT_ERROR\\t= 1194,\\r\\n        D3D12_MESSAGE_ID_GET_SHADER_IDENTIFIER_ERROR\\t= 1195,\\r\\n        D3D12_MESSAGE_ID_GET_SHADER_STACK_SIZE_ERROR\\t= 1196,\\r\\n        D3D12_MESSAGE_ID_GET_PIPELINE_STACK_SIZE_ERROR\\t= 1197,\\r\\n        D3D12_MESSAGE_ID_SET_PIPELINE_STACK_SIZE_ERROR\\t= 1198,\\r\\n        D3D12_MESSAGE_ID_GET_SHADER_IDENTIFIER_SIZE_INVALID\\t= 1199,\\r\\n        D3D12_MESSAGE_ID_CHECK_DRIVER_MATCHING_IDENTIFIER_INVALID\\t= 1200,\\r\\n        D3D12_MESSAGE_ID_CHECK_DRIVER_MATCHING_IDENTIFIER_DRIVER_REPORTED_ISSUE\\t= 1201,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_INVALID_RESOURCE_BARRIER\\t= 1202,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_DISALLOWED_API_CALLED\\t= 1203,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_NEST_RENDER_PASSES\\t= 1204,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_END_WITHOUT_BEGIN\\t= 1205,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_CLOSE_COMMAND_LIST\\t= 1206,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_GPU_WORK_WHILE_SUSPENDED\\t= 1207,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_SUSPEND_RESUME\\t= 1208,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_NO_PRIOR_SUSPEND_WITHIN_EXECUTECOMMANDLISTS\\t= 1209,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_NO_SUBSEQUENT_RESUME_WITHIN_EXECUTECOMMANDLISTS\\t= 1210,\\r\\n        D3D12_MESSAGE_ID_TRACKED_WORKLOAD_COMMAND_QUEUE_MISMATCH\\t= 1211,\\r\\n        D3D12_MESSAGE_ID_TRACKED_WORKLOAD_NOT_SUPPORTED\\t= 1212,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_NO_ACCESS\\t= 1213,\\r\\n        D3D12_MESSAGE_ID_RENDER_PASS_UNSUPPORTED_RESOLVE\\t= 1214,\\r\\n        D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_INVALID_RESOURCE_PTR\\t= 1215,\\r\\n        D3D12_MESSAGE_ID_WINDOWS7_FENCE_OUTOFORDER_SIGNAL\\t= 1216,\\r\\n        D3D12_MESSAGE_ID_WINDOWS7_FENCE_OUTOFORDER_WAIT\\t= 1217,\\r\\n        D3D12_MESSAGE_ID_VIDEO_CREATE_MOTION_ESTIMATOR_INVALID_ARGUMENT\\t= 1218,\\r\\n        D3D12_MESSAGE_ID_VIDEO_CREATE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT\\t= 1219,\\r\\n        D3D12_MESSAGE_ID_ESTIMATE_MOTION_INVALID_ARGUMENT\\t= 1220,\\r\\n        D3D12_MESSAGE_ID_RESOLVE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT\\t= 1221,\\r\\n        D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_HEAP_TYPE\\t= 1222,\\r\\n        D3D12_MESSAGE_ID_SET_BACKGROUND_PROCESSING_MODE_INVALID_ARGUMENT\\t= 1223,\\r\\n        D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE_FOR_FEATURE_LEVEL\\t= 1224,\\r\\n        D3D12_MESSAGE_ID_CREATE_VIDEOEXTENSIONCOMMAND\\t= 1225,\\r\\n        D3D12_MESSAGE_ID_LIVE_VIDEOEXTENSIONCOMMAND\\t= 1226,\\r\\n        D3D12_MESSAGE_ID_DESTROY_VIDEOEXTENSIONCOMMAND\\t= 1227,\\r\\n        D3D12_MESSAGE_ID_INVALID_VIDEO_EXTENSION_COMMAND_ID\\t= 1228,\\r\\n        D3D12_MESSAGE_ID_VIDEO_EXTENSION_COMMAND_INVALID_ARGUMENT\\t= 1229,\\r\\n        D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_UNIQUE_IN_DXIL_LIBRARY\\t= 1230,\\r\\n        D3D12_MESSAGE_ID_VARIABLE_SHADING_RATE_NOT_ALLOWED_WITH_TIR\\t= 1231,\\r\\n        D3D12_MESSAGE_ID_GEOMETRY_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE\\t= 1232,\\r\\n        D3D12_MESSAGE_ID_RSSETSHADING_RATE_INVALID_SHADING_RATE\\t= 1233,\\r\\n        D3D12_MESSAGE_ID_RSSETSHADING_RATE_SHADING_RATE_NOT_PERMITTED_BY_CAP\\t= 1234,\\r\\n        D3D12_MESSAGE_ID_RSSETSHADING_RATE_INVALID_COMBINER\\t= 1235,\\r\\n        D3D12_MESSAGE_ID_RSSETSHADINGRATEIMAGE_REQUIRES_TIER_2\\t= 1236,\\r\\n        D3D12_MESSAGE_ID_RSSETSHADINGRATE_REQUIRES_TIER_1\\t= 1237,\\r\\n        D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_FORMAT\\t= 1238,\\r\\n        D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_ARRAY_SIZE\\t= 1239,\\r\\n        D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_MIP_LEVEL\\t= 1240,\\r\\n        D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_SAMPLE_COUNT\\t= 1241,\\r\\n        D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_SAMPLE_QUALITY\\t= 1242,\\r\\n        D3D12_MESSAGE_ID_NON_RETAIL_SHADER_MODEL_WONT_VALIDATE\\t= 1243,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_AS_ROOT_SIGNATURE_MISMATCH\\t= 1244,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_ROOT_SIGNATURE_MISMATCH\\t= 1245,\\r\\n        D3D12_MESSAGE_ID_ADD_TO_STATE_OBJECT_ERROR\\t= 1246,\\r\\n        D3D12_MESSAGE_ID_CREATE_PROTECTED_RESOURCE_SESSION_INVALID_ARGUMENT\\t= 1247,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_PSO_DESC_MISMATCH\\t= 1248,\\r\\n        D3D12_MESSAGE_ID_CREATEPIPELINESTATE_MS_INCOMPLETE_TYPE\\t= 1249,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_AS_NOT_MS_MISMATCH\\t= 1250,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_NOT_PS_MISMATCH\\t= 1251,\\r\\n        D3D12_MESSAGE_ID_NONZERO_SAMPLER_FEEDBACK_MIP_REGION_WITH_INCOMPATIBLE_FORMAT\\t= 1252,\\r\\n        D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_SHADER_MISMATCH\\t= 1253,\\r\\n        D3D12_MESSAGE_ID_EMPTY_DISPATCH\\t= 1254,\\r\\n        D3D12_MESSAGE_ID_RESOURCE_FORMAT_REQUIRES_SAMPLER_FEEDBACK_CAPABILITY\\t= 1255,\\r\\n        D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_MIP_REGION\\t= 1256,\\r\\n        D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_DIMENSION\\t= 1257,\\r\\n        D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_SAMPLE_COUNT\\t= 1258,\\r\\n        D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_SAMPLE_QUALITY\\t= 1259,\\r\\n        D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_LAYOUT\\t= 1260,\\r\\n        D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_REQUIRES_UNORDERED_ACCESS_FLAG\\t= 1261,\\r\\n        D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_NULL_ARGUMENTS\\t= 1262,\\r\\n        D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_UAV_REQUIRES_SAMPLER_FEEDBACK_CAPABILITY\\t= 1263,\\r\\n        D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_REQUIRES_FEEDBACK_MAP_FORMAT\\t= 1264,\\r\\n        D3D12_MESSAGE_ID_CREATEMESHSHADER_INVALIDSHADERBYTECODE\\t= 1265,\\r\\n        D3D12_MESSAGE_ID_CREATEMESHSHADER_OUTOFMEMORY\\t= 1266,\\r\\n        D3D12_MESSAGE_ID_CREATEMESHSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE\\t= 1267,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_TRANSCODE_INVALID_FORMAT\\t= 1268,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_INVALID_MIP_LEVEL_COUNT\\t= 1269,\\r\\n        D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_TRANSCODE_ARRAY_SIZE_MISMATCH\\t= 1270,\\r\\n        D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_MISMATCHING_TARGETED_RESOURCE\\t= 1271,\\r\\n        D3D12_MESSAGE_ID_CREATEMESHSHADER_OUTPUTEXCEEDSMAXSIZE\\t= 1272,\\r\\n        D3D12_MESSAGE_ID_CREATEMESHSHADER_GROUPSHAREDEXCEEDSMAXSIZE\\t= 1273,\\r\\n        D3D12_MESSAGE_ID_VERTEX_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE\\t= 1274,\\r\\n        D3D12_MESSAGE_ID_MESH_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE\\t= 1275,\\r\\n        D3D12_MESSAGE_ID_CREATEMESHSHADER_MISMATCHEDASMSPAYLOADSIZE\\t= 1276,\\r\\n        D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_UNBOUNDED_STATIC_DESCRIPTORS\\t= 1277,\\r\\n        D3D12_MESSAGE_ID_CREATEAMPLIFICATIONSHADER_INVALIDSHADERBYTECODE\\t= 1278,\\r\\n        D3D12_MESSAGE_ID_CREATEAMPLIFICATIONSHADER_OUTOFMEMORY\\t= 1279,\\r\\n        D3D12_MESSAGE_ID_D3D12_MESSAGES_END\\t= ( D3D12_MESSAGE_ID_CREATEAMPLIFICATIONSHADER_OUTOFMEMORY + 1 ) \\r\\n    } \\tD3D12_MESSAGE_ID;"},"D3D12_MESSAGE_SEVERITY":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":1502,"type":"Enum","value":"typedef\\r\\nenum D3D12_MESSAGE_SEVERITY\\r\\n    {\\r\\n        D3D12_MESSAGE_SEVERITY_CORRUPTION\\t= 0,\\r\\n        D3D12_MESSAGE_SEVERITY_ERROR\\t= ( D3D12_MESSAGE_SEVERITY_CORRUPTION + 1 ) ,\\r\\n        D3D12_MESSAGE_SEVERITY_WARNING\\t= ( D3D12_MESSAGE_SEVERITY_ERROR + 1 ) ,\\r\\n        D3D12_MESSAGE_SEVERITY_INFO\\t= ( D3D12_MESSAGE_SEVERITY_WARNING + 1 ) ,\\r\\n        D3D12_MESSAGE_SEVERITY_MESSAGE\\t= ( D3D12_MESSAGE_SEVERITY_INFO + 1 ) \\r\\n    } \\tD3D12_MESSAGE_SEVERITY;"},"D3D12_META_COMMAND_DESC":{"comment":"","exp":"","file":"d3d12.h","line":11894,"type":"Struct","value":"typedef struct D3D12_META_COMMAND_DESC\\r\\n    {\\r\\n    GUID Id;\\r\\n    LPCWSTR Name;\\r\\n    D3D12_GRAPHICS_STATES InitializationDirtyState;\\r\\n    D3D12_GRAPHICS_STATES ExecutionDirtyState;\\r\\n    } \\tD3D12_META_COMMAND_DESC;"},"D3D12_META_COMMAND_PARAMETER_DESC":{"comment":"","exp":"","file":"d3d12.h","line":11861,"type":"Struct","value":"typedef struct D3D12_META_COMMAND_PARAMETER_DESC\\r\\n    {\\r\\n    LPCWSTR Name;\\r\\n    D3D12_META_COMMAND_PARAMETER_TYPE Type;\\r\\n    D3D12_META_COMMAND_PARAMETER_FLAGS Flags;\\r\\n    D3D12_RESOURCE_STATES RequiredResourceState;\\r\\n    UINT StructureOffset;\\r\\n    } \\tD3D12_META_COMMAND_PARAMETER_DESC;"},"D3D12_META_COMMAND_PARAMETER_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":11845,"type":"Enum","value":"typedef\\r\\nenum D3D12_META_COMMAND_PARAMETER_FLAGS\\r\\n    {\\r\\n        D3D12_META_COMMAND_PARAMETER_FLAG_INPUT\\t= 0x1,\\r\\n        D3D12_META_COMMAND_PARAMETER_FLAG_OUTPUT\\t= 0x2\\r\\n    } \\tD3D12_META_COMMAND_PARAMETER_FLAGS;"},"D3D12_META_COMMAND_PARAMETER_STAGE":{"comment":"","exp":"","file":"d3d12.h","line":11853,"type":"Enum","value":"typedef\\r\\nenum D3D12_META_COMMAND_PARAMETER_STAGE\\r\\n    {\\r\\n        D3D12_META_COMMAND_PARAMETER_STAGE_CREATION\\t= 0,\\r\\n        D3D12_META_COMMAND_PARAMETER_STAGE_INITIALIZATION\\t= 1,\\r\\n        D3D12_META_COMMAND_PARAMETER_STAGE_EXECUTION\\t= 2\\r\\n    } \\tD3D12_META_COMMAND_PARAMETER_STAGE;"},"D3D12_META_COMMAND_PARAMETER_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":11835,"type":"Enum","value":"typedef\\r\\nenum D3D12_META_COMMAND_PARAMETER_TYPE\\r\\n    {\\r\\n        D3D12_META_COMMAND_PARAMETER_TYPE_FLOAT\\t= 0,\\r\\n        D3D12_META_COMMAND_PARAMETER_TYPE_UINT64\\t= 1,\\r\\n        D3D12_META_COMMAND_PARAMETER_TYPE_GPU_VIRTUAL_ADDRESS\\t= 2,\\r\\n        D3D12_META_COMMAND_PARAMETER_TYPE_CPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV\\t= 3,\\r\\n        D3D12_META_COMMAND_PARAMETER_TYPE_GPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV\\t= 4\\r\\n    } \\tD3D12_META_COMMAND_PARAMETER_TYPE;"},"D3D12_MINOR_VERSION":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":919,"type":"Integer","value":0},"D3D12_MIN_BORDER_COLOR_COMPONENT":{"comment":"","exp":"( 0.0f )","file":"d3d12.h","line":921,"type":"Float","value":0.0},"D3D12_MIN_DEPTH":{"comment":"","exp":"( 0.0f )","file":"d3d12.h","line":922,"type":"Float","value":0.0},"D3D12_MIN_FILTER_SHIFT":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":3050,"type":"Integer","value":4},"D3D12_MIN_MAXANISOTROPY":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":923,"type":"Integer","value":0},"D3D12_MIP_FILTER_SHIFT":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":3054,"type":"Integer","value":0},"D3D12_MIP_LOD_BIAS_MAX":{"comment":"","exp":"( 15.99f )","file":"d3d12.h","line":925,"type":"Float","value":15.99},"D3D12_MIP_LOD_BIAS_MIN":{"comment":"","exp":"( -16.0f )","file":"d3d12.h","line":926,"type":"Float","value":-16.0},"D3D12_MIP_LOD_FRACTIONAL_BIT_COUNT":{"comment":"","exp":"( 8 )","file":"d3d12.h","line":927,"type":"Integer","value":8},"D3D12_MIP_LOD_RANGE_BIT_COUNT":{"comment":"","exp":"( 8 )","file":"d3d12.h","line":929,"type":"Integer","value":8},"D3D12_MIP_REGION":{"comment":"","exp":"","file":"d3d12.h","line":2537,"type":"Struct","value":"typedef struct D3D12_MIP_REGION\\r\\n    {\\r\\n    UINT Width;\\r\\n    UINT Height;\\r\\n    UINT Depth;\\r\\n    } \\tD3D12_MIP_REGION;"},"D3D12_MULTIPLE_FENCE_WAIT_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":8937,"type":"Enum","value":"typedef\\r\\nenum D3D12_MULTIPLE_FENCE_WAIT_FLAGS\\r\\n    {\\r\\n        D3D12_MULTIPLE_FENCE_WAIT_FLAG_NONE\\t= 0,\\r\\n        D3D12_MULTIPLE_FENCE_WAIT_FLAG_ANY\\t= 0x1,\\r\\n        D3D12_MULTIPLE_FENCE_WAIT_FLAG_ALL\\t= 0\\r\\n    } \\tD3D12_MULTIPLE_FENCE_WAIT_FLAGS;"},"D3D12_MULTISAMPLE_ANTIALIAS_LINE_WIDTH":{"comment":"","exp":"( 1.4f )","file":"d3d12.h","line":931,"type":"Float","value":1.3999999999999999},"D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":2111,"type":"Enum","value":"typedef\\r\\nenum D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS\\r\\n    {\\r\\n        D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_NONE\\t= 0,\\r\\n        D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_TILED_RESOURCE\\t= 0x1\\r\\n    } \\tD3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS;"},"D3D12_NODE_MASK":{"comment":"","exp":"","file":"d3d12.h","line":12179,"type":"Struct","value":"typedef struct D3D12_NODE_MASK\\r\\n    {\\r\\n    UINT NodeMask;\\r\\n    } \\tD3D12_NODE_MASK;"},"D3D12_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":932,"type":"Integer","value":0},"D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_END":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":934,"type":"Integer","value":4294967295},"D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_START":{"comment":"","exp":"( 0xfffffff8 )","file":"d3d12.h","line":936,"type":"Integer","value":4294967288},"D3D12_PACKED_MIP_INFO":{"comment":"","exp":"","file":"d3d12.h","line":2655,"type":"Struct","value":"typedef struct D3D12_PACKED_MIP_INFO\\r\\n    {\\r\\n    UINT8 NumStandardMips;\\r\\n    UINT8 NumPackedMips;\\r\\n    UINT NumTilesForPackedMips;\\r\\n    UINT StartTileIndexInOverallResource;\\r\\n    } \\tD3D12_PACKED_MIP_INFO;"},"D3D12_PACKED_TILE":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":938,"type":"Integer","value":4294967295},"D3D12_PIPELINE_STATE_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":1905,"type":"Enum","value":"typedef\\r\\nenum D3D12_PIPELINE_STATE_FLAGS\\r\\n    {\\r\\n        D3D12_PIPELINE_STATE_FLAG_NONE\\t= 0,\\r\\n        D3D12_PIPELINE_STATE_FLAG_TOOL_DEBUG\\t= 0x1\\r\\n    } \\tD3D12_PIPELINE_STATE_FLAGS;"},"D3D12_PIPELINE_STATE_STREAM_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1952,"type":"Struct","value":"typedef struct D3D12_PIPELINE_STATE_STREAM_DESC\\r\\n    {\\r\\n    _In_  SIZE_T SizeInBytes;\\r\\n    _In_reads_(_Inexpressible_(\"Dependent on size of subobjects\"))  void *pPipelineStateSubobjectStream;\\r\\n    } \\tD3D12_PIPELINE_STATE_STREAM_DESC;"},"D3D12_PIPELINE_STATE_SUBOBJECT_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":1958,"type":"Enum","value":"typedef\\r\\nenum D3D12_PIPELINE_STATE_SUBOBJECT_TYPE\\r\\n    {\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_ROOT_SIGNATURE\\t= 0,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VS\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_ROOT_SIGNATURE + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VS + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DS\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_HS\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DS + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_GS\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_HS + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CS\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_GS + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_STREAM_OUTPUT\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CS + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_STREAM_OUTPUT + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_INPUT_LAYOUT\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_IB_STRIP_CUT_VALUE\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_INPUT_LAYOUT + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_IB_STRIP_CUT_VALUE + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VIEW_INSTANCING\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1 + 1 ) ,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_AS\\t= 24,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MS\\t= 25,\\r\\n        D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MAX_VALID\\t= ( D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MS + 1 ) \\r\\n    } \\tD3D12_PIPELINE_STATE_SUBOBJECT_TYPE;"},"D3D12_PIXEL_ADDRESS_RANGE_BIT_COUNT":{"comment":"","exp":"( 15 )","file":"d3d12.h","line":940,"type":"Integer","value":15},"D3D12_PLACED_SUBRESOURCE_FOOTPRINT":{"comment":"","exp":"","file":"d3d12.h","line":2771,"type":"Struct","value":"typedef struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT\\r\\n    {\\r\\n    UINT64 Offset;\\r\\n    D3D12_SUBRESOURCE_FOOTPRINT Footprint;\\r\\n    } \\tD3D12_PLACED_SUBRESOURCE_FOOTPRINT;"},"D3D12_PREDICATION_OP":{"comment":"","exp":"","file":"d3d12.h","line":3859,"type":"Enum","value":"typedef\\r\\nenum D3D12_PREDICATION_OP\\r\\n    {\\r\\n        D3D12_PREDICATION_OP_EQUAL_ZERO\\t= 0,\\r\\n        D3D12_PREDICATION_OP_NOT_EQUAL_ZERO\\t= 1\\r\\n    } \\tD3D12_PREDICATION_OP;"},"D3D12_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":942,"type":"Integer","value":16},"D3D12_PRIMITIVE_TOPOLOGY_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":1263,"type":"Enum","value":"typedef\\r\\nenum D3D12_PRIMITIVE_TOPOLOGY_TYPE\\r\\n    {\\r\\n        D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED\\t= 0,\\r\\n        D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT\\t= 1,\\r\\n        D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE\\t= 2,\\r\\n        D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE\\t= 3,\\r\\n        D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH\\t= 4\\r\\n    } \\tD3D12_PRIMITIVE_TOPOLOGY_TYPE;"},"D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2136,"type":"Enum","value":"typedef\\r\\nenum D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER\\r\\n    {\\r\\n        D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_NOT_SUPPORTED\\t= 0,\\r\\n        D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_1\\t= 1,\\r\\n        D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_2\\t= 2\\r\\n    } \\tD3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER;"},"D3D12_PROTECTED_RESOURCE_SESSION_DESC":{"comment":"","exp":"","file":"d3d12.h","line":10711,"type":"Struct","value":"typedef struct D3D12_PROTECTED_RESOURCE_SESSION_DESC\\r\\n    {\\r\\n    UINT NodeMask;\\r\\n    D3D12_PROTECTED_RESOURCE_SESSION_FLAGS Flags;\\r\\n    } \\tD3D12_PROTECTED_RESOURCE_SESSION_DESC;"},"D3D12_PROTECTED_RESOURCE_SESSION_DESC1":{"comment":"","exp":"","file":"d3d12.h","line":14588,"type":"Struct","value":"typedef struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1\\r\\n    {\\r\\n    UINT NodeMask;\\r\\n    D3D12_PROTECTED_RESOURCE_SESSION_FLAGS Flags;\\r\\n    GUID ProtectionType;\\r\\n    } \\tD3D12_PROTECTED_RESOURCE_SESSION_DESC1;"},"D3D12_PROTECTED_RESOURCE_SESSION_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":10704,"type":"Enum","value":"typedef\\r\\nenum D3D12_PROTECTED_RESOURCE_SESSION_FLAGS\\r\\n    {\\r\\n        D3D12_PROTECTED_RESOURCE_SESSION_FLAG_NONE\\t= 0\\r\\n    } \\tD3D12_PROTECTED_RESOURCE_SESSION_FLAGS;"},"D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":10690,"type":"Enum","value":"typedef\\r\\nenum D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS\\r\\n    {\\r\\n        D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_NONE\\t= 0,\\r\\n        D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_SUPPORTED\\t= 0x1\\r\\n    } \\tD3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS;"},"D3D12_PROTECTED_SESSION_STATUS":{"comment":"","exp":"","file":"d3d12.h","line":10543,"type":"Enum","value":"typedef\\r\\nenum D3D12_PROTECTED_SESSION_STATUS\\r\\n    {\\r\\n        D3D12_PROTECTED_SESSION_STATUS_OK\\t= 0,\\r\\n        D3D12_PROTECTED_SESSION_STATUS_INVALID\\t= 1\\r\\n    } \\tD3D12_PROTECTED_SESSION_STATUS;"},"D3D12_PS_CS_UAV_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":944,"type":"Integer","value":1},"D3D12_PS_CS_UAV_REGISTER_COUNT":{"comment":"","exp":"( 8 )","file":"d3d12.h","line":946,"type":"Integer","value":8},"D3D12_PS_CS_UAV_REGISTER_READS_PER_INST":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":948,"type":"Integer","value":1},"D3D12_PS_CS_UAV_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":950,"type":"Integer","value":1},"D3D12_PS_FRONTFACING_DEFAULT_VALUE":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":952,"type":"Integer","value":4294967295},"D3D12_PS_FRONTFACING_FALSE_VALUE":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":954,"type":"Integer","value":0},"D3D12_PS_FRONTFACING_TRUE_VALUE":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":956,"type":"Integer","value":4294967295},"D3D12_PS_INPUT_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":958,"type":"Integer","value":4},"D3D12_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":960,"type":"Integer","value":32},"D3D12_PS_INPUT_REGISTER_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":962,"type":"Integer","value":32},"D3D12_PS_INPUT_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":964,"type":"Integer","value":2},"D3D12_PS_INPUT_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":966,"type":"Integer","value":1},"D3D12_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT":{"comment":"","exp":"( 0.0f )","file":"d3d12.h","line":968,"type":"Float","value":0.0},"D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":969,"type":"Integer","value":1},"D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":971,"type":"Integer","value":32},"D3D12_PS_OUTPUT_DEPTH_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":973,"type":"Integer","value":1},"D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":975,"type":"Integer","value":1},"D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":977,"type":"Integer","value":32},"D3D12_PS_OUTPUT_MASK_REGISTER_COUNT":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":979,"type":"Integer","value":1},"D3D12_PS_OUTPUT_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":981,"type":"Integer","value":4},"D3D12_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":983,"type":"Integer","value":32},"D3D12_PS_OUTPUT_REGISTER_COUNT":{"comment":"","exp":"( 8 )","file":"d3d12.h","line":985,"type":"Integer","value":8},"D3D12_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT":{"comment":"","exp":"( 0.5f )","file":"d3d12.h","line":987,"type":"Float","value":0.5},"D3D12_QUERY_DATA_PIPELINE_STATISTICS":{"comment":"","exp":"","file":"d3d12.h","line":3866,"type":"Struct","value":"typedef struct D3D12_QUERY_DATA_PIPELINE_STATISTICS\\r\\n    {\\r\\n    UINT64 IAVertices;\\r\\n    UINT64 IAPrimitives;\\r\\n    UINT64 VSInvocations;\\r\\n    UINT64 GSInvocations;\\r\\n    UINT64 GSPrimitives;\\r\\n    UINT64 CInvocations;\\r\\n    UINT64 CPrimitives;\\r\\n    UINT64 PSInvocations;\\r\\n    UINT64 HSInvocations;\\r\\n    UINT64 DSInvocations;\\r\\n    UINT64 CSInvocations;\\r\\n    } \\tD3D12_QUERY_DATA_PIPELINE_STATISTICS;"},"D3D12_QUERY_DATA_SO_STATISTICS":{"comment":"","exp":"","file":"d3d12.h","line":3881,"type":"Struct","value":"typedef struct D3D12_QUERY_DATA_SO_STATISTICS\\r\\n    {\\r\\n    UINT64 NumPrimitivesWritten;\\r\\n    UINT64 PrimitivesStorageNeeded;\\r\\n    } \\tD3D12_QUERY_DATA_SO_STATISTICS;"},"D3D12_QUERY_HEAP_DESC":{"comment":"","exp":"","file":"d3d12.h","line":3838,"type":"Struct","value":"typedef struct D3D12_QUERY_HEAP_DESC\\r\\n    {\\r\\n    D3D12_QUERY_HEAP_TYPE Type;\\r\\n    UINT Count;\\r\\n    UINT NodeMask;\\r\\n    } \\tD3D12_QUERY_HEAP_DESC;"},"D3D12_QUERY_HEAP_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":3827,"type":"Enum","value":"typedef\\r\\nenum D3D12_QUERY_HEAP_TYPE\\r\\n    {\\r\\n        D3D12_QUERY_HEAP_TYPE_OCCLUSION\\t= 0,\\r\\n        D3D12_QUERY_HEAP_TYPE_TIMESTAMP\\t= 1,\\r\\n        D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS\\t= 2,\\r\\n        D3D12_QUERY_HEAP_TYPE_SO_STATISTICS\\t= 3,\\r\\n        D3D12_QUERY_HEAP_TYPE_VIDEO_DECODE_STATISTICS\\t= 4,\\r\\n        D3D12_QUERY_HEAP_TYPE_COPY_QUEUE_TIMESTAMP\\t= 5\\r\\n    } \\tD3D12_QUERY_HEAP_TYPE;"},"D3D12_QUERY_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":3845,"type":"Enum","value":"typedef\\r\\nenum D3D12_QUERY_TYPE\\r\\n    {\\r\\n        D3D12_QUERY_TYPE_OCCLUSION\\t= 0,\\r\\n        D3D12_QUERY_TYPE_BINARY_OCCLUSION\\t= 1,\\r\\n        D3D12_QUERY_TYPE_TIMESTAMP\\t= 2,\\r\\n        D3D12_QUERY_TYPE_PIPELINE_STATISTICS\\t= 3,\\r\\n        D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0\\t= 4,\\r\\n        D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1\\t= 5,\\r\\n        D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2\\t= 6,\\r\\n        D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3\\t= 7,\\r\\n        D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS\\t= 8\\r\\n    } \\tD3D12_QUERY_TYPE;"},"D3D12_RANGE":{"comment":"","exp":"","file":"d3d12.h","line":2589,"type":"Struct","value":"typedef struct D3D12_RANGE\\r\\n    {\\r\\n    SIZE_T Begin;\\r\\n    SIZE_T End;\\r\\n    } \\tD3D12_RANGE;"},"D3D12_RANGE_UINT64":{"comment":"","exp":"","file":"d3d12.h","line":2595,"type":"Struct","value":"typedef struct D3D12_RANGE_UINT64\\r\\n    {\\r\\n    UINT64 Begin;\\r\\n    UINT64 End;\\r\\n    } \\tD3D12_RANGE_UINT64;"},"D3D12_RASTERIZER_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1501,"type":"Struct","value":"typedef struct D3D12_RASTERIZER_DESC\\r\\n    {\\r\\n    D3D12_FILL_MODE FillMode;\\r\\n    D3D12_CULL_MODE CullMode;\\r\\n    BOOL FrontCounterClockwise;\\r\\n    INT DepthBias;\\r\\n    FLOAT DepthBiasClamp;\\r\\n    FLOAT SlopeScaledDepthBias;\\r\\n    BOOL DepthClipEnable;\\r\\n    BOOL MultisampleEnable;\\r\\n    BOOL AntialiasedLineEnable;\\r\\n    UINT ForcedSampleCount;\\r\\n    D3D12_CONSERVATIVE_RASTERIZATION_MODE ConservativeRaster;\\r\\n    } \\tD3D12_RASTERIZER_DESC;"},"D3D12_RAW_UAV_SRV_BYTE_ALIGNMENT":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":988,"type":"Integer","value":16},"D3D12_RAYTRACING_AABB":{"comment":"","exp":"","file":"d3d12.h","line":12339,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_AABB\\r\\n    {\\r\\n    FLOAT MinX;\\r\\n    FLOAT MinY;\\r\\n    FLOAT MinZ;\\r\\n    FLOAT MaxX;\\r\\n    FLOAT MaxY;\\r\\n    FLOAT MaxZ;\\r\\n    } \\tD3D12_RAYTRACING_AABB;"},"D3D12_RAYTRACING_AABB_BYTE_ALIGNMENT":{"comment":"","exp":"( 8 )","file":"d3d12.h","line":990,"type":"Integer","value":8},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":12355,"type":"Enum","value":"typedef\\r\\nenum D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS\\r\\n    {\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_NONE\\t= 0,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE\\t= 0x1,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION\\t= 0x2,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_TRACE\\t= 0x4,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD\\t= 0x8,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_MINIMIZE_MEMORY\\t= 0x10,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE\\t= 0x20\\r\\n    } \\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS;"},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT":{"comment":"","exp":"( 256 )","file":"d3d12.h","line":992,"type":"Integer","value":256},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE":{"comment":"","exp":"","file":"d3d12.h","line":12368,"type":"Enum","value":"typedef\\r\\nenum D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE\\r\\n    {\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_CLONE\\t= 0,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_COMPACT\\t= 0x1,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_VISUALIZATION_DECODE_FOR_TOOLS\\t= 0x2,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_SERIALIZE\\t= 0x3,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_DESERIALIZE\\t= 0x4\\r\\n    } \\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE;"},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12407,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC\\r\\n    {\\r\\n    UINT64 CompactedSizeInBytes;\\r\\n    } \\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC;"},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12465,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC\\r\\n    {\\r\\n    UINT64 CurrentSizeInBytes;\\r\\n    } \\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC;"},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12401,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS DestBuffer;\\r\\n    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE InfoType;\\r\\n    } \\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC;"},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12429,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC\\r\\n    {\\r\\n    UINT64 SerializedSizeInBytes;\\r\\n    UINT64 NumBottomLevelAccelerationStructurePointers;\\r\\n    } \\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC;"},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12412,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC\\r\\n    {\\r\\n    UINT64 DecodedSizeInBytes;\\r\\n    } \\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC;"},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":12392,"type":"Enum","value":"typedef\\r\\nenum D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE\\r\\n    {\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE\\t= 0,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION\\t= 0x1,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION\\t= 0x2,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE\\t= 0x3\\r\\n    } \\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE;"},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO":{"comment":"","exp":"","file":"d3d12.h","line":12513,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO\\r\\n    {\\r\\n    UINT64 ResultDataMaxSizeInBytes;\\r\\n    UINT64 ScratchDataSizeInBytes;\\r\\n    UINT64 UpdateScratchDataSizeInBytes;\\r\\n    } \\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO;"},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV":{"comment":"","exp":"","file":"d3d12.h","line":2938,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS Location;\\r\\n    } \\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV;"},"D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":12378,"type":"Enum","value":"typedef\\r\\nenum D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE\\r\\n    {\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL\\t= 0,\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL\\t= 0x1\\r\\n    } \\tD3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE;"},"D3D12_RAYTRACING_GEOMETRY_AABBS_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12349,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC\\r\\n    {\\r\\n    UINT64 AABBCount;\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE AABBs;\\r\\n    } \\tD3D12_RAYTRACING_GEOMETRY_AABBS_DESC;"},"D3D12_RAYTRACING_GEOMETRY_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12480,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_GEOMETRY_DESC\\r\\n    {\\r\\n    D3D12_RAYTRACING_GEOMETRY_TYPE Type;\\r\\n    D3D12_RAYTRACING_GEOMETRY_FLAGS Flags;\\r\\n    union \\r\\n        {\\r\\n        D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC Triangles;\\r\\n        D3D12_RAYTRACING_GEOMETRY_AABBS_DESC AABBs;\\r\\n        } \\t;\\r\\n    } \\tD3D12_RAYTRACING_GEOMETRY_DESC;"},"D3D12_RAYTRACING_GEOMETRY_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":12282,"type":"Enum","value":"typedef\\r\\nenum D3D12_RAYTRACING_GEOMETRY_FLAGS\\r\\n    {\\r\\n        D3D12_RAYTRACING_GEOMETRY_FLAG_NONE\\t= 0,\\r\\n        D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE\\t= 0x1,\\r\\n        D3D12_RAYTRACING_GEOMETRY_FLAG_NO_DUPLICATE_ANYHIT_INVOCATION\\t= 0x2\\r\\n    } \\tD3D12_RAYTRACING_GEOMETRY_FLAGS;"},"D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12328,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS Transform3x4;\\r\\n    DXGI_FORMAT IndexFormat;\\r\\n    DXGI_FORMAT VertexFormat;\\r\\n    UINT IndexCount;\\r\\n    UINT VertexCount;\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS IndexBuffer;\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE VertexBuffer;\\r\\n    } \\tD3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC;"},"D3D12_RAYTRACING_GEOMETRY_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":12291,"type":"Enum","value":"typedef\\r\\nenum D3D12_RAYTRACING_GEOMETRY_TYPE\\r\\n    {\\r\\n        D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES\\t= 0,\\r\\n        D3D12_RAYTRACING_GEOMETRY_TYPE_PROCEDURAL_PRIMITIVE_AABBS\\t= ( D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES + 1 ) \\r\\n    } \\tD3D12_RAYTRACING_GEOMETRY_TYPE;"},"D3D12_RAYTRACING_INSTANCE_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12470,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_INSTANCE_DESC\\r\\n    {\\r\\n    FLOAT Transform[ 3 ][ 4 ];\\r\\n    UINT InstanceID\\t: 24;\\r\\n    UINT InstanceMask\\t: 8;\\r\\n    UINT InstanceContributionToHitGroupIndex\\t: 24;\\r\\n    UINT Flags\\t: 8;\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS AccelerationStructure;\\r\\n    } \\tD3D12_RAYTRACING_INSTANCE_DESC;"},"D3D12_RAYTRACING_INSTANCE_DESCS_BYTE_ALIGNMENT":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":994,"type":"Integer","value":16},"D3D12_RAYTRACING_INSTANCE_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":12298,"type":"Enum","value":"typedef\\r\\nenum D3D12_RAYTRACING_INSTANCE_FLAGS\\r\\n    {\\r\\n        D3D12_RAYTRACING_INSTANCE_FLAG_NONE\\t= 0,\\r\\n        D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_CULL_DISABLE\\t= 0x1,\\r\\n        D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_FRONT_COUNTERCLOCKWISE\\t= 0x2,\\r\\n        D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_OPAQUE\\t= 0x4,\\r\\n        D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_NON_OPAQUE\\t= 0x8\\r\\n    } \\tD3D12_RAYTRACING_INSTANCE_FLAGS;"},"D3D12_RAYTRACING_MAX_ATTRIBUTE_SIZE_IN_BYTES":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":996,"type":"Integer","value":32},"D3D12_RAYTRACING_MAX_DECLARABLE_TRACE_RECURSION_DEPTH":{"comment":"","exp":"( 31 )","file":"d3d12.h","line":998,"type":"Integer","value":31},"D3D12_RAYTRACING_MAX_GEOMETRIES_PER_BOTTOM_LEVEL_ACCELERATION_STRUCTURE":{"comment":"","exp":"( 16777216 )","file":"d3d12.h","line":1000,"type":"Integer","value":16777216},"D3D12_RAYTRACING_MAX_INSTANCES_PER_TOP_LEVEL_ACCELERATION_STRUCTURE":{"comment":"","exp":"( 16777216 )","file":"d3d12.h","line":1002,"type":"Integer","value":16777216},"D3D12_RAYTRACING_MAX_PRIMITIVES_PER_BOTTOM_LEVEL_ACCELERATION_STRUCTURE":{"comment":"","exp":"( 536870912 )","file":"d3d12.h","line":1004,"type":"Integer","value":536870912},"D3D12_RAYTRACING_MAX_RAY_GENERATION_SHADER_THREADS":{"comment":"","exp":"( 1073741824 )","file":"d3d12.h","line":1006,"type":"Integer","value":1073741824},"D3D12_RAYTRACING_MAX_SHADER_RECORD_STRIDE":{"comment":"","exp":"( 4096 )","file":"d3d12.h","line":1008,"type":"Integer","value":4096},"D3D12_RAYTRACING_PIPELINE_CONFIG":{"comment":"","exp":"","file":"d3d12.h","line":12248,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_PIPELINE_CONFIG\\r\\n    {\\r\\n    UINT MaxTraceRecursionDepth;\\r\\n    } \\tD3D12_RAYTRACING_PIPELINE_CONFIG;"},"D3D12_RAYTRACING_PIPELINE_CONFIG1":{"comment":"","exp":"","file":"d3d12.h","line":12262,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_PIPELINE_CONFIG1\\r\\n    {\\r\\n    UINT MaxTraceRecursionDepth;\\r\\n    D3D12_RAYTRACING_PIPELINE_FLAGS Flags;\\r\\n    } \\tD3D12_RAYTRACING_PIPELINE_CONFIG1;"},"D3D12_RAYTRACING_PIPELINE_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":12253,"type":"Enum","value":"typedef\\r\\nenum D3D12_RAYTRACING_PIPELINE_FLAGS\\r\\n    {\\r\\n        D3D12_RAYTRACING_PIPELINE_FLAG_NONE\\t= 0,\\r\\n        D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_TRIANGLES\\t= 0x100,\\r\\n        D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_PROCEDURAL_PRIMITIVES\\t= 0x200\\r\\n    } \\tD3D12_RAYTRACING_PIPELINE_FLAGS;"},"D3D12_RAYTRACING_SHADER_CONFIG":{"comment":"","exp":"","file":"d3d12.h","line":12242,"type":"Struct","value":"typedef struct D3D12_RAYTRACING_SHADER_CONFIG\\r\\n    {\\r\\n    UINT MaxPayloadSizeInBytes;\\r\\n    UINT MaxAttributeSizeInBytes;\\r\\n    } \\tD3D12_RAYTRACING_SHADER_CONFIG;"},"D3D12_RAYTRACING_SHADER_RECORD_BYTE_ALIGNMENT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1010,"type":"Integer","value":32},"D3D12_RAYTRACING_SHADER_TABLE_BYTE_ALIGNMENT":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":1012,"type":"Integer","value":64},"D3D12_RAYTRACING_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2363,"type":"Enum","value":"typedef\\r\\nenum D3D12_RAYTRACING_TIER\\r\\n    {\\r\\n        D3D12_RAYTRACING_TIER_NOT_SUPPORTED\\t= 0,\\r\\n        D3D12_RAYTRACING_TIER_1_0\\t= 10,\\r\\n        D3D12_RAYTRACING_TIER_1_1\\t= 11\\r\\n    } \\tD3D12_RAYTRACING_TIER;"},"D3D12_RAYTRACING_TRANSFORM3X4_BYTE_ALIGNMENT":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":1014,"type":"Integer","value":16},"D3D12_RAY_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":12520,"type":"Enum","value":"typedef\\r\\nenum D3D12_RAY_FLAGS\\r\\n    {\\r\\n        D3D12_RAY_FLAG_NONE\\t= 0,\\r\\n        D3D12_RAY_FLAG_FORCE_OPAQUE\\t= 0x1,\\r\\n        D3D12_RAY_FLAG_FORCE_NON_OPAQUE\\t= 0x2,\\r\\n        D3D12_RAY_FLAG_ACCEPT_FIRST_HIT_AND_END_SEARCH\\t= 0x4,\\r\\n        D3D12_RAY_FLAG_SKIP_CLOSEST_HIT_SHADER\\t= 0x8,\\r\\n        D3D12_RAY_FLAG_CULL_BACK_FACING_TRIANGLES\\t= 0x10,\\r\\n        D3D12_RAY_FLAG_CULL_FRONT_FACING_TRIANGLES\\t= 0x20,\\r\\n        D3D12_RAY_FLAG_CULL_OPAQUE\\t= 0x40,\\r\\n        D3D12_RAY_FLAG_CULL_NON_OPAQUE\\t= 0x80,\\r\\n        D3D12_RAY_FLAG_SKIP_TRIANGLES\\t= 0x100,\\r\\n        D3D12_RAY_FLAG_SKIP_PROCEDURAL_PRIMITIVES\\t= 0x200\\r\\n    } \\tD3D12_RAY_FLAGS;"},"D3D12_RENDER_PASS_BEGINNING_ACCESS":{"comment":"","exp":"","file":"d3d12.h","line":17436,"type":"Struct","value":"typedef struct D3D12_RENDER_PASS_BEGINNING_ACCESS\\r\\n    {\\r\\n    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE Type;\\r\\n    union \\r\\n        {\\r\\n        D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS Clear;\\r\\n        } \\t;\\r\\n    } \\tD3D12_RENDER_PASS_BEGINNING_ACCESS;"},"D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS":{"comment":"","exp":"","file":"d3d12.h","line":17431,"type":"Struct","value":"typedef struct D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS\\r\\n    {\\r\\n    D3D12_CLEAR_VALUE ClearValue;\\r\\n    } \\tD3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS;"},"D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":17422,"type":"Enum","value":"typedef\\r\\nenum D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE\\r\\n    {\\r\\n        D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD\\t= 0,\\r\\n        D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE\\t= ( D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD + 1 ) ,\\r\\n        D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR\\t= ( D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE + 1 ) ,\\r\\n        D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_NO_ACCESS\\t= ( D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR + 1 ) \\r\\n    } \\tD3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE;"},"D3D12_RENDER_PASS_DEPTH_STENCIL_DESC":{"comment":"","exp":"","file":"d3d12.h","line":17490,"type":"Struct","value":"typedef struct D3D12_RENDER_PASS_DEPTH_STENCIL_DESC\\r\\n    {\\r\\n    D3D12_CPU_DESCRIPTOR_HANDLE cpuDescriptor;\\r\\n    D3D12_RENDER_PASS_BEGINNING_ACCESS DepthBeginningAccess;\\r\\n    D3D12_RENDER_PASS_BEGINNING_ACCESS StencilBeginningAccess;\\r\\n    D3D12_RENDER_PASS_ENDING_ACCESS DepthEndingAccess;\\r\\n    D3D12_RENDER_PASS_ENDING_ACCESS StencilEndingAccess;\\r\\n    } \\tD3D12_RENDER_PASS_DEPTH_STENCIL_DESC;"},"D3D12_RENDER_PASS_ENDING_ACCESS":{"comment":"","exp":"","file":"d3d12.h","line":17474,"type":"Struct","value":"typedef struct D3D12_RENDER_PASS_ENDING_ACCESS\\r\\n    {\\r\\n    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE Type;\\r\\n    union \\r\\n        {\\r\\n        D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS Resolve;\\r\\n        } \\t;\\r\\n    } \\tD3D12_RENDER_PASS_ENDING_ACCESS;"},"D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS":{"comment":"","exp":"","file":"d3d12.h","line":17463,"type":"Struct","value":"typedef struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS\\r\\n    {\\r\\n    ID3D12Resource *pSrcResource;\\r\\n    ID3D12Resource *pDstResource;\\r\\n    UINT SubresourceCount;\\r\\n    _Field_size_full_(SubresourceCount)  const D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS *pSubresourceParameters;\\r\\n    DXGI_FORMAT Format;\\r\\n    D3D12_RESOLVE_MODE ResolveMode;\\r\\n    BOOL PreserveResolveSource;\\r\\n    } \\tD3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS;"},"D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS":{"comment":"","exp":"","file":"d3d12.h","line":17454,"type":"Struct","value":"typedef struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS\\r\\n    {\\r\\n    UINT SrcSubresource;\\r\\n    UINT DstSubresource;\\r\\n    UINT DstX;\\r\\n    UINT DstY;\\r\\n    D3D12_RECT SrcRect;\\r\\n    } \\tD3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS;"},"D3D12_RENDER_PASS_ENDING_ACCESS_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":17445,"type":"Enum","value":"typedef\\r\\nenum D3D12_RENDER_PASS_ENDING_ACCESS_TYPE\\r\\n    {\\r\\n        D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD\\t= 0,\\r\\n        D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE\\t= ( D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD + 1 ) ,\\r\\n        D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE\\t= ( D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE + 1 ) ,\\r\\n        D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_NO_ACCESS\\t= ( D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE + 1 ) \\r\\n    } \\tD3D12_RENDER_PASS_ENDING_ACCESS_TYPE;"},"D3D12_RENDER_PASS_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":17499,"type":"Enum","value":"typedef\\r\\nenum D3D12_RENDER_PASS_FLAGS\\r\\n    {\\r\\n        D3D12_RENDER_PASS_FLAG_NONE\\t= 0,\\r\\n        D3D12_RENDER_PASS_FLAG_ALLOW_UAV_WRITES\\t= 0x1,\\r\\n        D3D12_RENDER_PASS_FLAG_SUSPENDING_PASS\\t= 0x2,\\r\\n        D3D12_RENDER_PASS_FLAG_RESUMING_PASS\\t= 0x4\\r\\n    } \\tD3D12_RENDER_PASS_FLAGS;"},"D3D12_RENDER_PASS_RENDER_TARGET_DESC":{"comment":"","exp":"","file":"d3d12.h","line":17483,"type":"Struct","value":"typedef struct D3D12_RENDER_PASS_RENDER_TARGET_DESC\\r\\n    {\\r\\n    D3D12_CPU_DESCRIPTOR_HANDLE cpuDescriptor;\\r\\n    D3D12_RENDER_PASS_BEGINNING_ACCESS BeginningAccess;\\r\\n    D3D12_RENDER_PASS_ENDING_ACCESS EndingAccess;\\r\\n    } \\tD3D12_RENDER_PASS_RENDER_TARGET_DESC;"},"D3D12_RENDER_PASS_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2355,"type":"Enum","value":"typedef\\r\\nenum D3D12_RENDER_PASS_TIER\\r\\n    {\\r\\n        D3D12_RENDER_PASS_TIER_0\\t= 0,\\r\\n        D3D12_RENDER_PASS_TIER_1\\t= 1,\\r\\n        D3D12_RENDER_PASS_TIER_2\\t= 2\\r\\n    } \\tD3D12_RENDER_PASS_TIER;"},"D3D12_RENDER_TARGET_BLEND_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1471,"type":"Struct","value":"typedef struct D3D12_RENDER_TARGET_BLEND_DESC\\r\\n    {\\r\\n    BOOL BlendEnable;\\r\\n    BOOL LogicOpEnable;\\r\\n    D3D12_BLEND SrcBlend;\\r\\n    D3D12_BLEND DestBlend;\\r\\n    D3D12_BLEND_OP BlendOp;\\r\\n    D3D12_BLEND SrcBlendAlpha;\\r\\n    D3D12_BLEND DestBlendAlpha;\\r\\n    D3D12_BLEND_OP BlendOpAlpha;\\r\\n    D3D12_LOGIC_OP LogicOp;\\r\\n    UINT8 RenderTargetWriteMask;\\r\\n    } \\tD3D12_RENDER_TARGET_BLEND_DESC;"},"D3D12_RENDER_TARGET_VIEW_DESC":{"comment":"","exp":"","file":"d3d12.h","line":3255,"type":"Struct","value":"typedef struct D3D12_RENDER_TARGET_VIEW_DESC\\r\\n    {\\r\\n    DXGI_FORMAT Format;\\r\\n    D3D12_RTV_DIMENSION ViewDimension;\\r\\n    union \\r\\n        {\\r\\n        D3D12_BUFFER_RTV Buffer;\\r\\n        D3D12_TEX1D_RTV Texture1D;\\r\\n        D3D12_TEX1D_ARRAY_RTV Texture1DArray;\\r\\n        D3D12_TEX2D_RTV Texture2D;\\r\\n        D3D12_TEX2D_ARRAY_RTV Texture2DArray;\\r\\n        D3D12_TEX2DMS_RTV Texture2DMS;\\r\\n        D3D12_TEX2DMS_ARRAY_RTV Texture2DMSArray;\\r\\n        D3D12_TEX3D_RTV Texture3D;\\r\\n        } \\t;\\r\\n    } \\tD3D12_RENDER_TARGET_VIEW_DESC;"},"D3D12_REQ_BLEND_OBJECT_COUNT_PER_DEVICE":{"comment":"","exp":"( 4096 )","file":"d3d12.h","line":1016,"type":"Integer","value":4096},"D3D12_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP":{"comment":"","exp":"( 27 )","file":"d3d12.h","line":1018,"type":"Integer","value":27},"D3D12_REQ_CONSTANT_BUFFER_ELEMENT_COUNT":{"comment":"","exp":"( 4096 )","file":"d3d12.h","line":1020,"type":"Integer","value":4096},"D3D12_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_DEVICE":{"comment":"","exp":"( 4096 )","file":"d3d12.h","line":1022,"type":"Integer","value":4096},"D3D12_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1024,"type":"Integer","value":32},"D3D12_REQ_DRAW_VERTEX_COUNT_2_TO_EXP":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1026,"type":"Integer","value":32},"D3D12_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION":{"comment":"","exp":"( 16384 )","file":"d3d12.h","line":1028,"type":"Integer","value":16384},"D3D12_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT":{"comment":"","exp":"( 1024 )","file":"d3d12.h","line":1030,"type":"Integer","value":1024},"D3D12_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT":{"comment":"","exp":"( 4096 )","file":"d3d12.h","line":1032,"type":"Integer","value":4096},"D3D12_REQ_MAXANISOTROPY":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":1034,"type":"Integer","value":16},"D3D12_REQ_MIP_LEVELS":{"comment":"","exp":"( 15 )","file":"d3d12.h","line":1036,"type":"Integer","value":15},"D3D12_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES":{"comment":"","exp":"( 2048 )","file":"d3d12.h","line":1038,"type":"Integer","value":2048},"D3D12_REQ_RASTERIZER_OBJECT_COUNT_PER_DEVICE":{"comment":"","exp":"( 4096 )","file":"d3d12.h","line":1040,"type":"Integer","value":4096},"D3D12_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH":{"comment":"","exp":"( 16384 )","file":"d3d12.h","line":1042,"type":"Integer","value":16384},"D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM":{"comment":"","exp":"( 128 )","file":"d3d12.h","line":1044,"type":"Integer","value":128},"D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM":{"comment":"","exp":"( 0.25f )","file":"d3d12.h","line":1046,"type":"Float","value":0.25},"D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_C_TERM":{"comment":"","exp":"( 2048 )","file":"d3d12.h","line":1047,"type":"Integer","value":2048},"D3D12_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP":{"comment":"","exp":"( 20 )","file":"d3d12.h","line":1049,"type":"Integer","value":20},"D3D12_REQ_SAMPLER_OBJECT_COUNT_PER_DEVICE":{"comment":"","exp":"( 4096 )","file":"d3d12.h","line":1051,"type":"Integer","value":4096},"D3D12_REQ_SUBRESOURCES":{"comment":"","exp":"( 30720 )","file":"d3d12.h","line":1053,"type":"Integer","value":30720},"D3D12_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION":{"comment":"","exp":"( 2048 )","file":"d3d12.h","line":1055,"type":"Integer","value":2048},"D3D12_REQ_TEXTURE1D_U_DIMENSION":{"comment":"","exp":"( 16384 )","file":"d3d12.h","line":1057,"type":"Integer","value":16384},"D3D12_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION":{"comment":"","exp":"( 2048 )","file":"d3d12.h","line":1059,"type":"Integer","value":2048},"D3D12_REQ_TEXTURE2D_U_OR_V_DIMENSION":{"comment":"","exp":"( 16384 )","file":"d3d12.h","line":1061,"type":"Integer","value":16384},"D3D12_REQ_TEXTURE3D_U_V_OR_W_DIMENSION":{"comment":"","exp":"( 2048 )","file":"d3d12.h","line":1063,"type":"Integer","value":2048},"D3D12_REQ_TEXTURECUBE_DIMENSION":{"comment":"","exp":"( 16384 )","file":"d3d12.h","line":1065,"type":"Integer","value":16384},"D3D12_RESIDENCY_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":9965,"type":"Enum","value":"typedef\\r\\nenum D3D12_RESIDENCY_FLAGS\\r\\n    {\\r\\n        D3D12_RESIDENCY_FLAG_NONE\\t= 0,\\r\\n        D3D12_RESIDENCY_FLAG_DENY_OVERBUDGET\\t= 0x1\\r\\n    } \\tD3D12_RESIDENCY_FLAGS;"},"D3D12_RESIDENCY_PRIORITY":{"comment":"","exp":"","file":"d3d12.h","line":8946,"type":"Enum","value":"typedef\\r\\nenum D3D12_RESIDENCY_PRIORITY\\r\\n    {\\r\\n        D3D12_RESIDENCY_PRIORITY_MINIMUM\\t= 0x28000000,\\r\\n        D3D12_RESIDENCY_PRIORITY_LOW\\t= 0x50000000,\\r\\n        D3D12_RESIDENCY_PRIORITY_NORMAL\\t= 0x78000000,\\r\\n        D3D12_RESIDENCY_PRIORITY_HIGH\\t= 0xa0010000,\\r\\n        D3D12_RESIDENCY_PRIORITY_MAXIMUM\\t= 0xc8000000\\r\\n    } \\tD3D12_RESIDENCY_PRIORITY;"},"D3D12_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":1067,"type":"Integer","value":0},"D3D12_RESOLVE_MODE":{"comment":"","exp":"","file":"d3d12.h","line":2795,"type":"Enum","value":"typedef\\r\\nenum D3D12_RESOLVE_MODE\\r\\n    {\\r\\n        D3D12_RESOLVE_MODE_DECOMPRESS\\t= 0,\\r\\n        D3D12_RESOLVE_MODE_MIN\\t= 1,\\r\\n        D3D12_RESOLVE_MODE_MAX\\t= 2,\\r\\n        D3D12_RESOLVE_MODE_AVERAGE\\t= 3,\\r\\n        D3D12_RESOLVE_MODE_ENCODE_SAMPLER_FEEDBACK\\t= 4,\\r\\n        D3D12_RESOLVE_MODE_DECODE_SAMPLER_FEEDBACK\\t= 5\\r\\n    } \\tD3D12_RESOLVE_MODE;"},"D3D12_RESOURCE_ALIASING_BARRIER":{"comment":"","exp":"","file":"d3d12.h","line":2730,"type":"Struct","value":"typedef struct D3D12_RESOURCE_ALIASING_BARRIER\\r\\n    {\\r\\n    ID3D12Resource *pResourceBefore;\\r\\n    ID3D12Resource *pResourceAfter;\\r\\n    } \\tD3D12_RESOURCE_ALIASING_BARRIER;"},"D3D12_RESOURCE_ALLOCATION_INFO":{"comment":"","exp":"","file":"d3d12.h","line":2426,"type":"Struct","value":"typedef struct D3D12_RESOURCE_ALLOCATION_INFO\\r\\n    {\\r\\n    UINT64 SizeInBytes;\\r\\n    UINT64 Alignment;\\r\\n    } \\tD3D12_RESOURCE_ALLOCATION_INFO;"},"D3D12_RESOURCE_ALLOCATION_INFO1":{"comment":"","exp":"","file":"d3d12.h","line":2432,"type":"Struct","value":"typedef struct D3D12_RESOURCE_ALLOCATION_INFO1\\r\\n    {\\r\\n    UINT64 Offset;\\r\\n    UINT64 Alignment;\\r\\n    UINT64 SizeInBytes;\\r\\n    } \\tD3D12_RESOURCE_ALLOCATION_INFO1;"},"D3D12_RESOURCE_BARRIER":{"comment":"","exp":"","file":"d3d12.h","line":2750,"type":"Struct","value":"typedef struct D3D12_RESOURCE_BARRIER\\r\\n    {\\r\\n    D3D12_RESOURCE_BARRIER_TYPE Type;\\r\\n    D3D12_RESOURCE_BARRIER_FLAGS Flags;\\r\\n    union \\r\\n        {\\r\\n        D3D12_RESOURCE_TRANSITION_BARRIER Transition;\\r\\n        D3D12_RESOURCE_ALIASING_BARRIER Aliasing;\\r\\n        D3D12_RESOURCE_UAV_BARRIER UAV;\\r\\n        } \\t;\\r\\n    } \\tD3D12_RESOURCE_BARRIER;"},"D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":1069,"type":"Integer","value":4294967295},"D3D12_RESOURCE_BARRIER_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":2741,"type":"Enum","value":"typedef\\r\\nenum D3D12_RESOURCE_BARRIER_FLAGS\\r\\n    {\\r\\n        D3D12_RESOURCE_BARRIER_FLAG_NONE\\t= 0,\\r\\n        D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY\\t= 0x1,\\r\\n        D3D12_RESOURCE_BARRIER_FLAG_END_ONLY\\t= 0x2\\r\\n    } \\tD3D12_RESOURCE_BARRIER_FLAGS;"},"D3D12_RESOURCE_BARRIER_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":2713,"type":"Enum","value":"typedef\\r\\nenum D3D12_RESOURCE_BARRIER_TYPE\\r\\n    {\\r\\n        D3D12_RESOURCE_BARRIER_TYPE_TRANSITION\\t= 0,\\r\\n        D3D12_RESOURCE_BARRIER_TYPE_ALIASING\\t= ( D3D12_RESOURCE_BARRIER_TYPE_TRANSITION + 1 ) ,\\r\\n        D3D12_RESOURCE_BARRIER_TYPE_UAV\\t= ( D3D12_RESOURCE_BARRIER_TYPE_ALIASING + 1 ) \\r\\n    } \\tD3D12_RESOURCE_BARRIER_TYPE;"},"D3D12_RESOURCE_BINDING_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2039,"type":"Enum","value":"typedef\\r\\nenum D3D12_RESOURCE_BINDING_TIER\\r\\n    {\\r\\n        D3D12_RESOURCE_BINDING_TIER_1\\t= 1,\\r\\n        D3D12_RESOURCE_BINDING_TIER_2\\t= 2,\\r\\n        D3D12_RESOURCE_BINDING_TIER_3\\t= 3\\r\\n    } \\tD3D12_RESOURCE_BINDING_TIER;"},"D3D12_RESOURCE_DESC":{"comment":"","exp":"","file":"d3d12.h","line":2544,"type":"Struct","value":"typedef struct D3D12_RESOURCE_DESC\\r\\n    {\\r\\n    D3D12_RESOURCE_DIMENSION Dimension;\\r\\n    UINT64 Alignment;\\r\\n    UINT64 Width;\\r\\n    UINT Height;\\r\\n    UINT16 DepthOrArraySize;\\r\\n    UINT16 MipLevels;\\r\\n    DXGI_FORMAT Format;\\r\\n    DXGI_SAMPLE_DESC SampleDesc;\\r\\n    D3D12_TEXTURE_LAYOUT Layout;\\r\\n    D3D12_RESOURCE_FLAGS Flags;\\r\\n    } \\tD3D12_RESOURCE_DESC;"},"D3D12_RESOURCE_DESC1":{"comment":"","exp":"","file":"d3d12.h","line":2558,"type":"Struct","value":"typedef struct D3D12_RESOURCE_DESC1\\r\\n    {\\r\\n    D3D12_RESOURCE_DIMENSION Dimension;\\r\\n    UINT64 Alignment;\\r\\n    UINT64 Width;\\r\\n    UINT Height;\\r\\n    UINT16 DepthOrArraySize;\\r\\n    UINT16 MipLevels;\\r\\n    DXGI_FORMAT Format;\\r\\n    DXGI_SAMPLE_DESC SampleDesc;\\r\\n    D3D12_TEXTURE_LAYOUT Layout;\\r\\n    D3D12_RESOURCE_FLAGS Flags;\\r\\n    D3D12_MIP_REGION SamplerFeedbackMipRegion;\\r\\n    } \\tD3D12_RESOURCE_DESC1;"},"D3D12_RESOURCE_DIMENSION":{"comment":"","exp":"","file":"d3d12.h","line":2504,"type":"Enum","value":"typedef\\r\\nenum D3D12_RESOURCE_DIMENSION\\r\\n    {\\r\\n        D3D12_RESOURCE_DIMENSION_UNKNOWN\\t= 0,\\r\\n        D3D12_RESOURCE_DIMENSION_BUFFER\\t= 1,\\r\\n        D3D12_RESOURCE_DIMENSION_TEXTURE1D\\t= 2,\\r\\n        D3D12_RESOURCE_DIMENSION_TEXTURE2D\\t= 3,\\r\\n        D3D12_RESOURCE_DIMENSION_TEXTURE3D\\t= 4\\r\\n    } \\tD3D12_RESOURCE_DIMENSION;"},"D3D12_RESOURCE_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":2523,"type":"Enum","value":"typedef\\r\\nenum D3D12_RESOURCE_FLAGS\\r\\n    {\\r\\n        D3D12_RESOURCE_FLAG_NONE\\t= 0,\\r\\n        D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET\\t= 0x1,\\r\\n        D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL\\t= 0x2,\\r\\n        D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS\\t= 0x4,\\r\\n        D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE\\t= 0x8,\\r\\n        D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER\\t= 0x10,\\r\\n        D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS\\t= 0x20,\\r\\n        D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY\\t= 0x40\\r\\n    } \\tD3D12_RESOURCE_FLAGS;"},"D3D12_RESOURCE_HEAP_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2129,"type":"Enum","value":"typedef\\r\\nenum D3D12_RESOURCE_HEAP_TIER\\r\\n    {\\r\\n        D3D12_RESOURCE_HEAP_TIER_1\\t= 1,\\r\\n        D3D12_RESOURCE_HEAP_TIER_2\\t= 2\\r\\n    } \\tD3D12_RESOURCE_HEAP_TIER;"},"D3D12_RESOURCE_STATES":{"comment":"","exp":"","file":"d3d12.h","line":2681,"type":"Enum","value":"typedef\\r\\nenum D3D12_RESOURCE_STATES\\r\\n    {\\r\\n        D3D12_RESOURCE_STATE_COMMON\\t= 0,\\r\\n        D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER\\t= 0x1,\\r\\n        D3D12_RESOURCE_STATE_INDEX_BUFFER\\t= 0x2,\\r\\n        D3D12_RESOURCE_STATE_RENDER_TARGET\\t= 0x4,\\r\\n        D3D12_RESOURCE_STATE_UNORDERED_ACCESS\\t= 0x8,\\r\\n        D3D12_RESOURCE_STATE_DEPTH_WRITE\\t= 0x10,\\r\\n        D3D12_RESOURCE_STATE_DEPTH_READ\\t= 0x20,\\r\\n        D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE\\t= 0x40,\\r\\n        D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE\\t= 0x80,\\r\\n        D3D12_RESOURCE_STATE_STREAM_OUT\\t= 0x100,\\r\\n        D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT\\t= 0x200,\\r\\n        D3D12_RESOURCE_STATE_COPY_DEST\\t= 0x400,\\r\\n        D3D12_RESOURCE_STATE_COPY_SOURCE\\t= 0x800,\\r\\n        D3D12_RESOURCE_STATE_RESOLVE_DEST\\t= 0x1000,\\r\\n        D3D12_RESOURCE_STATE_RESOLVE_SOURCE\\t= 0x2000,\\r\\n        D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE\\t= 0x400000,\\r\\n        D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE\\t= 0x1000000,\\r\\n        D3D12_RESOURCE_STATE_GENERIC_READ\\t= ( ( ( ( ( 0x1 | 0x2 )  | 0x40 )  | 0x80 )  | 0x200 )  | 0x800 ) ,\\r\\n        D3D12_RESOURCE_STATE_PRESENT\\t= 0,\\r\\n        D3D12_RESOURCE_STATE_PREDICATION\\t= 0x200,\\r\\n        D3D12_RESOURCE_STATE_VIDEO_DECODE_READ\\t= 0x10000,\\r\\n        D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE\\t= 0x20000,\\r\\n        D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ\\t= 0x40000,\\r\\n        D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE\\t= 0x80000,\\r\\n        D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ\\t= 0x200000,\\r\\n        D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE\\t= 0x800000\\r\\n    } \\tD3D12_RESOURCE_STATES;"},"D3D12_RESOURCE_TRANSITION_BARRIER":{"comment":"","exp":"","file":"d3d12.h","line":2722,"type":"Struct","value":"typedef struct D3D12_RESOURCE_TRANSITION_BARRIER\\r\\n    {\\r\\n    ID3D12Resource *pResource;\\r\\n    UINT Subresource;\\r\\n    D3D12_RESOURCE_STATES StateBefore;\\r\\n    D3D12_RESOURCE_STATES StateAfter;\\r\\n    } \\tD3D12_RESOURCE_TRANSITION_BARRIER;"},"D3D12_RESOURCE_UAV_BARRIER":{"comment":"","exp":"","file":"d3d12.h","line":2736,"type":"Struct","value":"typedef struct D3D12_RESOURCE_UAV_BARRIER\\r\\n    {\\r\\n    ID3D12Resource *pResource;\\r\\n    } \\tD3D12_RESOURCE_UAV_BARRIER;"},"D3D12_RLDO_FLAGS":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":536,"type":"Enum","value":"typedef\\r\\nenum D3D12_RLDO_FLAGS\\r\\n    {\\r\\n        D3D12_RLDO_NONE\\t= 0,\\r\\n        D3D12_RLDO_SUMMARY\\t= 0x1,\\r\\n        D3D12_RLDO_DETAIL\\t= 0x2,\\r\\n        D3D12_RLDO_IGNORE_INTERNAL\\t= 0x4\\r\\n    } \\tD3D12_RLDO_FLAGS;"},"D3D12_ROOT_CONSTANTS":{"comment":"","exp":"","file":"d3d12.h","line":3412,"type":"Struct","value":"typedef struct D3D12_ROOT_CONSTANTS\\r\\n    {\\r\\n    UINT ShaderRegister;\\r\\n    UINT RegisterSpace;\\r\\n    UINT Num32BitValues;\\r\\n    } \\tD3D12_ROOT_CONSTANTS;"},"D3D12_ROOT_DESCRIPTOR":{"comment":"","exp":"","file":"d3d12.h","line":3419,"type":"Struct","value":"typedef struct D3D12_ROOT_DESCRIPTOR\\r\\n    {\\r\\n    UINT ShaderRegister;\\r\\n    UINT RegisterSpace;\\r\\n    } \\tD3D12_ROOT_DESCRIPTOR;"},"D3D12_ROOT_DESCRIPTOR1":{"comment":"","exp":"","file":"d3d12.h","line":3549,"type":"Struct","value":"typedef struct D3D12_ROOT_DESCRIPTOR1\\r\\n    {\\r\\n    UINT ShaderRegister;\\r\\n    UINT RegisterSpace;\\r\\n    D3D12_ROOT_DESCRIPTOR_FLAGS Flags;\\r\\n    } \\tD3D12_ROOT_DESCRIPTOR1;"},"D3D12_ROOT_DESCRIPTOR_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":3539,"type":"Enum","value":"typedef\\r\\nenum D3D12_ROOT_DESCRIPTOR_FLAGS\\r\\n    {\\r\\n        D3D12_ROOT_DESCRIPTOR_FLAG_NONE\\t= 0,\\r\\n        D3D12_ROOT_DESCRIPTOR_FLAG_DATA_VOLATILE\\t= 0x2,\\r\\n        D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE\\t= 0x4,\\r\\n        D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC\\t= 0x8\\r\\n    } \\tD3D12_ROOT_DESCRIPTOR_FLAGS;"},"D3D12_ROOT_DESCRIPTOR_TABLE":{"comment":"","exp":"","file":"d3d12.h","line":3406,"type":"Struct","value":"typedef struct D3D12_ROOT_DESCRIPTOR_TABLE\\r\\n    {\\r\\n    UINT NumDescriptorRanges;\\r\\n    _Field_size_full_(NumDescriptorRanges)  const D3D12_DESCRIPTOR_RANGE *pDescriptorRanges;\\r\\n    } \\tD3D12_ROOT_DESCRIPTOR_TABLE;"},"D3D12_ROOT_DESCRIPTOR_TABLE1":{"comment":"","exp":"","file":"d3d12.h","line":3533,"type":"Struct","value":"typedef struct D3D12_ROOT_DESCRIPTOR_TABLE1\\r\\n    {\\r\\n    UINT NumDescriptorRanges;\\r\\n    _Field_size_full_(NumDescriptorRanges)  const D3D12_DESCRIPTOR_RANGE1 *pDescriptorRanges;\\r\\n    } \\tD3D12_ROOT_DESCRIPTOR_TABLE1;"},"D3D12_ROOT_PARAMETER":{"comment":"","exp":"","file":"d3d12.h","line":3448,"type":"Struct","value":"typedef struct D3D12_ROOT_PARAMETER\\r\\n    {\\r\\n    D3D12_ROOT_PARAMETER_TYPE ParameterType;\\r\\n    union \\r\\n        {\\r\\n        D3D12_ROOT_DESCRIPTOR_TABLE DescriptorTable;\\r\\n        D3D12_ROOT_CONSTANTS Constants;\\r\\n        D3D12_ROOT_DESCRIPTOR Descriptor;\\r\\n        } \\t;\\r\\n    D3D12_SHADER_VISIBILITY ShaderVisibility;\\r\\n    } \\tD3D12_ROOT_PARAMETER;"},"D3D12_ROOT_PARAMETER1":{"comment":"","exp":"","file":"d3d12.h","line":3556,"type":"Struct","value":"typedef struct D3D12_ROOT_PARAMETER1\\r\\n    {\\r\\n    D3D12_ROOT_PARAMETER_TYPE ParameterType;\\r\\n    union \\r\\n        {\\r\\n        D3D12_ROOT_DESCRIPTOR_TABLE1 DescriptorTable;\\r\\n        D3D12_ROOT_CONSTANTS Constants;\\r\\n        D3D12_ROOT_DESCRIPTOR1 Descriptor;\\r\\n        } \\t;\\r\\n    D3D12_SHADER_VISIBILITY ShaderVisibility;\\r\\n    } \\tD3D12_ROOT_PARAMETER1;"},"D3D12_ROOT_PARAMETER_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":3438,"type":"Enum","value":"typedef\\r\\nenum D3D12_ROOT_PARAMETER_TYPE\\r\\n    {\\r\\n        D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE\\t= 0,\\r\\n        D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS\\t= ( D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE + 1 ) ,\\r\\n        D3D12_ROOT_PARAMETER_TYPE_CBV\\t= ( D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS + 1 ) ,\\r\\n        D3D12_ROOT_PARAMETER_TYPE_SRV\\t= ( D3D12_ROOT_PARAMETER_TYPE_CBV + 1 ) ,\\r\\n        D3D12_ROOT_PARAMETER_TYPE_UAV\\t= ( D3D12_ROOT_PARAMETER_TYPE_SRV + 1 ) \\r\\n    } \\tD3D12_ROOT_PARAMETER_TYPE;"},"D3D12_ROOT_SIGNATURE_DESC":{"comment":"","exp":"","file":"d3d12.h","line":3502,"type":"Struct","value":"typedef struct D3D12_ROOT_SIGNATURE_DESC\\r\\n    {\\r\\n    UINT NumParameters;\\r\\n    _Field_size_full_(NumParameters)  const D3D12_ROOT_PARAMETER *pParameters;\\r\\n    UINT NumStaticSamplers;\\r\\n    _Field_size_full_(NumStaticSamplers)  const D3D12_STATIC_SAMPLER_DESC *pStaticSamplers;\\r\\n    D3D12_ROOT_SIGNATURE_FLAGS Flags;\\r\\n    } \\tD3D12_ROOT_SIGNATURE_DESC;"},"D3D12_ROOT_SIGNATURE_DESC1":{"comment":"","exp":"","file":"d3d12.h","line":3568,"type":"Struct","value":"typedef struct D3D12_ROOT_SIGNATURE_DESC1\\r\\n    {\\r\\n    UINT NumParameters;\\r\\n    _Field_size_full_(NumParameters)  const D3D12_ROOT_PARAMETER1 *pParameters;\\r\\n    UINT NumStaticSamplers;\\r\\n    _Field_size_full_(NumStaticSamplers)  const D3D12_STATIC_SAMPLER_DESC *pStaticSamplers;\\r\\n    D3D12_ROOT_SIGNATURE_FLAGS Flags;\\r\\n    } \\tD3D12_ROOT_SIGNATURE_DESC1;"},"D3D12_ROOT_SIGNATURE_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":3460,"type":"Enum","value":"typedef\\r\\nenum D3D12_ROOT_SIGNATURE_FLAGS\\r\\n    {\\r\\n        D3D12_ROOT_SIGNATURE_FLAG_NONE\\t= 0,\\r\\n        D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT\\t= 0x1,\\r\\n        D3D12_ROOT_SIGNATURE_FLAG_DENY_VERTEX_SHADER_ROOT_ACCESS\\t= 0x2,\\r\\n        D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS\\t= 0x4,\\r\\n        D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS\\t= 0x8,\\r\\n        D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS\\t= 0x10,\\r\\n        D3D12_ROOT_SIGNATURE_FLAG_DENY_PIXEL_SHADER_ROOT_ACCESS\\t= 0x20,\\r\\n        D3D12_ROOT_SIGNATURE_FLAG_ALLOW_STREAM_OUTPUT\\t= 0x40,\\r\\n        D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE\\t= 0x80,\\r\\n        D3D12_ROOT_SIGNATURE_FLAG_DENY_AMPLIFICATION_SHADER_ROOT_ACCESS\\t= 0x100,\\r\\n        D3D12_ROOT_SIGNATURE_FLAG_DENY_MESH_SHADER_ROOT_ACCESS\\t= 0x200\\r\\n    } \\tD3D12_ROOT_SIGNATURE_FLAGS;"},"D3D12_RS_SET_SHADING_RATE_COMBINER_COUNT":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":1071,"type":"Integer","value":2},"D3D12_RTV_DIMENSION":{"comment":"","exp":"","file":"d3d12.h","line":3241,"type":"Enum","value":"typedef\\r\\nenum D3D12_RTV_DIMENSION\\r\\n    {\\r\\n        D3D12_RTV_DIMENSION_UNKNOWN\\t= 0,\\r\\n        D3D12_RTV_DIMENSION_BUFFER\\t= 1,\\r\\n        D3D12_RTV_DIMENSION_TEXTURE1D\\t= 2,\\r\\n        D3D12_RTV_DIMENSION_TEXTURE1DARRAY\\t= 3,\\r\\n        D3D12_RTV_DIMENSION_TEXTURE2D\\t= 4,\\r\\n        D3D12_RTV_DIMENSION_TEXTURE2DARRAY\\t= 5,\\r\\n        D3D12_RTV_DIMENSION_TEXTURE2DMS\\t= 6,\\r\\n        D3D12_RTV_DIMENSION_TEXTURE2DMSARRAY\\t= 7,\\r\\n        D3D12_RTV_DIMENSION_TEXTURE3D\\t= 8\\r\\n    } \\tD3D12_RTV_DIMENSION;"},"D3D12_RT_FORMAT_ARRAY":{"comment":"","exp":"","file":"d3d12.h","line":1947,"type":"Struct","value":"struct D3D12_RT_FORMAT_ARRAY\\r\\n    {\\r\\n    DXGI_FORMAT RTFormats[ 8 ];\\r\\n    UINT NumRenderTargets;\\r\\n    } ;"},"D3D12_SAMPLER_DESC":{"comment":"","exp":"","file":"d3d12.h","line":3100,"type":"Struct","value":"typedef struct D3D12_SAMPLER_DESC\\r\\n    {\\r\\n    D3D12_FILTER Filter;\\r\\n    D3D12_TEXTURE_ADDRESS_MODE AddressU;\\r\\n    D3D12_TEXTURE_ADDRESS_MODE AddressV;\\r\\n    D3D12_TEXTURE_ADDRESS_MODE AddressW;\\r\\n    FLOAT MipLODBias;\\r\\n    UINT MaxAnisotropy;\\r\\n    D3D12_COMPARISON_FUNC ComparisonFunc;\\r\\n    FLOAT BorderColor[ 4 ];\\r\\n    FLOAT MinLOD;\\r\\n    FLOAT MaxLOD;\\r\\n    } \\tD3D12_SAMPLER_DESC;"},"D3D12_SAMPLER_FEEDBACK_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2402,"type":"Enum","value":"typedef\\r\\nenum D3D12_SAMPLER_FEEDBACK_TIER\\r\\n    {\\r\\n        D3D12_SAMPLER_FEEDBACK_TIER_NOT_SUPPORTED\\t= 0,\\r\\n        D3D12_SAMPLER_FEEDBACK_TIER_0_9\\t= 90,\\r\\n        D3D12_SAMPLER_FEEDBACK_TIER_1_0\\t= 100\\r\\n    } \\tD3D12_SAMPLER_FEEDBACK_TIER;"},"D3D12_SAMPLE_POSITION":{"comment":"","exp":"","file":"d3d12.h","line":2806,"type":"Struct","value":"typedef struct D3D12_SAMPLE_POSITION\\r\\n    {\\r\\n    INT8 X;\\r\\n    INT8 Y;\\r\\n    } \\tD3D12_SAMPLE_POSITION;"},"D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER":{"comment":"","exp":"","file":"d3d12.h","line":12435,"type":"Struct","value":"typedef struct D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER\\r\\n    {\\r\\n    GUID DriverOpaqueGUID;\\r\\n    BYTE DriverOpaqueVersioningData[ 16 ];\\r\\n    } \\tD3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER;"},"D3D12_SERIALIZED_DATA_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":12441,"type":"Enum","value":"typedef\\r\\nenum D3D12_SERIALIZED_DATA_TYPE\\r\\n    {\\r\\n        D3D12_SERIALIZED_DATA_RAYTRACING_ACCELERATION_STRUCTURE\\t= 0\\r\\n    } \\tD3D12_SERIALIZED_DATA_TYPE;"},"D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER":{"comment":"","exp":"","file":"d3d12.h","line":12457,"type":"Struct","value":"typedef struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER\\r\\n    {\\r\\n    D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER DriverMatchingIdentifier;\\r\\n    UINT64 SerializedSizeInBytesIncludingHeader;\\r\\n    UINT64 DeserializedSizeInBytes;\\r\\n    UINT64 NumBottomLevelAccelerationStructurePointersAfterHeader;\\r\\n    } \\tD3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER;"},"D3D12_SHADER_BYTECODE":{"comment":"","exp":"","file":"d3d12.h","line":1870,"type":"Struct","value":"typedef struct D3D12_SHADER_BYTECODE\\r\\n    {\\r\\n    _Field_size_bytes_full_(BytecodeLength)  const void *pShaderBytecode;\\r\\n    SIZE_T BytecodeLength;\\r\\n    } \\tD3D12_SHADER_BYTECODE;"},"D3D12_SHADER_CACHE_SUPPORT_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":2270,"type":"Enum","value":"typedef\\r\\nenum D3D12_SHADER_CACHE_SUPPORT_FLAGS\\r\\n    {\\r\\n        D3D12_SHADER_CACHE_SUPPORT_NONE\\t= 0,\\r\\n        D3D12_SHADER_CACHE_SUPPORT_SINGLE_PSO\\t= 0x1,\\r\\n        D3D12_SHADER_CACHE_SUPPORT_LIBRARY\\t= 0x2,\\r\\n        D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE\\t= 0x4,\\r\\n        D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE\\t= 0x8\\r\\n    } \\tD3D12_SHADER_CACHE_SUPPORT_FLAGS;"},"D3D12_SHADER_COMPONENT_MAPPING":{"comment":"","exp":"","file":"d3d12.h","line":2833,"type":"Enum","value":"typedef\\r\\nenum D3D12_SHADER_COMPONENT_MAPPING\\r\\n    {\\r\\n        D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_0\\t= 0,\\r\\n        D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_1\\t= 1,\\r\\n        D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_2\\t= 2,\\r\\n        D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_3\\t= 3,\\r\\n        D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_0\\t= 4,\\r\\n        D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_1\\t= 5\\r\\n    } \\tD3D12_SHADER_COMPONENT_MAPPING;"},"D3D12_SHADER_COMPONENT_MAPPING_ALWAYS_SET_BIT_AVOIDING_ZEROMEM_MISTAKES":{"comment":"","exp":"(1<<(D3D12_SHADER_COMPONENT_MAPPING_SHIFT*4))","file":"d3d12.h","line":2846,"type":"Integer","value":4096},"D3D12_SHADER_COMPONENT_MAPPING_MASK":{"comment":"","exp":"0x7","file":"d3d12.h","line":2844,"type":"Integer","value":7},"D3D12_SHADER_COMPONENT_MAPPING_SHIFT":{"comment":"","exp":"3","file":"d3d12.h","line":2845,"type":"Integer","value":3},"D3D12_SHADER_IDENTIFIER_SIZE_IN_BYTES":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1073,"type":"Integer","value":32},"D3D12_SHADER_MAJOR_VERSION":{"comment":"","exp":"( 5 )","file":"d3d12.h","line":1075,"type":"Integer","value":5},"D3D12_SHADER_MAX_INSTANCES":{"comment":"","exp":"( 65535 )","file":"d3d12.h","line":1077,"type":"Integer","value":65535},"D3D12_SHADER_MAX_INTERFACES":{"comment":"","exp":"( 253 )","file":"d3d12.h","line":1079,"type":"Integer","value":253},"D3D12_SHADER_MAX_INTERFACE_CALL_SITES":{"comment":"","exp":"( 4096 )","file":"d3d12.h","line":1081,"type":"Integer","value":4096},"D3D12_SHADER_MAX_TYPES":{"comment":"","exp":"( 65535 )","file":"d3d12.h","line":1083,"type":"Integer","value":65535},"D3D12_SHADER_MINOR_VERSION":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":1085,"type":"Integer","value":1},"D3D12_SHADER_MIN_PRECISION_SUPPORT":{"comment":"","exp":"","file":"d3d12.h","line":2020,"type":"Enum","value":"typedef\\r\\nenum D3D12_SHADER_MIN_PRECISION_SUPPORT\\r\\n    {\\r\\n        D3D12_SHADER_MIN_PRECISION_SUPPORT_NONE\\t= 0,\\r\\n        D3D12_SHADER_MIN_PRECISION_SUPPORT_10_BIT\\t= 0x1,\\r\\n        D3D12_SHADER_MIN_PRECISION_SUPPORT_16_BIT\\t= 0x2\\r\\n    } \\tD3D12_SHADER_MIN_PRECISION_SUPPORT;"},"D3D12_SHADER_RESOURCE_VIEW_DESC":{"comment":"","exp":"","file":"d3d12.h","line":2960,"type":"Struct","value":"typedef struct D3D12_SHADER_RESOURCE_VIEW_DESC\\r\\n    {\\r\\n    DXGI_FORMAT Format;\\r\\n    D3D12_SRV_DIMENSION ViewDimension;\\r\\n    UINT Shader4ComponentMapping;\\r\\n    union \\r\\n        {\\r\\n        D3D12_BUFFER_SRV Buffer;\\r\\n        D3D12_TEX1D_SRV Texture1D;\\r\\n        D3D12_TEX1D_ARRAY_SRV Texture1DArray;\\r\\n        D3D12_TEX2D_SRV Texture2D;\\r\\n        D3D12_TEX2D_ARRAY_SRV Texture2DArray;\\r\\n        D3D12_TEX2DMS_SRV Texture2DMS;\\r\\n        D3D12_TEX2DMS_ARRAY_SRV Texture2DMSArray;\\r\\n        D3D12_TEX3D_SRV Texture3D;\\r\\n        D3D12_TEXCUBE_SRV TextureCube;\\r\\n        D3D12_TEXCUBE_ARRAY_SRV TextureCubeArray;\\r\\n        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV RaytracingAccelerationStructure;\\r\\n        } \\t;\\r\\n    } \\tD3D12_SHADER_RESOURCE_VIEW_DESC;"},"D3D12_SHADER_VERSION_TYPE":{"comment":"","exp":"","file":"d3d12shader.h","line":15,"type":"Enum","value":"typedef enum D3D12_SHADER_VERSION_TYPE\\r\\n{\\r\\n    D3D12_SHVER_PIXEL_SHADER    = 0,\\r\\n    D3D12_SHVER_VERTEX_SHADER   = 1,\\r\\n    D3D12_SHVER_GEOMETRY_SHADER = 2,\\r\\n    \\r\\n    \/\/ D3D11 Shaders\\r\\n    D3D12_SHVER_HULL_SHADER     = 3,\\r\\n    D3D12_SHVER_DOMAIN_SHADER   = 4,\\r\\n    D3D12_SHVER_COMPUTE_SHADER  = 5,\\r\\n    D3D12_SHVER_RESERVED0       = 0xFFF0,\\r\\n} D3D12_SHADER_VERSION_TYPE;"},"D3D12_SHADER_VISIBILITY":{"comment":"","exp":"","file":"d3d12.h","line":3425,"type":"Enum","value":"typedef\\r\\nenum D3D12_SHADER_VISIBILITY\\r\\n    {\\r\\n        D3D12_SHADER_VISIBILITY_ALL\\t= 0,\\r\\n        D3D12_SHADER_VISIBILITY_VERTEX\\t= 1,\\r\\n        D3D12_SHADER_VISIBILITY_HULL\\t= 2,\\r\\n        D3D12_SHADER_VISIBILITY_DOMAIN\\t= 3,\\r\\n        D3D12_SHADER_VISIBILITY_GEOMETRY\\t= 4,\\r\\n        D3D12_SHADER_VISIBILITY_PIXEL\\t= 5,\\r\\n        D3D12_SHADER_VISIBILITY_AMPLIFICATION\\t= 6,\\r\\n        D3D12_SHADER_VISIBILITY_MESH\\t= 7\\r\\n    } \\tD3D12_SHADER_VISIBILITY;"},"D3D12_SHADING_RATE":{"comment":"","exp":"","file":"d3d12.h","line":18659,"type":"Enum","value":"typedef\\r\\nenum D3D12_SHADING_RATE\\r\\n    {\\r\\n        D3D12_SHADING_RATE_1X1\\t= 0,\\r\\n        D3D12_SHADING_RATE_1X2\\t= 0x1,\\r\\n        D3D12_SHADING_RATE_2X1\\t= 0x4,\\r\\n        D3D12_SHADING_RATE_2X2\\t= 0x5,\\r\\n        D3D12_SHADING_RATE_2X4\\t= 0x6,\\r\\n        D3D12_SHADING_RATE_4X2\\t= 0x9,\\r\\n        D3D12_SHADING_RATE_4X4\\t= 0xa\\r\\n    } \\tD3D12_SHADING_RATE;"},"D3D12_SHADING_RATE_COMBINER":{"comment":"","exp":"","file":"d3d12.h","line":18671,"type":"Enum","value":"typedef\\r\\nenum D3D12_SHADING_RATE_COMBINER\\r\\n    {\\r\\n        D3D12_SHADING_RATE_COMBINER_PASSTHROUGH\\t= 0,\\r\\n        D3D12_SHADING_RATE_COMBINER_OVERRIDE\\t= 1,\\r\\n        D3D12_SHADING_RATE_COMBINER_MIN\\t= 2,\\r\\n        D3D12_SHADING_RATE_COMBINER_MAX\\t= 3,\\r\\n        D3D12_SHADING_RATE_COMBINER_SUM\\t= 4\\r\\n    } \\tD3D12_SHADING_RATE_COMBINER;"},"D3D12_SHADING_RATE_VALID_MASK":{"comment":"","exp":"3","file":"d3d12.h","line":18655,"type":"Integer","value":3},"D3D12_SHADING_RATE_X_AXIS_SHIFT":{"comment":"","exp":"2","file":"d3d12.h","line":18654,"type":"Integer","value":2},"D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2321,"type":"Enum","value":"typedef\\r\\nenum D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER\\r\\n    {\\r\\n        D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_0\\t= 0,\\r\\n        D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_1\\t= ( D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_0 + 1 ) ,\\r\\n        D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_2\\t= ( D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_1 + 1 ) \\r\\n    } \\tD3D12_SHARED_RESOURCE_COMPATIBILITY_TIER;"},"D3D12_SHIFT_INSTRUCTION_PAD_VALUE":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":1087,"type":"Integer","value":0},"D3D12_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT":{"comment":"","exp":"( 5 )","file":"d3d12.h","line":1089,"type":"Integer","value":5},"D3D12_SIMULTANEOUS_RENDER_TARGET_COUNT":{"comment":"","exp":"( 8 )","file":"d3d12.h","line":1091,"type":"Integer","value":8},"D3D12_SMALL_MSAA_RESOURCE_PLACEMENT_ALIGNMENT":{"comment":"","exp":"( 65536 )","file":"d3d12.h","line":1093,"type":"Integer","value":65536},"D3D12_SMALL_RESOURCE_PLACEMENT_ALIGNMENT":{"comment":"","exp":"( 4096 )","file":"d3d12.h","line":1095,"type":"Integer","value":4096},"D3D12_SO_BUFFER_MAX_STRIDE_IN_BYTES":{"comment":"","exp":"( 2048 )","file":"d3d12.h","line":1097,"type":"Integer","value":2048},"D3D12_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES":{"comment":"","exp":"( 512 )","file":"d3d12.h","line":1099,"type":"Integer","value":512},"D3D12_SO_BUFFER_SLOT_COUNT":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":1101,"type":"Integer","value":4},"D3D12_SO_DDI_REGISTER_INDEX_DENOTING_GAP":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":1103,"type":"Integer","value":4294967295},"D3D12_SO_DECLARATION_ENTRY":{"comment":"","exp":"","file":"d3d12.h","line":1310,"type":"Struct","value":"typedef struct D3D12_SO_DECLARATION_ENTRY\\r\\n    {\\r\\n    UINT Stream;\\r\\n    LPCSTR SemanticName;\\r\\n    UINT SemanticIndex;\\r\\n    BYTE StartComponent;\\r\\n    BYTE ComponentCount;\\r\\n    BYTE OutputSlot;\\r\\n    } \\tD3D12_SO_DECLARATION_ENTRY;"},"D3D12_SO_NO_RASTERIZED_STREAM":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":1105,"type":"Integer","value":4294967295},"D3D12_SO_OUTPUT_COMPONENT_COUNT":{"comment":"","exp":"( 128 )","file":"d3d12.h","line":1107,"type":"Integer","value":128},"D3D12_SO_STREAM_COUNT":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":1109,"type":"Integer","value":4},"D3D12_SPEC_DATE_DAY":{"comment":"","exp":"( 14 )","file":"d3d12.h","line":1111,"type":"Integer","value":14},"D3D12_SPEC_DATE_MONTH":{"comment":"","exp":"( 11 )","file":"d3d12.h","line":1113,"type":"Integer","value":11},"D3D12_SPEC_DATE_YEAR":{"comment":"","exp":"( 2014 )","file":"d3d12.h","line":1115,"type":"Integer","value":2014},"D3D12_SPEC_VERSION":{"comment":"","exp":"( 1.16 )","file":"d3d12.h","line":1117,"type":"Float","value":1.1599999999999999},"D3D12_SRGB_GAMMA":{"comment":"","exp":"( 2.2f )","file":"d3d12.h","line":1118,"type":"Float","value":2.2000000000000002},"D3D12_SRGB_TO_FLOAT_DENOMINATOR_1":{"comment":"","exp":"( 12.92f )","file":"d3d12.h","line":1119,"type":"Float","value":12.92},"D3D12_SRGB_TO_FLOAT_DENOMINATOR_2":{"comment":"","exp":"( 1.055f )","file":"d3d12.h","line":1120,"type":"Float","value":1.0549999999999999},"D3D12_SRGB_TO_FLOAT_EXPONENT":{"comment":"","exp":"( 2.4f )","file":"d3d12.h","line":1121,"type":"Float","value":2.3999999999999999},"D3D12_SRGB_TO_FLOAT_OFFSET":{"comment":"","exp":"( 0.055f )","file":"d3d12.h","line":1122,"type":"Float","value":0.055},"D3D12_SRGB_TO_FLOAT_THRESHOLD":{"comment":"","exp":"( 0.04045f )","file":"d3d12.h","line":1123,"type":"Float","value":0.04045},"D3D12_SRGB_TO_FLOAT_TOLERANCE_IN_ULP":{"comment":"","exp":"( 0.5f )","file":"d3d12.h","line":1124,"type":"Float","value":0.5},"D3D12_SRV_DIMENSION":{"comment":"","exp":"","file":"d3d12.h","line":2943,"type":"Enum","value":"typedef\\r\\nenum D3D12_SRV_DIMENSION\\r\\n    {\\r\\n        D3D12_SRV_DIMENSION_UNKNOWN\\t= 0,\\r\\n        D3D12_SRV_DIMENSION_BUFFER\\t= 1,\\r\\n        D3D12_SRV_DIMENSION_TEXTURE1D\\t= 2,\\r\\n        D3D12_SRV_DIMENSION_TEXTURE1DARRAY\\t= 3,\\r\\n        D3D12_SRV_DIMENSION_TEXTURE2D\\t= 4,\\r\\n        D3D12_SRV_DIMENSION_TEXTURE2DARRAY\\t= 5,\\r\\n        D3D12_SRV_DIMENSION_TEXTURE2DMS\\t= 6,\\r\\n        D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY\\t= 7,\\r\\n        D3D12_SRV_DIMENSION_TEXTURE3D\\t= 8,\\r\\n        D3D12_SRV_DIMENSION_TEXTURECUBE\\t= 9,\\r\\n        D3D12_SRV_DIMENSION_TEXTURECUBEARRAY\\t= 10,\\r\\n        D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE\\t= 11\\r\\n    } \\tD3D12_SRV_DIMENSION;"},"D3D12_STANDARD_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1125,"type":"Integer","value":32},"D3D12_STANDARD_COMPONENT_BIT_COUNT_DOUBLED":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":1127,"type":"Integer","value":64},"D3D12_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":1129,"type":"Integer","value":4},"D3D12_STANDARD_PIXEL_COMPONENT_COUNT":{"comment":"","exp":"( 128 )","file":"d3d12.h","line":1131,"type":"Integer","value":128},"D3D12_STANDARD_PIXEL_ELEMENT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1133,"type":"Integer","value":32},"D3D12_STANDARD_VECTOR_SIZE":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":1135,"type":"Integer","value":4},"D3D12_STANDARD_VERTEX_ELEMENT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1137,"type":"Integer","value":32},"D3D12_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":1139,"type":"Integer","value":64},"D3D12_STATE_OBJECT_CONFIG":{"comment":"","exp":"","file":"d3d12.h","line":12164,"type":"Struct","value":"typedef struct D3D12_STATE_OBJECT_CONFIG\\r\\n    {\\r\\n    D3D12_STATE_OBJECT_FLAGS Flags;\\r\\n    } \\tD3D12_STATE_OBJECT_CONFIG;"},"D3D12_STATE_OBJECT_DESC":{"comment":"","exp":"","file":"d3d12.h","line":12275,"type":"Struct","value":"typedef struct D3D12_STATE_OBJECT_DESC\\r\\n    {\\r\\n    D3D12_STATE_OBJECT_TYPE Type;\\r\\n    UINT NumSubobjects;\\r\\n    _In_reads_(NumSubobjects)  const D3D12_STATE_SUBOBJECT *pSubobjects;\\r\\n    } \\tD3D12_STATE_OBJECT_DESC;"},"D3D12_STATE_OBJECT_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":12154,"type":"Enum","value":"typedef\\r\\nenum D3D12_STATE_OBJECT_FLAGS\\r\\n    {\\r\\n        D3D12_STATE_OBJECT_FLAG_NONE\\t= 0,\\r\\n        D3D12_STATE_OBJECT_FLAG_ALLOW_LOCAL_DEPENDENCIES_ON_EXTERNAL_DEFINITIONS\\t= 0x1,\\r\\n        D3D12_STATE_OBJECT_FLAG_ALLOW_EXTERNAL_DEPENDENCIES_ON_LOCAL_DEFINITIONS\\t= 0x2,\\r\\n        D3D12_STATE_OBJECT_FLAG_ALLOW_STATE_OBJECT_ADDITIONS\\t= 0x4\\r\\n    } \\tD3D12_STATE_OBJECT_FLAGS;"},"D3D12_STATE_OBJECT_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":12268,"type":"Enum","value":"typedef\\r\\nenum D3D12_STATE_OBJECT_TYPE\\r\\n    {\\r\\n        D3D12_STATE_OBJECT_TYPE_COLLECTION\\t= 0,\\r\\n        D3D12_STATE_OBJECT_TYPE_RAYTRACING_PIPELINE\\t= 3\\r\\n    } \\tD3D12_STATE_OBJECT_TYPE;"},"D3D12_STATE_SUBOBJECT":{"comment":"","exp":"","file":"d3d12.h","line":12148,"type":"Struct","value":"typedef struct D3D12_STATE_SUBOBJECT\\r\\n    {\\r\\n    D3D12_STATE_SUBOBJECT_TYPE Type;\\r\\n    const void *pDesc;\\r\\n    } \\tD3D12_STATE_SUBOBJECT;"},"D3D12_STATE_SUBOBJECT_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":12130,"type":"Enum","value":"typedef\\r\\nenum D3D12_STATE_SUBOBJECT_TYPE\\r\\n    {\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_STATE_OBJECT_CONFIG\\t= 0,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_GLOBAL_ROOT_SIGNATURE\\t= 1,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_LOCAL_ROOT_SIGNATURE\\t= 2,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK\\t= 3,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_DXIL_LIBRARY\\t= 5,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_EXISTING_COLLECTION\\t= 6,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_SUBOBJECT_TO_EXPORTS_ASSOCIATION\\t= 7,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION\\t= 8,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_SHADER_CONFIG\\t= 9,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG\\t= 10,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_HIT_GROUP\\t= 11,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG1\\t= 12,\\r\\n        D3D12_STATE_SUBOBJECT_TYPE_MAX_VALID\\t= ( D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG1 + 1 ) \\r\\n    } \\tD3D12_STATE_SUBOBJECT_TYPE;"},"D3D12_STATIC_BORDER_COLOR":{"comment":"","exp":"","file":"d3d12.h","line":3477,"type":"Enum","value":"typedef\\r\\nenum D3D12_STATIC_BORDER_COLOR\\r\\n    {\\r\\n        D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK\\t= 0,\\r\\n        D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK\\t= ( D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK + 1 ) ,\\r\\n        D3D12_STATIC_BORDER_COLOR_OPAQUE_WHITE\\t= ( D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK + 1 ) \\r\\n    } \\tD3D12_STATIC_BORDER_COLOR;"},"D3D12_STATIC_SAMPLER_DESC":{"comment":"","exp":"","file":"d3d12.h","line":3485,"type":"Struct","value":"typedef struct D3D12_STATIC_SAMPLER_DESC\\r\\n    {\\r\\n    D3D12_FILTER Filter;\\r\\n    D3D12_TEXTURE_ADDRESS_MODE AddressU;\\r\\n    D3D12_TEXTURE_ADDRESS_MODE AddressV;\\r\\n    D3D12_TEXTURE_ADDRESS_MODE AddressW;\\r\\n    FLOAT MipLODBias;\\r\\n    UINT MaxAnisotropy;\\r\\n    D3D12_COMPARISON_FUNC ComparisonFunc;\\r\\n    D3D12_STATIC_BORDER_COLOR BorderColor;\\r\\n    FLOAT MinLOD;\\r\\n    FLOAT MaxLOD;\\r\\n    UINT ShaderRegister;\\r\\n    UINT RegisterSpace;\\r\\n    D3D12_SHADER_VISIBILITY ShaderVisibility;\\r\\n    } \\tD3D12_STATIC_SAMPLER_DESC;"},"D3D12_STENCIL_OP":{"comment":"","exp":"","file":"d3d12.h","line":1362,"type":"Enum","value":"typedef\\r\\nenum D3D12_STENCIL_OP\\r\\n    {\\r\\n        D3D12_STENCIL_OP_KEEP\\t= 1,\\r\\n        D3D12_STENCIL_OP_ZERO\\t= 2,\\r\\n        D3D12_STENCIL_OP_REPLACE\\t= 3,\\r\\n        D3D12_STENCIL_OP_INCR_SAT\\t= 4,\\r\\n        D3D12_STENCIL_OP_DECR_SAT\\t= 5,\\r\\n        D3D12_STENCIL_OP_INVERT\\t= 6,\\r\\n        D3D12_STENCIL_OP_INCR\\t= 7,\\r\\n        D3D12_STENCIL_OP_DECR\\t= 8\\r\\n    } \\tD3D12_STENCIL_OP;"},"D3D12_STREAM_OUTPUT_BUFFER_VIEW":{"comment":"","exp":"","file":"d3d12.h","line":3887,"type":"Struct","value":"typedef struct D3D12_STREAM_OUTPUT_BUFFER_VIEW\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS BufferLocation;\\r\\n    UINT64 SizeInBytes;\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS BufferFilledSizeLocation;\\r\\n    } \\tD3D12_STREAM_OUTPUT_BUFFER_VIEW;"},"D3D12_STREAM_OUTPUT_DESC":{"comment":"","exp":"","file":"d3d12.h","line":1876,"type":"Struct","value":"typedef struct D3D12_STREAM_OUTPUT_DESC\\r\\n    {\\r\\n    _Field_size_full_(NumEntries)  const D3D12_SO_DECLARATION_ENTRY *pSODeclaration;\\r\\n    UINT NumEntries;\\r\\n    _Field_size_full_(NumStrides)  const UINT *pBufferStrides;\\r\\n    UINT NumStrides;\\r\\n    UINT RasterizedStream;\\r\\n    } \\tD3D12_STREAM_OUTPUT_DESC;"},"D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION":{"comment":"","exp":"","file":"d3d12.h","line":12212,"type":"Struct","value":"typedef struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION\\r\\n    {\\r\\n    const D3D12_STATE_SUBOBJECT *pSubobjectToAssociate;\\r\\n    UINT NumExports;\\r\\n    _In_reads_(NumExports)  LPCWSTR *pExports;\\r\\n    } \\tD3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION;"},"D3D12_SUBPIXEL_FRACTIONAL_BIT_COUNT":{"comment":"","exp":"( 8 )","file":"d3d12.h","line":1141,"type":"Integer","value":8},"D3D12_SUBRESOURCE_DATA":{"comment":"","exp":"","file":"d3d12.h","line":18518,"type":"Struct","value":"typedef struct D3D12_SUBRESOURCE_DATA\\r\\n    {\\r\\n    const void *pData;\\r\\n    LONG_PTR RowPitch;\\r\\n    LONG_PTR SlicePitch;\\r\\n    } \\tD3D12_SUBRESOURCE_DATA;"},"D3D12_SUBRESOURCE_FOOTPRINT":{"comment":"","exp":"","file":"d3d12.h","line":2762,"type":"Struct","value":"typedef struct D3D12_SUBRESOURCE_FOOTPRINT\\r\\n    {\\r\\n    DXGI_FORMAT Format;\\r\\n    UINT Width;\\r\\n    UINT Height;\\r\\n    UINT Depth;\\r\\n    UINT RowPitch;\\r\\n    } \\tD3D12_SUBRESOURCE_FOOTPRINT;"},"D3D12_SUBRESOURCE_INFO":{"comment":"","exp":"","file":"d3d12.h","line":2607,"type":"Struct","value":"typedef struct D3D12_SUBRESOURCE_INFO\\r\\n    {\\r\\n    UINT64 Offset;\\r\\n    UINT RowPitch;\\r\\n    UINT DepthPitch;\\r\\n    } \\tD3D12_SUBRESOURCE_INFO;"},"D3D12_SUBRESOURCE_RANGE_UINT64":{"comment":"","exp":"","file":"d3d12.h","line":2601,"type":"Struct","value":"typedef struct D3D12_SUBRESOURCE_RANGE_UINT64\\r\\n    {\\r\\n    UINT Subresource;\\r\\n    D3D12_RANGE_UINT64 Range;\\r\\n    } \\tD3D12_SUBRESOURCE_RANGE_UINT64;"},"D3D12_SUBRESOURCE_TILING":{"comment":"","exp":"","file":"d3d12.h","line":2640,"type":"Struct","value":"typedef struct D3D12_SUBRESOURCE_TILING\\r\\n    {\\r\\n    UINT WidthInTiles;\\r\\n    UINT16 HeightInTiles;\\r\\n    UINT16 DepthInTiles;\\r\\n    UINT StartTileIndexInOverallResource;\\r\\n    } \\tD3D12_SUBRESOURCE_TILING;"},"D3D12_SUBTEXEL_FRACTIONAL_BIT_COUNT":{"comment":"","exp":"( 8 )","file":"d3d12.h","line":1143,"type":"Integer","value":8},"D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_END":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":1145,"type":"Integer","value":4294967295},"D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_START":{"comment":"","exp":"( 0xfffffff0 )","file":"d3d12.h","line":1147,"type":"Integer","value":4294967280},"D3D12_TESSELLATOR_MAX_EVEN_TESSELLATION_FACTOR":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":1149,"type":"Integer","value":64},"D3D12_TESSELLATOR_MAX_ISOLINE_DENSITY_TESSELLATION_FACTOR":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":1151,"type":"Integer","value":64},"D3D12_TESSELLATOR_MAX_ODD_TESSELLATION_FACTOR":{"comment":"","exp":"( 63 )","file":"d3d12.h","line":1153,"type":"Integer","value":63},"D3D12_TESSELLATOR_MAX_TESSELLATION_FACTOR":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":1155,"type":"Integer","value":64},"D3D12_TESSELLATOR_MIN_EVEN_TESSELLATION_FACTOR":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":1157,"type":"Integer","value":2},"D3D12_TESSELLATOR_MIN_ISOLINE_DENSITY_TESSELLATION_FACTOR":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":1159,"type":"Integer","value":1},"D3D12_TESSELLATOR_MIN_ODD_TESSELLATION_FACTOR":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":1161,"type":"Integer","value":1},"D3D12_TEX1D_ARRAY_DSV":{"comment":"","exp":"","file":"d3d12.h","line":3277,"type":"Struct","value":"typedef struct D3D12_TEX1D_ARRAY_DSV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    UINT FirstArraySlice;\\r\\n    UINT ArraySize;\\r\\n    } \\tD3D12_TEX1D_ARRAY_DSV;"},"D3D12_TEX1D_ARRAY_RTV":{"comment":"","exp":"","file":"d3d12.h","line":3202,"type":"Struct","value":"typedef struct D3D12_TEX1D_ARRAY_RTV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    UINT FirstArraySlice;\\r\\n    UINT ArraySize;\\r\\n    } \\tD3D12_TEX1D_ARRAY_RTV;"},"D3D12_TEX1D_ARRAY_SRV":{"comment":"","exp":"","file":"d3d12.h","line":2877,"type":"Struct","value":"typedef struct D3D12_TEX1D_ARRAY_SRV\\r\\n    {\\r\\n    UINT MostDetailedMip;\\r\\n    UINT MipLevels;\\r\\n    UINT FirstArraySlice;\\r\\n    UINT ArraySize;\\r\\n    FLOAT ResourceMinLODClamp;\\r\\n    } \\tD3D12_TEX1D_ARRAY_SRV;"},"D3D12_TEX1D_ARRAY_UAV":{"comment":"","exp":"","file":"d3d12.h","line":3136,"type":"Struct","value":"typedef struct D3D12_TEX1D_ARRAY_UAV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    UINT FirstArraySlice;\\r\\n    UINT ArraySize;\\r\\n    } \\tD3D12_TEX1D_ARRAY_UAV;"},"D3D12_TEX1D_DSV":{"comment":"","exp":"","file":"d3d12.h","line":3272,"type":"Struct","value":"typedef struct D3D12_TEX1D_DSV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    } \\tD3D12_TEX1D_DSV;"},"D3D12_TEX1D_RTV":{"comment":"","exp":"","file":"d3d12.h","line":3197,"type":"Struct","value":"typedef struct D3D12_TEX1D_RTV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    } \\tD3D12_TEX1D_RTV;"},"D3D12_TEX1D_SRV":{"comment":"","exp":"","file":"d3d12.h","line":2870,"type":"Struct","value":"typedef struct D3D12_TEX1D_SRV\\r\\n    {\\r\\n    UINT MostDetailedMip;\\r\\n    UINT MipLevels;\\r\\n    FLOAT ResourceMinLODClamp;\\r\\n    } \\tD3D12_TEX1D_SRV;"},"D3D12_TEX1D_UAV":{"comment":"","exp":"","file":"d3d12.h","line":3131,"type":"Struct","value":"typedef struct D3D12_TEX1D_UAV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    } \\tD3D12_TEX1D_UAV;"},"D3D12_TEX2DMS_ARRAY_DSV":{"comment":"","exp":"","file":"d3d12.h","line":3301,"type":"Struct","value":"typedef struct D3D12_TEX2DMS_ARRAY_DSV\\r\\n    {\\r\\n    UINT FirstArraySlice;\\r\\n    UINT ArraySize;\\r\\n    } \\tD3D12_TEX2DMS_ARRAY_DSV;"},"D3D12_TEX2DMS_ARRAY_RTV":{"comment":"","exp":"","file":"d3d12.h","line":3228,"type":"Struct","value":"typedef struct D3D12_TEX2DMS_ARRAY_RTV\\r\\n    {\\r\\n    UINT FirstArraySlice;\\r\\n    UINT ArraySize;\\r\\n    } \\tD3D12_TEX2DMS_ARRAY_RTV;"},"D3D12_TEX2DMS_ARRAY_SRV":{"comment":"","exp":"","file":"d3d12.h","line":2932,"type":"Struct","value":"typedef struct D3D12_TEX2DMS_ARRAY_SRV\\r\\n    {\\r\\n    UINT FirstArraySlice;\\r\\n    UINT ArraySize;\\r\\n    } \\tD3D12_TEX2DMS_ARRAY_SRV;"},"D3D12_TEX2DMS_DSV":{"comment":"","exp":"","file":"d3d12.h","line":3296,"type":"Struct","value":"typedef struct D3D12_TEX2DMS_DSV\\r\\n    {\\r\\n    UINT UnusedField_NothingToDefine;\\r\\n    } \\tD3D12_TEX2DMS_DSV;"},"D3D12_TEX2DMS_RTV":{"comment":"","exp":"","file":"d3d12.h","line":3215,"type":"Struct","value":"typedef struct D3D12_TEX2DMS_RTV\\r\\n    {\\r\\n    UINT UnusedField_NothingToDefine;\\r\\n    } \\tD3D12_TEX2DMS_RTV;"},"D3D12_TEX2DMS_SRV":{"comment":"","exp":"","file":"d3d12.h","line":2927,"type":"Struct","value":"typedef struct D3D12_TEX2DMS_SRV\\r\\n    {\\r\\n    UINT UnusedField_NothingToDefine;\\r\\n    } \\tD3D12_TEX2DMS_SRV;"},"D3D12_TEX2D_ARRAY_DSV":{"comment":"","exp":"","file":"d3d12.h","line":3289,"type":"Struct","value":"typedef struct D3D12_TEX2D_ARRAY_DSV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    UINT FirstArraySlice;\\r\\n    UINT ArraySize;\\r\\n    } \\tD3D12_TEX2D_ARRAY_DSV;"},"D3D12_TEX2D_ARRAY_RTV":{"comment":"","exp":"","file":"d3d12.h","line":3220,"type":"Struct","value":"typedef struct D3D12_TEX2D_ARRAY_RTV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    UINT FirstArraySlice;\\r\\n    UINT ArraySize;\\r\\n    UINT PlaneSlice;\\r\\n    } \\tD3D12_TEX2D_ARRAY_RTV;"},"D3D12_TEX2D_ARRAY_SRV":{"comment":"","exp":"","file":"d3d12.h","line":2894,"type":"Struct","value":"typedef struct D3D12_TEX2D_ARRAY_SRV\\r\\n    {\\r\\n    UINT MostDetailedMip;\\r\\n    UINT MipLevels;\\r\\n    UINT FirstArraySlice;\\r\\n    UINT ArraySize;\\r\\n    UINT PlaneSlice;\\r\\n    FLOAT ResourceMinLODClamp;\\r\\n    } \\tD3D12_TEX2D_ARRAY_SRV;"},"D3D12_TEX2D_ARRAY_UAV":{"comment":"","exp":"","file":"d3d12.h","line":3149,"type":"Struct","value":"typedef struct D3D12_TEX2D_ARRAY_UAV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    UINT FirstArraySlice;\\r\\n    UINT ArraySize;\\r\\n    UINT PlaneSlice;\\r\\n    } \\tD3D12_TEX2D_ARRAY_UAV;"},"D3D12_TEX2D_DSV":{"comment":"","exp":"","file":"d3d12.h","line":3284,"type":"Struct","value":"typedef struct D3D12_TEX2D_DSV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    } \\tD3D12_TEX2D_DSV;"},"D3D12_TEX2D_RTV":{"comment":"","exp":"","file":"d3d12.h","line":3209,"type":"Struct","value":"typedef struct D3D12_TEX2D_RTV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    UINT PlaneSlice;\\r\\n    } \\tD3D12_TEX2D_RTV;"},"D3D12_TEX2D_SRV":{"comment":"","exp":"","file":"d3d12.h","line":2886,"type":"Struct","value":"typedef struct D3D12_TEX2D_SRV\\r\\n    {\\r\\n    UINT MostDetailedMip;\\r\\n    UINT MipLevels;\\r\\n    UINT PlaneSlice;\\r\\n    FLOAT ResourceMinLODClamp;\\r\\n    } \\tD3D12_TEX2D_SRV;"},"D3D12_TEX2D_UAV":{"comment":"","exp":"","file":"d3d12.h","line":3143,"type":"Struct","value":"typedef struct D3D12_TEX2D_UAV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    UINT PlaneSlice;\\r\\n    } \\tD3D12_TEX2D_UAV;"},"D3D12_TEX3D_RTV":{"comment":"","exp":"","file":"d3d12.h","line":3234,"type":"Struct","value":"typedef struct D3D12_TEX3D_RTV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    UINT FirstWSlice;\\r\\n    UINT WSize;\\r\\n    } \\tD3D12_TEX3D_RTV;"},"D3D12_TEX3D_SRV":{"comment":"","exp":"","file":"d3d12.h","line":2904,"type":"Struct","value":"typedef struct D3D12_TEX3D_SRV\\r\\n    {\\r\\n    UINT MostDetailedMip;\\r\\n    UINT MipLevels;\\r\\n    FLOAT ResourceMinLODClamp;\\r\\n    } \\tD3D12_TEX3D_SRV;"},"D3D12_TEX3D_UAV":{"comment":"","exp":"","file":"d3d12.h","line":3157,"type":"Struct","value":"typedef struct D3D12_TEX3D_UAV\\r\\n    {\\r\\n    UINT MipSlice;\\r\\n    UINT FirstWSlice;\\r\\n    UINT WSize;\\r\\n    } \\tD3D12_TEX3D_UAV;"},"D3D12_TEXCUBE_ARRAY_SRV":{"comment":"","exp":"","file":"d3d12.h","line":2918,"type":"Struct","value":"typedef struct D3D12_TEXCUBE_ARRAY_SRV\\r\\n    {\\r\\n    UINT MostDetailedMip;\\r\\n    UINT MipLevels;\\r\\n    UINT First2DArrayFace;\\r\\n    UINT NumCubes;\\r\\n    FLOAT ResourceMinLODClamp;\\r\\n    } \\tD3D12_TEXCUBE_ARRAY_SRV;"},"D3D12_TEXCUBE_SRV":{"comment":"","exp":"","file":"d3d12.h","line":2911,"type":"Struct","value":"typedef struct D3D12_TEXCUBE_SRV\\r\\n    {\\r\\n    UINT MostDetailedMip;\\r\\n    UINT MipLevels;\\r\\n    FLOAT ResourceMinLODClamp;\\r\\n    } \\tD3D12_TEXCUBE_SRV;"},"D3D12_TEXEL_ADDRESS_RANGE_BIT_COUNT":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":1163,"type":"Integer","value":16},"D3D12_TEXTURE_ADDRESS_MODE":{"comment":"","exp":"","file":"d3d12.h","line":3090,"type":"Enum","value":"typedef\\r\\nenum D3D12_TEXTURE_ADDRESS_MODE\\r\\n    {\\r\\n        D3D12_TEXTURE_ADDRESS_MODE_WRAP\\t= 1,\\r\\n        D3D12_TEXTURE_ADDRESS_MODE_MIRROR\\t= 2,\\r\\n        D3D12_TEXTURE_ADDRESS_MODE_CLAMP\\t= 3,\\r\\n        D3D12_TEXTURE_ADDRESS_MODE_BORDER\\t= 4,\\r\\n        D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE\\t= 5\\r\\n    } \\tD3D12_TEXTURE_ADDRESS_MODE;"},"D3D12_TEXTURE_COPY_LOCATION":{"comment":"","exp":"","file":"d3d12.h","line":2784,"type":"Struct","value":"typedef struct D3D12_TEXTURE_COPY_LOCATION\\r\\n    {\\r\\n    ID3D12Resource *pResource;\\r\\n    D3D12_TEXTURE_COPY_TYPE Type;\\r\\n    union \\r\\n        {\\r\\n        D3D12_PLACED_SUBRESOURCE_FOOTPRINT PlacedFootprint;\\r\\n        UINT SubresourceIndex;\\r\\n        } \\t;\\r\\n    } \\tD3D12_TEXTURE_COPY_LOCATION;"},"D3D12_TEXTURE_COPY_TYPE":{"comment":"","exp":"","file":"d3d12.h","line":2777,"type":"Enum","value":"typedef\\r\\nenum D3D12_TEXTURE_COPY_TYPE\\r\\n    {\\r\\n        D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX\\t= 0,\\r\\n        D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT\\t= 1\\r\\n    } \\tD3D12_TEXTURE_COPY_TYPE;"},"D3D12_TEXTURE_DATA_PITCH_ALIGNMENT":{"comment":"","exp":"( 256 )","file":"d3d12.h","line":1165,"type":"Integer","value":256},"D3D12_TEXTURE_DATA_PLACEMENT_ALIGNMENT":{"comment":"","exp":"( 512 )","file":"d3d12.h","line":1167,"type":"Integer","value":512},"D3D12_TEXTURE_LAYOUT":{"comment":"","exp":"","file":"d3d12.h","line":2514,"type":"Enum","value":"typedef\\r\\nenum D3D12_TEXTURE_LAYOUT\\r\\n    {\\r\\n        D3D12_TEXTURE_LAYOUT_UNKNOWN\\t= 0,\\r\\n        D3D12_TEXTURE_LAYOUT_ROW_MAJOR\\t= 1,\\r\\n        D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE\\t= 2,\\r\\n        D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE\\t= 3\\r\\n    } \\tD3D12_TEXTURE_LAYOUT;"},"D3D12_TILED_RESOURCES_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2029,"type":"Enum","value":"typedef\\r\\nenum D3D12_TILED_RESOURCES_TIER\\r\\n    {\\r\\n        D3D12_TILED_RESOURCES_TIER_NOT_SUPPORTED\\t= 0,\\r\\n        D3D12_TILED_RESOURCES_TIER_1\\t= 1,\\r\\n        D3D12_TILED_RESOURCES_TIER_2\\t= 2,\\r\\n        D3D12_TILED_RESOURCES_TIER_3\\t= 3,\\r\\n        D3D12_TILED_RESOURCES_TIER_4\\t= 4\\r\\n    } \\tD3D12_TILED_RESOURCES_TIER;"},"D3D12_TILED_RESOURCE_COORDINATE":{"comment":"","exp":"","file":"d3d12.h","line":2614,"type":"Struct","value":"typedef struct D3D12_TILED_RESOURCE_COORDINATE\\r\\n    {\\r\\n    UINT X;\\r\\n    UINT Y;\\r\\n    UINT Z;\\r\\n    UINT Subresource;\\r\\n    } \\tD3D12_TILED_RESOURCE_COORDINATE;"},"D3D12_TILED_RESOURCE_TILE_SIZE_IN_BYTES":{"comment":"","exp":"( 65536 )","file":"d3d12.h","line":1169,"type":"Integer","value":65536},"D3D12_TILE_COPY_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":2671,"type":"Enum","value":"typedef\\r\\nenum D3D12_TILE_COPY_FLAGS\\r\\n    {\\r\\n        D3D12_TILE_COPY_FLAG_NONE\\t= 0,\\r\\n        D3D12_TILE_COPY_FLAG_NO_HAZARD\\t= 0x1,\\r\\n        D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE\\t= 0x2,\\r\\n        D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER\\t= 0x4\\r\\n    } \\tD3D12_TILE_COPY_FLAGS;"},"D3D12_TILE_MAPPING_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":2663,"type":"Enum","value":"typedef\\r\\nenum D3D12_TILE_MAPPING_FLAGS\\r\\n    {\\r\\n        D3D12_TILE_MAPPING_FLAG_NONE\\t= 0,\\r\\n        D3D12_TILE_MAPPING_FLAG_NO_HAZARD\\t= 0x1\\r\\n    } \\tD3D12_TILE_MAPPING_FLAGS;"},"D3D12_TILE_RANGE_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":2631,"type":"Enum","value":"typedef\\r\\nenum D3D12_TILE_RANGE_FLAGS\\r\\n    {\\r\\n        D3D12_TILE_RANGE_FLAG_NONE\\t= 0,\\r\\n        D3D12_TILE_RANGE_FLAG_NULL\\t= 1,\\r\\n        D3D12_TILE_RANGE_FLAG_SKIP\\t= 2,\\r\\n        D3D12_TILE_RANGE_FLAG_REUSE_SINGLE_TILE\\t= 4\\r\\n    } \\tD3D12_TILE_RANGE_FLAGS;"},"D3D12_TILE_REGION_SIZE":{"comment":"","exp":"","file":"d3d12.h","line":2622,"type":"Struct","value":"typedef struct D3D12_TILE_REGION_SIZE\\r\\n    {\\r\\n    UINT NumTiles;\\r\\n    BOOL UseBox;\\r\\n    UINT Width;\\r\\n    UINT16 Height;\\r\\n    UINT16 Depth;\\r\\n    } \\tD3D12_TILE_REGION_SIZE;"},"D3D12_TILE_SHAPE":{"comment":"","exp":"","file":"d3d12.h","line":2648,"type":"Struct","value":"typedef struct D3D12_TILE_SHAPE\\r\\n    {\\r\\n    UINT WidthInTexels;\\r\\n    UINT HeightInTexels;\\r\\n    UINT DepthInTexels;\\r\\n    } \\tD3D12_TILE_SHAPE;"},"D3D12_TRACKED_WORKLOAD_MAX_INSTANCES":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1171,"type":"Integer","value":32},"D3D12_UAV_COUNTER_PLACEMENT_ALIGNMENT":{"comment":"","exp":"( 4096 )","file":"d3d12.h","line":1173,"type":"Integer","value":4096},"D3D12_UAV_DIMENSION":{"comment":"","exp":"","file":"d3d12.h","line":3164,"type":"Enum","value":"typedef\\r\\nenum D3D12_UAV_DIMENSION\\r\\n    {\\r\\n        D3D12_UAV_DIMENSION_UNKNOWN\\t= 0,\\r\\n        D3D12_UAV_DIMENSION_BUFFER\\t= 1,\\r\\n        D3D12_UAV_DIMENSION_TEXTURE1D\\t= 2,\\r\\n        D3D12_UAV_DIMENSION_TEXTURE1DARRAY\\t= 3,\\r\\n        D3D12_UAV_DIMENSION_TEXTURE2D\\t= 4,\\r\\n        D3D12_UAV_DIMENSION_TEXTURE2DARRAY\\t= 5,\\r\\n        D3D12_UAV_DIMENSION_TEXTURE3D\\t= 8\\r\\n    } \\tD3D12_UAV_DIMENSION;"},"D3D12_UAV_SLOT_COUNT":{"comment":"","exp":"( 64 )","file":"d3d12.h","line":1175,"type":"Integer","value":64},"D3D12_UNBOUND_MEMORY_ACCESS_RESULT":{"comment":"","exp":"( 0 )","file":"d3d12.h","line":1177,"type":"Integer","value":0},"D3D12_UNORDERED_ACCESS_VIEW_DESC":{"comment":"","exp":"","file":"d3d12.h","line":3176,"type":"Struct","value":"typedef struct D3D12_UNORDERED_ACCESS_VIEW_DESC\\r\\n    {\\r\\n    DXGI_FORMAT Format;\\r\\n    D3D12_UAV_DIMENSION ViewDimension;\\r\\n    union \\r\\n        {\\r\\n        D3D12_BUFFER_UAV Buffer;\\r\\n        D3D12_TEX1D_UAV Texture1D;\\r\\n        D3D12_TEX1D_ARRAY_UAV Texture1DArray;\\r\\n        D3D12_TEX2D_UAV Texture2D;\\r\\n        D3D12_TEX2D_ARRAY_UAV Texture2DArray;\\r\\n        D3D12_TEX3D_UAV Texture3D;\\r\\n        } \\t;\\r\\n    } \\tD3D12_UNORDERED_ACCESS_VIEW_DESC;"},"D3D12_VARIABLE_SHADING_RATE_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2378,"type":"Enum","value":"typedef\\r\\nenum D3D12_VARIABLE_SHADING_RATE_TIER\\r\\n    {\\r\\n        D3D12_VARIABLE_SHADING_RATE_TIER_NOT_SUPPORTED\\t= 0,\\r\\n        D3D12_VARIABLE_SHADING_RATE_TIER_1\\t= 1,\\r\\n        D3D12_VARIABLE_SHADING_RATE_TIER_2\\t= 2\\r\\n    } \\tD3D12_VARIABLE_SHADING_RATE_TIER;"},"D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA":{"comment":"","exp":"","file":"d3d12.h","line":13456,"type":"Struct","value":"typedef struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA\\r\\n    {\\r\\n    D3D12_DRED_VERSION Version;\\r\\n    union \\r\\n        {\\r\\n        D3D12_DEVICE_REMOVED_EXTENDED_DATA Dred_1_0;\\r\\n        D3D12_DEVICE_REMOVED_EXTENDED_DATA1 Dred_1_1;\\r\\n        D3D12_DEVICE_REMOVED_EXTENDED_DATA2 Dred_1_2;\\r\\n        } \\t;\\r\\n    } \\tD3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA;"},"D3D12_VERSIONED_ROOT_SIGNATURE_DESC":{"comment":"","exp":"","file":"d3d12.h","line":3577,"type":"Struct","value":"typedef struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC\\r\\n    {\\r\\n    D3D_ROOT_SIGNATURE_VERSION Version;\\r\\n    union \\r\\n        {\\r\\n        D3D12_ROOT_SIGNATURE_DESC Desc_1_0;\\r\\n        D3D12_ROOT_SIGNATURE_DESC1 Desc_1_1;\\r\\n        } \\t;\\r\\n    } \\tD3D12_VERSIONED_ROOT_SIGNATURE_DESC;"},"D3D12_VERTEX_BUFFER_VIEW":{"comment":"","exp":"","file":"d3d12.h","line":3918,"type":"Struct","value":"typedef struct D3D12_VERTEX_BUFFER_VIEW\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS BufferLocation;\\r\\n    UINT SizeInBytes;\\r\\n    UINT StrideInBytes;\\r\\n    } \\tD3D12_VERTEX_BUFFER_VIEW;"},"D3D12_VIDEO_DECODE_MAX_ARGUMENTS":{"comment":"","exp":"( 10 )","file":"d3d12.h","line":1179,"type":"Integer","value":10},"D3D12_VIDEO_DECODE_MAX_HISTOGRAM_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":1181,"type":"Integer","value":4},"D3D12_VIDEO_DECODE_MIN_BITSTREAM_OFFSET_ALIGNMENT":{"comment":"","exp":"( 256 )","file":"d3d12.h","line":1183,"type":"Integer","value":256},"D3D12_VIDEO_DECODE_MIN_HISTOGRAM_OFFSET_ALIGNMENT":{"comment":"","exp":"( 256 )","file":"d3d12.h","line":1185,"type":"Integer","value":256},"D3D12_VIDEO_DECODE_STATUS_MACROBLOCKS_AFFECTED_UNKNOWN":{"comment":"","exp":"( 0xffffffff )","file":"d3d12.h","line":1187,"type":"Integer","value":4294967295},"D3D12_VIDEO_PROCESS_MAX_FILTERS":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1189,"type":"Integer","value":32},"D3D12_VIDEO_PROCESS_STEREO_VIEWS":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":1191,"type":"Integer","value":2},"D3D12_VIEWPORT":{"comment":"","exp":"","file":"d3d12.h","line":1320,"type":"Struct","value":"typedef struct D3D12_VIEWPORT\\r\\n    {\\r\\n    FLOAT TopLeftX;\\r\\n    FLOAT TopLeftY;\\r\\n    FLOAT Width;\\r\\n    FLOAT Height;\\r\\n    FLOAT MinDepth;\\r\\n    FLOAT MaxDepth;\\r\\n    } \\tD3D12_VIEWPORT;"},"D3D12_VIEWPORT_AND_SCISSORRECT_MAX_INDEX":{"comment":"","exp":"( 15 )","file":"d3d12.h","line":1193,"type":"Integer","value":15},"D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE":{"comment":"","exp":"( 16 )","file":"d3d12.h","line":1195,"type":"Integer","value":16},"D3D12_VIEWPORT_BOUNDS_MAX":{"comment":"","exp":"( 32767 )","file":"d3d12.h","line":1197,"type":"Integer","value":32767},"D3D12_VIEWPORT_BOUNDS_MIN":{"comment":"","exp":"( -32768 )","file":"d3d12.h","line":1199,"type":"Integer","value":-32768},"D3D12_VIEW_INSTANCE_LOCATION":{"comment":"","exp":"","file":"d3d12.h","line":2812,"type":"Struct","value":"typedef struct D3D12_VIEW_INSTANCE_LOCATION\\r\\n    {\\r\\n    UINT ViewportArrayIndex;\\r\\n    UINT RenderTargetArrayIndex;\\r\\n    } \\tD3D12_VIEW_INSTANCE_LOCATION;"},"D3D12_VIEW_INSTANCING_DESC":{"comment":"","exp":"","file":"d3d12.h","line":2826,"type":"Struct","value":"typedef struct D3D12_VIEW_INSTANCING_DESC\\r\\n    {\\r\\n    UINT ViewInstanceCount;\\r\\n    _Field_size_full_(ViewInstanceCount)  const D3D12_VIEW_INSTANCE_LOCATION *pViewInstanceLocations;\\r\\n    D3D12_VIEW_INSTANCING_FLAGS Flags;\\r\\n    } \\tD3D12_VIEW_INSTANCING_DESC;"},"D3D12_VIEW_INSTANCING_FLAGS":{"comment":"","exp":"","file":"d3d12.h","line":2818,"type":"Enum","value":"typedef\\r\\nenum D3D12_VIEW_INSTANCING_FLAGS\\r\\n    {\\r\\n        D3D12_VIEW_INSTANCING_FLAG_NONE\\t= 0,\\r\\n        D3D12_VIEW_INSTANCING_FLAG_ENABLE_VIEW_INSTANCE_MASKING\\t= 0x1\\r\\n    } \\tD3D12_VIEW_INSTANCING_FLAGS;"},"D3D12_VIEW_INSTANCING_TIER":{"comment":"","exp":"","file":"d3d12.h","line":2144,"type":"Enum","value":"typedef\\r\\nenum D3D12_VIEW_INSTANCING_TIER\\r\\n    {\\r\\n        D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED\\t= 0,\\r\\n        D3D12_VIEW_INSTANCING_TIER_1\\t= 1,\\r\\n        D3D12_VIEW_INSTANCING_TIER_2\\t= 2,\\r\\n        D3D12_VIEW_INSTANCING_TIER_3\\t= 3\\r\\n    } \\tD3D12_VIEW_INSTANCING_TIER;"},"D3D12_VS_INPUT_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":1201,"type":"Integer","value":4},"D3D12_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1203,"type":"Integer","value":32},"D3D12_VS_INPUT_REGISTER_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1205,"type":"Integer","value":32},"D3D12_VS_INPUT_REGISTER_READS_PER_INST":{"comment":"","exp":"( 2 )","file":"d3d12.h","line":1207,"type":"Integer","value":2},"D3D12_VS_INPUT_REGISTER_READ_PORTS":{"comment":"","exp":"( 1 )","file":"d3d12.h","line":1209,"type":"Integer","value":1},"D3D12_VS_OUTPUT_REGISTER_COMPONENTS":{"comment":"","exp":"( 4 )","file":"d3d12.h","line":1211,"type":"Integer","value":4},"D3D12_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1213,"type":"Integer","value":32},"D3D12_VS_OUTPUT_REGISTER_COUNT":{"comment":"","exp":"( 32 )","file":"d3d12.h","line":1215,"type":"Integer","value":32},"D3D12_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT":{"comment":"","exp":"( 10 )","file":"d3d12.h","line":1217,"type":"Integer","value":10},"D3D12_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP":{"comment":"","exp":"( 25 )","file":"d3d12.h","line":1219,"type":"Integer","value":25},"D3D12_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP":{"comment":"","exp":"( 25 )","file":"d3d12.h","line":1221,"type":"Integer","value":25},"D3D12_WRITEBUFFERIMMEDIATE_MODE":{"comment":"","exp":"","file":"d3d12.h","line":6967,"type":"Enum","value":"typedef\\r\\nenum D3D12_WRITEBUFFERIMMEDIATE_MODE\\r\\n    {\\r\\n        D3D12_WRITEBUFFERIMMEDIATE_MODE_DEFAULT\\t= 0,\\r\\n        D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_IN\\t= 0x1,\\r\\n        D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_OUT\\t= 0x2\\r\\n    } \\tD3D12_WRITEBUFFERIMMEDIATE_MODE;"},"D3D12_WRITEBUFFERIMMEDIATE_PARAMETER":{"comment":"","exp":"","file":"d3d12.h","line":6961,"type":"Struct","value":"typedef struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER\\r\\n    {\\r\\n    D3D12_GPU_VIRTUAL_ADDRESS Dest;\\r\\n    UINT32 Value;\\r\\n    } \\tD3D12_WRITEBUFFERIMMEDIATE_PARAMETER;"},"D3D_RETURN_PARAMETER_INDEX":{"comment":"","exp":"(-1)","file":"d3d12shader.h","line":37,"type":"Integer","value":-1},"D3D_ROOT_SIGNATURE_VERSION":{"comment":"","exp":"","file":"d3d12.h","line":2188,"type":"Enum","value":"typedef\\r\\nenum D3D_ROOT_SIGNATURE_VERSION\\r\\n    {\\r\\n        D3D_ROOT_SIGNATURE_VERSION_1\\t= 0x1,\\r\\n        D3D_ROOT_SIGNATURE_VERSION_1_0\\t= 0x1,\\r\\n        D3D_ROOT_SIGNATURE_VERSION_1_1\\t= 0x2\\r\\n    } \\tD3D_ROOT_SIGNATURE_VERSION;"},"D3D_SHADER_MODEL":{"comment":"","exp":"","file":"d3d12.h","line":2225,"type":"Enum","value":"typedef\\r\\nenum D3D_SHADER_MODEL\\r\\n    {\\r\\n        D3D_SHADER_MODEL_5_1\\t= 0x51,\\r\\n        D3D_SHADER_MODEL_6_0\\t= 0x60,\\r\\n        D3D_SHADER_MODEL_6_1\\t= 0x61,\\r\\n        D3D_SHADER_MODEL_6_2\\t= 0x62,\\r\\n        D3D_SHADER_MODEL_6_3\\t= 0x63,\\r\\n        D3D_SHADER_MODEL_6_4\\t= 0x64,\\r\\n        D3D_SHADER_MODEL_6_5\\t= 0x65,\\r\\n        D3D_SHADER_MODEL_6_6\\t= 0x66\\r\\n    } \\tD3D_SHADER_MODEL;"},"D3D_SHADER_REQUIRES_11_1_DOUBLE_EXTENSIONS":{"comment":"","exp":"0x00000020","file":"d3d12shader.h","line":166,"type":"Integer","value":32},"D3D_SHADER_REQUIRES_11_1_SHADER_EXTENSIONS":{"comment":"","exp":"0x00000040","file":"d3d12shader.h","line":167,"type":"Integer","value":64},"D3D_SHADER_REQUIRES_64_UAVS":{"comment":"","exp":"0x00000008","file":"d3d12shader.h","line":164,"type":"Integer","value":8},"D3D_SHADER_REQUIRES_DOUBLES":{"comment":"","exp":"0x00000001","file":"d3d12shader.h","line":161,"type":"Integer","value":1},"D3D_SHADER_REQUIRES_EARLY_DEPTH_STENCIL":{"comment":"","exp":"0x00000002","file":"d3d12shader.h","line":162,"type":"Integer","value":2},"D3D_SHADER_REQUIRES_INNER_COVERAGE":{"comment":"","exp":"0x00000400","file":"d3d12shader.h","line":171,"type":"Integer","value":1024},"D3D_SHADER_REQUIRES_LEVEL_9_COMPARISON_FILTERING":{"comment":"","exp":"0x00000080","file":"d3d12shader.h","line":168,"type":"Integer","value":128},"D3D_SHADER_REQUIRES_MINIMUM_PRECISION":{"comment":"","exp":"0x00000010","file":"d3d12shader.h","line":165,"type":"Integer","value":16},"D3D_SHADER_REQUIRES_ROVS":{"comment":"","exp":"0x00001000","file":"d3d12shader.h","line":173,"type":"Integer","value":4096},"D3D_SHADER_REQUIRES_STENCIL_REF":{"comment":"","exp":"0x00000200","file":"d3d12shader.h","line":170,"type":"Integer","value":512},"D3D_SHADER_REQUIRES_TILED_RESOURCES":{"comment":"","exp":"0x00000100","file":"d3d12shader.h","line":169,"type":"Integer","value":256},"D3D_SHADER_REQUIRES_TYPED_UAV_LOAD_ADDITIONAL_FORMATS":{"comment":"","exp":"0x00000800","file":"d3d12shader.h","line":172,"type":"Integer","value":2048},"D3D_SHADER_REQUIRES_UAVS_AT_EVERY_STAGE":{"comment":"","exp":"0x00000004","file":"d3d12shader.h","line":163,"type":"Integer","value":4},"D3D_SHADER_REQUIRES_VIEWPORT_AND_RT_ARRAY_INDEX_FROM_ANY_SHADER_FEEDING_RASTERIZER":{"comment":"","exp":"0x00002000","file":"d3d12shader.h","line":174,"type":"Integer","value":8192},"ID3D11On12Device1Vtbl":{"comment":"","exp":"","file":"d3d11on12.h","line":300,"type":"Struct","value":"typedef struct ID3D11On12Device1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D11On12Device1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D11On12Device1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D11On12Device1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateWrappedResource )( \\r\\n            ID3D11On12Device1 * This,\\r\\n            _In_  IUnknown *pResource12,\\r\\n            _In_  const D3D11_RESOURCE_FLAGS *pFlags11,\\r\\n            D3D12_RESOURCE_STATES InState,\\r\\n            D3D12_RESOURCE_STATES OutState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppResource11);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseWrappedResources )( \\r\\n            ID3D11On12Device1 * This,\\r\\n            _In_reads_( NumResources )  ID3D11Resource *const *ppResources,\\r\\n            UINT NumResources);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AcquireWrappedResources )( \\r\\n            ID3D11On12Device1 * This,\\r\\n            _In_reads_( NumResources )  ID3D11Resource *const *ppResources,\\r\\n            UINT NumResources);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetD3D12Device )( \\r\\n            ID3D11On12Device1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvDevice);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D11On12Device1Vtbl;"},"ID3D11On12Device2Vtbl":{"comment":"","exp":"","file":"d3d11on12.h","line":418,"type":"Struct","value":"typedef struct ID3D11On12Device2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D11On12Device2 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D11On12Device2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D11On12Device2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateWrappedResource )( \\r\\n            ID3D11On12Device2 * This,\\r\\n            _In_  IUnknown *pResource12,\\r\\n            _In_  const D3D11_RESOURCE_FLAGS *pFlags11,\\r\\n            D3D12_RESOURCE_STATES InState,\\r\\n            D3D12_RESOURCE_STATES OutState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppResource11);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseWrappedResources )( \\r\\n            ID3D11On12Device2 * This,\\r\\n            _In_reads_( NumResources )  ID3D11Resource *const *ppResources,\\r\\n            UINT NumResources);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AcquireWrappedResources )( \\r\\n            ID3D11On12Device2 * This,\\r\\n            _In_reads_( NumResources )  ID3D11Resource *const *ppResources,\\r\\n            UINT NumResources);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetD3D12Device )( \\r\\n            ID3D11On12Device2 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnwrapUnderlyingResource )( \\r\\n            ID3D11On12Device2 * This,\\r\\n            _In_  ID3D11Resource *pResource11,\\r\\n            _In_  ID3D12CommandQueue *pCommandQueue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvResource12);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReturnUnderlyingResource )( \\r\\n            ID3D11On12Device2 * This,\\r\\n            _In_  ID3D11Resource *pResource11,\\r\\n            UINT NumSync,\\r\\n            _In_reads_(NumSync)   UINT64 *pSignalValues,\\r\\n            _In_reads_(NumSync)   ID3D12Fence **ppFences);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D11On12Device2Vtbl;"},"ID3D11On12DeviceVtbl":{"comment":"","exp":"","file":"d3d11on12.h","line":199,"type":"Struct","value":"typedef struct ID3D11On12DeviceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D11On12Device * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D11On12Device * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D11On12Device * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateWrappedResource )( \\r\\n            ID3D11On12Device * This,\\r\\n            _In_  IUnknown *pResource12,\\r\\n            _In_  const D3D11_RESOURCE_FLAGS *pFlags11,\\r\\n            D3D12_RESOURCE_STATES InState,\\r\\n            D3D12_RESOURCE_STATES OutState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppResource11);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseWrappedResources )( \\r\\n            ID3D11On12Device * This,\\r\\n            _In_reads_( NumResources )  ID3D11Resource *const *ppResources,\\r\\n            UINT NumResources);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AcquireWrappedResources )( \\r\\n            ID3D11On12Device * This,\\r\\n            _In_reads_( NumResources )  ID3D11Resource *const *ppResources,\\r\\n            UINT NumResources);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D11On12DeviceVtbl;"},"ID3D12CommandAllocatorVtbl":{"comment":"","exp":"","file":"d3d12.h","line":4458,"type":"Struct","value":"typedef struct ID3D12CommandAllocatorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12CommandAllocator * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12CommandAllocator * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12CommandAllocator * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12CommandAllocator * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12CommandAllocator * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12CommandAllocator * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12CommandAllocator * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12CommandAllocator * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ID3D12CommandAllocator * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12CommandAllocatorVtbl;"},"ID3D12CommandListVtbl":{"comment":"","exp":"","file":"d3d12.h","line":5363,"type":"Struct","value":"typedef struct ID3D12CommandListVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12CommandList * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12CommandList * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12CommandList * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12CommandList * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12CommandList * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12CommandList * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12CommandList * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12CommandList * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        D3D12_COMMAND_LIST_TYPE ( STDMETHODCALLTYPE *GetType )( \\r\\n            ID3D12CommandList * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12CommandListVtbl;"},"ID3D12CommandQueueVtbl":{"comment":"","exp":"","file":"d3d12.h","line":7705,"type":"Struct","value":"typedef struct ID3D12CommandQueueVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12CommandQueue * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12CommandQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *UpdateTileMappings )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            UINT NumResourceRegions,\\r\\n            _In_reads_opt_(NumResourceRegions)  const D3D12_TILED_RESOURCE_COORDINATE *pResourceRegionStartCoordinates,\\r\\n            _In_reads_opt_(NumResourceRegions)  const D3D12_TILE_REGION_SIZE *pResourceRegionSizes,\\r\\n            _In_opt_  ID3D12Heap *pHeap,\\r\\n            UINT NumRanges,\\r\\n            _In_reads_opt_(NumRanges)  const D3D12_TILE_RANGE_FLAGS *pRangeFlags,\\r\\n            _In_reads_opt_(NumRanges)  const UINT *pHeapRangeStartOffsets,\\r\\n            _In_reads_opt_(NumRanges)  const UINT *pRangeTileCounts,\\r\\n            D3D12_TILE_MAPPING_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTileMappings )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  const D3D12_TILED_RESOURCE_COORDINATE *pDstRegionStartCoordinate,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  const D3D12_TILED_RESOURCE_COORDINATE *pSrcRegionStartCoordinate,\\r\\n            _In_  const D3D12_TILE_REGION_SIZE *pRegionSize,\\r\\n            D3D12_TILE_MAPPING_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteCommandLists )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            _In_  UINT NumCommandLists,\\r\\n            _In_reads_(NumCommandLists)  ID3D12CommandList *const *ppCommandLists);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetMarker )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginEvent )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndEvent )( \\r\\n            ID3D12CommandQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Signal )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            ID3D12Fence *pFence,\\r\\n            UINT64 Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Wait )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            ID3D12Fence *pFence,\\r\\n            UINT64 Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTimestampFrequency )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            _Out_  UINT64 *pFrequency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetClockCalibration )( \\r\\n            ID3D12CommandQueue * This,\\r\\n            _Out_  UINT64 *pGpuTimestamp,\\r\\n            _Out_  UINT64 *pCpuTimestamp);\\r\\n        \\r\\n        D3D12_COMMAND_QUEUE_DESC ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            ID3D12CommandQueue * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12CommandQueueVtbl;"},"ID3D12CommandSignatureVtbl":{"comment":"","exp":"","file":"d3d12.h","line":5248,"type":"Struct","value":"typedef struct ID3D12CommandSignatureVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12CommandSignature * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12CommandSignature * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12CommandSignature * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12CommandSignature * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12CommandSignature * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12CommandSignature * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12CommandSignature * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12CommandSignature * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12CommandSignatureVtbl;"},"ID3D12Debug1Vtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":279,"type":"Struct","value":"typedef struct ID3D12Debug1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Debug1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Debug1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Debug1 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EnableDebugLayer )( \\r\\n            ID3D12Debug1 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetEnableGPUBasedValidation )( \\r\\n            ID3D12Debug1 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetEnableSynchronizedCommandQueueValidation )( \\r\\n            ID3D12Debug1 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Debug1Vtbl;"},"ID3D12Debug2Vtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":371,"type":"Struct","value":"typedef struct ID3D12Debug2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Debug2 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Debug2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Debug2 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGPUBasedValidationFlags )( \\r\\n            ID3D12Debug2 * This,\\r\\n            D3D12_GPU_BASED_VALIDATION_FLAGS Flags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Debug2Vtbl;"},"ID3D12Debug3Vtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":456,"type":"Struct","value":"typedef struct ID3D12Debug3Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Debug3 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Debug3 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Debug3 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EnableDebugLayer )( \\r\\n            ID3D12Debug3 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetEnableGPUBasedValidation )( \\r\\n            ID3D12Debug3 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetEnableSynchronizedCommandQueueValidation )( \\r\\n            ID3D12Debug3 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGPUBasedValidationFlags )( \\r\\n            ID3D12Debug3 * This,\\r\\n            D3D12_GPU_BASED_VALIDATION_FLAGS Flags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Debug3Vtbl;"},"ID3D12DebugCommandList1Vtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":1071,"type":"Struct","value":"typedef struct ID3D12DebugCommandList1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DebugCommandList1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DebugCommandList1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DebugCommandList1 * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *AssertResourceState )( \\r\\n            ID3D12DebugCommandList1 * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            UINT Subresource,\\r\\n            UINT State);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDebugParameter )( \\r\\n            ID3D12DebugCommandList1 * This,\\r\\n            D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type,\\r\\n            _In_reads_bytes_(DataSize)  const void *pData,\\r\\n            UINT DataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDebugParameter )( \\r\\n            ID3D12DebugCommandList1 * This,\\r\\n            D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type,\\r\\n            _Out_writes_bytes_(DataSize)  void *pData,\\r\\n            UINT DataSize);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DebugCommandList1Vtbl;"},"ID3D12DebugCommandList2Vtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":1278,"type":"Struct","value":"typedef struct ID3D12DebugCommandList2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DebugCommandList2 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DebugCommandList2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DebugCommandList2 * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *AssertResourceState )( \\r\\n            ID3D12DebugCommandList2 * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            UINT Subresource,\\r\\n            UINT State);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFeatureMask )( \\r\\n            ID3D12DebugCommandList2 * This,\\r\\n            D3D12_DEBUG_FEATURE Mask);\\r\\n        \\r\\n        D3D12_DEBUG_FEATURE ( STDMETHODCALLTYPE *GetFeatureMask )( \\r\\n            ID3D12DebugCommandList2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDebugParameter )( \\r\\n            ID3D12DebugCommandList2 * This,\\r\\n            D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type,\\r\\n            _In_reads_bytes_(DataSize)  const void *pData,\\r\\n            UINT DataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDebugParameter )( \\r\\n            ID3D12DebugCommandList2 * This,\\r\\n            D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type,\\r\\n            _Out_writes_bytes_(DataSize)  void *pData,\\r\\n            UINT DataSize);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DebugCommandList2Vtbl;"},"ID3D12DebugCommandListVtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":1177,"type":"Struct","value":"typedef struct ID3D12DebugCommandListVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DebugCommandList * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DebugCommandList * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DebugCommandList * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *AssertResourceState )( \\r\\n            ID3D12DebugCommandList * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            UINT Subresource,\\r\\n            UINT State);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFeatureMask )( \\r\\n            ID3D12DebugCommandList * This,\\r\\n            D3D12_DEBUG_FEATURE Mask);\\r\\n        \\r\\n        D3D12_DEBUG_FEATURE ( STDMETHODCALLTYPE *GetFeatureMask )( \\r\\n            ID3D12DebugCommandList * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DebugCommandListVtbl;"},"ID3D12DebugCommandQueueVtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":959,"type":"Struct","value":"typedef struct ID3D12DebugCommandQueueVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DebugCommandQueue * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DebugCommandQueue * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DebugCommandQueue * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *AssertResourceState )( \\r\\n            ID3D12DebugCommandQueue * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            UINT Subresource,\\r\\n            UINT State);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DebugCommandQueueVtbl;"},"ID3D12DebugDevice1Vtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":636,"type":"Struct","value":"typedef struct ID3D12DebugDevice1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DebugDevice1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DebugDevice1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DebugDevice1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDebugParameter )( \\r\\n            ID3D12DebugDevice1 * This,\\r\\n            D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type,\\r\\n            _In_reads_bytes_(DataSize)  const void *pData,\\r\\n            UINT DataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDebugParameter )( \\r\\n            ID3D12DebugDevice1 * This,\\r\\n            D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type,\\r\\n            _Out_writes_bytes_(DataSize)  void *pData,\\r\\n            UINT DataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReportLiveDeviceObjects )( \\r\\n            ID3D12DebugDevice1 * This,\\r\\n            D3D12_RLDO_FLAGS Flags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DebugDevice1Vtbl;"},"ID3D12DebugDevice2Vtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":837,"type":"Struct","value":"typedef struct ID3D12DebugDevice2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DebugDevice2 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DebugDevice2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DebugDevice2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFeatureMask )( \\r\\n            ID3D12DebugDevice2 * This,\\r\\n            D3D12_DEBUG_FEATURE Mask);\\r\\n        \\r\\n        D3D12_DEBUG_FEATURE ( STDMETHODCALLTYPE *GetFeatureMask )( \\r\\n            ID3D12DebugDevice2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReportLiveDeviceObjects )( \\r\\n            ID3D12DebugDevice2 * This,\\r\\n            D3D12_RLDO_FLAGS Flags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDebugParameter )( \\r\\n            ID3D12DebugDevice2 * This,\\r\\n            D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type,\\r\\n            _In_reads_bytes_(DataSize)  const void *pData,\\r\\n            UINT DataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDebugParameter )( \\r\\n            ID3D12DebugDevice2 * This,\\r\\n            D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type,\\r\\n            _Out_writes_bytes_(DataSize)  void *pData,\\r\\n            UINT DataSize);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DebugDevice2Vtbl;"},"ID3D12DebugDeviceVtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":738,"type":"Struct","value":"typedef struct ID3D12DebugDeviceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DebugDevice * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DebugDevice * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DebugDevice * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFeatureMask )( \\r\\n            ID3D12DebugDevice * This,\\r\\n            D3D12_DEBUG_FEATURE Mask);\\r\\n        \\r\\n        D3D12_DEBUG_FEATURE ( STDMETHODCALLTYPE *GetFeatureMask )( \\r\\n            ID3D12DebugDevice * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReportLiveDeviceObjects )( \\r\\n            ID3D12DebugDevice * This,\\r\\n            D3D12_RLDO_FLAGS Flags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DebugDeviceVtbl;"},"ID3D12DebugVtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":180,"type":"Struct","value":"typedef struct ID3D12DebugVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Debug * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Debug * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Debug * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EnableDebugLayer )( \\r\\n            ID3D12Debug * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DebugVtbl;"},"ID3D12DescriptorHeapVtbl":{"comment":"","exp":"","file":"d3d12.h","line":4992,"type":"Struct","value":"typedef struct ID3D12DescriptorHeapVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DescriptorHeap * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DescriptorHeap * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DescriptorHeap * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12DescriptorHeap * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12DescriptorHeap * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12DescriptorHeap * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12DescriptorHeap * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12DescriptorHeap * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        D3D12_DESCRIPTOR_HEAP_DESC ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            ID3D12DescriptorHeap * This);\\r\\n        \\r\\n        D3D12_CPU_DESCRIPTOR_HANDLE ( STDMETHODCALLTYPE *GetCPUDescriptorHandleForHeapStart )( \\r\\n            ID3D12DescriptorHeap * This);\\r\\n        \\r\\n        D3D12_GPU_DESCRIPTOR_HANDLE ( STDMETHODCALLTYPE *GetGPUDescriptorHandleForHeapStart )( \\r\\n            ID3D12DescriptorHeap * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DescriptorHeapVtbl;"},"ID3D12Device1Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":8999,"type":"Struct","value":"typedef struct ID3D12Device1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Device1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Device1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Device1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetNodeCount )( \\r\\n            ID3D12Device1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandQueue )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  const D3D12_COMMAND_QUEUE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandAllocator )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandAllocator);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateGraphicsPipelineState )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateComputePipelineState )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  const D3D12_COMPUTE_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  ID3D12CommandAllocator *pCommandAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            ID3D12Device1 * This,\\r\\n            D3D12_FEATURE Feature,\\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDescriptorHeap )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  const D3D12_DESCRIPTOR_HEAP_DESC *pDescriptorHeapDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetDescriptorHandleIncrementSize )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateRootSignature )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_reads_(blobLengthInBytes)  const void *pBlobWithRootSignature,\\r\\n            _In_  SIZE_T blobLengthInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateConstantBufferView )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_opt_  const D3D12_CONSTANT_BUFFER_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateShaderResourceView )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_SHADER_RESOURCE_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateUnorderedAccessView )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  ID3D12Resource *pCounterResource,\\r\\n            _In_opt_  const D3D12_UNORDERED_ACCESS_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateRenderTargetView )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_RENDER_TARGET_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateDepthStencilView )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DEPTH_STENCIL_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateSampler )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  const D3D12_SAMPLER_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptors )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  UINT NumDestDescriptorRanges,\\r\\n            _In_reads_(NumDestDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pDestDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumDestDescriptorRanges)  const UINT *pDestDescriptorRangeSizes,\\r\\n            _In_  UINT NumSrcDescriptorRanges,\\r\\n            _In_reads_(NumSrcDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pSrcDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumSrcDescriptorRanges)  const UINT *pSrcDescriptorRangeSizes,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptorsSimple )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  UINT NumDescriptors,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptorRangeStart,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE SrcDescriptorRangeStart,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  UINT visibleMask,\\r\\n            _In_  UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs);\\r\\n        \\r\\n        D3D12_HEAP_PROPERTIES ( STDMETHODCALLTYPE *GetCustomHeapProperties )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            D3D12_HEAP_TYPE heapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePlacedResource )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  ID3D12Heap *pHeap,\\r\\n            UINT64 HeapOffset,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSharedHandle )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  ID3D12DeviceChild *pObject,\\r\\n            _In_opt_  const SECURITY_ATTRIBUTES *pAttributes,\\r\\n            DWORD Access,\\r\\n            _In_opt_  LPCWSTR Name,\\r\\n            _Out_  HANDLE *pHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandle )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  HANDLE NTHandle,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvObj);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandleByName )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  LPCWSTR Name,\\r\\n            DWORD Access,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pNTHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeResident )( \\r\\n            ID3D12Device1 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Evict )( \\r\\n            ID3D12Device1 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateFence )( \\r\\n            ID3D12Device1 * This,\\r\\n            UINT64 InitialValue,\\r\\n            D3D12_FENCE_FLAGS Flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppFence);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceRemovedReason )( \\r\\n            ID3D12Device1 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetCopyableFootprints )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pResourceDesc,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES)  UINT FirstSubresource,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES-FirstSubresource)  UINT NumSubresources,\\r\\n            UINT64 BaseOffset,\\r\\n            _Out_writes_opt_(NumSubresources)  D3D12_PLACED_SUBRESOURCE_FOOTPRINT *pLayouts,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT *pNumRows,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT64 *pRowSizeInBytes,\\r\\n            _Out_opt_  UINT64 *pTotalBytes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateQueryHeap )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  const D3D12_QUERY_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStablePowerState )( \\r\\n            ID3D12Device1 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandSignature )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  const D3D12_COMMAND_SIGNATURE_DESC *pDesc,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvCommandSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetResourceTiling )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _Out_opt_  UINT *pNumTilesForEntireResource,\\r\\n            _Out_opt_  D3D12_PACKED_MIP_INFO *pPackedMipDesc,\\r\\n            _Out_opt_  D3D12_TILE_SHAPE *pStandardTileShapeForNonPackedMips,\\r\\n            _Inout_opt_  UINT *pNumSubresourceTilings,\\r\\n            _In_  UINT FirstSubresourceTilingToGet,\\r\\n            _Out_writes_(*pNumSubresourceTilings)  D3D12_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips);\\r\\n        \\r\\n        LUID ( STDMETHODCALLTYPE *GetAdapterLuid )( \\r\\n            ID3D12Device1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineLibrary )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_reads_(BlobLength)  const void *pLibraryBlob,\\r\\n            SIZE_T BlobLength,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineLibrary);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventOnMultipleFenceCompletion )( \\r\\n            ID3D12Device1 * This,\\r\\n            _In_reads_(NumFences)  ID3D12Fence *const *ppFences,\\r\\n            _In_reads_(NumFences)  const UINT64 *pFenceValues,\\r\\n            UINT NumFences,\\r\\n            D3D12_MULTIPLE_FENCE_WAIT_FLAGS Flags,\\r\\n            HANDLE hEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetResidencyPriority )( \\r\\n            ID3D12Device1 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_reads_(NumObjects)  const D3D12_RESIDENCY_PRIORITY *pPriorities);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Device1Vtbl;"},"ID3D12Device2Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":9488,"type":"Struct","value":"typedef struct ID3D12Device2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Device2 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Device2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Device2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetNodeCount )( \\r\\n            ID3D12Device2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandQueue )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  const D3D12_COMMAND_QUEUE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandAllocator )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandAllocator);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateGraphicsPipelineState )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateComputePipelineState )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  const D3D12_COMPUTE_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  ID3D12CommandAllocator *pCommandAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            ID3D12Device2 * This,\\r\\n            D3D12_FEATURE Feature,\\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDescriptorHeap )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  const D3D12_DESCRIPTOR_HEAP_DESC *pDescriptorHeapDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetDescriptorHandleIncrementSize )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateRootSignature )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_reads_(blobLengthInBytes)  const void *pBlobWithRootSignature,\\r\\n            _In_  SIZE_T blobLengthInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateConstantBufferView )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_opt_  const D3D12_CONSTANT_BUFFER_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateShaderResourceView )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_SHADER_RESOURCE_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateUnorderedAccessView )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  ID3D12Resource *pCounterResource,\\r\\n            _In_opt_  const D3D12_UNORDERED_ACCESS_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateRenderTargetView )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_RENDER_TARGET_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateDepthStencilView )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DEPTH_STENCIL_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateSampler )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  const D3D12_SAMPLER_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptors )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  UINT NumDestDescriptorRanges,\\r\\n            _In_reads_(NumDestDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pDestDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumDestDescriptorRanges)  const UINT *pDestDescriptorRangeSizes,\\r\\n            _In_  UINT NumSrcDescriptorRanges,\\r\\n            _In_reads_(NumSrcDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pSrcDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumSrcDescriptorRanges)  const UINT *pSrcDescriptorRangeSizes,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptorsSimple )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  UINT NumDescriptors,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptorRangeStart,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE SrcDescriptorRangeStart,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  UINT visibleMask,\\r\\n            _In_  UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs);\\r\\n        \\r\\n        D3D12_HEAP_PROPERTIES ( STDMETHODCALLTYPE *GetCustomHeapProperties )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            D3D12_HEAP_TYPE heapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePlacedResource )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  ID3D12Heap *pHeap,\\r\\n            UINT64 HeapOffset,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSharedHandle )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  ID3D12DeviceChild *pObject,\\r\\n            _In_opt_  const SECURITY_ATTRIBUTES *pAttributes,\\r\\n            DWORD Access,\\r\\n            _In_opt_  LPCWSTR Name,\\r\\n            _Out_  HANDLE *pHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandle )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  HANDLE NTHandle,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvObj);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandleByName )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  LPCWSTR Name,\\r\\n            DWORD Access,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pNTHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeResident )( \\r\\n            ID3D12Device2 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Evict )( \\r\\n            ID3D12Device2 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateFence )( \\r\\n            ID3D12Device2 * This,\\r\\n            UINT64 InitialValue,\\r\\n            D3D12_FENCE_FLAGS Flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppFence);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceRemovedReason )( \\r\\n            ID3D12Device2 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetCopyableFootprints )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pResourceDesc,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES)  UINT FirstSubresource,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES-FirstSubresource)  UINT NumSubresources,\\r\\n            UINT64 BaseOffset,\\r\\n            _Out_writes_opt_(NumSubresources)  D3D12_PLACED_SUBRESOURCE_FOOTPRINT *pLayouts,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT *pNumRows,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT64 *pRowSizeInBytes,\\r\\n            _Out_opt_  UINT64 *pTotalBytes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateQueryHeap )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  const D3D12_QUERY_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStablePowerState )( \\r\\n            ID3D12Device2 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandSignature )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  const D3D12_COMMAND_SIGNATURE_DESC *pDesc,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvCommandSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetResourceTiling )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _Out_opt_  UINT *pNumTilesForEntireResource,\\r\\n            _Out_opt_  D3D12_PACKED_MIP_INFO *pPackedMipDesc,\\r\\n            _Out_opt_  D3D12_TILE_SHAPE *pStandardTileShapeForNonPackedMips,\\r\\n            _Inout_opt_  UINT *pNumSubresourceTilings,\\r\\n            _In_  UINT FirstSubresourceTilingToGet,\\r\\n            _Out_writes_(*pNumSubresourceTilings)  D3D12_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips);\\r\\n        \\r\\n        LUID ( STDMETHODCALLTYPE *GetAdapterLuid )( \\r\\n            ID3D12Device2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineLibrary )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_reads_(BlobLength)  const void *pLibraryBlob,\\r\\n            SIZE_T BlobLength,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineLibrary);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventOnMultipleFenceCompletion )( \\r\\n            ID3D12Device2 * This,\\r\\n            _In_reads_(NumFences)  ID3D12Fence *const *ppFences,\\r\\n            _In_reads_(NumFences)  const UINT64 *pFenceValues,\\r\\n            UINT NumFences,\\r\\n            D3D12_MULTIPLE_FENCE_WAIT_FLAGS Flags,\\r\\n            HANDLE hEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetResidencyPriority )( \\r\\n            ID3D12Device2 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_reads_(NumObjects)  const D3D12_RESIDENCY_PRIORITY *pPriorities);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineState )( \\r\\n            ID3D12Device2 * This,\\r\\n            const D3D12_PIPELINE_STATE_STREAM_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Device2Vtbl;"},"ID3D12Device3Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":10015,"type":"Struct","value":"typedef struct ID3D12Device3Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Device3 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Device3 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Device3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetNodeCount )( \\r\\n            ID3D12Device3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandQueue )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const D3D12_COMMAND_QUEUE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandAllocator )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandAllocator);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateGraphicsPipelineState )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateComputePipelineState )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const D3D12_COMPUTE_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  ID3D12CommandAllocator *pCommandAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            ID3D12Device3 * This,\\r\\n            D3D12_FEATURE Feature,\\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDescriptorHeap )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const D3D12_DESCRIPTOR_HEAP_DESC *pDescriptorHeapDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetDescriptorHandleIncrementSize )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateRootSignature )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_reads_(blobLengthInBytes)  const void *pBlobWithRootSignature,\\r\\n            _In_  SIZE_T blobLengthInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateConstantBufferView )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_opt_  const D3D12_CONSTANT_BUFFER_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateShaderResourceView )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_SHADER_RESOURCE_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateUnorderedAccessView )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  ID3D12Resource *pCounterResource,\\r\\n            _In_opt_  const D3D12_UNORDERED_ACCESS_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateRenderTargetView )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_RENDER_TARGET_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateDepthStencilView )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DEPTH_STENCIL_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateSampler )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const D3D12_SAMPLER_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptors )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  UINT NumDestDescriptorRanges,\\r\\n            _In_reads_(NumDestDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pDestDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumDestDescriptorRanges)  const UINT *pDestDescriptorRangeSizes,\\r\\n            _In_  UINT NumSrcDescriptorRanges,\\r\\n            _In_reads_(NumSrcDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pSrcDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumSrcDescriptorRanges)  const UINT *pSrcDescriptorRangeSizes,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptorsSimple )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  UINT NumDescriptors,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptorRangeStart,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE SrcDescriptorRangeStart,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  UINT visibleMask,\\r\\n            _In_  UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs);\\r\\n        \\r\\n        D3D12_HEAP_PROPERTIES ( STDMETHODCALLTYPE *GetCustomHeapProperties )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            D3D12_HEAP_TYPE heapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePlacedResource )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  ID3D12Heap *pHeap,\\r\\n            UINT64 HeapOffset,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSharedHandle )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  ID3D12DeviceChild *pObject,\\r\\n            _In_opt_  const SECURITY_ATTRIBUTES *pAttributes,\\r\\n            DWORD Access,\\r\\n            _In_opt_  LPCWSTR Name,\\r\\n            _Out_  HANDLE *pHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandle )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  HANDLE NTHandle,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvObj);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandleByName )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  LPCWSTR Name,\\r\\n            DWORD Access,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pNTHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeResident )( \\r\\n            ID3D12Device3 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Evict )( \\r\\n            ID3D12Device3 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateFence )( \\r\\n            ID3D12Device3 * This,\\r\\n            UINT64 InitialValue,\\r\\n            D3D12_FENCE_FLAGS Flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppFence);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceRemovedReason )( \\r\\n            ID3D12Device3 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetCopyableFootprints )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pResourceDesc,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES)  UINT FirstSubresource,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES-FirstSubresource)  UINT NumSubresources,\\r\\n            UINT64 BaseOffset,\\r\\n            _Out_writes_opt_(NumSubresources)  D3D12_PLACED_SUBRESOURCE_FOOTPRINT *pLayouts,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT *pNumRows,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT64 *pRowSizeInBytes,\\r\\n            _Out_opt_  UINT64 *pTotalBytes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateQueryHeap )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const D3D12_QUERY_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStablePowerState )( \\r\\n            ID3D12Device3 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandSignature )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const D3D12_COMMAND_SIGNATURE_DESC *pDesc,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvCommandSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetResourceTiling )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _Out_opt_  UINT *pNumTilesForEntireResource,\\r\\n            _Out_opt_  D3D12_PACKED_MIP_INFO *pPackedMipDesc,\\r\\n            _Out_opt_  D3D12_TILE_SHAPE *pStandardTileShapeForNonPackedMips,\\r\\n            _Inout_opt_  UINT *pNumSubresourceTilings,\\r\\n            _In_  UINT FirstSubresourceTilingToGet,\\r\\n            _Out_writes_(*pNumSubresourceTilings)  D3D12_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips);\\r\\n        \\r\\n        LUID ( STDMETHODCALLTYPE *GetAdapterLuid )( \\r\\n            ID3D12Device3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineLibrary )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_reads_(BlobLength)  const void *pLibraryBlob,\\r\\n            SIZE_T BlobLength,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineLibrary);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventOnMultipleFenceCompletion )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_reads_(NumFences)  ID3D12Fence *const *ppFences,\\r\\n            _In_reads_(NumFences)  const UINT64 *pFenceValues,\\r\\n            UINT NumFences,\\r\\n            D3D12_MULTIPLE_FENCE_WAIT_FLAGS Flags,\\r\\n            HANDLE hEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetResidencyPriority )( \\r\\n            ID3D12Device3 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_reads_(NumObjects)  const D3D12_RESIDENCY_PRIORITY *pPriorities);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineState )( \\r\\n            ID3D12Device3 * This,\\r\\n            const D3D12_PIPELINE_STATE_STREAM_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromAddress )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  const void *pAddress,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromFileMapping )( \\r\\n            ID3D12Device3 * This,\\r\\n            _In_  HANDLE hFileMapping,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnqueueMakeResident )( \\r\\n            ID3D12Device3 * This,\\r\\n            D3D12_RESIDENCY_FLAGS Flags,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_  ID3D12Fence *pFenceToSignal,\\r\\n            UINT64 FenceValueToSignal);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Device3Vtbl;"},"ID3D12Device4Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":10923,"type":"Struct","value":"typedef struct ID3D12Device4Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Device4 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Device4 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Device4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetNodeCount )( \\r\\n            ID3D12Device4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandQueue )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_COMMAND_QUEUE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandAllocator )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandAllocator);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateGraphicsPipelineState )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateComputePipelineState )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_COMPUTE_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  ID3D12CommandAllocator *pCommandAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            ID3D12Device4 * This,\\r\\n            D3D12_FEATURE Feature,\\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDescriptorHeap )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_DESCRIPTOR_HEAP_DESC *pDescriptorHeapDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetDescriptorHandleIncrementSize )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateRootSignature )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_reads_(blobLengthInBytes)  const void *pBlobWithRootSignature,\\r\\n            _In_  SIZE_T blobLengthInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateConstantBufferView )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_opt_  const D3D12_CONSTANT_BUFFER_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateShaderResourceView )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_SHADER_RESOURCE_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateUnorderedAccessView )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  ID3D12Resource *pCounterResource,\\r\\n            _In_opt_  const D3D12_UNORDERED_ACCESS_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateRenderTargetView )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_RENDER_TARGET_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateDepthStencilView )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DEPTH_STENCIL_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateSampler )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_SAMPLER_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptors )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  UINT NumDestDescriptorRanges,\\r\\n            _In_reads_(NumDestDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pDestDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumDestDescriptorRanges)  const UINT *pDestDescriptorRangeSizes,\\r\\n            _In_  UINT NumSrcDescriptorRanges,\\r\\n            _In_reads_(NumSrcDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pSrcDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumSrcDescriptorRanges)  const UINT *pSrcDescriptorRangeSizes,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptorsSimple )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  UINT NumDescriptors,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptorRangeStart,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE SrcDescriptorRangeStart,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  UINT visibleMask,\\r\\n            _In_  UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs);\\r\\n        \\r\\n        D3D12_HEAP_PROPERTIES ( STDMETHODCALLTYPE *GetCustomHeapProperties )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            D3D12_HEAP_TYPE heapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePlacedResource )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  ID3D12Heap *pHeap,\\r\\n            UINT64 HeapOffset,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSharedHandle )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  ID3D12DeviceChild *pObject,\\r\\n            _In_opt_  const SECURITY_ATTRIBUTES *pAttributes,\\r\\n            DWORD Access,\\r\\n            _In_opt_  LPCWSTR Name,\\r\\n            _Out_  HANDLE *pHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandle )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  HANDLE NTHandle,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvObj);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandleByName )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  LPCWSTR Name,\\r\\n            DWORD Access,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pNTHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeResident )( \\r\\n            ID3D12Device4 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Evict )( \\r\\n            ID3D12Device4 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateFence )( \\r\\n            ID3D12Device4 * This,\\r\\n            UINT64 InitialValue,\\r\\n            D3D12_FENCE_FLAGS Flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppFence);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceRemovedReason )( \\r\\n            ID3D12Device4 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetCopyableFootprints )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pResourceDesc,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES)  UINT FirstSubresource,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES-FirstSubresource)  UINT NumSubresources,\\r\\n            UINT64 BaseOffset,\\r\\n            _Out_writes_opt_(NumSubresources)  D3D12_PLACED_SUBRESOURCE_FOOTPRINT *pLayouts,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT *pNumRows,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT64 *pRowSizeInBytes,\\r\\n            _Out_opt_  UINT64 *pTotalBytes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateQueryHeap )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_QUERY_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStablePowerState )( \\r\\n            ID3D12Device4 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandSignature )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_COMMAND_SIGNATURE_DESC *pDesc,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvCommandSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetResourceTiling )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _Out_opt_  UINT *pNumTilesForEntireResource,\\r\\n            _Out_opt_  D3D12_PACKED_MIP_INFO *pPackedMipDesc,\\r\\n            _Out_opt_  D3D12_TILE_SHAPE *pStandardTileShapeForNonPackedMips,\\r\\n            _Inout_opt_  UINT *pNumSubresourceTilings,\\r\\n            _In_  UINT FirstSubresourceTilingToGet,\\r\\n            _Out_writes_(*pNumSubresourceTilings)  D3D12_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips);\\r\\n        \\r\\n        LUID ( STDMETHODCALLTYPE *GetAdapterLuid )( \\r\\n            ID3D12Device4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineLibrary )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_reads_(BlobLength)  const void *pLibraryBlob,\\r\\n            SIZE_T BlobLength,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineLibrary);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventOnMultipleFenceCompletion )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_reads_(NumFences)  ID3D12Fence *const *ppFences,\\r\\n            _In_reads_(NumFences)  const UINT64 *pFenceValues,\\r\\n            UINT NumFences,\\r\\n            D3D12_MULTIPLE_FENCE_WAIT_FLAGS Flags,\\r\\n            HANDLE hEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetResidencyPriority )( \\r\\n            ID3D12Device4 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_reads_(NumObjects)  const D3D12_RESIDENCY_PRIORITY *pPriorities);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineState )( \\r\\n            ID3D12Device4 * This,\\r\\n            const D3D12_PIPELINE_STATE_STREAM_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromAddress )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const void *pAddress,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromFileMapping )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  HANDLE hFileMapping,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnqueueMakeResident )( \\r\\n            ID3D12Device4 * This,\\r\\n            D3D12_RESIDENCY_FLAGS Flags,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_  ID3D12Fence *pFenceToSignal,\\r\\n            UINT64 FenceValueToSignal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList1 )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  D3D12_COMMAND_LIST_FLAGS flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateProtectedResourceSession )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_PROTECTED_RESOURCE_SESSION_DESC *pDesc,\\r\\n            _In_  REFIID riid,\\r\\n            _COM_Outptr_  void **ppSession);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource1 )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap1 )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource1 )( \\r\\n            ID3D12Device4 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo1 )( \\r\\n            ID3D12Device4 * This,\\r\\n            UINT visibleMask,\\r\\n            UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs,\\r\\n            _Out_writes_opt_(numResourceDescs)  D3D12_RESOURCE_ALLOCATION_INFO1 *pResourceAllocationInfo1);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Device4Vtbl;"},"ID3D12Device5Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":12608,"type":"Struct","value":"typedef struct ID3D12Device5Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Device5 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Device5 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Device5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetNodeCount )( \\r\\n            ID3D12Device5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandQueue )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_COMMAND_QUEUE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandAllocator )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandAllocator);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateGraphicsPipelineState )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateComputePipelineState )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_COMPUTE_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  ID3D12CommandAllocator *pCommandAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            ID3D12Device5 * This,\\r\\n            D3D12_FEATURE Feature,\\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDescriptorHeap )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_DESCRIPTOR_HEAP_DESC *pDescriptorHeapDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetDescriptorHandleIncrementSize )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateRootSignature )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_reads_(blobLengthInBytes)  const void *pBlobWithRootSignature,\\r\\n            _In_  SIZE_T blobLengthInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateConstantBufferView )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_opt_  const D3D12_CONSTANT_BUFFER_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateShaderResourceView )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_SHADER_RESOURCE_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateUnorderedAccessView )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  ID3D12Resource *pCounterResource,\\r\\n            _In_opt_  const D3D12_UNORDERED_ACCESS_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateRenderTargetView )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_RENDER_TARGET_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateDepthStencilView )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DEPTH_STENCIL_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateSampler )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_SAMPLER_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptors )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  UINT NumDestDescriptorRanges,\\r\\n            _In_reads_(NumDestDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pDestDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumDestDescriptorRanges)  const UINT *pDestDescriptorRangeSizes,\\r\\n            _In_  UINT NumSrcDescriptorRanges,\\r\\n            _In_reads_(NumSrcDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pSrcDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumSrcDescriptorRanges)  const UINT *pSrcDescriptorRangeSizes,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptorsSimple )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  UINT NumDescriptors,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptorRangeStart,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE SrcDescriptorRangeStart,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  UINT visibleMask,\\r\\n            _In_  UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs);\\r\\n        \\r\\n        D3D12_HEAP_PROPERTIES ( STDMETHODCALLTYPE *GetCustomHeapProperties )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            D3D12_HEAP_TYPE heapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePlacedResource )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  ID3D12Heap *pHeap,\\r\\n            UINT64 HeapOffset,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSharedHandle )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  ID3D12DeviceChild *pObject,\\r\\n            _In_opt_  const SECURITY_ATTRIBUTES *pAttributes,\\r\\n            DWORD Access,\\r\\n            _In_opt_  LPCWSTR Name,\\r\\n            _Out_  HANDLE *pHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandle )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  HANDLE NTHandle,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvObj);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandleByName )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  LPCWSTR Name,\\r\\n            DWORD Access,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pNTHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeResident )( \\r\\n            ID3D12Device5 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Evict )( \\r\\n            ID3D12Device5 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateFence )( \\r\\n            ID3D12Device5 * This,\\r\\n            UINT64 InitialValue,\\r\\n            D3D12_FENCE_FLAGS Flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppFence);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceRemovedReason )( \\r\\n            ID3D12Device5 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetCopyableFootprints )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pResourceDesc,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES)  UINT FirstSubresource,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES-FirstSubresource)  UINT NumSubresources,\\r\\n            UINT64 BaseOffset,\\r\\n            _Out_writes_opt_(NumSubresources)  D3D12_PLACED_SUBRESOURCE_FOOTPRINT *pLayouts,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT *pNumRows,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT64 *pRowSizeInBytes,\\r\\n            _Out_opt_  UINT64 *pTotalBytes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateQueryHeap )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_QUERY_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStablePowerState )( \\r\\n            ID3D12Device5 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandSignature )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_COMMAND_SIGNATURE_DESC *pDesc,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvCommandSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetResourceTiling )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _Out_opt_  UINT *pNumTilesForEntireResource,\\r\\n            _Out_opt_  D3D12_PACKED_MIP_INFO *pPackedMipDesc,\\r\\n            _Out_opt_  D3D12_TILE_SHAPE *pStandardTileShapeForNonPackedMips,\\r\\n            _Inout_opt_  UINT *pNumSubresourceTilings,\\r\\n            _In_  UINT FirstSubresourceTilingToGet,\\r\\n            _Out_writes_(*pNumSubresourceTilings)  D3D12_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips);\\r\\n        \\r\\n        LUID ( STDMETHODCALLTYPE *GetAdapterLuid )( \\r\\n            ID3D12Device5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineLibrary )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_reads_(BlobLength)  const void *pLibraryBlob,\\r\\n            SIZE_T BlobLength,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineLibrary);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventOnMultipleFenceCompletion )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_reads_(NumFences)  ID3D12Fence *const *ppFences,\\r\\n            _In_reads_(NumFences)  const UINT64 *pFenceValues,\\r\\n            UINT NumFences,\\r\\n            D3D12_MULTIPLE_FENCE_WAIT_FLAGS Flags,\\r\\n            HANDLE hEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetResidencyPriority )( \\r\\n            ID3D12Device5 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_reads_(NumObjects)  const D3D12_RESIDENCY_PRIORITY *pPriorities);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineState )( \\r\\n            ID3D12Device5 * This,\\r\\n            const D3D12_PIPELINE_STATE_STREAM_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromAddress )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const void *pAddress,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromFileMapping )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  HANDLE hFileMapping,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnqueueMakeResident )( \\r\\n            ID3D12Device5 * This,\\r\\n            D3D12_RESIDENCY_FLAGS Flags,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_  ID3D12Fence *pFenceToSignal,\\r\\n            UINT64 FenceValueToSignal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList1 )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  D3D12_COMMAND_LIST_FLAGS flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateProtectedResourceSession )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_PROTECTED_RESOURCE_SESSION_DESC *pDesc,\\r\\n            _In_  REFIID riid,\\r\\n            _COM_Outptr_  void **ppSession);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource1 )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap1 )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource1 )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo1 )( \\r\\n            ID3D12Device5 * This,\\r\\n            UINT visibleMask,\\r\\n            UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs,\\r\\n            _Out_writes_opt_(numResourceDescs)  D3D12_RESOURCE_ALLOCATION_INFO1 *pResourceAllocationInfo1);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateLifetimeTracker )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  ID3D12LifetimeOwner *pOwner,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvTracker);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RemoveDevice )( \\r\\n            ID3D12Device5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumerateMetaCommands )( \\r\\n            ID3D12Device5 * This,\\r\\n            _Inout_  UINT *pNumMetaCommands,\\r\\n            _Out_writes_opt_(*pNumMetaCommands)  D3D12_META_COMMAND_DESC *pDescs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumerateMetaCommandParameters )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  REFGUID CommandId,\\r\\n            _In_  D3D12_META_COMMAND_PARAMETER_STAGE Stage,\\r\\n            _Out_opt_  UINT *pTotalStructureSizeInBytes,\\r\\n            _Inout_  UINT *pParameterCount,\\r\\n            _Out_writes_opt_(*pParameterCount)  D3D12_META_COMMAND_PARAMETER_DESC *pParameterDescs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMetaCommand )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  REFGUID CommandId,\\r\\n            _In_  UINT NodeMask,\\r\\n            _In_reads_bytes_opt_(CreationParametersDataSizeInBytes)  const void *pCreationParametersData,\\r\\n            _In_  SIZE_T CreationParametersDataSizeInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppMetaCommand);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateStateObject )( \\r\\n            ID3D12Device5 * This,\\r\\n            const D3D12_STATE_OBJECT_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppStateObject);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetRaytracingAccelerationStructurePrebuildInfo )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS *pDesc,\\r\\n            _Out_  D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO *pInfo);\\r\\n        \\r\\n        D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS ( STDMETHODCALLTYPE *CheckDriverMatchingIdentifier )( \\r\\n            ID3D12Device5 * This,\\r\\n            _In_  D3D12_SERIALIZED_DATA_TYPE SerializedDataType,\\r\\n            _In_  const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER *pIdentifierToCheck);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Device5Vtbl;"},"ID3D12Device6Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":13917,"type":"Struct","value":"typedef struct ID3D12Device6Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Device6 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Device6 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Device6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetNodeCount )( \\r\\n            ID3D12Device6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandQueue )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_COMMAND_QUEUE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandAllocator )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandAllocator);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateGraphicsPipelineState )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateComputePipelineState )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_COMPUTE_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  ID3D12CommandAllocator *pCommandAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            ID3D12Device6 * This,\\r\\n            D3D12_FEATURE Feature,\\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDescriptorHeap )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_DESCRIPTOR_HEAP_DESC *pDescriptorHeapDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetDescriptorHandleIncrementSize )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateRootSignature )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_reads_(blobLengthInBytes)  const void *pBlobWithRootSignature,\\r\\n            _In_  SIZE_T blobLengthInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateConstantBufferView )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_opt_  const D3D12_CONSTANT_BUFFER_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateShaderResourceView )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_SHADER_RESOURCE_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateUnorderedAccessView )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  ID3D12Resource *pCounterResource,\\r\\n            _In_opt_  const D3D12_UNORDERED_ACCESS_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateRenderTargetView )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_RENDER_TARGET_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateDepthStencilView )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DEPTH_STENCIL_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateSampler )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_SAMPLER_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptors )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  UINT NumDestDescriptorRanges,\\r\\n            _In_reads_(NumDestDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pDestDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumDestDescriptorRanges)  const UINT *pDestDescriptorRangeSizes,\\r\\n            _In_  UINT NumSrcDescriptorRanges,\\r\\n            _In_reads_(NumSrcDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pSrcDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumSrcDescriptorRanges)  const UINT *pSrcDescriptorRangeSizes,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptorsSimple )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  UINT NumDescriptors,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptorRangeStart,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE SrcDescriptorRangeStart,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  UINT visibleMask,\\r\\n            _In_  UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs);\\r\\n        \\r\\n        D3D12_HEAP_PROPERTIES ( STDMETHODCALLTYPE *GetCustomHeapProperties )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            D3D12_HEAP_TYPE heapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePlacedResource )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  ID3D12Heap *pHeap,\\r\\n            UINT64 HeapOffset,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSharedHandle )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  ID3D12DeviceChild *pObject,\\r\\n            _In_opt_  const SECURITY_ATTRIBUTES *pAttributes,\\r\\n            DWORD Access,\\r\\n            _In_opt_  LPCWSTR Name,\\r\\n            _Out_  HANDLE *pHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandle )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  HANDLE NTHandle,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvObj);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandleByName )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  LPCWSTR Name,\\r\\n            DWORD Access,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pNTHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeResident )( \\r\\n            ID3D12Device6 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Evict )( \\r\\n            ID3D12Device6 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateFence )( \\r\\n            ID3D12Device6 * This,\\r\\n            UINT64 InitialValue,\\r\\n            D3D12_FENCE_FLAGS Flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppFence);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceRemovedReason )( \\r\\n            ID3D12Device6 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetCopyableFootprints )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pResourceDesc,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES)  UINT FirstSubresource,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES-FirstSubresource)  UINT NumSubresources,\\r\\n            UINT64 BaseOffset,\\r\\n            _Out_writes_opt_(NumSubresources)  D3D12_PLACED_SUBRESOURCE_FOOTPRINT *pLayouts,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT *pNumRows,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT64 *pRowSizeInBytes,\\r\\n            _Out_opt_  UINT64 *pTotalBytes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateQueryHeap )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_QUERY_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStablePowerState )( \\r\\n            ID3D12Device6 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandSignature )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_COMMAND_SIGNATURE_DESC *pDesc,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvCommandSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetResourceTiling )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _Out_opt_  UINT *pNumTilesForEntireResource,\\r\\n            _Out_opt_  D3D12_PACKED_MIP_INFO *pPackedMipDesc,\\r\\n            _Out_opt_  D3D12_TILE_SHAPE *pStandardTileShapeForNonPackedMips,\\r\\n            _Inout_opt_  UINT *pNumSubresourceTilings,\\r\\n            _In_  UINT FirstSubresourceTilingToGet,\\r\\n            _Out_writes_(*pNumSubresourceTilings)  D3D12_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips);\\r\\n        \\r\\n        LUID ( STDMETHODCALLTYPE *GetAdapterLuid )( \\r\\n            ID3D12Device6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineLibrary )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_reads_(BlobLength)  const void *pLibraryBlob,\\r\\n            SIZE_T BlobLength,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineLibrary);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventOnMultipleFenceCompletion )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_reads_(NumFences)  ID3D12Fence *const *ppFences,\\r\\n            _In_reads_(NumFences)  const UINT64 *pFenceValues,\\r\\n            UINT NumFences,\\r\\n            D3D12_MULTIPLE_FENCE_WAIT_FLAGS Flags,\\r\\n            HANDLE hEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetResidencyPriority )( \\r\\n            ID3D12Device6 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_reads_(NumObjects)  const D3D12_RESIDENCY_PRIORITY *pPriorities);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineState )( \\r\\n            ID3D12Device6 * This,\\r\\n            const D3D12_PIPELINE_STATE_STREAM_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromAddress )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const void *pAddress,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromFileMapping )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  HANDLE hFileMapping,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnqueueMakeResident )( \\r\\n            ID3D12Device6 * This,\\r\\n            D3D12_RESIDENCY_FLAGS Flags,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_  ID3D12Fence *pFenceToSignal,\\r\\n            UINT64 FenceValueToSignal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList1 )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  D3D12_COMMAND_LIST_FLAGS flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateProtectedResourceSession )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_PROTECTED_RESOURCE_SESSION_DESC *pDesc,\\r\\n            _In_  REFIID riid,\\r\\n            _COM_Outptr_  void **ppSession);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource1 )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap1 )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource1 )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo1 )( \\r\\n            ID3D12Device6 * This,\\r\\n            UINT visibleMask,\\r\\n            UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs,\\r\\n            _Out_writes_opt_(numResourceDescs)  D3D12_RESOURCE_ALLOCATION_INFO1 *pResourceAllocationInfo1);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateLifetimeTracker )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  ID3D12LifetimeOwner *pOwner,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvTracker);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RemoveDevice )( \\r\\n            ID3D12Device6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumerateMetaCommands )( \\r\\n            ID3D12Device6 * This,\\r\\n            _Inout_  UINT *pNumMetaCommands,\\r\\n            _Out_writes_opt_(*pNumMetaCommands)  D3D12_META_COMMAND_DESC *pDescs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumerateMetaCommandParameters )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  REFGUID CommandId,\\r\\n            _In_  D3D12_META_COMMAND_PARAMETER_STAGE Stage,\\r\\n            _Out_opt_  UINT *pTotalStructureSizeInBytes,\\r\\n            _Inout_  UINT *pParameterCount,\\r\\n            _Out_writes_opt_(*pParameterCount)  D3D12_META_COMMAND_PARAMETER_DESC *pParameterDescs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMetaCommand )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  REFGUID CommandId,\\r\\n            _In_  UINT NodeMask,\\r\\n            _In_reads_bytes_opt_(CreationParametersDataSizeInBytes)  const void *pCreationParametersData,\\r\\n            _In_  SIZE_T CreationParametersDataSizeInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppMetaCommand);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateStateObject )( \\r\\n            ID3D12Device6 * This,\\r\\n            const D3D12_STATE_OBJECT_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppStateObject);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetRaytracingAccelerationStructurePrebuildInfo )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS *pDesc,\\r\\n            _Out_  D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO *pInfo);\\r\\n        \\r\\n        D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS ( STDMETHODCALLTYPE *CheckDriverMatchingIdentifier )( \\r\\n            ID3D12Device6 * This,\\r\\n            _In_  D3D12_SERIALIZED_DATA_TYPE SerializedDataType,\\r\\n            _In_  const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER *pIdentifierToCheck);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBackgroundProcessingMode )( \\r\\n            ID3D12Device6 * This,\\r\\n            D3D12_BACKGROUND_PROCESSING_MODE Mode,\\r\\n            D3D12_MEASUREMENTS_ACTION MeasurementsAction,\\r\\n            _In_opt_  HANDLE hEventToSignalUponCompletion,\\r\\n            _Out_opt_  BOOL *pbFurtherMeasurementsDesired);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Device6Vtbl;"},"ID3D12Device7Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":14777,"type":"Struct","value":"typedef struct ID3D12Device7Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Device7 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Device7 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Device7 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetNodeCount )( \\r\\n            ID3D12Device7 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandQueue )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_COMMAND_QUEUE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandAllocator )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandAllocator);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateGraphicsPipelineState )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateComputePipelineState )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_COMPUTE_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  ID3D12CommandAllocator *pCommandAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            ID3D12Device7 * This,\\r\\n            D3D12_FEATURE Feature,\\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDescriptorHeap )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_DESCRIPTOR_HEAP_DESC *pDescriptorHeapDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetDescriptorHandleIncrementSize )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateRootSignature )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_reads_(blobLengthInBytes)  const void *pBlobWithRootSignature,\\r\\n            _In_  SIZE_T blobLengthInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateConstantBufferView )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_opt_  const D3D12_CONSTANT_BUFFER_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateShaderResourceView )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_SHADER_RESOURCE_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateUnorderedAccessView )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  ID3D12Resource *pCounterResource,\\r\\n            _In_opt_  const D3D12_UNORDERED_ACCESS_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateRenderTargetView )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_RENDER_TARGET_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateDepthStencilView )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DEPTH_STENCIL_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateSampler )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_SAMPLER_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptors )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  UINT NumDestDescriptorRanges,\\r\\n            _In_reads_(NumDestDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pDestDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumDestDescriptorRanges)  const UINT *pDestDescriptorRangeSizes,\\r\\n            _In_  UINT NumSrcDescriptorRanges,\\r\\n            _In_reads_(NumSrcDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pSrcDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumSrcDescriptorRanges)  const UINT *pSrcDescriptorRangeSizes,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptorsSimple )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  UINT NumDescriptors,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptorRangeStart,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE SrcDescriptorRangeStart,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  UINT visibleMask,\\r\\n            _In_  UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs);\\r\\n        \\r\\n        D3D12_HEAP_PROPERTIES ( STDMETHODCALLTYPE *GetCustomHeapProperties )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            D3D12_HEAP_TYPE heapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePlacedResource )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  ID3D12Heap *pHeap,\\r\\n            UINT64 HeapOffset,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSharedHandle )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  ID3D12DeviceChild *pObject,\\r\\n            _In_opt_  const SECURITY_ATTRIBUTES *pAttributes,\\r\\n            DWORD Access,\\r\\n            _In_opt_  LPCWSTR Name,\\r\\n            _Out_  HANDLE *pHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandle )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  HANDLE NTHandle,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvObj);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandleByName )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  LPCWSTR Name,\\r\\n            DWORD Access,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pNTHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeResident )( \\r\\n            ID3D12Device7 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Evict )( \\r\\n            ID3D12Device7 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateFence )( \\r\\n            ID3D12Device7 * This,\\r\\n            UINT64 InitialValue,\\r\\n            D3D12_FENCE_FLAGS Flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppFence);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceRemovedReason )( \\r\\n            ID3D12Device7 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetCopyableFootprints )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pResourceDesc,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES)  UINT FirstSubresource,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES-FirstSubresource)  UINT NumSubresources,\\r\\n            UINT64 BaseOffset,\\r\\n            _Out_writes_opt_(NumSubresources)  D3D12_PLACED_SUBRESOURCE_FOOTPRINT *pLayouts,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT *pNumRows,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT64 *pRowSizeInBytes,\\r\\n            _Out_opt_  UINT64 *pTotalBytes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateQueryHeap )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_QUERY_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStablePowerState )( \\r\\n            ID3D12Device7 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandSignature )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_COMMAND_SIGNATURE_DESC *pDesc,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvCommandSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetResourceTiling )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _Out_opt_  UINT *pNumTilesForEntireResource,\\r\\n            _Out_opt_  D3D12_PACKED_MIP_INFO *pPackedMipDesc,\\r\\n            _Out_opt_  D3D12_TILE_SHAPE *pStandardTileShapeForNonPackedMips,\\r\\n            _Inout_opt_  UINT *pNumSubresourceTilings,\\r\\n            _In_  UINT FirstSubresourceTilingToGet,\\r\\n            _Out_writes_(*pNumSubresourceTilings)  D3D12_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips);\\r\\n        \\r\\n        LUID ( STDMETHODCALLTYPE *GetAdapterLuid )( \\r\\n            ID3D12Device7 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineLibrary )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_reads_(BlobLength)  const void *pLibraryBlob,\\r\\n            SIZE_T BlobLength,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineLibrary);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventOnMultipleFenceCompletion )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_reads_(NumFences)  ID3D12Fence *const *ppFences,\\r\\n            _In_reads_(NumFences)  const UINT64 *pFenceValues,\\r\\n            UINT NumFences,\\r\\n            D3D12_MULTIPLE_FENCE_WAIT_FLAGS Flags,\\r\\n            HANDLE hEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetResidencyPriority )( \\r\\n            ID3D12Device7 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_reads_(NumObjects)  const D3D12_RESIDENCY_PRIORITY *pPriorities);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineState )( \\r\\n            ID3D12Device7 * This,\\r\\n            const D3D12_PIPELINE_STATE_STREAM_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromAddress )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const void *pAddress,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromFileMapping )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  HANDLE hFileMapping,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnqueueMakeResident )( \\r\\n            ID3D12Device7 * This,\\r\\n            D3D12_RESIDENCY_FLAGS Flags,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_  ID3D12Fence *pFenceToSignal,\\r\\n            UINT64 FenceValueToSignal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList1 )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  D3D12_COMMAND_LIST_FLAGS flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateProtectedResourceSession )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_PROTECTED_RESOURCE_SESSION_DESC *pDesc,\\r\\n            _In_  REFIID riid,\\r\\n            _COM_Outptr_  void **ppSession);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource1 )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap1 )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource1 )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo1 )( \\r\\n            ID3D12Device7 * This,\\r\\n            UINT visibleMask,\\r\\n            UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs,\\r\\n            _Out_writes_opt_(numResourceDescs)  D3D12_RESOURCE_ALLOCATION_INFO1 *pResourceAllocationInfo1);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateLifetimeTracker )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  ID3D12LifetimeOwner *pOwner,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvTracker);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RemoveDevice )( \\r\\n            ID3D12Device7 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumerateMetaCommands )( \\r\\n            ID3D12Device7 * This,\\r\\n            _Inout_  UINT *pNumMetaCommands,\\r\\n            _Out_writes_opt_(*pNumMetaCommands)  D3D12_META_COMMAND_DESC *pDescs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumerateMetaCommandParameters )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  REFGUID CommandId,\\r\\n            _In_  D3D12_META_COMMAND_PARAMETER_STAGE Stage,\\r\\n            _Out_opt_  UINT *pTotalStructureSizeInBytes,\\r\\n            _Inout_  UINT *pParameterCount,\\r\\n            _Out_writes_opt_(*pParameterCount)  D3D12_META_COMMAND_PARAMETER_DESC *pParameterDescs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMetaCommand )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  REFGUID CommandId,\\r\\n            _In_  UINT NodeMask,\\r\\n            _In_reads_bytes_opt_(CreationParametersDataSizeInBytes)  const void *pCreationParametersData,\\r\\n            _In_  SIZE_T CreationParametersDataSizeInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppMetaCommand);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateStateObject )( \\r\\n            ID3D12Device7 * This,\\r\\n            const D3D12_STATE_OBJECT_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppStateObject);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetRaytracingAccelerationStructurePrebuildInfo )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS *pDesc,\\r\\n            _Out_  D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO *pInfo);\\r\\n        \\r\\n        D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS ( STDMETHODCALLTYPE *CheckDriverMatchingIdentifier )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  D3D12_SERIALIZED_DATA_TYPE SerializedDataType,\\r\\n            _In_  const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER *pIdentifierToCheck);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBackgroundProcessingMode )( \\r\\n            ID3D12Device7 * This,\\r\\n            D3D12_BACKGROUND_PROCESSING_MODE Mode,\\r\\n            D3D12_MEASUREMENTS_ACTION MeasurementsAction,\\r\\n            _In_opt_  HANDLE hEventToSignalUponCompletion,\\r\\n            _Out_opt_  BOOL *pbFurtherMeasurementsDesired);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddToStateObject )( \\r\\n            ID3D12Device7 * This,\\r\\n            const D3D12_STATE_OBJECT_DESC *pAddition,\\r\\n            ID3D12StateObject *pStateObjectToGrowFrom,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppNewStateObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateProtectedResourceSession1 )( \\r\\n            ID3D12Device7 * This,\\r\\n            _In_  const D3D12_PROTECTED_RESOURCE_SESSION_DESC1 *pDesc,\\r\\n            _In_  REFIID riid,\\r\\n            _COM_Outptr_  void **ppSession);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Device7Vtbl;"},"ID3D12Device8Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":15511,"type":"Struct","value":"typedef struct ID3D12Device8Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Device8 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Device8 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Device8 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetNodeCount )( \\r\\n            ID3D12Device8 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandQueue )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_COMMAND_QUEUE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandAllocator )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandAllocator);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateGraphicsPipelineState )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateComputePipelineState )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_COMPUTE_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  ID3D12CommandAllocator *pCommandAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            ID3D12Device8 * This,\\r\\n            D3D12_FEATURE Feature,\\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDescriptorHeap )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_DESCRIPTOR_HEAP_DESC *pDescriptorHeapDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetDescriptorHandleIncrementSize )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateRootSignature )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_reads_(blobLengthInBytes)  const void *pBlobWithRootSignature,\\r\\n            _In_  SIZE_T blobLengthInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateConstantBufferView )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_opt_  const D3D12_CONSTANT_BUFFER_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateShaderResourceView )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_SHADER_RESOURCE_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateUnorderedAccessView )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  ID3D12Resource *pCounterResource,\\r\\n            _In_opt_  const D3D12_UNORDERED_ACCESS_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateRenderTargetView )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_RENDER_TARGET_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateDepthStencilView )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DEPTH_STENCIL_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateSampler )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_SAMPLER_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptors )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  UINT NumDestDescriptorRanges,\\r\\n            _In_reads_(NumDestDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pDestDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumDestDescriptorRanges)  const UINT *pDestDescriptorRangeSizes,\\r\\n            _In_  UINT NumSrcDescriptorRanges,\\r\\n            _In_reads_(NumSrcDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pSrcDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumSrcDescriptorRanges)  const UINT *pSrcDescriptorRangeSizes,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptorsSimple )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  UINT NumDescriptors,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptorRangeStart,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE SrcDescriptorRangeStart,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  UINT visibleMask,\\r\\n            _In_  UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs);\\r\\n        \\r\\n        D3D12_HEAP_PROPERTIES ( STDMETHODCALLTYPE *GetCustomHeapProperties )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            D3D12_HEAP_TYPE heapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePlacedResource )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  ID3D12Heap *pHeap,\\r\\n            UINT64 HeapOffset,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSharedHandle )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  ID3D12DeviceChild *pObject,\\r\\n            _In_opt_  const SECURITY_ATTRIBUTES *pAttributes,\\r\\n            DWORD Access,\\r\\n            _In_opt_  LPCWSTR Name,\\r\\n            _Out_  HANDLE *pHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandle )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  HANDLE NTHandle,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvObj);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandleByName )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  LPCWSTR Name,\\r\\n            DWORD Access,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pNTHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeResident )( \\r\\n            ID3D12Device8 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Evict )( \\r\\n            ID3D12Device8 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateFence )( \\r\\n            ID3D12Device8 * This,\\r\\n            UINT64 InitialValue,\\r\\n            D3D12_FENCE_FLAGS Flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppFence);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceRemovedReason )( \\r\\n            ID3D12Device8 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetCopyableFootprints )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pResourceDesc,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES)  UINT FirstSubresource,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES-FirstSubresource)  UINT NumSubresources,\\r\\n            UINT64 BaseOffset,\\r\\n            _Out_writes_opt_(NumSubresources)  D3D12_PLACED_SUBRESOURCE_FOOTPRINT *pLayouts,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT *pNumRows,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT64 *pRowSizeInBytes,\\r\\n            _Out_opt_  UINT64 *pTotalBytes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateQueryHeap )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_QUERY_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStablePowerState )( \\r\\n            ID3D12Device8 * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandSignature )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_COMMAND_SIGNATURE_DESC *pDesc,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvCommandSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetResourceTiling )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _Out_opt_  UINT *pNumTilesForEntireResource,\\r\\n            _Out_opt_  D3D12_PACKED_MIP_INFO *pPackedMipDesc,\\r\\n            _Out_opt_  D3D12_TILE_SHAPE *pStandardTileShapeForNonPackedMips,\\r\\n            _Inout_opt_  UINT *pNumSubresourceTilings,\\r\\n            _In_  UINT FirstSubresourceTilingToGet,\\r\\n            _Out_writes_(*pNumSubresourceTilings)  D3D12_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips);\\r\\n        \\r\\n        LUID ( STDMETHODCALLTYPE *GetAdapterLuid )( \\r\\n            ID3D12Device8 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineLibrary )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_reads_(BlobLength)  const void *pLibraryBlob,\\r\\n            SIZE_T BlobLength,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineLibrary);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventOnMultipleFenceCompletion )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_reads_(NumFences)  ID3D12Fence *const *ppFences,\\r\\n            _In_reads_(NumFences)  const UINT64 *pFenceValues,\\r\\n            UINT NumFences,\\r\\n            D3D12_MULTIPLE_FENCE_WAIT_FLAGS Flags,\\r\\n            HANDLE hEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetResidencyPriority )( \\r\\n            ID3D12Device8 * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_reads_(NumObjects)  const D3D12_RESIDENCY_PRIORITY *pPriorities);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePipelineState )( \\r\\n            ID3D12Device8 * This,\\r\\n            const D3D12_PIPELINE_STATE_STREAM_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromAddress )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const void *pAddress,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenExistingHeapFromFileMapping )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  HANDLE hFileMapping,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnqueueMakeResident )( \\r\\n            ID3D12Device8 * This,\\r\\n            D3D12_RESIDENCY_FLAGS Flags,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects,\\r\\n            _In_  ID3D12Fence *pFenceToSignal,\\r\\n            UINT64 FenceValueToSignal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList1 )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  D3D12_COMMAND_LIST_FLAGS flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateProtectedResourceSession )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_PROTECTED_RESOURCE_SESSION_DESC *pDesc,\\r\\n            _In_  REFIID riid,\\r\\n            _COM_Outptr_  void **ppSession);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource1 )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap1 )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource1 )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo1 )( \\r\\n            ID3D12Device8 * This,\\r\\n            UINT visibleMask,\\r\\n            UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs,\\r\\n            _Out_writes_opt_(numResourceDescs)  D3D12_RESOURCE_ALLOCATION_INFO1 *pResourceAllocationInfo1);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateLifetimeTracker )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  ID3D12LifetimeOwner *pOwner,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvTracker);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RemoveDevice )( \\r\\n            ID3D12Device8 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumerateMetaCommands )( \\r\\n            ID3D12Device8 * This,\\r\\n            _Inout_  UINT *pNumMetaCommands,\\r\\n            _Out_writes_opt_(*pNumMetaCommands)  D3D12_META_COMMAND_DESC *pDescs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnumerateMetaCommandParameters )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  REFGUID CommandId,\\r\\n            _In_  D3D12_META_COMMAND_PARAMETER_STAGE Stage,\\r\\n            _Out_opt_  UINT *pTotalStructureSizeInBytes,\\r\\n            _Inout_  UINT *pParameterCount,\\r\\n            _Out_writes_opt_(*pParameterCount)  D3D12_META_COMMAND_PARAMETER_DESC *pParameterDescs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMetaCommand )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  REFGUID CommandId,\\r\\n            _In_  UINT NodeMask,\\r\\n            _In_reads_bytes_opt_(CreationParametersDataSizeInBytes)  const void *pCreationParametersData,\\r\\n            _In_  SIZE_T CreationParametersDataSizeInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppMetaCommand);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateStateObject )( \\r\\n            ID3D12Device8 * This,\\r\\n            const D3D12_STATE_OBJECT_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppStateObject);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetRaytracingAccelerationStructurePrebuildInfo )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS *pDesc,\\r\\n            _Out_  D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO *pInfo);\\r\\n        \\r\\n        D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS ( STDMETHODCALLTYPE *CheckDriverMatchingIdentifier )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  D3D12_SERIALIZED_DATA_TYPE SerializedDataType,\\r\\n            _In_  const D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER *pIdentifierToCheck);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBackgroundProcessingMode )( \\r\\n            ID3D12Device8 * This,\\r\\n            D3D12_BACKGROUND_PROCESSING_MODE Mode,\\r\\n            D3D12_MEASUREMENTS_ACTION MeasurementsAction,\\r\\n            _In_opt_  HANDLE hEventToSignalUponCompletion,\\r\\n            _Out_opt_  BOOL *pbFurtherMeasurementsDesired);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddToStateObject )( \\r\\n            ID3D12Device8 * This,\\r\\n            const D3D12_STATE_OBJECT_DESC *pAddition,\\r\\n            ID3D12StateObject *pStateObjectToGrowFrom,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppNewStateObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateProtectedResourceSession1 )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_PROTECTED_RESOURCE_SESSION_DESC1 *pDesc,\\r\\n            _In_  REFIID riid,\\r\\n            _COM_Outptr_  void **ppSession);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo2 )( \\r\\n            ID3D12Device8 * This,\\r\\n            UINT visibleMask,\\r\\n            UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC1 *pResourceDescs,\\r\\n            _Out_writes_opt_(numResourceDescs)  D3D12_RESOURCE_ALLOCATION_INFO1 *pResourceAllocationInfo1);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource2 )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC1 *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedSession,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePlacedResource1 )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  ID3D12Heap *pHeap,\\r\\n            UINT64 HeapOffset,\\r\\n            _In_  const D3D12_RESOURCE_DESC1 *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateSamplerFeedbackUnorderedAccessView )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_opt_  ID3D12Resource *pTargetedResource,\\r\\n            _In_opt_  ID3D12Resource *pFeedbackResource,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetCopyableFootprints1 )( \\r\\n            ID3D12Device8 * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC1 *pResourceDesc,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES)  UINT FirstSubresource,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES-FirstSubresource)  UINT NumSubresources,\\r\\n            UINT64 BaseOffset,\\r\\n            _Out_writes_opt_(NumSubresources)  D3D12_PLACED_SUBRESOURCE_FOOTPRINT *pLayouts,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT *pNumRows,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT64 *pRowSizeInBytes,\\r\\n            _Out_opt_  UINT64 *pTotalBytes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Device8Vtbl;"},"ID3D12DeviceChildVtbl":{"comment":"","exp":"","file":"d3d12.h","line":1664,"type":"Struct","value":"typedef struct ID3D12DeviceChildVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DeviceChild * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DeviceChild * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DeviceChild * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12DeviceChild * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12DeviceChild * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12DeviceChild * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12DeviceChild * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12DeviceChild * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DeviceChildVtbl;"},"ID3D12DeviceRemovedExtendedData1Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":13787,"type":"Struct","value":"typedef struct ID3D12DeviceRemovedExtendedData1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DeviceRemovedExtendedData1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DeviceRemovedExtendedData1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DeviceRemovedExtendedData1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAutoBreadcrumbsOutput )( \\r\\n            ID3D12DeviceRemovedExtendedData1 * This,\\r\\n            _Out_  D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT *pOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPageFaultAllocationOutput )( \\r\\n            ID3D12DeviceRemovedExtendedData1 * This,\\r\\n            _Out_  D3D12_DRED_PAGE_FAULT_OUTPUT *pOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAutoBreadcrumbsOutput1 )( \\r\\n            ID3D12DeviceRemovedExtendedData1 * This,\\r\\n            _Out_  D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1 *pOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPageFaultAllocationOutput1 )( \\r\\n            ID3D12DeviceRemovedExtendedData1 * This,\\r\\n            _Out_  D3D12_DRED_PAGE_FAULT_OUTPUT1 *pOutput);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DeviceRemovedExtendedData1Vtbl;"},"ID3D12DeviceRemovedExtendedDataSettings1Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":13594,"type":"Struct","value":"typedef struct ID3D12DeviceRemovedExtendedDataSettings1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings1 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetAutoBreadcrumbsEnablement )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings1 * This,\\r\\n            D3D12_DRED_ENABLEMENT Enablement);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPageFaultEnablement )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings1 * This,\\r\\n            D3D12_DRED_ENABLEMENT Enablement);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetWatsonDumpEnablement )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings1 * This,\\r\\n            D3D12_DRED_ENABLEMENT Enablement);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetBreadcrumbContextEnablement )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings1 * This,\\r\\n            D3D12_DRED_ENABLEMENT Enablement);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DeviceRemovedExtendedDataSettings1Vtbl;"},"ID3D12DeviceRemovedExtendedDataSettingsVtbl":{"comment":"","exp":"","file":"d3d12.h","line":13501,"type":"Struct","value":"typedef struct ID3D12DeviceRemovedExtendedDataSettingsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetAutoBreadcrumbsEnablement )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings * This,\\r\\n            D3D12_DRED_ENABLEMENT Enablement);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPageFaultEnablement )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings * This,\\r\\n            D3D12_DRED_ENABLEMENT Enablement);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetWatsonDumpEnablement )( \\r\\n            ID3D12DeviceRemovedExtendedDataSettings * This,\\r\\n            D3D12_DRED_ENABLEMENT Enablement);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DeviceRemovedExtendedDataSettingsVtbl;"},"ID3D12DeviceRemovedExtendedDataVtbl":{"comment":"","exp":"","file":"d3d12.h","line":13698,"type":"Struct","value":"typedef struct ID3D12DeviceRemovedExtendedDataVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12DeviceRemovedExtendedData * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12DeviceRemovedExtendedData * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12DeviceRemovedExtendedData * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAutoBreadcrumbsOutput )( \\r\\n            ID3D12DeviceRemovedExtendedData * This,\\r\\n            _Out_  D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT *pOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPageFaultAllocationOutput )( \\r\\n            ID3D12DeviceRemovedExtendedData * This,\\r\\n            _Out_  D3D12_DRED_PAGE_FAULT_OUTPUT *pOutput);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DeviceRemovedExtendedDataVtbl;"},"ID3D12DeviceVtbl":{"comment":"","exp":"","file":"d3d12.h","line":8142,"type":"Struct","value":"typedef struct ID3D12DeviceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Device * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Device * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Device * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Device * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetNodeCount )( \\r\\n            ID3D12Device * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandQueue )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  const D3D12_COMMAND_QUEUE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandAllocator )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandAllocator);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateGraphicsPipelineState )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateComputePipelineState )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  const D3D12_COMPUTE_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandList )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_  D3D12_COMMAND_LIST_TYPE type,\\r\\n            _In_  ID3D12CommandAllocator *pCommandAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppCommandList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CheckFeatureSupport )( \\r\\n            ID3D12Device * This,\\r\\n            D3D12_FEATURE Feature,\\r\\n            _Inout_updates_bytes_(FeatureSupportDataSize)  void *pFeatureSupportData,\\r\\n            UINT FeatureSupportDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDescriptorHeap )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  const D3D12_DESCRIPTOR_HEAP_DESC *pDescriptorHeapDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvHeap);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetDescriptorHandleIncrementSize )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateRootSignature )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            _In_reads_(blobLengthInBytes)  const void *pBlobWithRootSignature,\\r\\n            _In_  SIZE_T blobLengthInBytes,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateConstantBufferView )( \\r\\n            ID3D12Device * This,\\r\\n            _In_opt_  const D3D12_CONSTANT_BUFFER_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateShaderResourceView )( \\r\\n            ID3D12Device * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_SHADER_RESOURCE_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateUnorderedAccessView )( \\r\\n            ID3D12Device * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  ID3D12Resource *pCounterResource,\\r\\n            _In_opt_  const D3D12_UNORDERED_ACCESS_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateRenderTargetView )( \\r\\n            ID3D12Device * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_RENDER_TARGET_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateDepthStencilView )( \\r\\n            ID3D12Device * This,\\r\\n            _In_opt_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DEPTH_STENCIL_VIEW_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CreateSampler )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  const D3D12_SAMPLER_DESC *pDesc,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptors )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  UINT NumDestDescriptorRanges,\\r\\n            _In_reads_(NumDestDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pDestDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumDestDescriptorRanges)  const UINT *pDestDescriptorRangeSizes,\\r\\n            _In_  UINT NumSrcDescriptorRanges,\\r\\n            _In_reads_(NumSrcDescriptorRanges)  const D3D12_CPU_DESCRIPTOR_HANDLE *pSrcDescriptorRangeStarts,\\r\\n            _In_reads_opt_(NumSrcDescriptorRanges)  const UINT *pSrcDescriptorRangeSizes,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyDescriptorsSimple )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  UINT NumDescriptors,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptorRangeStart,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE SrcDescriptorRangeStart,\\r\\n            _In_  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);\\r\\n        \\r\\n        D3D12_RESOURCE_ALLOCATION_INFO ( STDMETHODCALLTYPE *GetResourceAllocationInfo )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  UINT visibleMask,\\r\\n            _In_  UINT numResourceDescs,\\r\\n            _In_reads_(numResourceDescs)  const D3D12_RESOURCE_DESC *pResourceDescs);\\r\\n        \\r\\n        D3D12_HEAP_PROPERTIES ( STDMETHODCALLTYPE *GetCustomHeapProperties )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  UINT nodeMask,\\r\\n            D3D12_HEAP_TYPE heapType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommittedResource )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  const D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            D3D12_HEAP_FLAGS HeapFlags,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialResourceState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHeap )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  const D3D12_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreatePlacedResource )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  ID3D12Heap *pHeap,\\r\\n            UINT64 HeapOffset,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateReservedResource )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pDesc,\\r\\n            D3D12_RESOURCE_STATES InitialState,\\r\\n            _In_opt_  const D3D12_CLEAR_VALUE *pOptimizedClearValue,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSharedHandle )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  ID3D12DeviceChild *pObject,\\r\\n            _In_opt_  const SECURITY_ATTRIBUTES *pAttributes,\\r\\n            DWORD Access,\\r\\n            _In_opt_  LPCWSTR Name,\\r\\n            _Out_  HANDLE *pHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandle )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  HANDLE NTHandle,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvObj);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenSharedHandleByName )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  LPCWSTR Name,\\r\\n            DWORD Access,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *pNTHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MakeResident )( \\r\\n            ID3D12Device * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Evict )( \\r\\n            ID3D12Device * This,\\r\\n            UINT NumObjects,\\r\\n            _In_reads_(NumObjects)  ID3D12Pageable *const *ppObjects);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateFence )( \\r\\n            ID3D12Device * This,\\r\\n            UINT64 InitialValue,\\r\\n            D3D12_FENCE_FLAGS Flags,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppFence);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceRemovedReason )( \\r\\n            ID3D12Device * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetCopyableFootprints )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  const D3D12_RESOURCE_DESC *pResourceDesc,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES)  UINT FirstSubresource,\\r\\n            _In_range_(0,D3D12_REQ_SUBRESOURCES-FirstSubresource)  UINT NumSubresources,\\r\\n            UINT64 BaseOffset,\\r\\n            _Out_writes_opt_(NumSubresources)  D3D12_PLACED_SUBRESOURCE_FOOTPRINT *pLayouts,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT *pNumRows,\\r\\n            _Out_writes_opt_(NumSubresources)  UINT64 *pRowSizeInBytes,\\r\\n            _Out_opt_  UINT64 *pTotalBytes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateQueryHeap )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  const D3D12_QUERY_HEAP_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvHeap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStablePowerState )( \\r\\n            ID3D12Device * This,\\r\\n            BOOL Enable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateCommandSignature )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  const D3D12_COMMAND_SIGNATURE_DESC *pDesc,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvCommandSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetResourceTiling )( \\r\\n            ID3D12Device * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _Out_opt_  UINT *pNumTilesForEntireResource,\\r\\n            _Out_opt_  D3D12_PACKED_MIP_INFO *pPackedMipDesc,\\r\\n            _Out_opt_  D3D12_TILE_SHAPE *pStandardTileShapeForNonPackedMips,\\r\\n            _Inout_opt_  UINT *pNumSubresourceTilings,\\r\\n            _In_  UINT FirstSubresourceTilingToGet,\\r\\n            _Out_writes_(*pNumSubresourceTilings)  D3D12_SUBRESOURCE_TILING *pSubresourceTilingsForNonPackedMips);\\r\\n        \\r\\n        LUID ( STDMETHODCALLTYPE *GetAdapterLuid )( \\r\\n            ID3D12Device * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12DeviceVtbl;"},"ID3D12Fence1Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":4722,"type":"Struct","value":"typedef struct ID3D12Fence1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Fence1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Fence1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Fence1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Fence1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Fence1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Fence1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Fence1 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12Fence1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetCompletedValue )( \\r\\n            ID3D12Fence1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventOnCompletion )( \\r\\n            ID3D12Fence1 * This,\\r\\n            UINT64 Value,\\r\\n            HANDLE hEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Signal )( \\r\\n            ID3D12Fence1 * This,\\r\\n            UINT64 Value);\\r\\n        \\r\\n        D3D12_FENCE_FLAGS ( STDMETHODCALLTYPE *GetCreationFlags )( \\r\\n            ID3D12Fence1 * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Fence1Vtbl;"},"ID3D12FenceVtbl":{"comment":"","exp":"","file":"d3d12.h","line":4586,"type":"Struct","value":"typedef struct ID3D12FenceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Fence * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Fence * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Fence * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Fence * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Fence * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Fence * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Fence * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12Fence * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetCompletedValue )( \\r\\n            ID3D12Fence * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventOnCompletion )( \\r\\n            ID3D12Fence * This,\\r\\n            UINT64 Value,\\r\\n            HANDLE hEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Signal )( \\r\\n            ID3D12Fence * This,\\r\\n            UINT64 Value);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12FenceVtbl;"},"ID3D12GraphicsCommandList1Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":6341,"type":"Struct","value":"typedef struct ID3D12GraphicsCommandList1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12GraphicsCommandList1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12GraphicsCommandList1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        D3D12_COMMAND_LIST_TYPE ( STDMETHODCALLTYPE *GetType )( \\r\\n            ID3D12GraphicsCommandList1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            ID3D12GraphicsCommandList1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12CommandAllocator *pAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearState )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_opt_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawInstanced )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT VertexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawIndexedInstanced )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT IndexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartIndexLocation,\\r\\n            _In_  INT BaseVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Dispatch )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT ThreadGroupCountX,\\r\\n            _In_  UINT ThreadGroupCountY,\\r\\n            _In_  UINT ThreadGroupCountZ);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyBufferRegion )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT64 NumBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTextureRegion )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pDst,\\r\\n            UINT DstX,\\r\\n            UINT DstY,\\r\\n            UINT DstZ,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pSrc,\\r\\n            _In_opt_  const D3D12_BOX *pSrcBox);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyResource )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  ID3D12Resource *pSrcResource);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTiles )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _In_  const D3D12_TILED_RESOURCE_COORDINATE *pTileRegionStartCoordinate,\\r\\n            _In_  const D3D12_TILE_REGION_SIZE *pTileRegionSize,\\r\\n            _In_  ID3D12Resource *pBuffer,\\r\\n            UINT64 BufferStartOffsetInBytes,\\r\\n            D3D12_TILE_COPY_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresource )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_  DXGI_FORMAT Format);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetPrimitiveTopology )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  D3D12_PRIMITIVE_TOPOLOGY PrimitiveTopology);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetViewports )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumViewports,\\r\\n            _In_reads_( NumViewports)  const D3D12_VIEWPORT *pViewports);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetScissorRects )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumRects,\\r\\n            _In_reads_( NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetBlendFactor )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_reads_opt_(4)  const FLOAT BlendFactor[ 4 ]);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetStencilRef )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT StencilRef);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPipelineState )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResourceBarrier )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT NumBarriers,\\r\\n            _In_reads_(NumBarriers)  const D3D12_RESOURCE_BARRIER *pBarriers);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteBundle )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12GraphicsCommandList *pCommandList);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetDescriptorHeaps )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT NumDescriptorHeaps,\\r\\n            _In_reads_(NumDescriptorHeaps)  ID3D12DescriptorHeap *const *ppDescriptorHeaps);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootSignature )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootSignature )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetIndexBuffer )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_opt_  const D3D12_INDEX_BUFFER_VIEW *pView);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetVertexBuffers )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_VERTEX_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SOSetTargets )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_STREAM_OUTPUT_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetRenderTargets )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT NumRenderTargetDescriptors,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pRenderTargetDescriptors,\\r\\n            _In_  BOOL RTsSingleHandleToDescriptorRange,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pDepthStencilDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearDepthStencilView )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DepthStencilView,\\r\\n            _In_  D3D12_CLEAR_FLAGS ClearFlags,\\r\\n            _In_  FLOAT Depth,\\r\\n            _In_  UINT8 Stencil,\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearRenderTargetView )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE RenderTargetView,\\r\\n            _In_  const FLOAT ColorRGBA[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewUint )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const UINT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewFloat )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const FLOAT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DiscardResource )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DISCARD_REGION *pRegion);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginQuery )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndQuery )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveQueryData )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT StartIndex,\\r\\n            _In_  UINT NumQueries,\\r\\n            _In_  ID3D12Resource *pDestinationBuffer,\\r\\n            _In_  UINT64 AlignedDestinationBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPredication )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_opt_  ID3D12Resource *pBuffer,\\r\\n            _In_  UINT64 AlignedBufferOffset,\\r\\n            _In_  D3D12_PREDICATION_OP Operation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetMarker )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginEvent )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndEvent )( \\r\\n            ID3D12GraphicsCommandList1 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteIndirect )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12CommandSignature *pCommandSignature,\\r\\n            _In_  UINT MaxCommandCount,\\r\\n            _In_  ID3D12Resource *pArgumentBuffer,\\r\\n            _In_  UINT64 ArgumentBufferOffset,\\r\\n            _In_opt_  ID3D12Resource *pCountBuffer,\\r\\n            _In_  UINT64 CountBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT64 )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetDepthBounds )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  FLOAT Min,\\r\\n            _In_  FLOAT Max);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetSamplePositions )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT NumSamplesPerPixel,\\r\\n            _In_  UINT NumPixels,\\r\\n            _In_reads_(NumSamplesPerPixel*NumPixels)  D3D12_SAMPLE_POSITION *pSamplePositions);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresourceRegion )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  UINT DstX,\\r\\n            _In_  UINT DstY,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_opt_  D3D12_RECT *pSrcRect,\\r\\n            _In_  DXGI_FORMAT Format,\\r\\n            _In_  D3D12_RESOLVE_MODE ResolveMode);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetViewInstanceMask )( \\r\\n            ID3D12GraphicsCommandList1 * This,\\r\\n            _In_  UINT Mask);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12GraphicsCommandList1Vtbl;"},"ID3D12GraphicsCommandList2Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":7005,"type":"Struct","value":"typedef struct ID3D12GraphicsCommandList2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12GraphicsCommandList2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12GraphicsCommandList2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        D3D12_COMMAND_LIST_TYPE ( STDMETHODCALLTYPE *GetType )( \\r\\n            ID3D12GraphicsCommandList2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            ID3D12GraphicsCommandList2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12CommandAllocator *pAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearState )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_opt_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawInstanced )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT VertexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawIndexedInstanced )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT IndexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartIndexLocation,\\r\\n            _In_  INT BaseVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Dispatch )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT ThreadGroupCountX,\\r\\n            _In_  UINT ThreadGroupCountY,\\r\\n            _In_  UINT ThreadGroupCountZ);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyBufferRegion )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT64 NumBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTextureRegion )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pDst,\\r\\n            UINT DstX,\\r\\n            UINT DstY,\\r\\n            UINT DstZ,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pSrc,\\r\\n            _In_opt_  const D3D12_BOX *pSrcBox);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyResource )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  ID3D12Resource *pSrcResource);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTiles )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _In_  const D3D12_TILED_RESOURCE_COORDINATE *pTileRegionStartCoordinate,\\r\\n            _In_  const D3D12_TILE_REGION_SIZE *pTileRegionSize,\\r\\n            _In_  ID3D12Resource *pBuffer,\\r\\n            UINT64 BufferStartOffsetInBytes,\\r\\n            D3D12_TILE_COPY_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresource )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_  DXGI_FORMAT Format);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetPrimitiveTopology )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  D3D12_PRIMITIVE_TOPOLOGY PrimitiveTopology);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetViewports )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumViewports,\\r\\n            _In_reads_( NumViewports)  const D3D12_VIEWPORT *pViewports);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetScissorRects )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumRects,\\r\\n            _In_reads_( NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetBlendFactor )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_reads_opt_(4)  const FLOAT BlendFactor[ 4 ]);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetStencilRef )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT StencilRef);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPipelineState )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResourceBarrier )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT NumBarriers,\\r\\n            _In_reads_(NumBarriers)  const D3D12_RESOURCE_BARRIER *pBarriers);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteBundle )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12GraphicsCommandList *pCommandList);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetDescriptorHeaps )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT NumDescriptorHeaps,\\r\\n            _In_reads_(NumDescriptorHeaps)  ID3D12DescriptorHeap *const *ppDescriptorHeaps);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootSignature )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootSignature )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetIndexBuffer )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_opt_  const D3D12_INDEX_BUFFER_VIEW *pView);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetVertexBuffers )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_VERTEX_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SOSetTargets )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_STREAM_OUTPUT_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetRenderTargets )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT NumRenderTargetDescriptors,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pRenderTargetDescriptors,\\r\\n            _In_  BOOL RTsSingleHandleToDescriptorRange,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pDepthStencilDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearDepthStencilView )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DepthStencilView,\\r\\n            _In_  D3D12_CLEAR_FLAGS ClearFlags,\\r\\n            _In_  FLOAT Depth,\\r\\n            _In_  UINT8 Stencil,\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearRenderTargetView )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE RenderTargetView,\\r\\n            _In_  const FLOAT ColorRGBA[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewUint )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const UINT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewFloat )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const FLOAT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DiscardResource )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DISCARD_REGION *pRegion);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginQuery )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndQuery )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveQueryData )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT StartIndex,\\r\\n            _In_  UINT NumQueries,\\r\\n            _In_  ID3D12Resource *pDestinationBuffer,\\r\\n            _In_  UINT64 AlignedDestinationBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPredication )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_opt_  ID3D12Resource *pBuffer,\\r\\n            _In_  UINT64 AlignedBufferOffset,\\r\\n            _In_  D3D12_PREDICATION_OP Operation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetMarker )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginEvent )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndEvent )( \\r\\n            ID3D12GraphicsCommandList2 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteIndirect )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12CommandSignature *pCommandSignature,\\r\\n            _In_  UINT MaxCommandCount,\\r\\n            _In_  ID3D12Resource *pArgumentBuffer,\\r\\n            _In_  UINT64 ArgumentBufferOffset,\\r\\n            _In_opt_  ID3D12Resource *pCountBuffer,\\r\\n            _In_  UINT64 CountBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT64 )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetDepthBounds )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  FLOAT Min,\\r\\n            _In_  FLOAT Max);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetSamplePositions )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT NumSamplesPerPixel,\\r\\n            _In_  UINT NumPixels,\\r\\n            _In_reads_(NumSamplesPerPixel*NumPixels)  D3D12_SAMPLE_POSITION *pSamplePositions);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresourceRegion )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  UINT DstX,\\r\\n            _In_  UINT DstY,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_opt_  D3D12_RECT *pSrcRect,\\r\\n            _In_  DXGI_FORMAT Format,\\r\\n            _In_  D3D12_RESOLVE_MODE ResolveMode);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetViewInstanceMask )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            _In_  UINT Mask);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *WriteBufferImmediate )( \\r\\n            ID3D12GraphicsCommandList2 * This,\\r\\n            UINT Count,\\r\\n            _In_reads_(Count)  const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER *pParams,\\r\\n            _In_reads_opt_(Count)  const D3D12_WRITEBUFFERIMMEDIATE_MODE *pModes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12GraphicsCommandList2Vtbl;"},"ID3D12GraphicsCommandList3Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":16784,"type":"Struct","value":"typedef struct ID3D12GraphicsCommandList3Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12GraphicsCommandList3 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12GraphicsCommandList3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        D3D12_COMMAND_LIST_TYPE ( STDMETHODCALLTYPE *GetType )( \\r\\n            ID3D12GraphicsCommandList3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            ID3D12GraphicsCommandList3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12CommandAllocator *pAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearState )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_opt_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawInstanced )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT VertexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawIndexedInstanced )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT IndexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartIndexLocation,\\r\\n            _In_  INT BaseVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Dispatch )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT ThreadGroupCountX,\\r\\n            _In_  UINT ThreadGroupCountY,\\r\\n            _In_  UINT ThreadGroupCountZ);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyBufferRegion )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT64 NumBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTextureRegion )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pDst,\\r\\n            UINT DstX,\\r\\n            UINT DstY,\\r\\n            UINT DstZ,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pSrc,\\r\\n            _In_opt_  const D3D12_BOX *pSrcBox);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyResource )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  ID3D12Resource *pSrcResource);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTiles )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _In_  const D3D12_TILED_RESOURCE_COORDINATE *pTileRegionStartCoordinate,\\r\\n            _In_  const D3D12_TILE_REGION_SIZE *pTileRegionSize,\\r\\n            _In_  ID3D12Resource *pBuffer,\\r\\n            UINT64 BufferStartOffsetInBytes,\\r\\n            D3D12_TILE_COPY_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresource )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_  DXGI_FORMAT Format);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetPrimitiveTopology )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  D3D12_PRIMITIVE_TOPOLOGY PrimitiveTopology);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetViewports )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumViewports,\\r\\n            _In_reads_( NumViewports)  const D3D12_VIEWPORT *pViewports);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetScissorRects )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumRects,\\r\\n            _In_reads_( NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetBlendFactor )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_reads_opt_(4)  const FLOAT BlendFactor[ 4 ]);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetStencilRef )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT StencilRef);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPipelineState )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResourceBarrier )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT NumBarriers,\\r\\n            _In_reads_(NumBarriers)  const D3D12_RESOURCE_BARRIER *pBarriers);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteBundle )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12GraphicsCommandList *pCommandList);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetDescriptorHeaps )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT NumDescriptorHeaps,\\r\\n            _In_reads_(NumDescriptorHeaps)  ID3D12DescriptorHeap *const *ppDescriptorHeaps);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootSignature )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootSignature )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetIndexBuffer )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_opt_  const D3D12_INDEX_BUFFER_VIEW *pView);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetVertexBuffers )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_VERTEX_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SOSetTargets )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_STREAM_OUTPUT_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetRenderTargets )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT NumRenderTargetDescriptors,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pRenderTargetDescriptors,\\r\\n            _In_  BOOL RTsSingleHandleToDescriptorRange,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pDepthStencilDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearDepthStencilView )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DepthStencilView,\\r\\n            _In_  D3D12_CLEAR_FLAGS ClearFlags,\\r\\n            _In_  FLOAT Depth,\\r\\n            _In_  UINT8 Stencil,\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearRenderTargetView )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE RenderTargetView,\\r\\n            _In_  const FLOAT ColorRGBA[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewUint )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const UINT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewFloat )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const FLOAT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DiscardResource )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DISCARD_REGION *pRegion);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginQuery )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndQuery )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveQueryData )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT StartIndex,\\r\\n            _In_  UINT NumQueries,\\r\\n            _In_  ID3D12Resource *pDestinationBuffer,\\r\\n            _In_  UINT64 AlignedDestinationBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPredication )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_opt_  ID3D12Resource *pBuffer,\\r\\n            _In_  UINT64 AlignedBufferOffset,\\r\\n            _In_  D3D12_PREDICATION_OP Operation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetMarker )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginEvent )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndEvent )( \\r\\n            ID3D12GraphicsCommandList3 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteIndirect )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12CommandSignature *pCommandSignature,\\r\\n            _In_  UINT MaxCommandCount,\\r\\n            _In_  ID3D12Resource *pArgumentBuffer,\\r\\n            _In_  UINT64 ArgumentBufferOffset,\\r\\n            _In_opt_  ID3D12Resource *pCountBuffer,\\r\\n            _In_  UINT64 CountBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT64 )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetDepthBounds )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  FLOAT Min,\\r\\n            _In_  FLOAT Max);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetSamplePositions )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT NumSamplesPerPixel,\\r\\n            _In_  UINT NumPixels,\\r\\n            _In_reads_(NumSamplesPerPixel*NumPixels)  D3D12_SAMPLE_POSITION *pSamplePositions);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresourceRegion )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  UINT DstX,\\r\\n            _In_  UINT DstY,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_opt_  D3D12_RECT *pSrcRect,\\r\\n            _In_  DXGI_FORMAT Format,\\r\\n            _In_  D3D12_RESOLVE_MODE ResolveMode);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetViewInstanceMask )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_  UINT Mask);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *WriteBufferImmediate )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            UINT Count,\\r\\n            _In_reads_(Count)  const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER *pParams,\\r\\n            _In_reads_opt_(Count)  const D3D12_WRITEBUFFERIMMEDIATE_MODE *pModes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetProtectedResourceSession )( \\r\\n            ID3D12GraphicsCommandList3 * This,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedResourceSession);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12GraphicsCommandList3Vtbl;"},"ID3D12GraphicsCommandList4Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":17717,"type":"Struct","value":"typedef struct ID3D12GraphicsCommandList4Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12GraphicsCommandList4 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12GraphicsCommandList4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        D3D12_COMMAND_LIST_TYPE ( STDMETHODCALLTYPE *GetType )( \\r\\n            ID3D12GraphicsCommandList4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            ID3D12GraphicsCommandList4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12CommandAllocator *pAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearState )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_opt_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawInstanced )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT VertexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawIndexedInstanced )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT IndexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartIndexLocation,\\r\\n            _In_  INT BaseVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Dispatch )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT ThreadGroupCountX,\\r\\n            _In_  UINT ThreadGroupCountY,\\r\\n            _In_  UINT ThreadGroupCountZ);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyBufferRegion )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT64 NumBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTextureRegion )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pDst,\\r\\n            UINT DstX,\\r\\n            UINT DstY,\\r\\n            UINT DstZ,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pSrc,\\r\\n            _In_opt_  const D3D12_BOX *pSrcBox);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyResource )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  ID3D12Resource *pSrcResource);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTiles )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _In_  const D3D12_TILED_RESOURCE_COORDINATE *pTileRegionStartCoordinate,\\r\\n            _In_  const D3D12_TILE_REGION_SIZE *pTileRegionSize,\\r\\n            _In_  ID3D12Resource *pBuffer,\\r\\n            UINT64 BufferStartOffsetInBytes,\\r\\n            D3D12_TILE_COPY_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresource )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_  DXGI_FORMAT Format);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetPrimitiveTopology )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  D3D12_PRIMITIVE_TOPOLOGY PrimitiveTopology);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetViewports )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumViewports,\\r\\n            _In_reads_( NumViewports)  const D3D12_VIEWPORT *pViewports);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetScissorRects )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumRects,\\r\\n            _In_reads_( NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetBlendFactor )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_reads_opt_(4)  const FLOAT BlendFactor[ 4 ]);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetStencilRef )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT StencilRef);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPipelineState )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResourceBarrier )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT NumBarriers,\\r\\n            _In_reads_(NumBarriers)  const D3D12_RESOURCE_BARRIER *pBarriers);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteBundle )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12GraphicsCommandList *pCommandList);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetDescriptorHeaps )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT NumDescriptorHeaps,\\r\\n            _In_reads_(NumDescriptorHeaps)  ID3D12DescriptorHeap *const *ppDescriptorHeaps);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootSignature )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootSignature )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetIndexBuffer )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_opt_  const D3D12_INDEX_BUFFER_VIEW *pView);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetVertexBuffers )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_VERTEX_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SOSetTargets )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_STREAM_OUTPUT_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetRenderTargets )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT NumRenderTargetDescriptors,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pRenderTargetDescriptors,\\r\\n            _In_  BOOL RTsSingleHandleToDescriptorRange,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pDepthStencilDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearDepthStencilView )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DepthStencilView,\\r\\n            _In_  D3D12_CLEAR_FLAGS ClearFlags,\\r\\n            _In_  FLOAT Depth,\\r\\n            _In_  UINT8 Stencil,\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearRenderTargetView )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE RenderTargetView,\\r\\n            _In_  const FLOAT ColorRGBA[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewUint )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const UINT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewFloat )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const FLOAT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DiscardResource )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DISCARD_REGION *pRegion);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginQuery )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndQuery )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveQueryData )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT StartIndex,\\r\\n            _In_  UINT NumQueries,\\r\\n            _In_  ID3D12Resource *pDestinationBuffer,\\r\\n            _In_  UINT64 AlignedDestinationBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPredication )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_opt_  ID3D12Resource *pBuffer,\\r\\n            _In_  UINT64 AlignedBufferOffset,\\r\\n            _In_  D3D12_PREDICATION_OP Operation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetMarker )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginEvent )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndEvent )( \\r\\n            ID3D12GraphicsCommandList4 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteIndirect )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12CommandSignature *pCommandSignature,\\r\\n            _In_  UINT MaxCommandCount,\\r\\n            _In_  ID3D12Resource *pArgumentBuffer,\\r\\n            _In_  UINT64 ArgumentBufferOffset,\\r\\n            _In_opt_  ID3D12Resource *pCountBuffer,\\r\\n            _In_  UINT64 CountBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT64 )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetDepthBounds )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  FLOAT Min,\\r\\n            _In_  FLOAT Max);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetSamplePositions )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT NumSamplesPerPixel,\\r\\n            _In_  UINT NumPixels,\\r\\n            _In_reads_(NumSamplesPerPixel*NumPixels)  D3D12_SAMPLE_POSITION *pSamplePositions);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresourceRegion )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  UINT DstX,\\r\\n            _In_  UINT DstY,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_opt_  D3D12_RECT *pSrcRect,\\r\\n            _In_  DXGI_FORMAT Format,\\r\\n            _In_  D3D12_RESOLVE_MODE ResolveMode);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetViewInstanceMask )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT Mask);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *WriteBufferImmediate )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            UINT Count,\\r\\n            _In_reads_(Count)  const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER *pParams,\\r\\n            _In_reads_opt_(Count)  const D3D12_WRITEBUFFERIMMEDIATE_MODE *pModes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetProtectedResourceSession )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedResourceSession);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginRenderPass )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  UINT NumRenderTargets,\\r\\n            _In_reads_opt_(NumRenderTargets)  const D3D12_RENDER_PASS_RENDER_TARGET_DESC *pRenderTargets,\\r\\n            _In_opt_  const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC *pDepthStencil,\\r\\n            D3D12_RENDER_PASS_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndRenderPass )( \\r\\n            ID3D12GraphicsCommandList4 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *InitializeMetaCommand )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12MetaCommand *pMetaCommand,\\r\\n            _In_reads_bytes_opt_(InitializationParametersDataSizeInBytes)  const void *pInitializationParametersData,\\r\\n            _In_  SIZE_T InitializationParametersDataSizeInBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteMetaCommand )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12MetaCommand *pMetaCommand,\\r\\n            _In_reads_bytes_opt_(ExecutionParametersDataSizeInBytes)  const void *pExecutionParametersData,\\r\\n            _In_  SIZE_T ExecutionParametersDataSizeInBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BuildRaytracingAccelerationStructure )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC *pDesc,\\r\\n            _In_  UINT NumPostbuildInfoDescs,\\r\\n            _In_reads_opt_(NumPostbuildInfoDescs)  const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC *pPostbuildInfoDescs);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EmitRaytracingAccelerationStructurePostbuildInfo )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC *pDesc,\\r\\n            _In_  UINT NumSourceAccelerationStructures,\\r\\n            _In_reads_( NumSourceAccelerationStructures )  const D3D12_GPU_VIRTUAL_ADDRESS *pSourceAccelerationStructureData);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyRaytracingAccelerationStructure )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS DestAccelerationStructureData,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS SourceAccelerationStructureData,\\r\\n            _In_  D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE Mode);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPipelineState1 )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  ID3D12StateObject *pStateObject);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DispatchRays )( \\r\\n            ID3D12GraphicsCommandList4 * This,\\r\\n            _In_  const D3D12_DISPATCH_RAYS_DESC *pDesc);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12GraphicsCommandList4Vtbl;"},"ID3D12GraphicsCommandList5Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":18713,"type":"Struct","value":"typedef struct ID3D12GraphicsCommandList5Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12GraphicsCommandList5 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12GraphicsCommandList5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        D3D12_COMMAND_LIST_TYPE ( STDMETHODCALLTYPE *GetType )( \\r\\n            ID3D12GraphicsCommandList5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            ID3D12GraphicsCommandList5 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12CommandAllocator *pAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearState )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_opt_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawInstanced )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT VertexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawIndexedInstanced )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT IndexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartIndexLocation,\\r\\n            _In_  INT BaseVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Dispatch )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT ThreadGroupCountX,\\r\\n            _In_  UINT ThreadGroupCountY,\\r\\n            _In_  UINT ThreadGroupCountZ);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyBufferRegion )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT64 NumBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTextureRegion )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pDst,\\r\\n            UINT DstX,\\r\\n            UINT DstY,\\r\\n            UINT DstZ,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pSrc,\\r\\n            _In_opt_  const D3D12_BOX *pSrcBox);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyResource )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  ID3D12Resource *pSrcResource);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTiles )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _In_  const D3D12_TILED_RESOURCE_COORDINATE *pTileRegionStartCoordinate,\\r\\n            _In_  const D3D12_TILE_REGION_SIZE *pTileRegionSize,\\r\\n            _In_  ID3D12Resource *pBuffer,\\r\\n            UINT64 BufferStartOffsetInBytes,\\r\\n            D3D12_TILE_COPY_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresource )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_  DXGI_FORMAT Format);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetPrimitiveTopology )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  D3D12_PRIMITIVE_TOPOLOGY PrimitiveTopology);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetViewports )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumViewports,\\r\\n            _In_reads_( NumViewports)  const D3D12_VIEWPORT *pViewports);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetScissorRects )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumRects,\\r\\n            _In_reads_( NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetBlendFactor )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_reads_opt_(4)  const FLOAT BlendFactor[ 4 ]);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetStencilRef )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT StencilRef);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPipelineState )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResourceBarrier )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT NumBarriers,\\r\\n            _In_reads_(NumBarriers)  const D3D12_RESOURCE_BARRIER *pBarriers);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteBundle )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12GraphicsCommandList *pCommandList);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetDescriptorHeaps )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT NumDescriptorHeaps,\\r\\n            _In_reads_(NumDescriptorHeaps)  ID3D12DescriptorHeap *const *ppDescriptorHeaps);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootSignature )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootSignature )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetIndexBuffer )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_opt_  const D3D12_INDEX_BUFFER_VIEW *pView);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetVertexBuffers )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_VERTEX_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SOSetTargets )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_STREAM_OUTPUT_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetRenderTargets )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT NumRenderTargetDescriptors,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pRenderTargetDescriptors,\\r\\n            _In_  BOOL RTsSingleHandleToDescriptorRange,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pDepthStencilDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearDepthStencilView )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DepthStencilView,\\r\\n            _In_  D3D12_CLEAR_FLAGS ClearFlags,\\r\\n            _In_  FLOAT Depth,\\r\\n            _In_  UINT8 Stencil,\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearRenderTargetView )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE RenderTargetView,\\r\\n            _In_  const FLOAT ColorRGBA[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewUint )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const UINT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewFloat )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const FLOAT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DiscardResource )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DISCARD_REGION *pRegion);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginQuery )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndQuery )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveQueryData )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT StartIndex,\\r\\n            _In_  UINT NumQueries,\\r\\n            _In_  ID3D12Resource *pDestinationBuffer,\\r\\n            _In_  UINT64 AlignedDestinationBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPredication )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_opt_  ID3D12Resource *pBuffer,\\r\\n            _In_  UINT64 AlignedBufferOffset,\\r\\n            _In_  D3D12_PREDICATION_OP Operation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetMarker )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginEvent )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndEvent )( \\r\\n            ID3D12GraphicsCommandList5 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteIndirect )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12CommandSignature *pCommandSignature,\\r\\n            _In_  UINT MaxCommandCount,\\r\\n            _In_  ID3D12Resource *pArgumentBuffer,\\r\\n            _In_  UINT64 ArgumentBufferOffset,\\r\\n            _In_opt_  ID3D12Resource *pCountBuffer,\\r\\n            _In_  UINT64 CountBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT64 )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetDepthBounds )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  FLOAT Min,\\r\\n            _In_  FLOAT Max);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetSamplePositions )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT NumSamplesPerPixel,\\r\\n            _In_  UINT NumPixels,\\r\\n            _In_reads_(NumSamplesPerPixel*NumPixels)  D3D12_SAMPLE_POSITION *pSamplePositions);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresourceRegion )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  UINT DstX,\\r\\n            _In_  UINT DstY,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_opt_  D3D12_RECT *pSrcRect,\\r\\n            _In_  DXGI_FORMAT Format,\\r\\n            _In_  D3D12_RESOLVE_MODE ResolveMode);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetViewInstanceMask )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT Mask);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *WriteBufferImmediate )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            UINT Count,\\r\\n            _In_reads_(Count)  const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER *pParams,\\r\\n            _In_reads_opt_(Count)  const D3D12_WRITEBUFFERIMMEDIATE_MODE *pModes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetProtectedResourceSession )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedResourceSession);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginRenderPass )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  UINT NumRenderTargets,\\r\\n            _In_reads_opt_(NumRenderTargets)  const D3D12_RENDER_PASS_RENDER_TARGET_DESC *pRenderTargets,\\r\\n            _In_opt_  const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC *pDepthStencil,\\r\\n            D3D12_RENDER_PASS_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndRenderPass )( \\r\\n            ID3D12GraphicsCommandList5 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *InitializeMetaCommand )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12MetaCommand *pMetaCommand,\\r\\n            _In_reads_bytes_opt_(InitializationParametersDataSizeInBytes)  const void *pInitializationParametersData,\\r\\n            _In_  SIZE_T InitializationParametersDataSizeInBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteMetaCommand )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12MetaCommand *pMetaCommand,\\r\\n            _In_reads_bytes_opt_(ExecutionParametersDataSizeInBytes)  const void *pExecutionParametersData,\\r\\n            _In_  SIZE_T ExecutionParametersDataSizeInBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BuildRaytracingAccelerationStructure )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC *pDesc,\\r\\n            _In_  UINT NumPostbuildInfoDescs,\\r\\n            _In_reads_opt_(NumPostbuildInfoDescs)  const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC *pPostbuildInfoDescs);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EmitRaytracingAccelerationStructurePostbuildInfo )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC *pDesc,\\r\\n            _In_  UINT NumSourceAccelerationStructures,\\r\\n            _In_reads_( NumSourceAccelerationStructures )  const D3D12_GPU_VIRTUAL_ADDRESS *pSourceAccelerationStructureData);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyRaytracingAccelerationStructure )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS DestAccelerationStructureData,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS SourceAccelerationStructureData,\\r\\n            _In_  D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE Mode);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPipelineState1 )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  ID3D12StateObject *pStateObject);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DispatchRays )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  const D3D12_DISPATCH_RAYS_DESC *pDesc);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetShadingRate )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_  D3D12_SHADING_RATE baseShadingRate,\\r\\n            _In_reads_opt_(D3D12_RS_SET_SHADING_RATE_COMBINER_COUNT)  const D3D12_SHADING_RATE_COMBINER *combiners);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetShadingRateImage )( \\r\\n            ID3D12GraphicsCommandList5 * This,\\r\\n            _In_opt_  ID3D12Resource *shadingRateImage);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12GraphicsCommandList5Vtbl;"},"ID3D12GraphicsCommandList6Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":19480,"type":"Struct","value":"typedef struct ID3D12GraphicsCommandList6Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12GraphicsCommandList6 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12GraphicsCommandList6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        D3D12_COMMAND_LIST_TYPE ( STDMETHODCALLTYPE *GetType )( \\r\\n            ID3D12GraphicsCommandList6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            ID3D12GraphicsCommandList6 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12CommandAllocator *pAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearState )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_opt_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawInstanced )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT VertexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawIndexedInstanced )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT IndexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartIndexLocation,\\r\\n            _In_  INT BaseVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Dispatch )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT ThreadGroupCountX,\\r\\n            _In_  UINT ThreadGroupCountY,\\r\\n            _In_  UINT ThreadGroupCountZ);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyBufferRegion )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT64 NumBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTextureRegion )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pDst,\\r\\n            UINT DstX,\\r\\n            UINT DstY,\\r\\n            UINT DstZ,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pSrc,\\r\\n            _In_opt_  const D3D12_BOX *pSrcBox);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyResource )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  ID3D12Resource *pSrcResource);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTiles )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _In_  const D3D12_TILED_RESOURCE_COORDINATE *pTileRegionStartCoordinate,\\r\\n            _In_  const D3D12_TILE_REGION_SIZE *pTileRegionSize,\\r\\n            _In_  ID3D12Resource *pBuffer,\\r\\n            UINT64 BufferStartOffsetInBytes,\\r\\n            D3D12_TILE_COPY_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresource )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_  DXGI_FORMAT Format);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetPrimitiveTopology )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  D3D12_PRIMITIVE_TOPOLOGY PrimitiveTopology);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetViewports )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumViewports,\\r\\n            _In_reads_( NumViewports)  const D3D12_VIEWPORT *pViewports);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetScissorRects )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumRects,\\r\\n            _In_reads_( NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetBlendFactor )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_reads_opt_(4)  const FLOAT BlendFactor[ 4 ]);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetStencilRef )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT StencilRef);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPipelineState )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResourceBarrier )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT NumBarriers,\\r\\n            _In_reads_(NumBarriers)  const D3D12_RESOURCE_BARRIER *pBarriers);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteBundle )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12GraphicsCommandList *pCommandList);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetDescriptorHeaps )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT NumDescriptorHeaps,\\r\\n            _In_reads_(NumDescriptorHeaps)  ID3D12DescriptorHeap *const *ppDescriptorHeaps);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootSignature )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootSignature )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetIndexBuffer )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_opt_  const D3D12_INDEX_BUFFER_VIEW *pView);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetVertexBuffers )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_VERTEX_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SOSetTargets )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_STREAM_OUTPUT_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetRenderTargets )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT NumRenderTargetDescriptors,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pRenderTargetDescriptors,\\r\\n            _In_  BOOL RTsSingleHandleToDescriptorRange,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pDepthStencilDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearDepthStencilView )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DepthStencilView,\\r\\n            _In_  D3D12_CLEAR_FLAGS ClearFlags,\\r\\n            _In_  FLOAT Depth,\\r\\n            _In_  UINT8 Stencil,\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearRenderTargetView )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE RenderTargetView,\\r\\n            _In_  const FLOAT ColorRGBA[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewUint )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const UINT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewFloat )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const FLOAT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DiscardResource )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DISCARD_REGION *pRegion);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginQuery )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndQuery )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveQueryData )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT StartIndex,\\r\\n            _In_  UINT NumQueries,\\r\\n            _In_  ID3D12Resource *pDestinationBuffer,\\r\\n            _In_  UINT64 AlignedDestinationBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPredication )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_opt_  ID3D12Resource *pBuffer,\\r\\n            _In_  UINT64 AlignedBufferOffset,\\r\\n            _In_  D3D12_PREDICATION_OP Operation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetMarker )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginEvent )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndEvent )( \\r\\n            ID3D12GraphicsCommandList6 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteIndirect )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12CommandSignature *pCommandSignature,\\r\\n            _In_  UINT MaxCommandCount,\\r\\n            _In_  ID3D12Resource *pArgumentBuffer,\\r\\n            _In_  UINT64 ArgumentBufferOffset,\\r\\n            _In_opt_  ID3D12Resource *pCountBuffer,\\r\\n            _In_  UINT64 CountBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *AtomicCopyBufferUINT64 )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT Dependencies,\\r\\n            _In_reads_(Dependencies)  ID3D12Resource *const *ppDependentResources,\\r\\n            _In_reads_(Dependencies)  const D3D12_SUBRESOURCE_RANGE_UINT64 *pDependentSubresourceRanges);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetDepthBounds )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  FLOAT Min,\\r\\n            _In_  FLOAT Max);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetSamplePositions )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT NumSamplesPerPixel,\\r\\n            _In_  UINT NumPixels,\\r\\n            _In_reads_(NumSamplesPerPixel*NumPixels)  D3D12_SAMPLE_POSITION *pSamplePositions);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresourceRegion )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  UINT DstX,\\r\\n            _In_  UINT DstY,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_opt_  D3D12_RECT *pSrcRect,\\r\\n            _In_  DXGI_FORMAT Format,\\r\\n            _In_  D3D12_RESOLVE_MODE ResolveMode);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetViewInstanceMask )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT Mask);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *WriteBufferImmediate )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            UINT Count,\\r\\n            _In_reads_(Count)  const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER *pParams,\\r\\n            _In_reads_opt_(Count)  const D3D12_WRITEBUFFERIMMEDIATE_MODE *pModes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetProtectedResourceSession )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_opt_  ID3D12ProtectedResourceSession *pProtectedResourceSession);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginRenderPass )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT NumRenderTargets,\\r\\n            _In_reads_opt_(NumRenderTargets)  const D3D12_RENDER_PASS_RENDER_TARGET_DESC *pRenderTargets,\\r\\n            _In_opt_  const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC *pDepthStencil,\\r\\n            D3D12_RENDER_PASS_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndRenderPass )( \\r\\n            ID3D12GraphicsCommandList6 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *InitializeMetaCommand )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12MetaCommand *pMetaCommand,\\r\\n            _In_reads_bytes_opt_(InitializationParametersDataSizeInBytes)  const void *pInitializationParametersData,\\r\\n            _In_  SIZE_T InitializationParametersDataSizeInBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteMetaCommand )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12MetaCommand *pMetaCommand,\\r\\n            _In_reads_bytes_opt_(ExecutionParametersDataSizeInBytes)  const void *pExecutionParametersData,\\r\\n            _In_  SIZE_T ExecutionParametersDataSizeInBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BuildRaytracingAccelerationStructure )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC *pDesc,\\r\\n            _In_  UINT NumPostbuildInfoDescs,\\r\\n            _In_reads_opt_(NumPostbuildInfoDescs)  const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC *pPostbuildInfoDescs);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EmitRaytracingAccelerationStructurePostbuildInfo )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC *pDesc,\\r\\n            _In_  UINT NumSourceAccelerationStructures,\\r\\n            _In_reads_( NumSourceAccelerationStructures )  const D3D12_GPU_VIRTUAL_ADDRESS *pSourceAccelerationStructureData);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyRaytracingAccelerationStructure )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS DestAccelerationStructureData,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS SourceAccelerationStructureData,\\r\\n            _In_  D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE Mode);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPipelineState1 )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  ID3D12StateObject *pStateObject);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DispatchRays )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  const D3D12_DISPATCH_RAYS_DESC *pDesc);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetShadingRate )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  D3D12_SHADING_RATE baseShadingRate,\\r\\n            _In_reads_opt_(D3D12_RS_SET_SHADING_RATE_COMBINER_COUNT)  const D3D12_SHADING_RATE_COMBINER *combiners);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetShadingRateImage )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_opt_  ID3D12Resource *shadingRateImage);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DispatchMesh )( \\r\\n            ID3D12GraphicsCommandList6 * This,\\r\\n            _In_  UINT ThreadGroupCountX,\\r\\n            _In_  UINT ThreadGroupCountY,\\r\\n            _In_  UINT ThreadGroupCountZ);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12GraphicsCommandList6Vtbl;"},"ID3D12GraphicsCommandListVtbl":{"comment":"","exp":"","file":"d3d12.h","line":5729,"type":"Struct","value":"typedef struct ID3D12GraphicsCommandListVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12GraphicsCommandList * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12GraphicsCommandList * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        D3D12_COMMAND_LIST_TYPE ( STDMETHODCALLTYPE *GetType )( \\r\\n            ID3D12GraphicsCommandList * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            ID3D12GraphicsCommandList * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12CommandAllocator *pAllocator,\\r\\n            _In_opt_  ID3D12PipelineState *pInitialState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearState )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_opt_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawInstanced )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT VertexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DrawIndexedInstanced )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT IndexCountPerInstance,\\r\\n            _In_  UINT InstanceCount,\\r\\n            _In_  UINT StartIndexLocation,\\r\\n            _In_  INT BaseVertexLocation,\\r\\n            _In_  UINT StartInstanceLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Dispatch )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT ThreadGroupCountX,\\r\\n            _In_  UINT ThreadGroupCountY,\\r\\n            _In_  UINT ThreadGroupCountZ);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyBufferRegion )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12Resource *pDstBuffer,\\r\\n            UINT64 DstOffset,\\r\\n            _In_  ID3D12Resource *pSrcBuffer,\\r\\n            UINT64 SrcOffset,\\r\\n            UINT64 NumBytes);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTextureRegion )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pDst,\\r\\n            UINT DstX,\\r\\n            UINT DstY,\\r\\n            UINT DstZ,\\r\\n            _In_  const D3D12_TEXTURE_COPY_LOCATION *pSrc,\\r\\n            _In_opt_  const D3D12_BOX *pSrcBox);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyResource )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  ID3D12Resource *pSrcResource);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *CopyTiles )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12Resource *pTiledResource,\\r\\n            _In_  const D3D12_TILED_RESOURCE_COORDINATE *pTileRegionStartCoordinate,\\r\\n            _In_  const D3D12_TILE_REGION_SIZE *pTileRegionSize,\\r\\n            _In_  ID3D12Resource *pBuffer,\\r\\n            UINT64 BufferStartOffsetInBytes,\\r\\n            D3D12_TILE_COPY_FLAGS Flags);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveSubresource )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12Resource *pDstResource,\\r\\n            _In_  UINT DstSubresource,\\r\\n            _In_  ID3D12Resource *pSrcResource,\\r\\n            _In_  UINT SrcSubresource,\\r\\n            _In_  DXGI_FORMAT Format);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetPrimitiveTopology )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  D3D12_PRIMITIVE_TOPOLOGY PrimitiveTopology);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetViewports )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumViewports,\\r\\n            _In_reads_( NumViewports)  const D3D12_VIEWPORT *pViewports);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RSSetScissorRects )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_range_(0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  UINT NumRects,\\r\\n            _In_reads_( NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetBlendFactor )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_reads_opt_(4)  const FLOAT BlendFactor[ 4 ]);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetStencilRef )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT StencilRef);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPipelineState )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12PipelineState *pPipelineState);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResourceBarrier )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT NumBarriers,\\r\\n            _In_reads_(NumBarriers)  const D3D12_RESOURCE_BARRIER *pBarriers);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteBundle )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12GraphicsCommandList *pCommandList);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetDescriptorHeaps )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT NumDescriptorHeaps,\\r\\n            _In_reads_(NumDescriptorHeaps)  ID3D12DescriptorHeap *const *ppDescriptorHeaps);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootSignature )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootSignature )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_opt_  ID3D12RootSignature *pRootSignature);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootDescriptorTable )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstant )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT SrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRoot32BitConstants )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  UINT Num32BitValuesToSet,\\r\\n            _In_reads_(Num32BitValuesToSet*sizeof(UINT))  const void *pSrcData,\\r\\n            _In_  UINT DestOffsetIn32BitValues);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootConstantBufferView )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootShaderResourceView )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetComputeRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetGraphicsRootUnorderedAccessView )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT RootParameterIndex,\\r\\n            _In_  D3D12_GPU_VIRTUAL_ADDRESS BufferLocation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetIndexBuffer )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_opt_  const D3D12_INDEX_BUFFER_VIEW *pView);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *IASetVertexBuffers )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_VERTEX_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SOSetTargets )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT StartSlot,\\r\\n            _In_  UINT NumViews,\\r\\n            _In_reads_opt_(NumViews)  const D3D12_STREAM_OUTPUT_BUFFER_VIEW *pViews);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OMSetRenderTargets )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  UINT NumRenderTargetDescriptors,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pRenderTargetDescriptors,\\r\\n            _In_  BOOL RTsSingleHandleToDescriptorRange,\\r\\n            _In_opt_  const D3D12_CPU_DESCRIPTOR_HANDLE *pDepthStencilDescriptor);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearDepthStencilView )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE DepthStencilView,\\r\\n            _In_  D3D12_CLEAR_FLAGS ClearFlags,\\r\\n            _In_  FLOAT Depth,\\r\\n            _In_  UINT8 Stencil,\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearRenderTargetView )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE RenderTargetView,\\r\\n            _In_  const FLOAT ColorRGBA[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewUint )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const UINT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearUnorderedAccessViewFloat )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap,\\r\\n            _In_  D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_  const FLOAT Values[ 4 ],\\r\\n            _In_  UINT NumRects,\\r\\n            _In_reads_(NumRects)  const D3D12_RECT *pRects);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *DiscardResource )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            _In_opt_  const D3D12_DISCARD_REGION *pRegion);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginQuery )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndQuery )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ResolveQueryData )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12QueryHeap *pQueryHeap,\\r\\n            _In_  D3D12_QUERY_TYPE Type,\\r\\n            _In_  UINT StartIndex,\\r\\n            _In_  UINT NumQueries,\\r\\n            _In_  ID3D12Resource *pDestinationBuffer,\\r\\n            _In_  UINT64 AlignedDestinationBufferOffset);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPredication )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_opt_  ID3D12Resource *pBuffer,\\r\\n            _In_  UINT64 AlignedBufferOffset,\\r\\n            _In_  D3D12_PREDICATION_OP Operation);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetMarker )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginEvent )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            UINT Metadata,\\r\\n            _In_reads_bytes_opt_(Size)  const void *pData,\\r\\n            UINT Size);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndEvent )( \\r\\n            ID3D12GraphicsCommandList * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ExecuteIndirect )( \\r\\n            ID3D12GraphicsCommandList * This,\\r\\n            _In_  ID3D12CommandSignature *pCommandSignature,\\r\\n            _In_  UINT MaxCommandCount,\\r\\n            _In_  ID3D12Resource *pArgumentBuffer,\\r\\n            _In_  UINT64 ArgumentBufferOffset,\\r\\n            _In_opt_  ID3D12Resource *pCountBuffer,\\r\\n            _In_  UINT64 CountBufferOffset);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12GraphicsCommandListVtbl;"},"ID3D12Heap1Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":16653,"type":"Struct","value":"typedef struct ID3D12Heap1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Heap1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Heap1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Heap1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Heap1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Heap1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Heap1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Heap1 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12Heap1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        D3D12_HEAP_DESC ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            ID3D12Heap1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProtectedResourceSession )( \\r\\n            ID3D12Heap1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppProtectedSession);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Heap1Vtbl;"},"ID3D12HeapVtbl":{"comment":"","exp":"","file":"d3d12.h","line":4126,"type":"Struct","value":"typedef struct ID3D12HeapVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Heap * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Heap * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Heap * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Heap * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Heap * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Heap * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Heap * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12Heap * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        D3D12_HEAP_DESC ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            ID3D12Heap * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12HeapVtbl;"},"ID3D12InfoQueueVtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":2510,"type":"Struct","value":"typedef struct ID3D12InfoQueueVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMessageCountLimit )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  UINT64 MessageCountLimit);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearStoredMessages )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMessage )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  UINT64 MessageIndex,\\r\\n            _Out_writes_bytes_opt_(*pMessageByteLength)  D3D12_MESSAGE *pMessage,\\r\\n            _Inout_  SIZE_T *pMessageByteLength);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetNumMessagesAllowedByStorageFilter )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetNumMessagesDeniedByStorageFilter )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetNumStoredMessages )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetNumStoredMessagesAllowedByRetrievalFilter )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetNumMessagesDiscardedByMessageCountLimit )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetMessageCountLimit )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStorageFilterEntries )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_INFO_QUEUE_FILTER *pFilter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStorageFilter )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _Out_writes_bytes_opt_(*pFilterByteLength)  D3D12_INFO_QUEUE_FILTER *pFilter,\\r\\n            _Inout_  SIZE_T *pFilterByteLength);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearStorageFilter )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushEmptyStorageFilter )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushCopyOfStorageFilter )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushStorageFilter )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_INFO_QUEUE_FILTER *pFilter);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *PopStorageFilter )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetStorageFilterStackSize )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddRetrievalFilterEntries )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_INFO_QUEUE_FILTER *pFilter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRetrievalFilter )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _Out_writes_bytes_opt_(*pFilterByteLength)  D3D12_INFO_QUEUE_FILTER *pFilter,\\r\\n            _Inout_  SIZE_T *pFilterByteLength);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ClearRetrievalFilter )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushEmptyRetrievalFilter )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushCopyOfRetrievalFilter )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PushRetrievalFilter )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_INFO_QUEUE_FILTER *pFilter);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *PopRetrievalFilter )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        UINT ( STDMETHODCALLTYPE *GetRetrievalFilterStackSize )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddMessage )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_MESSAGE_CATEGORY Category,\\r\\n            _In_  D3D12_MESSAGE_SEVERITY Severity,\\r\\n            _In_  D3D12_MESSAGE_ID ID,\\r\\n            _In_  LPCSTR pDescription);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddApplicationMessage )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_MESSAGE_SEVERITY Severity,\\r\\n            _In_  LPCSTR pDescription);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBreakOnCategory )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_MESSAGE_CATEGORY Category,\\r\\n            _In_  BOOL bEnable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBreakOnSeverity )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_MESSAGE_SEVERITY Severity,\\r\\n            _In_  BOOL bEnable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBreakOnID )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_MESSAGE_ID ID,\\r\\n            _In_  BOOL bEnable);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetBreakOnCategory )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_MESSAGE_CATEGORY Category);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetBreakOnSeverity )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_MESSAGE_SEVERITY Severity);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetBreakOnID )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  D3D12_MESSAGE_ID ID);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetMuteDebugOutput )( \\r\\n            ID3D12InfoQueue * This,\\r\\n            _In_  BOOL bMute);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetMuteDebugOutput )( \\r\\n            ID3D12InfoQueue * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12InfoQueueVtbl;"},"ID3D12LifetimeOwnerVtbl":{"comment":"","exp":"","file":"d3d12.h","line":11537,"type":"Struct","value":"typedef struct ID3D12LifetimeOwnerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12LifetimeOwner * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12LifetimeOwner * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12LifetimeOwner * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *LifetimeStateUpdated )( \\r\\n            ID3D12LifetimeOwner * This,\\r\\n            D3D12_LIFETIME_STATE NewState);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12LifetimeOwnerVtbl;"},"ID3D12LifetimeTrackerVtbl":{"comment":"","exp":"","file":"d3d12.h","line":11733,"type":"Struct","value":"typedef struct ID3D12LifetimeTrackerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12LifetimeTracker * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12LifetimeTracker * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12LifetimeTracker * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12LifetimeTracker * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12LifetimeTracker * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12LifetimeTracker * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12LifetimeTracker * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12LifetimeTracker * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DestroyOwnedObject )( \\r\\n            ID3D12LifetimeTracker * This,\\r\\n            _In_  ID3D12DeviceChild *pObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12LifetimeTrackerVtbl;"},"ID3D12MetaCommandVtbl":{"comment":"","exp":"","file":"d3d12.h","line":17538,"type":"Struct","value":"typedef struct ID3D12MetaCommandVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12MetaCommand * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12MetaCommand * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12MetaCommand * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12MetaCommand * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12MetaCommand * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12MetaCommand * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12MetaCommand * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12MetaCommand * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetRequiredParameterResourceSize )( \\r\\n            ID3D12MetaCommand * This,\\r\\n            _In_  D3D12_META_COMMAND_PARAMETER_STAGE Stage,\\r\\n            _In_  UINT ParameterIndex);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12MetaCommandVtbl;"},"ID3D12ObjectVtbl":{"comment":"","exp":"","file":"d3d12.h","line":1558,"type":"Struct","value":"typedef struct ID3D12ObjectVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Object * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Object * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Object * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Object * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Object * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Object * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Object * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12ObjectVtbl;"},"ID3D12PageableVtbl":{"comment":"","exp":"","file":"d3d12.h","line":4012,"type":"Struct","value":"typedef struct ID3D12PageableVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Pageable * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Pageable * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Pageable * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Pageable * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Pageable * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Pageable * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Pageable * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12Pageable * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12PageableVtbl;"},"ID3D12PipelineLibrary1Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":8789,"type":"Struct","value":"typedef struct ID3D12PipelineLibrary1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12PipelineLibrary1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12PipelineLibrary1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12PipelineLibrary1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12PipelineLibrary1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12PipelineLibrary1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12PipelineLibrary1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12PipelineLibrary1 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12PipelineLibrary1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *StorePipeline )( \\r\\n            ID3D12PipelineLibrary1 * This,\\r\\n            _In_opt_  LPCWSTR pName,\\r\\n            _In_  ID3D12PipelineState *pPipeline);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LoadGraphicsPipeline )( \\r\\n            ID3D12PipelineLibrary1 * This,\\r\\n            _In_  LPCWSTR pName,\\r\\n            _In_  const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LoadComputePipeline )( \\r\\n            ID3D12PipelineLibrary1 * This,\\r\\n            _In_  LPCWSTR pName,\\r\\n            _In_  const D3D12_COMPUTE_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        SIZE_T ( STDMETHODCALLTYPE *GetSerializedSize )( \\r\\n            ID3D12PipelineLibrary1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Serialize )( \\r\\n            ID3D12PipelineLibrary1 * This,\\r\\n            _Out_writes_(DataSizeInBytes)  void *pData,\\r\\n            SIZE_T DataSizeInBytes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LoadPipeline )( \\r\\n            ID3D12PipelineLibrary1 * This,\\r\\n            _In_  LPCWSTR pName,\\r\\n            _In_  const D3D12_PIPELINE_STATE_STREAM_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12PipelineLibrary1Vtbl;"},"ID3D12PipelineLibraryVtbl":{"comment":"","exp":"","file":"d3d12.h","line":8629,"type":"Struct","value":"typedef struct ID3D12PipelineLibraryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12PipelineLibrary * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12PipelineLibrary * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12PipelineLibrary * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12PipelineLibrary * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12PipelineLibrary * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12PipelineLibrary * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12PipelineLibrary * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12PipelineLibrary * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *StorePipeline )( \\r\\n            ID3D12PipelineLibrary * This,\\r\\n            _In_opt_  LPCWSTR pName,\\r\\n            _In_  ID3D12PipelineState *pPipeline);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LoadGraphicsPipeline )( \\r\\n            ID3D12PipelineLibrary * This,\\r\\n            _In_  LPCWSTR pName,\\r\\n            _In_  const D3D12_GRAPHICS_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LoadComputePipeline )( \\r\\n            ID3D12PipelineLibrary * This,\\r\\n            _In_  LPCWSTR pName,\\r\\n            _In_  const D3D12_COMPUTE_PIPELINE_STATE_DESC *pDesc,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppPipelineState);\\r\\n        \\r\\n        SIZE_T ( STDMETHODCALLTYPE *GetSerializedSize )( \\r\\n            ID3D12PipelineLibrary * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Serialize )( \\r\\n            ID3D12PipelineLibrary * This,\\r\\n            _Out_writes_(DataSizeInBytes)  void *pData,\\r\\n            SIZE_T DataSizeInBytes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12PipelineLibraryVtbl;"},"ID3D12PipelineStateVtbl":{"comment":"","exp":"","file":"d3d12.h","line":4866,"type":"Struct","value":"typedef struct ID3D12PipelineStateVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12PipelineState * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12PipelineState * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12PipelineState * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12PipelineState * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12PipelineState * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12PipelineState * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12PipelineState * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12PipelineState * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCachedBlob )( \\r\\n            ID3D12PipelineState * This,\\r\\n            _COM_Outptr_  ID3DBlob **ppBlob);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12PipelineStateVtbl;"},"ID3D12ProtectedResourceSession1Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":14622,"type":"Struct","value":"typedef struct ID3D12ProtectedResourceSession1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12ProtectedResourceSession1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12ProtectedResourceSession1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12ProtectedResourceSession1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12ProtectedResourceSession1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12ProtectedResourceSession1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12ProtectedResourceSession1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12ProtectedResourceSession1 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12ProtectedResourceSession1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStatusFence )( \\r\\n            ID3D12ProtectedResourceSession1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppFence);\\r\\n        \\r\\n        D3D12_PROTECTED_SESSION_STATUS ( STDMETHODCALLTYPE *GetSessionStatus )( \\r\\n            ID3D12ProtectedResourceSession1 * This);\\r\\n        \\r\\n        D3D12_PROTECTED_RESOURCE_SESSION_DESC ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            ID3D12ProtectedResourceSession1 * This);\\r\\n        \\r\\n        D3D12_PROTECTED_RESOURCE_SESSION_DESC1 ( STDMETHODCALLTYPE *GetDesc1 )( \\r\\n            ID3D12ProtectedResourceSession1 * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12ProtectedResourceSession1Vtbl;"},"ID3D12ProtectedResourceSessionVtbl":{"comment":"","exp":"","file":"d3d12.h","line":10744,"type":"Struct","value":"typedef struct ID3D12ProtectedResourceSessionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12ProtectedResourceSession * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12ProtectedResourceSession * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12ProtectedResourceSession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12ProtectedResourceSession * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12ProtectedResourceSession * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12ProtectedResourceSession * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12ProtectedResourceSession * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12ProtectedResourceSession * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStatusFence )( \\r\\n            ID3D12ProtectedResourceSession * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppFence);\\r\\n        \\r\\n        D3D12_PROTECTED_SESSION_STATUS ( STDMETHODCALLTYPE *GetSessionStatus )( \\r\\n            ID3D12ProtectedResourceSession * This);\\r\\n        \\r\\n        D3D12_PROTECTED_RESOURCE_SESSION_DESC ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            ID3D12ProtectedResourceSession * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12ProtectedResourceSessionVtbl;"},"ID3D12ProtectedSessionVtbl":{"comment":"","exp":"","file":"d3d12.h","line":10581,"type":"Struct","value":"typedef struct ID3D12ProtectedSessionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12ProtectedSession * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12ProtectedSession * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12ProtectedSession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12ProtectedSession * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12ProtectedSession * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12ProtectedSession * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12ProtectedSession * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12ProtectedSession * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStatusFence )( \\r\\n            ID3D12ProtectedSession * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppFence);\\r\\n        \\r\\n        D3D12_PROTECTED_SESSION_STATUS ( STDMETHODCALLTYPE *GetSessionStatus )( \\r\\n            ID3D12ProtectedSession * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12ProtectedSessionVtbl;"},"ID3D12QueryHeapVtbl":{"comment":"","exp":"","file":"d3d12.h","line":5135,"type":"Struct","value":"typedef struct ID3D12QueryHeapVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12QueryHeap * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12QueryHeap * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12QueryHeap * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12QueryHeap * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12QueryHeap * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12QueryHeap * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12QueryHeap * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12QueryHeap * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12QueryHeapVtbl;"},"ID3D12Resource1Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":16274,"type":"Struct","value":"typedef struct ID3D12Resource1Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Resource1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Resource1 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Resource1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Resource1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Resource1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Resource1 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Resource1 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12Resource1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Map )( \\r\\n            ID3D12Resource1 * This,\\r\\n            UINT Subresource,\\r\\n            _In_opt_  const D3D12_RANGE *pReadRange,\\r\\n            _Outptr_opt_result_bytebuffer_(_Inexpressible_(\"Dependent on resource\"))  void **ppData);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Unmap )( \\r\\n            ID3D12Resource1 * This,\\r\\n            UINT Subresource,\\r\\n            _In_opt_  const D3D12_RANGE *pWrittenRange);\\r\\n        \\r\\n        D3D12_RESOURCE_DESC ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            ID3D12Resource1 * This);\\r\\n        \\r\\n        D3D12_GPU_VIRTUAL_ADDRESS ( STDMETHODCALLTYPE *GetGPUVirtualAddress )( \\r\\n            ID3D12Resource1 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WriteToSubresource )( \\r\\n            ID3D12Resource1 * This,\\r\\n            UINT DstSubresource,\\r\\n            _In_opt_  const D3D12_BOX *pDstBox,\\r\\n            _In_  const void *pSrcData,\\r\\n            UINT SrcRowPitch,\\r\\n            UINT SrcDepthPitch);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReadFromSubresource )( \\r\\n            ID3D12Resource1 * This,\\r\\n            _Out_  void *pDstData,\\r\\n            UINT DstRowPitch,\\r\\n            UINT DstDepthPitch,\\r\\n            UINT SrcSubresource,\\r\\n            _In_opt_  const D3D12_BOX *pSrcBox);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetHeapProperties )( \\r\\n            ID3D12Resource1 * This,\\r\\n            _Out_opt_  D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            _Out_opt_  D3D12_HEAP_FLAGS *pHeapFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProtectedResourceSession )( \\r\\n            ID3D12Resource1 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppProtectedSession);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Resource1Vtbl;"},"ID3D12Resource2Vtbl":{"comment":"","exp":"","file":"d3d12.h","line":16457,"type":"Struct","value":"typedef struct ID3D12Resource2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Resource2 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Resource2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Resource2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Resource2 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Resource2 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Resource2 * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Resource2 * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12Resource2 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Map )( \\r\\n            ID3D12Resource2 * This,\\r\\n            UINT Subresource,\\r\\n            _In_opt_  const D3D12_RANGE *pReadRange,\\r\\n            _Outptr_opt_result_bytebuffer_(_Inexpressible_(\"Dependent on resource\"))  void **ppData);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Unmap )( \\r\\n            ID3D12Resource2 * This,\\r\\n            UINT Subresource,\\r\\n            _In_opt_  const D3D12_RANGE *pWrittenRange);\\r\\n        \\r\\n        D3D12_RESOURCE_DESC ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            ID3D12Resource2 * This);\\r\\n        \\r\\n        D3D12_GPU_VIRTUAL_ADDRESS ( STDMETHODCALLTYPE *GetGPUVirtualAddress )( \\r\\n            ID3D12Resource2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WriteToSubresource )( \\r\\n            ID3D12Resource2 * This,\\r\\n            UINT DstSubresource,\\r\\n            _In_opt_  const D3D12_BOX *pDstBox,\\r\\n            _In_  const void *pSrcData,\\r\\n            UINT SrcRowPitch,\\r\\n            UINT SrcDepthPitch);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReadFromSubresource )( \\r\\n            ID3D12Resource2 * This,\\r\\n            _Out_  void *pDstData,\\r\\n            UINT DstRowPitch,\\r\\n            UINT DstDepthPitch,\\r\\n            UINT SrcSubresource,\\r\\n            _In_opt_  const D3D12_BOX *pSrcBox);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetHeapProperties )( \\r\\n            ID3D12Resource2 * This,\\r\\n            _Out_opt_  D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            _Out_opt_  D3D12_HEAP_FLAGS *pHeapFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProtectedResourceSession )( \\r\\n            ID3D12Resource2 * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppProtectedSession);\\r\\n        \\r\\n        D3D12_RESOURCE_DESC1 ( STDMETHODCALLTYPE *GetDesc1 )( \\r\\n            ID3D12Resource2 * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12Resource2Vtbl;"},"ID3D12ResourceVtbl":{"comment":"","exp":"","file":"d3d12.h","line":4280,"type":"Struct","value":"typedef struct ID3D12ResourceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Resource * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Resource * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Resource * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12Resource * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12Resource * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12Resource * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12Resource * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12Resource * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Map )( \\r\\n            ID3D12Resource * This,\\r\\n            UINT Subresource,\\r\\n            _In_opt_  const D3D12_RANGE *pReadRange,\\r\\n            _Outptr_opt_result_bytebuffer_(_Inexpressible_(\"Dependent on resource\"))  void **ppData);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Unmap )( \\r\\n            ID3D12Resource * This,\\r\\n            UINT Subresource,\\r\\n            _In_opt_  const D3D12_RANGE *pWrittenRange);\\r\\n        \\r\\n        D3D12_RESOURCE_DESC ( STDMETHODCALLTYPE *GetDesc )( \\r\\n            ID3D12Resource * This);\\r\\n        \\r\\n        D3D12_GPU_VIRTUAL_ADDRESS ( STDMETHODCALLTYPE *GetGPUVirtualAddress )( \\r\\n            ID3D12Resource * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WriteToSubresource )( \\r\\n            ID3D12Resource * This,\\r\\n            UINT DstSubresource,\\r\\n            _In_opt_  const D3D12_BOX *pDstBox,\\r\\n            _In_  const void *pSrcData,\\r\\n            UINT SrcRowPitch,\\r\\n            UINT SrcDepthPitch);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReadFromSubresource )( \\r\\n            ID3D12Resource * This,\\r\\n            _Out_  void *pDstData,\\r\\n            UINT DstRowPitch,\\r\\n            UINT DstDepthPitch,\\r\\n            UINT SrcSubresource,\\r\\n            _In_opt_  const D3D12_BOX *pSrcBox);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetHeapProperties )( \\r\\n            ID3D12Resource * This,\\r\\n            _Out_opt_  D3D12_HEAP_PROPERTIES *pHeapProperties,\\r\\n            _Out_opt_  D3D12_HEAP_FLAGS *pHeapFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12ResourceVtbl;"},"ID3D12RootSignatureDeserializerVtbl":{"comment":"","exp":"","file":"d3d12.h","line":3614,"type":"Struct","value":"typedef struct ID3D12RootSignatureDeserializerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12RootSignatureDeserializer * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12RootSignatureDeserializer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12RootSignatureDeserializer * This);\\r\\n        \\r\\n        const D3D12_ROOT_SIGNATURE_DESC *( STDMETHODCALLTYPE *GetRootSignatureDesc )( \\r\\n            ID3D12RootSignatureDeserializer * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12RootSignatureDeserializerVtbl;"},"ID3D12RootSignatureVtbl":{"comment":"","exp":"","file":"d3d12.h","line":1775,"type":"Struct","value":"typedef struct ID3D12RootSignatureVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12RootSignature * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12RootSignature * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12RootSignature * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12RootSignature * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12RootSignature * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12RootSignature * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12RootSignature * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12RootSignature * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12RootSignatureVtbl;"},"ID3D12SharingContractVtbl":{"comment":"","exp":"","file":"d3d12sdklayers.h","line":1403,"type":"Struct","value":"typedef struct ID3D12SharingContractVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12SharingContract * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12SharingContract * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12SharingContract * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Present )( \\r\\n            ID3D12SharingContract * This,\\r\\n            _In_  ID3D12Resource *pResource,\\r\\n            UINT Subresource,\\r\\n            _In_  HWND window);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SharedFenceSignal )( \\r\\n            ID3D12SharingContract * This,\\r\\n            _In_  ID3D12Fence *pFence,\\r\\n            UINT64 FenceValue);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *BeginCapturableWork )( \\r\\n            ID3D12SharingContract * This,\\r\\n            _In_  REFGUID guid);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EndCapturableWork )( \\r\\n            ID3D12SharingContract * This,\\r\\n            _In_  REFGUID guid);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12SharingContractVtbl;"},"ID3D12StateObjectPropertiesVtbl":{"comment":"","exp":"","file":"d3d12.h","line":12051,"type":"Struct","value":"typedef struct ID3D12StateObjectPropertiesVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12StateObjectProperties * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12StateObjectProperties * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12StateObjectProperties * This);\\r\\n        \\r\\n        void *( STDMETHODCALLTYPE *GetShaderIdentifier )( \\r\\n            ID3D12StateObjectProperties * This,\\r\\n            _In_  LPCWSTR pExportName);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetShaderStackSize )( \\r\\n            ID3D12StateObjectProperties * This,\\r\\n            _In_  LPCWSTR pExportName);\\r\\n        \\r\\n        UINT64 ( STDMETHODCALLTYPE *GetPipelineStackSize )( \\r\\n            ID3D12StateObjectProperties * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetPipelineStackSize )( \\r\\n            ID3D12StateObjectProperties * This,\\r\\n            UINT64 PipelineStackSizeInBytes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12StateObjectPropertiesVtbl;"},"ID3D12StateObjectVtbl":{"comment":"","exp":"","file":"d3d12.h","line":11927,"type":"Struct","value":"typedef struct ID3D12StateObjectVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12StateObject * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12StateObject * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12StateObject * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            ID3D12StateObject * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _Inout_  UINT *pDataSize,\\r\\n            _Out_writes_bytes_opt_( *pDataSize )  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( \\r\\n            ID3D12StateObject * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_  UINT DataSize,\\r\\n            _In_reads_bytes_opt_( DataSize )  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( \\r\\n            ID3D12StateObject * This,\\r\\n            _In_  REFGUID guid,\\r\\n            _In_opt_  const IUnknown *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetName )( \\r\\n            ID3D12StateObject * This,\\r\\n            _In_z_  LPCWSTR Name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            ID3D12StateObject * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_opt_  void **ppvDevice);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12StateObjectVtbl;"},"ID3D12SwapChainAssistantVtbl":{"comment":"","exp":"","file":"d3d12.h","line":11627,"type":"Struct","value":"typedef struct ID3D12SwapChainAssistantVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12SwapChainAssistant * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12SwapChainAssistant * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12SwapChainAssistant * This);\\r\\n        \\r\\n        LUID ( STDMETHODCALLTYPE *GetLUID )( \\r\\n            ID3D12SwapChainAssistant * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSwapChainObject )( \\r\\n            ID3D12SwapChainAssistant * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentResourceAndCommandQueue )( \\r\\n            ID3D12SwapChainAssistant * This,\\r\\n            REFIID riidResource,\\r\\n            _COM_Outptr_  void **ppvResource,\\r\\n            REFIID riidQueue,\\r\\n            _COM_Outptr_  void **ppvQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InsertImplicitSync )( \\r\\n            ID3D12SwapChainAssistant * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12SwapChainAssistantVtbl;"},"ID3D12ToolsVtbl":{"comment":"","exp":"","file":"d3d12.h","line":18453,"type":"Struct","value":"typedef struct ID3D12ToolsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12Tools * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12Tools * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12Tools * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *EnableShaderInstrumentation )( \\r\\n            ID3D12Tools * This,\\r\\n            BOOL bEnable);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *ShaderInstrumentationEnabled )( \\r\\n            ID3D12Tools * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12ToolsVtbl;"},"ID3D12VersionedRootSignatureDeserializerVtbl":{"comment":"","exp":"","file":"d3d12.h","line":3695,"type":"Struct","value":"typedef struct ID3D12VersionedRootSignatureDeserializerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ID3D12VersionedRootSignatureDeserializer * This,\\r\\n            REFIID riid,\\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ID3D12VersionedRootSignatureDeserializer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ID3D12VersionedRootSignatureDeserializer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRootSignatureDescAtVersion )( \\r\\n            ID3D12VersionedRootSignatureDeserializer * This,\\r\\n            D3D_ROOT_SIGNATURE_VERSION convertToVersion,\\r\\n            _Out_  const D3D12_VERSIONED_ROOT_SIGNATURE_DESC **ppDesc);\\r\\n        \\r\\n        const D3D12_VERSIONED_ROOT_SIGNATURE_DESC *( STDMETHODCALLTYPE *GetUnconvertedRootSignatureDesc )( \\r\\n            ID3D12VersionedRootSignatureDeserializer * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ID3D12VersionedRootSignatureDeserializerVtbl;"},"IHolographicCameraInteropVtbl":{"comment":"","exp":"","file":"Windows.Graphics.Holographic.Interop.h","line":139,"type":"Struct","value":"typedef struct IHolographicCameraInteropVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IHolographicCameraInterop * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IHolographicCameraInterop * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IHolographicCameraInterop * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIids )( \\r\\n            __RPC__in IHolographicCameraInterop * This,\\r\\n            \/* [out] *\/ __RPC__out ULONG *iidCount,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( \\r\\n            __RPC__in IHolographicCameraInterop * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt HSTRING *className);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( \\r\\n            __RPC__in IHolographicCameraInterop * This,\\r\\n            \/* [out] *\/ __RPC__out TrustLevel *trustLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDirect3D12BackBufferResource )( \\r\\n            __RPC__in IHolographicCameraInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Device *pDevice,\\r\\n            \/* [in] *\/ __RPC__in D3D12_RESOURCE_DESC *pTexture2DDesc,\\r\\n            \/* [retval][out] *\/ __RPC__deref_out_opt ID3D12Resource **ppCreatedTexture2DResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDirect3D12HardwareProtectedBackBufferResource )( \\r\\n            __RPC__in IHolographicCameraInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Device *pDevice,\\r\\n            \/* [in] *\/ __RPC__in D3D12_RESOURCE_DESC *pTexture2DDesc,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12ProtectedResourceSession *pProtectedResourceSession,\\r\\n            \/* [retval][out] *\/ __RPC__deref_out_opt ID3D12Resource **ppCreatedTexture2DResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AcquireDirect3D12BufferResource )( \\r\\n            __RPC__in IHolographicCameraInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Resource *pResourceToAcquire,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12CommandQueue *pCommandQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AcquireDirect3D12BufferResourceWithTimeout )( \\r\\n            __RPC__in IHolographicCameraInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Resource *pResourceToAcquire,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12CommandQueue *pCommandQueue,\\r\\n            \/* [in] *\/ UINT64 duration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnacquireDirect3D12BufferResource )( \\r\\n            __RPC__in IHolographicCameraInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Resource *pResourceToUnacquire);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IHolographicCameraInteropVtbl;"},"IHolographicCameraRenderingParametersInteropVtbl":{"comment":"","exp":"","file":"Windows.Graphics.Holographic.Interop.h","line":288,"type":"Struct","value":"typedef struct IHolographicCameraRenderingParametersInteropVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IHolographicCameraRenderingParametersInterop * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IHolographicCameraRenderingParametersInterop * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IHolographicCameraRenderingParametersInterop * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIids )( \\r\\n            __RPC__in IHolographicCameraRenderingParametersInterop * This,\\r\\n            \/* [out] *\/ __RPC__out ULONG *iidCount,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( \\r\\n            __RPC__in IHolographicCameraRenderingParametersInterop * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt HSTRING *className);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( \\r\\n            __RPC__in IHolographicCameraRenderingParametersInterop * This,\\r\\n            \/* [out] *\/ __RPC__out TrustLevel *trustLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CommitDirect3D12Resource )( \\r\\n            __RPC__in IHolographicCameraRenderingParametersInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Resource *pColorResourceToCommit,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Fence *pColorResourceFence,\\r\\n            \/* [in] *\/ UINT64 colorResourceFenceSignalValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CommitDirect3D12ResourceWithDepthData )( \\r\\n            __RPC__in IHolographicCameraRenderingParametersInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Resource *pColorResourceToCommit,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Fence *pColorResourceFence,\\r\\n            \/* [in] *\/ UINT64 colorResourceFenceSignalValue,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Resource *pDepthResourceToCommit,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Fence *pDepthResourceFence,\\r\\n            \/* [in] *\/ UINT64 depthResourceFenceSignalValue);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IHolographicCameraRenderingParametersInteropVtbl;"},"IHolographicQuadLayerInteropVtbl":{"comment":"","exp":"","file":"Windows.Graphics.Holographic.Interop.h","line":425,"type":"Struct","value":"typedef struct IHolographicQuadLayerInteropVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IHolographicQuadLayerInterop * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IHolographicQuadLayerInterop * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IHolographicQuadLayerInterop * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIids )( \\r\\n            __RPC__in IHolographicQuadLayerInterop * This,\\r\\n            \/* [out] *\/ __RPC__out ULONG *iidCount,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( \\r\\n            __RPC__in IHolographicQuadLayerInterop * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt HSTRING *className);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( \\r\\n            __RPC__in IHolographicQuadLayerInterop * This,\\r\\n            \/* [out] *\/ __RPC__out TrustLevel *trustLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDirect3D12ContentBufferResource )( \\r\\n            __RPC__in IHolographicQuadLayerInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Device *pDevice,\\r\\n            \/* [in] *\/ __RPC__in D3D12_RESOURCE_DESC *pTexture2DDesc,\\r\\n            \/* [retval][out] *\/ __RPC__deref_out_opt ID3D12Resource **ppTexture2DResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateDirect3D12HardwareProtectedContentBufferResource )( \\r\\n            __RPC__in IHolographicQuadLayerInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Device *pDevice,\\r\\n            \/* [in] *\/ __RPC__in D3D12_RESOURCE_DESC *pTexture2DDesc,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12ProtectedResourceSession *pProtectedResourceSession,\\r\\n            \/* [retval][out] *\/ __RPC__deref_out_opt ID3D12Resource **ppCreatedTexture2DResource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AcquireDirect3D12BufferResource )( \\r\\n            __RPC__in IHolographicQuadLayerInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Resource *pResourceToAcquire,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12CommandQueue *pCommandQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AcquireDirect3D12BufferResourceWithTimeout )( \\r\\n            __RPC__in IHolographicQuadLayerInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Resource *pResourceToAcquire,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12CommandQueue *pCommandQueue,\\r\\n            \/* [in] *\/ UINT64 duration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnacquireDirect3D12BufferResource )( \\r\\n            __RPC__in IHolographicQuadLayerInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Resource *pResourceToUnacquire);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IHolographicQuadLayerInteropVtbl;"},"IHolographicQuadLayerUpdateParametersInteropVtbl":{"comment":"","exp":"","file":"Windows.Graphics.Holographic.Interop.h","line":566,"type":"Struct","value":"typedef struct IHolographicQuadLayerUpdateParametersInteropVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IHolographicQuadLayerUpdateParametersInterop * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IHolographicQuadLayerUpdateParametersInterop * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IHolographicQuadLayerUpdateParametersInterop * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIids )( \\r\\n            __RPC__in IHolographicQuadLayerUpdateParametersInterop * This,\\r\\n            \/* [out] *\/ __RPC__out ULONG *iidCount,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( \\r\\n            __RPC__in IHolographicQuadLayerUpdateParametersInterop * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt HSTRING *className);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( \\r\\n            __RPC__in IHolographicQuadLayerUpdateParametersInterop * This,\\r\\n            \/* [out] *\/ __RPC__out TrustLevel *trustLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CommitDirect3D12Resource )( \\r\\n            __RPC__in IHolographicQuadLayerUpdateParametersInterop * This,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Resource *pColorResourceToCommit,\\r\\n            \/* [in] *\/ __RPC__in_opt ID3D12Fence *pColorResourceFence,\\r\\n            \/* [in] *\/ UINT64 colorResourceFenceSignalValue);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IHolographicQuadLayerUpdateParametersInteropVtbl;"},"INTERFACE":{"comment":"","dupe":[{"comment":"","exp":"ID3D12ShaderReflectionVariable","file":"d3d12shader.h","line":299,"type":"Unknown","value":"ID3D12ShaderReflectionVariable"},{"comment":"","exp":"ID3D12ShaderReflectionConstantBuffer","file":"d3d12shader.h","line":317,"type":"Unknown","value":"ID3D12ShaderReflectionConstantBuffer"},{"comment":"","exp":"ID3D12ShaderReflection","file":"d3d12shader.h","line":338,"type":"Unknown","value":"ID3D12ShaderReflection"},{"comment":"","exp":"ID3D12LibraryReflection","file":"d3d12shader.h","line":392,"type":"Unknown","value":"ID3D12LibraryReflection"},{"comment":"","exp":"ID3D12FunctionReflection","file":"d3d12shader.h","line":411,"type":"Unknown","value":"ID3D12FunctionReflection"},{"comment":"","exp":"ID3D12FunctionParameterReflection","file":"d3d12shader.h","line":438,"type":"Unknown","value":"ID3D12FunctionParameterReflection"}],"exp":"ID3D12ShaderReflectionType","file":"d3d12shader.h","line":274,"type":"Unknown","value":"ID3D12ShaderReflectionType"},"LUID_DEFINED":{"comment":"","exp":"1","file":"d3d12.h","line":7904,"type":"Integer","value":1},"_D3D12_FUNCTION_DESC":{"comment":"","exp":"","file":"d3d12shader.h","line":184,"type":"Struct","value":"typedef struct _D3D12_FUNCTION_DESC\\r\\n{\\r\\n    UINT                    Version;                     \/\/ Shader version\\r\\n    LPCSTR                  Creator;                     \/\/ Creator string\\r\\n    UINT                    Flags;                       \/\/ Shader compilation\/parse flags\\r\\n    \\r\\n    UINT                    ConstantBuffers;             \/\/ Number of constant buffers\\r\\n    UINT                    BoundResources;              \/\/ Number of bound resources\\r\\n    UINT                    InstructionCount;            \/\/ Number of emitted instructions\\r\\n    UINT                    TempRegisterCount;           \/\/ Number of temporary registers used \\r\\n    UINT                    TempArrayCount;              \/\/ Number of temporary arrays used\\r\\n    UINT                    DefCount;                    \/\/ Number of constant defines \\r\\n    UINT                    DclCount;                    \/\/ Number of declarations (input + output)\\r\\n    UINT                    TextureNormalInstructions;   \/\/ Number of non-categorized texture instructions\\r\\n    UINT                    TextureLoadInstructions;     \/\/ Number of texture load instructions\\r\\n    UINT                    TextureCompInstructions;     \/\/ Number of texture comparison instructions\\r\\n    UINT                    TextureBiasInstructions;     \/\/ Number of texture bias instructions\\r\\n    UINT                    TextureGradientInstructions; \/\/ Number of texture gradient instructions\\r\\n    UINT                    FloatInstructionCount;       \/\/ Number of floating point arithmetic instructions used\\r\\n    UINT                    IntInstructionCount;         \/\/ Number of signed integer arithmetic instructions used\\r\\n    UINT                    UintInstructionCount;        \/\/ Number of unsigned integer arithmetic instructions used\\r\\n    UINT                    StaticFlowControlCount;      \/\/ Number of static flow control instructions used\\r\\n    UINT                    DynamicFlowControlCount;     \/\/ Number of dynamic flow control instructions used\\r\\n    UINT                    MacroInstructionCount;       \/\/ Number of macro instructions used\\r\\n    UINT                    ArrayInstructionCount;       \/\/ Number of array instructions used\\r\\n    UINT                    MovInstructionCount;         \/\/ Number of mov instructions used\\r\\n    UINT                    MovcInstructionCount;        \/\/ Number of movc instructions used\\r\\n    UINT                    ConversionInstructionCount;  \/\/ Number of type conversion instructions used\\r\\n    UINT                    BitwiseInstructionCount;     \/\/ Number of bitwise arithmetic instructions used\\r\\n    D3D_FEATURE_LEVEL       MinFeatureLevel;             \/\/ Min target of the function byte code\\r\\n    UINT64                  RequiredFeatureFlags;        \/\/ Required feature flags\\r\\n    LPCSTR                  Name;                        \/\/ Function name\\r\\n    INT                     FunctionParameterCount;      \/\/ Number of logical parameters in the function signature (not including return)\\r\\n    BOOL                    HasReturn;                   \/\/ TRUE, if function returns a value, false - it is a subroutine\\r\\n    BOOL                    Has10Level9VertexShader;     \/\/ TRUE, if there is a 10L9 VS blob\\r\\n    BOOL                    Has10Level9PixelShader;      \/\/ TRUE, if there is a 10L9 PS blob\\r\\n} D3D12_FUNCTION_DESC;"},"_D3D12_LIBRARY_DESC":{"comment":"","exp":"","file":"d3d12shader.h","line":177,"type":"Struct","value":"typedef struct _D3D12_LIBRARY_DESC\\r\\n{\\r\\n    LPCSTR    Creator;           \/\/ The name of the originator of the library.\\r\\n    UINT      Flags;             \/\/ Compilation flags.\\r\\n    UINT      FunctionCount;     \/\/ Number of functions exported from the library.\\r\\n} D3D12_LIBRARY_DESC;"},"_D3D12_PARAMETER_DESC":{"comment":"","exp":"","file":"d3d12shader.h","line":224,"type":"Struct","value":"typedef struct _D3D12_PARAMETER_DESC\\r\\n{\\r\\n    LPCSTR                      Name;               \/\/ Parameter name.\\r\\n    LPCSTR                      SemanticName;       \/\/ Parameter semantic name (+index).\\r\\n    D3D_SHADER_VARIABLE_TYPE    Type;               \/\/ Element type.\\r\\n    D3D_SHADER_VARIABLE_CLASS   Class;              \/\/ Scalar\/Vector\/Matrix.\\r\\n    UINT                        Rows;               \/\/ Rows are for matrix parameters.\\r\\n    UINT                        Columns;            \/\/ Components or Columns in matrix.\\r\\n    D3D_INTERPOLATION_MODE      InterpolationMode;  \/\/ Interpolation mode.\\r\\n    D3D_PARAMETER_FLAGS         Flags;              \/\/ Parameter modifiers.\\r\\n    UINT                        FirstInRegister;    \/\/ The first input register for this parameter.\\r\\n    UINT                        FirstInComponent;   \/\/ The first input register component for this parameter.\\r\\n    UINT                        FirstOutRegister;   \/\/ The first output register for this parameter.\\r\\n    UINT                        FirstOutComponent;  \/\/ The first output register component for this parameter.\\r\\n} D3D12_PARAMETER_DESC;"},"_D3D12_SHADER_BUFFER_DESC":{"comment":"","exp":"","file":"d3d12shader.h","line":61,"type":"Struct","value":"typedef struct _D3D12_SHADER_BUFFER_DESC\\r\\n{\\r\\n    LPCSTR                  Name;           \/\/ Name of the constant buffer\\r\\n    D3D_CBUFFER_TYPE        Type;           \/\/ Indicates type of buffer content\\r\\n    UINT                    Variables;      \/\/ Number of member variables\\r\\n    UINT                    Size;           \/\/ Size of CB (in bytes)\\r\\n    UINT                    uFlags;         \/\/ Buffer description flags\\r\\n} D3D12_SHADER_BUFFER_DESC;"},"_D3D12_SHADER_DESC":{"comment":"","exp":"","file":"d3d12shader.h","line":101,"type":"Struct","value":"typedef struct _D3D12_SHADER_DESC\\r\\n{\\r\\n    UINT                    Version;                     \/\/ Shader version\\r\\n    LPCSTR                  Creator;                     \/\/ Creator string\\r\\n    UINT                    Flags;                       \/\/ Shader compilation\/parse flags\\r\\n    \\r\\n    UINT                    ConstantBuffers;             \/\/ Number of constant buffers\\r\\n    UINT                    BoundResources;              \/\/ Number of bound resources\\r\\n    UINT                    InputParameters;             \/\/ Number of parameters in the input signature\\r\\n    UINT                    OutputParameters;            \/\/ Number of parameters in the output signature\\r\\n    UINT                    InstructionCount;            \/\/ Number of emitted instructions\\r\\n    UINT                    TempRegisterCount;           \/\/ Number of temporary registers used \\r\\n    UINT                    TempArrayCount;              \/\/ Number of temporary arrays used\\r\\n    UINT                    DefCount;                    \/\/ Number of constant defines \\r\\n    UINT                    DclCount;                    \/\/ Number of declarations (input + output)\\r\\n    UINT                    TextureNormalInstructions;   \/\/ Number of non-categorized texture instructions\\r\\n    UINT                    TextureLoadInstructions;     \/\/ Number of texture load instructions\\r\\n    UINT                    TextureCompInstructions;     \/\/ Number of texture comparison instructions\\r\\n    UINT                    TextureBiasInstructions;     \/\/ Number of texture bias instructions\\r\\n    UINT                    TextureGradientInstructions; \/\/ Number of texture gradient instructions\\r\\n    UINT                    FloatInstructionCount;       \/\/ Number of floating point arithmetic instructions used\\r\\n    UINT                    IntInstructionCount;         \/\/ Number of signed integer arithmetic instructions used\\r\\n    UINT                    UintInstructionCount;        \/\/ Number of unsigned integer arithmetic instructions used\\r\\n    UINT                    StaticFlowControlCount;      \/\/ Number of static flow control instructions used\\r\\n    UINT                    DynamicFlowControlCount;     \/\/ Number of dynamic flow control instructions used\\r\\n    UINT                    MacroInstructionCount;       \/\/ Number of macro instructions used\\r\\n    UINT                    ArrayInstructionCount;       \/\/ Number of array instructions used\\r\\n    UINT                    CutInstructionCount;         \/\/ Number of cut instructions used\\r\\n    UINT                    EmitInstructionCount;        \/\/ Number of emit instructions used\\r\\n    D3D_PRIMITIVE_TOPOLOGY  GSOutputTopology;            \/\/ Geometry shader output topology\\r\\n    UINT                    GSMaxOutputVertexCount;      \/\/ Geometry shader maximum output vertex count\\r\\n    D3D_PRIMITIVE           InputPrimitive;              \/\/ GS\/HS input primitive\\r\\n    UINT                    PatchConstantParameters;     \/\/ Number of parameters in the patch constant signature\\r\\n    UINT                    cGSInstanceCount;            \/\/ Number of Geometry shader instances\\r\\n    UINT                    cControlPoints;              \/\/ Number of control points in the HS->DS stage\\r\\n    D3D_TESSELLATOR_OUTPUT_PRIMITIVE HSOutputPrimitive;  \/\/ Primitive output by the tessellator\\r\\n    D3D_TESSELLATOR_PARTITIONING HSPartitioning;         \/\/ Partitioning mode of the tessellator\\r\\n    D3D_TESSELLATOR_DOMAIN  TessellatorDomain;           \/\/ Domain of the tessellator (quad, tri, isoline)\\r\\n    \/\/ instruction counts\\r\\n    UINT cBarrierInstructions;                           \/\/ Number of barrier instructions in a compute shader\\r\\n    UINT cInterlockedInstructions;                       \/\/ Number of interlocked instructions\\r\\n    UINT cTextureStoreInstructions;                      \/\/ Number of texture writes\\r\\n} D3D12_SHADER_DESC;"},"_D3D12_SHADER_INPUT_BIND_DESC":{"comment":"","exp":"","file":"d3d12shader.h","line":146,"type":"Struct","value":"typedef struct _D3D12_SHADER_INPUT_BIND_DESC\\r\\n{\\r\\n    LPCSTR                      Name;           \/\/ Name of the resource\\r\\n    D3D_SHADER_INPUT_TYPE       Type;           \/\/ Type of resource (e.g. texture, cbuffer, etc.)\\r\\n    UINT                        BindPoint;      \/\/ Starting bind point\\r\\n    UINT                        BindCount;      \/\/ Number of contiguous bind points (for arrays)\\r\\n    UINT                        uFlags;         \/\/ Input binding flags\\r\\n    D3D_RESOURCE_RETURN_TYPE    ReturnType;     \/\/ Return type (if texture)\\r\\n    D3D_SRV_DIMENSION           Dimension;      \/\/ Dimension (if texture)\\r\\n    UINT                        NumSamples;     \/\/ Number of samples (0 if not MS texture)\\r\\n    UINT                        Space;          \/\/ Register space\\r\\n    UINT uID;                                   \/\/ Range ID in the bytecode\\r\\n} D3D12_SHADER_INPUT_BIND_DESC;"},"_D3D12_SHADER_TYPE_DESC":{"comment":"","exp":"","file":"d3d12shader.h","line":83,"type":"Struct","value":"typedef struct _D3D12_SHADER_TYPE_DESC\\r\\n{\\r\\n    D3D_SHADER_VARIABLE_CLASS   Class;          \/\/ Variable class (e.g. object, matrix, etc.)\\r\\n    D3D_SHADER_VARIABLE_TYPE    Type;           \/\/ Variable type (e.g. float, sampler, etc.)\\r\\n    UINT                        Rows;           \/\/ Number of rows (for matrices, 1 for other numeric, 0 if not applicable)\\r\\n    UINT                        Columns;        \/\/ Number of columns (for vectors & matrices, 1 for other numeric, 0 if not applicable)\\r\\n    UINT                        Elements;       \/\/ Number of elements (0 if not an array)\\r\\n    UINT                        Members;        \/\/ Number of members (0 if not a structure)\\r\\n    UINT                        Offset;         \/\/ Offset from the start of structure (0 if not a structure member)\\r\\n    LPCSTR                      Name;           \/\/ Name of type, can be NULL\\r\\n} D3D12_SHADER_TYPE_DESC;"},"_D3D12_SHADER_VARIABLE_DESC":{"comment":"","exp":"","file":"d3d12shader.h","line":70,"type":"Struct","value":"typedef struct _D3D12_SHADER_VARIABLE_DESC\\r\\n{\\r\\n    LPCSTR                  Name;           \/\/ Name of the variable\\r\\n    UINT                    StartOffset;    \/\/ Offset in constant buffer's backing store\\r\\n    UINT                    Size;           \/\/ Size of variable (in bytes)\\r\\n    UINT                    uFlags;         \/\/ Variable flags\\r\\n    LPVOID                  DefaultValue;   \/\/ Raw pointer to default value\\r\\n    UINT                    StartTexture;   \/\/ First texture index (or -1 if no textures used)\\r\\n    UINT                    TextureSize;    \/\/ Number of texture slots possibly used.\\r\\n    UINT                    StartSampler;   \/\/ First sampler index (or -1 if no textures used)\\r\\n    UINT                    SamplerSize;    \/\/ Number of sampler slots possibly used.\\r\\n} D3D12_SHADER_VARIABLE_DESC;"},"_D3D12_SIGNATURE_PARAMETER_DESC":{"comment":"","exp":"","file":"d3d12shader.h","line":44,"type":"Struct","value":"typedef struct _D3D12_SIGNATURE_PARAMETER_DESC\\r\\n{\\r\\n    LPCSTR                      SemanticName;   \/\/ Name of the semantic\\r\\n    UINT                        SemanticIndex;  \/\/ Index of the semantic\\r\\n    UINT                        Register;       \/\/ Number of member variables\\r\\n    D3D_NAME                    SystemValueType;\/\/ A predefined system value, or D3D_NAME_UNDEFINED if not applicable\\r\\n    D3D_REGISTER_COMPONENT_TYPE ComponentType;  \/\/ Scalar type (e.g. uint, float, etc.)\\r\\n    BYTE                        Mask;           \/\/ Mask to indicate which components of the register\\r\\n                                                \/\/ are used (combination of D3D10_COMPONENT_MASK values)\\r\\n    BYTE                        ReadWriteMask;  \/\/ Mask to indicate whether a given component is \\r\\n                                                \/\/ never written (if this is an output signature) or\\r\\n                                                \/\/ always read (if this is an input signature).\\r\\n                                                \/\/ (combination of D3D_MASK_* values)\\r\\n    UINT                        Stream;         \/\/ Stream index\\r\\n    D3D_MIN_PRECISION           MinPrecision;   \/\/ Minimum desired interpolation precision\\r\\n} D3D12_SIGNATURE_PARAMETER_DESC;"},"__LUID":{"comment":"","exp":"","file":"d3d12.h","line":7905,"type":"Struct","value":"typedef struct __LUID\\r\\n    {\\r\\n    DWORD LowPart;\\r\\n    LONG HighPart;\\r\\n    } \\tLUID;"},"__REQUIRED_RPCNDR_H_VERSION__":{"comment":"","exp":"500","file":"d3d11on12.h","line":17,"type":"Integer","value":500},"__REQUIRED_RPCSAL_H_VERSION__":{"comment":"","exp":"100","file":"d3d11on12.h","line":22,"type":"Integer","value":100}},"__includes_list":{"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|Windows.Graphics.Holographic.Interop.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["inspectable.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\winrt\\inspectable.h"],["d3d12.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\d3d12.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|d3d11on12.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["oaidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OAIdl.h"],["ocidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OCIdl.h"],["d3d11.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\d3d11.h"],["d3d12.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\d3d12.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|d3d12.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["oaidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OAIdl.h"],["ocidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OCIdl.h"],["dxgicommon.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\dxgicommon.h"],["dxgiformat.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\dxgiformat.h"],["d3dcommon.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\d3dcommon.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["d3d12sdklayers.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\d3d12sdklayers.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|d3d12sdklayers.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["oaidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OAIdl.h"],["ocidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OCIdl.h"],["d3d12.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\d3d12.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|d3d12shader.h":[["d3dcommon.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\d3dcommon.h"]]}}