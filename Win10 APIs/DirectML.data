{"__const_list":{"DML_ACTIVATION_ELU_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":535,"type":"Struct","value":"struct DML_ACTIVATION_ELU_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT Alpha;\\r\\n};"},"DML_ACTIVATION_HARDMAX_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":542,"type":"Struct","value":"struct DML_ACTIVATION_HARDMAX_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ACTIVATION_HARD_SIGMOID_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":548,"type":"Struct","value":"struct DML_ACTIVATION_HARD_SIGMOID_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT Alpha;\\r\\n    FLOAT Beta;\\r\\n};"},"DML_ACTIVATION_IDENTITY_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":556,"type":"Struct","value":"struct DML_ACTIVATION_IDENTITY_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ACTIVATION_LEAKY_RELU_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":562,"type":"Struct","value":"struct DML_ACTIVATION_LEAKY_RELU_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT Alpha;\\r\\n};"},"DML_ACTIVATION_LINEAR_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":569,"type":"Struct","value":"struct DML_ACTIVATION_LINEAR_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT Alpha;\\r\\n    FLOAT Beta;\\r\\n};"},"DML_ACTIVATION_LOG_SOFTMAX_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":577,"type":"Struct","value":"struct DML_ACTIVATION_LOG_SOFTMAX_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ACTIVATION_PARAMETERIZED_RELU_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":583,"type":"Struct","value":"struct DML_ACTIVATION_PARAMETERIZED_RELU_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* SlopeTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ACTIVATION_PARAMETRIC_SOFTPLUS_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":590,"type":"Struct","value":"struct DML_ACTIVATION_PARAMETRIC_SOFTPLUS_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT Alpha;\\r\\n    FLOAT Beta;\\r\\n};"},"DML_ACTIVATION_RELU_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":598,"type":"Struct","value":"struct DML_ACTIVATION_RELU_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ACTIVATION_SCALED_ELU_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":604,"type":"Struct","value":"struct DML_ACTIVATION_SCALED_ELU_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT Alpha;\\r\\n    FLOAT Gamma;\\r\\n};"},"DML_ACTIVATION_SCALED_TANH_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":612,"type":"Struct","value":"struct DML_ACTIVATION_SCALED_TANH_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT Alpha;\\r\\n    FLOAT Beta;\\r\\n};"},"DML_ACTIVATION_SHRINK_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":1022,"type":"Struct","value":"struct DML_ACTIVATION_SHRINK_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT Bias;\\r\\n    FLOAT Threshold;\\r\\n};"},"DML_ACTIVATION_SIGMOID_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":620,"type":"Struct","value":"struct DML_ACTIVATION_SIGMOID_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ACTIVATION_SOFTMAX_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":626,"type":"Struct","value":"struct DML_ACTIVATION_SOFTMAX_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ACTIVATION_SOFTPLUS_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":632,"type":"Struct","value":"struct DML_ACTIVATION_SOFTPLUS_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT Steepness;\\r\\n};"},"DML_ACTIVATION_SOFTSIGN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":639,"type":"Struct","value":"struct DML_ACTIVATION_SOFTSIGN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ACTIVATION_TANH_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":645,"type":"Struct","value":"struct DML_ACTIVATION_TANH_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ACTIVATION_THRESHOLDED_RELU_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":651,"type":"Struct","value":"struct DML_ACTIVATION_THRESHOLDED_RELU_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT Alpha;\\r\\n};"},"DML_AVERAGE_POOLING_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":698,"type":"Struct","value":"struct DML_AVERAGE_POOLING_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT DimensionCount;\\r\\n    _Field_size_(DimensionCount) const UINT* Strides;\\r\\n    _Field_size_(DimensionCount) const UINT* WindowSize;\\r\\n    _Field_size_(DimensionCount) const UINT* StartPadding;\\r\\n    _Field_size_(DimensionCount) const UINT* EndPadding;\\r\\n    BOOL IncludePadding;\\r\\n};"},"DML_BATCH_NORMALIZATION_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":854,"type":"Struct","value":"struct DML_BATCH_NORMALIZATION_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* MeanTensor;\\r\\n    const DML_TENSOR_DESC* VarianceTensor;\\r\\n    const DML_TENSOR_DESC* ScaleTensor;\\r\\n    const DML_TENSOR_DESC* BiasTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    BOOL Spatial;\\r\\n    FLOAT Epsilon;\\r\\n    _Maybenull_ const DML_OPERATOR_DESC* FusedActivation;\\r\\n};"},"DML_BINDING_DESC":{"comment":"","exp":"","file":"DirectML.h","line":1337,"type":"Struct","value":"struct DML_BINDING_DESC\\r\\n{\\r\\n    DML_BINDING_TYPE Type;\\r\\n    _Field_size_opt_(_Inexpressible_(\"Dependent on binding type\")) const void* Desc;\\r\\n};"},"DML_BINDING_PROPERTIES":{"comment":"","exp":"","file":"DirectML.h","line":1292,"type":"Struct","value":"struct DML_BINDING_PROPERTIES\\r\\n{\\r\\n    UINT RequiredDescriptorCount;\\r\\n    UINT64 TemporaryResourceSize;\\r\\n    UINT64 PersistentResourceSize;\\r\\n};"},"DML_BINDING_TABLE_DESC":{"comment":"","exp":"","file":"DirectML.h","line":1124,"type":"Struct","value":"struct DML_BINDING_TABLE_DESC\\r\\n{\\r\\n    IDMLDispatchable* Dispatchable;\\r\\n    D3D12_CPU_DESCRIPTOR_HANDLE CPUDescriptorHandle;\\r\\n    D3D12_GPU_DESCRIPTOR_HANDLE GPUDescriptorHandle;\\r\\n    UINT SizeInDescriptors;\\r\\n};"},"DML_BINDING_TYPE":{"comment":"","exp":"","file":"DirectML.h","line":1330,"type":"Enum","value":"enum DML_BINDING_TYPE\\r\\n{\\r\\n    DML_BINDING_TYPE_NONE,\\r\\n    DML_BINDING_TYPE_BUFFER,\\r\\n    DML_BINDING_TYPE_BUFFER_ARRAY,\\r\\n};"},"DML_BUFFER_ARRAY_BINDING":{"comment":"","exp":"","file":"DirectML.h","line":1350,"type":"Struct","value":"struct DML_BUFFER_ARRAY_BINDING\\r\\n{\\r\\n    UINT BindingCount;\\r\\n    _Field_size_(BindingCount) const DML_BUFFER_BINDING* Bindings;\\r\\n};"},"DML_BUFFER_BINDING":{"comment":"","exp":"","file":"DirectML.h","line":1343,"type":"Struct","value":"struct DML_BUFFER_BINDING\\r\\n{\\r\\n    _Maybenull_ ID3D12Resource* Buffer;\\r\\n    UINT64 Offset;\\r\\n    UINT64 SizeInBytes;\\r\\n};"},"DML_BUFFER_TENSOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":75,"type":"Struct","value":"struct DML_BUFFER_TENSOR_DESC\\r\\n{\\r\\n    DML_TENSOR_DATA_TYPE DataType;\\r\\n    DML_TENSOR_FLAGS Flags;\\r\\n    UINT DimensionCount;\\r\\n    _Field_size_(DimensionCount) const UINT* Sizes;\\r\\n    _Field_size_opt_(DimensionCount) const UINT* Strides;\\r\\n    UINT64 TotalTensorSizeInBytes;\\r\\n    UINT GuaranteedBaseOffsetAlignment;\\r\\n};"},"DML_CAST_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":764,"type":"Struct","value":"struct DML_CAST_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_CONVOLUTION_DIRECTION":{"comment":"","exp":"","file":"DirectML.h","line":235,"type":"Enum","value":"enum DML_CONVOLUTION_DIRECTION\\r\\n{\\r\\n    DML_CONVOLUTION_DIRECTION_FORWARD,\\r\\n    DML_CONVOLUTION_DIRECTION_BACKWARD,\\r\\n};"},"DML_CONVOLUTION_MODE":{"comment":"","exp":"","file":"DirectML.h","line":229,"type":"Enum","value":"enum DML_CONVOLUTION_MODE\\r\\n{\\r\\n    DML_CONVOLUTION_MODE_CONVOLUTION,\\r\\n    DML_CONVOLUTION_MODE_CROSS_CORRELATION,\\r\\n};"},"DML_CONVOLUTION_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":658,"type":"Struct","value":"struct DML_CONVOLUTION_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* FilterTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* BiasTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    DML_CONVOLUTION_MODE Mode;\\r\\n    DML_CONVOLUTION_DIRECTION Direction;\\r\\n    UINT DimensionCount;\\r\\n    _Field_size_(DimensionCount) const UINT* Strides;\\r\\n    _Field_size_(DimensionCount) const UINT* Dilations;\\r\\n    _Field_size_(DimensionCount) const UINT* StartPadding;\\r\\n    _Field_size_(DimensionCount) const UINT* EndPadding;\\r\\n    _Field_size_(DimensionCount) const UINT* OutputPadding;\\r\\n    UINT GroupCount;\\r\\n    _Maybenull_ const DML_OPERATOR_DESC* FusedActivation;\\r\\n};"},"DML_CREATE_DEVICE_FLAGS":{"comment":"","exp":"","file":"DirectML.h","line":1142,"type":"Enum","value":"enum DML_CREATE_DEVICE_FLAGS\\r\\n{\\r\\n    DML_CREATE_DEVICE_FLAG_NONE = 0,\\r\\n    DML_CREATE_DEVICE_FLAG_DEBUG = 0x1,\\r\\n};"},"DML_DEPTH_TO_SPACE_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":830,"type":"Struct","value":"struct DML_DEPTH_TO_SPACE_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT BlockSize;\\r\\n};"},"DML_DIAGONAL_MATRIX_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":1037,"type":"Struct","value":"struct DML_DIAGONAL_MATRIX_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    INT Offset;\\r\\n    FLOAT Value;\\r\\n};"},"DML_ELEMENT_WISE_ABS_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":290,"type":"Struct","value":"struct DML_ELEMENT_WISE_ABS_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_ACOSH_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":1000,"type":"Struct","value":"struct DML_ELEMENT_WISE_ACOSH_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_ACOS_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":297,"type":"Struct","value":"struct DML_ELEMENT_WISE_ACOS_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_ADD1_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":311,"type":"Struct","value":"struct DML_ELEMENT_WISE_ADD1_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_OPERATOR_DESC* FusedActivation;\\r\\n};"},"DML_ELEMENT_WISE_ADD_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":304,"type":"Struct","value":"struct DML_ELEMENT_WISE_ADD_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_ASINH_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":993,"type":"Struct","value":"struct DML_ELEMENT_WISE_ASINH_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_ASIN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":319,"type":"Struct","value":"struct DML_ELEMENT_WISE_ASIN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_ATANH_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":1007,"type":"Struct","value":"struct DML_ELEMENT_WISE_ATANH_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_ATAN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":326,"type":"Struct","value":"struct DML_ELEMENT_WISE_ATAN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_CEIL_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":333,"type":"Struct","value":"struct DML_ELEMENT_WISE_CEIL_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_CLIP_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":340,"type":"Struct","value":"struct DML_ELEMENT_WISE_CLIP_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n    FLOAT Min;\\r\\n    FLOAT Max;\\r\\n};"},"DML_ELEMENT_WISE_CONSTANT_POW_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":468,"type":"Struct","value":"struct DML_ELEMENT_WISE_CONSTANT_POW_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n    FLOAT Exponent;\\r\\n};"},"DML_ELEMENT_WISE_COSH_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":979,"type":"Struct","value":"struct DML_ELEMENT_WISE_COSH_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_COS_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":349,"type":"Struct","value":"struct DML_ELEMENT_WISE_COS_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_DEQUANTIZE_LINEAR_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":527,"type":"Struct","value":"struct DML_ELEMENT_WISE_DEQUANTIZE_LINEAR_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* ScaleTensor;\\r\\n    const DML_TENSOR_DESC* ZeroPointTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_DIVIDE_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":356,"type":"Struct","value":"struct DML_ELEMENT_WISE_DIVIDE_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_ERF_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":965,"type":"Struct","value":"struct DML_ELEMENT_WISE_ERF_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_EXP_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":363,"type":"Struct","value":"struct DML_ELEMENT_WISE_EXP_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_FLOOR_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":370,"type":"Struct","value":"struct DML_ELEMENT_WISE_FLOOR_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_IDENTITY_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":283,"type":"Struct","value":"struct DML_ELEMENT_WISE_IDENTITY_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_IF_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":1014,"type":"Struct","value":"struct DML_ELEMENT_WISE_IF_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ConditionTensor;\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_IS_NAN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":959,"type":"Struct","value":"struct DML_ELEMENT_WISE_IS_NAN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_LOGICAL_AND_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":384,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_AND_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_LOGICAL_EQUALS_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":391,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_EQUALS_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_LOGICAL_GREATER_THAN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":398,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_GREATER_THAN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_LOGICAL_LESS_THAN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":405,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_LESS_THAN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_LOGICAL_NOT_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":412,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_NOT_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_LOGICAL_OR_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":418,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_OR_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_LOGICAL_XOR_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":425,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_XOR_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_LOG_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":377,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOG_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_MAX_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":432,"type":"Struct","value":"struct DML_ELEMENT_WISE_MAX_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_MEAN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":439,"type":"Struct","value":"struct DML_ELEMENT_WISE_MEAN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_MIN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":446,"type":"Struct","value":"struct DML_ELEMENT_WISE_MIN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_MULTIPLY_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":453,"type":"Struct","value":"struct DML_ELEMENT_WISE_MULTIPLY_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_POW_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":460,"type":"Struct","value":"struct DML_ELEMENT_WISE_POW_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* ExponentTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_QUANTIZE_LINEAR_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":519,"type":"Struct","value":"struct DML_ELEMENT_WISE_QUANTIZE_LINEAR_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* ScaleTensor;\\r\\n    const DML_TENSOR_DESC* ZeroPointTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_RECIP_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":476,"type":"Struct","value":"struct DML_ELEMENT_WISE_RECIP_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_SIGN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":953,"type":"Struct","value":"struct DML_ELEMENT_WISE_SIGN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_SINH_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":972,"type":"Struct","value":"struct DML_ELEMENT_WISE_SINH_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_SIN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":483,"type":"Struct","value":"struct DML_ELEMENT_WISE_SIN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_SQRT_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":490,"type":"Struct","value":"struct DML_ELEMENT_WISE_SQRT_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_SUBTRACT_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":497,"type":"Struct","value":"struct DML_ELEMENT_WISE_SUBTRACT_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_ELEMENT_WISE_TANH_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":986,"type":"Struct","value":"struct DML_ELEMENT_WISE_TANH_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_TAN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":504,"type":"Struct","value":"struct DML_ELEMENT_WISE_TAN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n};"},"DML_ELEMENT_WISE_THRESHOLD_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":511,"type":"Struct","value":"struct DML_ELEMENT_WISE_THRESHOLD_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\\r\\n    FLOAT Min;\\r\\n};"},"DML_EXECUTION_FLAGS":{"comment":"","exp":"","file":"DirectML.h","line":1132,"type":"Enum","value":"enum DML_EXECUTION_FLAGS\\r\\n{\\r\\n    DML_EXECUTION_FLAG_NONE = 0,\\r\\n    DML_EXECUTION_FLAG_ALLOW_HALF_PRECISION_COMPUTATION = 0x1,\\r\\n    DML_EXECUTION_FLAG_DISABLE_META_COMMANDS = 0x2,\\r\\n    DML_EXECUTION_FLAG_DESCRIPTORS_VOLATILE = 0x4,\\r\\n};"},"DML_FEATURE":{"comment":"","exp":"","file":"DirectML.h","line":1086,"type":"Enum","value":"enum DML_FEATURE\\r\\n{\\r\\n    DML_FEATURE_TENSOR_DATA_TYPE_SUPPORT,\\r\\n#if NTDDI_VERSION >= NTDDI_WIN10_VB\\r\\n    DML_FEATURE_FEATURE_LEVELS,\\r\\n#endif \/\/ NTDDI_VERSION >= NTDDI_WIN10_VB\\r\\n};"},"DML_FEATURE_DATA_FEATURE_LEVELS":{"comment":"","exp":"","file":"DirectML.h","line":1113,"type":"Struct","value":"struct DML_FEATURE_DATA_FEATURE_LEVELS\\r\\n{\\r\\n    DML_FEATURE_LEVEL MaxSupportedFeatureLevel;\\r\\n};"},"DML_FEATURE_DATA_TENSOR_DATA_TYPE_SUPPORT":{"comment":"","exp":"","file":"DirectML.h","line":1100,"type":"Struct","value":"struct DML_FEATURE_DATA_TENSOR_DATA_TYPE_SUPPORT\\r\\n{\\r\\n    BOOL IsSupported;\\r\\n};"},"DML_FEATURE_LEVEL":{"comment":"","exp":"","file":"DirectML.h","line":1078,"type":"Enum","value":"enum DML_FEATURE_LEVEL\\r\\n{\\r\\n    DML_FEATURE_LEVEL_1_0 = 0x1000,\\r\\n    DML_FEATURE_LEVEL_2_0 = 0x2000,\\r\\n};"},"DML_FEATURE_QUERY_FEATURE_LEVELS":{"comment":"","exp":"","file":"DirectML.h","line":1107,"type":"Struct","value":"struct DML_FEATURE_QUERY_FEATURE_LEVELS\\r\\n{\\r\\n    UINT RequestedFeatureLevelCount;\\r\\n    _Field_size_(RequestedFeatureLevelCount) const DML_FEATURE_LEVEL* RequestedFeatureLevels;\\r\\n};"},"DML_FEATURE_QUERY_TENSOR_DATA_TYPE_SUPPORT":{"comment":"","exp":"","file":"DirectML.h","line":1095,"type":"Struct","value":"struct DML_FEATURE_QUERY_TENSOR_DATA_TYPE_SUPPORT\\r\\n{\\r\\n    DML_TENSOR_DATA_TYPE DataType;\\r\\n};"},"DML_GATHER_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":814,"type":"Struct","value":"struct DML_GATHER_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* IndicesTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT Axis;\\r\\n    UINT IndexDimensions;\\r\\n};"},"DML_GEMM_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":676,"type":"Struct","value":"struct DML_GEMM_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* ATensor;\\r\\n    const DML_TENSOR_DESC* BTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* CTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    DML_MATRIX_TRANSFORM TransA;\\r\\n    DML_MATRIX_TRANSFORM TransB;\\r\\n    FLOAT Alpha;\\r\\n    FLOAT Beta;\\r\\n    _Maybenull_ const DML_OPERATOR_DESC* FusedActivation;\\r\\n};"},"DML_GRU_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":935,"type":"Struct","value":"struct DML_GRU_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* WeightTensor;\\r\\n    const DML_TENSOR_DESC* RecurrenceTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* BiasTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* HiddenInitTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* SequenceLengthsTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* OutputSequenceTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* OutputSingleTensor;\\r\\n    UINT ActivationDescCount;\\r\\n    _Field_size_(ActivationDescCount) const DML_OPERATOR_DESC* ActivationDescs;\\r\\n    DML_RECURRENT_NETWORK_DIRECTION Direction;\\r\\n    BOOL LinearBeforeReset;\\r\\n};"},"DML_INTERPOLATION_MODE":{"comment":"","exp":"","file":"DirectML.h","line":248,"type":"Enum","value":"enum DML_INTERPOLATION_MODE\\r\\n{\\r\\n    DML_INTERPOLATION_MODE_NEAREST_NEIGHBOR,\\r\\n    DML_INTERPOLATION_MODE_LINEAR,\\r\\n};"},"DML_JOIN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":778,"type":"Struct","value":"struct DML_JOIN_OPERATOR_DESC\\r\\n{\\r\\n    UINT InputCount;\\r\\n    _Field_size_(InputCount) const DML_TENSOR_DESC* InputTensors;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT Axis;\\r\\n};"},"DML_LOCAL_RESPONSE_NORMALIZATION_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":879,"type":"Struct","value":"struct DML_LOCAL_RESPONSE_NORMALIZATION_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    BOOL CrossChannel;\\r\\n    UINT LocalSize;\\r\\n    FLOAT Alpha;\\r\\n    FLOAT Beta;\\r\\n    FLOAT Bias;\\r\\n};"},"DML_LP_NORMALIZATION_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":890,"type":"Struct","value":"struct DML_LP_NORMALIZATION_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT Axis;\\r\\n    FLOAT Epsilon;\\r\\n    UINT P;\\r\\n};"},"DML_LP_POOLING_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":710,"type":"Struct","value":"struct DML_LP_POOLING_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT DimensionCount;\\r\\n    _Field_size_(DimensionCount) const UINT* Strides;\\r\\n    _Field_size_(DimensionCount) const UINT* WindowSize;\\r\\n    _Field_size_(DimensionCount) const UINT* StartPadding;\\r\\n    _Field_size_(DimensionCount) const UINT* EndPadding;\\r\\n    UINT P;\\r\\n};"},"DML_LSTM_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":914,"type":"Struct","value":"struct DML_LSTM_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* WeightTensor;\\r\\n    const DML_TENSOR_DESC* RecurrenceTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* BiasTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* HiddenInitTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* CellMemInitTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* SequenceLengthsTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* PeepholeTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* OutputSequenceTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* OutputSingleTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* OutputCellSingleTensor;\\r\\n    UINT ActivationDescCount;\\r\\n    _Field_size_(ActivationDescCount) const DML_OPERATOR_DESC* ActivationDescs;\\r\\n    DML_RECURRENT_NETWORK_DIRECTION Direction;\\r\\n    float ClipThreshold;\\r\\n    BOOL UseClipThreshold;\\r\\n    BOOL CoupleInputForget;\\r\\n};"},"DML_MATRIX_TRANSFORM":{"comment":"","exp":"","file":"DirectML.h","line":223,"type":"Enum","value":"enum DML_MATRIX_TRANSFORM\\r\\n{\\r\\n    DML_MATRIX_TRANSFORM_NONE,\\r\\n    DML_MATRIX_TRANSFORM_TRANSPOSE,\\r\\n};"},"DML_MAX_POOLING1_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":733,"type":"Struct","value":"struct DML_MAX_POOLING1_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* OutputIndicesTensor;\\r\\n    UINT DimensionCount;\\r\\n    _Field_size_(DimensionCount) const UINT* Strides;\\r\\n    _Field_size_(DimensionCount) const UINT* WindowSize;\\r\\n    _Field_size_(DimensionCount) const UINT* StartPadding;\\r\\n    _Field_size_(DimensionCount) const UINT* EndPadding;\\r\\n};"},"DML_MAX_POOLING_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":722,"type":"Struct","value":"struct DML_MAX_POOLING_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT DimensionCount;\\r\\n    _Field_size_(DimensionCount) const UINT* Strides;\\r\\n    _Field_size_(DimensionCount) const UINT* WindowSize;\\r\\n    _Field_size_(DimensionCount) const UINT* StartPadding;\\r\\n    _Field_size_(DimensionCount) const UINT* EndPadding;\\r\\n};"},"DML_MAX_UNPOOLING_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":1030,"type":"Struct","value":"struct DML_MAX_UNPOOLING_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* IndicesTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n};"},"DML_MEAN_VARIANCE_NORMALIZATION_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":867,"type":"Struct","value":"struct DML_MEAN_VARIANCE_NORMALIZATION_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* ScaleTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* BiasTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    BOOL CrossChannel;\\r\\n    BOOL NormalizeVariance;\\r\\n    FLOAT Epsilon;\\r\\n    _Maybenull_ const DML_OPERATOR_DESC* FusedActivation;\\r\\n};"},"DML_ONE_HOT_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":1053,"type":"Struct","value":"struct DML_ONE_HOT_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* IndicesTensor;\\r\\n    const DML_TENSOR_DESC* ValuesTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT Axis;\\r\\n};"},"DML_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":277,"type":"Struct","value":"struct DML_OPERATOR_DESC\\r\\n{\\r\\n    DML_OPERATOR_TYPE Type;\\r\\n    _Field_size_(_Inexpressible_(\"Dependent on operator type\")) const void* Desc;\\r\\n};"},"DML_OPERATOR_TYPE":{"comment":"","exp":"","file":"DirectML.h","line":97,"type":"Enum","value":"enum DML_OPERATOR_TYPE\\r\\n{\\r\\n    DML_OPERATOR_INVALID,\\r\\n    DML_OPERATOR_ELEMENT_WISE_IDENTITY,\\r\\n    DML_OPERATOR_ELEMENT_WISE_ABS,\\r\\n    DML_OPERATOR_ELEMENT_WISE_ACOS,\\r\\n    DML_OPERATOR_ELEMENT_WISE_ADD,\\r\\n    DML_OPERATOR_ELEMENT_WISE_ASIN,\\r\\n    DML_OPERATOR_ELEMENT_WISE_ATAN,\\r\\n    DML_OPERATOR_ELEMENT_WISE_CEIL,\\r\\n    DML_OPERATOR_ELEMENT_WISE_CLIP,\\r\\n    DML_OPERATOR_ELEMENT_WISE_COS,\\r\\n    DML_OPERATOR_ELEMENT_WISE_DIVIDE,\\r\\n    DML_OPERATOR_ELEMENT_WISE_EXP,\\r\\n    DML_OPERATOR_ELEMENT_WISE_FLOOR,\\r\\n    DML_OPERATOR_ELEMENT_WISE_LOG,\\r\\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_AND,\\r\\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_EQUALS,\\r\\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_GREATER_THAN,\\r\\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_LESS_THAN,\\r\\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_NOT,\\r\\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_OR,\\r\\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_XOR,\\r\\n    DML_OPERATOR_ELEMENT_WISE_MAX,\\r\\n    DML_OPERATOR_ELEMENT_WISE_MEAN,\\r\\n    DML_OPERATOR_ELEMENT_WISE_MIN,\\r\\n    DML_OPERATOR_ELEMENT_WISE_MULTIPLY,\\r\\n    DML_OPERATOR_ELEMENT_WISE_POW,\\r\\n    DML_OPERATOR_ELEMENT_WISE_CONSTANT_POW,\\r\\n    DML_OPERATOR_ELEMENT_WISE_RECIP,\\r\\n    DML_OPERATOR_ELEMENT_WISE_SIN,\\r\\n    DML_OPERATOR_ELEMENT_WISE_SQRT,\\r\\n    DML_OPERATOR_ELEMENT_WISE_SUBTRACT,\\r\\n    DML_OPERATOR_ELEMENT_WISE_TAN,\\r\\n    DML_OPERATOR_ELEMENT_WISE_THRESHOLD,\\r\\n    DML_OPERATOR_ELEMENT_WISE_QUANTIZE_LINEAR,\\r\\n    DML_OPERATOR_ELEMENT_WISE_DEQUANTIZE_LINEAR,\\r\\n    DML_OPERATOR_ACTIVATION_ELU,\\r\\n    DML_OPERATOR_ACTIVATION_HARDMAX,\\r\\n    DML_OPERATOR_ACTIVATION_HARD_SIGMOID,\\r\\n    DML_OPERATOR_ACTIVATION_IDENTITY,\\r\\n    DML_OPERATOR_ACTIVATION_LEAKY_RELU,\\r\\n    DML_OPERATOR_ACTIVATION_LINEAR,\\r\\n    DML_OPERATOR_ACTIVATION_LOG_SOFTMAX,\\r\\n    DML_OPERATOR_ACTIVATION_PARAMETERIZED_RELU,\\r\\n    DML_OPERATOR_ACTIVATION_PARAMETRIC_SOFTPLUS,\\r\\n    DML_OPERATOR_ACTIVATION_RELU,\\r\\n    DML_OPERATOR_ACTIVATION_SCALED_ELU,\\r\\n    DML_OPERATOR_ACTIVATION_SCALED_TANH,\\r\\n    DML_OPERATOR_ACTIVATION_SIGMOID,\\r\\n    DML_OPERATOR_ACTIVATION_SOFTMAX,\\r\\n    DML_OPERATOR_ACTIVATION_SOFTPLUS,\\r\\n    DML_OPERATOR_ACTIVATION_SOFTSIGN,\\r\\n    DML_OPERATOR_ACTIVATION_TANH,\\r\\n    DML_OPERATOR_ACTIVATION_THRESHOLDED_RELU,\\r\\n    DML_OPERATOR_CONVOLUTION,\\r\\n    DML_OPERATOR_GEMM,\\r\\n    DML_OPERATOR_REDUCE,\\r\\n    DML_OPERATOR_AVERAGE_POOLING,\\r\\n    DML_OPERATOR_LP_POOLING,\\r\\n    DML_OPERATOR_MAX_POOLING,\\r\\n    DML_OPERATOR_ROI_POOLING,\\r\\n    DML_OPERATOR_SLICE,\\r\\n    DML_OPERATOR_CAST,\\r\\n    DML_OPERATOR_SPLIT,\\r\\n    DML_OPERATOR_JOIN,\\r\\n    DML_OPERATOR_PADDING,\\r\\n    DML_OPERATOR_VALUE_SCALE_2D,\\r\\n    DML_OPERATOR_UPSAMPLE_2D,\\r\\n    DML_OPERATOR_GATHER,\\r\\n    DML_OPERATOR_SPACE_TO_DEPTH,\\r\\n    DML_OPERATOR_DEPTH_TO_SPACE,\\r\\n    DML_OPERATOR_TILE,\\r\\n    DML_OPERATOR_TOP_K,\\r\\n    DML_OPERATOR_BATCH_NORMALIZATION,\\r\\n    DML_OPERATOR_MEAN_VARIANCE_NORMALIZATION,\\r\\n    DML_OPERATOR_LOCAL_RESPONSE_NORMALIZATION,\\r\\n    DML_OPERATOR_LP_NORMALIZATION,\\r\\n    DML_OPERATOR_RNN,\\r\\n    DML_OPERATOR_LSTM,\\r\\n    DML_OPERATOR_GRU,\\r\\n#if NTDDI_VERSION >= NTDDI_WIN10_VB\\r\\n    DML_OPERATOR_ELEMENT_WISE_SIGN,\\r\\n    DML_OPERATOR_ELEMENT_WISE_IS_NAN,\\r\\n    DML_OPERATOR_ELEMENT_WISE_ERF,\\r\\n    DML_OPERATOR_ELEMENT_WISE_SINH,\\r\\n    DML_OPERATOR_ELEMENT_WISE_COSH,\\r\\n    DML_OPERATOR_ELEMENT_WISE_TANH,\\r\\n    DML_OPERATOR_ELEMENT_WISE_ASINH,\\r\\n    DML_OPERATOR_ELEMENT_WISE_ACOSH,\\r\\n    DML_OPERATOR_ELEMENT_WISE_ATANH,\\r\\n    DML_OPERATOR_ELEMENT_WISE_IF,\\r\\n    DML_OPERATOR_ELEMENT_WISE_ADD1,\\r\\n    DML_OPERATOR_ACTIVATION_SHRINK,\\r\\n    DML_OPERATOR_MAX_POOLING1,\\r\\n    DML_OPERATOR_MAX_UNPOOLING,\\r\\n    DML_OPERATOR_DIAGONAL_MATRIX,\\r\\n    DML_OPERATOR_SCATTER,\\r\\n    DML_OPERATOR_ONE_HOT,\\r\\n    DML_OPERATOR_RESAMPLE,\\r\\n#endif \/\/ NTDDI_VERSION >= NTDDI_WIN10_VB\\r\\n};"},"DML_PADDING_MODE":{"comment":"","exp":"","file":"DirectML.h","line":241,"type":"Enum","value":"enum DML_PADDING_MODE\\r\\n{\\r\\n    DML_PADDING_MODE_CONSTANT,\\r\\n    DML_PADDING_MODE_EDGE,\\r\\n    DML_PADDING_MODE_REFLECTION,\\r\\n};"},"DML_PADDING_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":786,"type":"Struct","value":"struct DML_PADDING_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    DML_PADDING_MODE PaddingMode;\\r\\n    FLOAT PaddingValue;\\r\\n    UINT DimensionCount;\\r\\n    _Field_size_(DimensionCount) const UINT* StartPadding;\\r\\n    _Field_size_(DimensionCount) const UINT* EndPadding;\\r\\n};"},"DML_RECURRENT_NETWORK_DIRECTION":{"comment":"","exp":"","file":"DirectML.h","line":266,"type":"Enum","value":"enum DML_RECURRENT_NETWORK_DIRECTION\\r\\n{\\r\\n    DML_RECURRENT_NETWORK_DIRECTION_FORWARD,\\r\\n    DML_RECURRENT_NETWORK_DIRECTION_BACKWARD,\\r\\n    DML_RECURRENT_NETWORK_DIRECTION_BIDIRECTIONAL,\\r\\n};"},"DML_REDUCE_FUNCTION":{"comment":"","exp":"","file":"DirectML.h","line":207,"type":"Enum","value":"enum DML_REDUCE_FUNCTION\\r\\n{\\r\\n    DML_REDUCE_FUNCTION_ARGMAX,\\r\\n    DML_REDUCE_FUNCTION_ARGMIN,\\r\\n    DML_REDUCE_FUNCTION_AVERAGE,\\r\\n    DML_REDUCE_FUNCTION_L1,\\r\\n    DML_REDUCE_FUNCTION_L2,\\r\\n    DML_REDUCE_FUNCTION_LOG_SUM,\\r\\n    DML_REDUCE_FUNCTION_LOG_SUM_EXP,\\r\\n    DML_REDUCE_FUNCTION_MAX,\\r\\n    DML_REDUCE_FUNCTION_MIN,\\r\\n    DML_REDUCE_FUNCTION_MULTIPLY,\\r\\n    DML_REDUCE_FUNCTION_SUM,\\r\\n    DML_REDUCE_FUNCTION_SUM_SQUARE,\\r\\n};"},"DML_REDUCE_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":689,"type":"Struct","value":"struct DML_REDUCE_OPERATOR_DESC\\r\\n{\\r\\n    DML_REDUCE_FUNCTION Function;\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT AxisCount;\\r\\n    _Field_size_(AxisCount) const UINT* Axes;\\r\\n};"},"DML_RESAMPLE_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":1061,"type":"Struct","value":"struct DML_RESAMPLE_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    DML_INTERPOLATION_MODE InterpolationMode;\\r\\n    UINT ScaleCount;\\r\\n    _Field_size_(ScaleCount) const FLOAT* Scales;\\r\\n};"},"DML_RNN_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":899,"type":"Struct","value":"struct DML_RNN_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* WeightTensor;\\r\\n    const DML_TENSOR_DESC* RecurrenceTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* BiasTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* HiddenInitTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* SequenceLengthsTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* OutputSequenceTensor;\\r\\n    _Maybenull_ const DML_TENSOR_DESC* OutputSingleTensor;\\r\\n    UINT ActivationDescCount;\\r\\n    _Field_size_(ActivationDescCount) const DML_OPERATOR_DESC* ActivationDescs;\\r\\n    DML_RECURRENT_NETWORK_DIRECTION Direction;\\r\\n};"},"DML_ROI_POOLING_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":745,"type":"Struct","value":"struct DML_ROI_POOLING_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* ROITensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT SpatialScale;\\r\\n    DML_SIZE_2D PooledSize;\\r\\n};"},"DML_SCALE_BIAS":{"comment":"","exp":"","file":"DirectML.h","line":254,"type":"Struct","value":"struct DML_SCALE_BIAS\\r\\n{\\r\\n    FLOAT Scale;\\r\\n    FLOAT Bias;\\r\\n};"},"DML_SCATTER_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":1044,"type":"Struct","value":"struct DML_SCATTER_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* IndicesTensor;\\r\\n    const DML_TENSOR_DESC* UpdatesTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT Axis;\\r\\n};"},"DML_SIZE_2D":{"comment":"","exp":"","file":"DirectML.h","line":260,"type":"Struct","value":"struct DML_SIZE_2D\\r\\n{\\r\\n    UINT Width;\\r\\n    UINT Height;\\r\\n};"},"DML_SLICE_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":754,"type":"Struct","value":"struct DML_SLICE_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT DimensionCount;\\r\\n    _Field_size_(DimensionCount) const UINT* Offsets;\\r\\n    _Field_size_(DimensionCount) const UINT* Sizes;\\r\\n    _Field_size_(DimensionCount) const UINT* Strides;\\r\\n};"},"DML_SPACE_TO_DEPTH_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":823,"type":"Struct","value":"struct DML_SPACE_TO_DEPTH_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT BlockSize;\\r\\n};"},"DML_SPLIT_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":770,"type":"Struct","value":"struct DML_SPLIT_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    UINT OutputCount;\\r\\n    _Field_size_(OutputCount) const DML_TENSOR_DESC* OutputTensors;\\r\\n    UINT Axis;\\r\\n};"},"DML_TENSOR_DATA_TYPE":{"comment":"","exp":"","file":"DirectML.h","line":47,"type":"Enum","value":"enum DML_TENSOR_DATA_TYPE\\r\\n{\\r\\n    DML_TENSOR_DATA_TYPE_UNKNOWN,\\r\\n    DML_TENSOR_DATA_TYPE_FLOAT32,\\r\\n    DML_TENSOR_DATA_TYPE_FLOAT16,\\r\\n    DML_TENSOR_DATA_TYPE_UINT32,\\r\\n    DML_TENSOR_DATA_TYPE_UINT16,\\r\\n    DML_TENSOR_DATA_TYPE_UINT8,\\r\\n    DML_TENSOR_DATA_TYPE_INT32,\\r\\n    DML_TENSOR_DATA_TYPE_INT16,\\r\\n    DML_TENSOR_DATA_TYPE_INT8,\\r\\n};"},"DML_TENSOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":86,"type":"Struct","value":"struct DML_TENSOR_DESC\\r\\n{\\r\\n    DML_TENSOR_TYPE Type;\\r\\n    _Field_size_(_Inexpressible_(\"Dependent on tensor type\")) const void* Desc;\\r\\n};"},"DML_TENSOR_FLAGS":{"comment":"","exp":"","file":"DirectML.h","line":67,"type":"Enum","value":"enum DML_TENSOR_FLAGS\\r\\n{\\r\\n    DML_TENSOR_FLAG_NONE = 0x0,\\r\\n    DML_TENSOR_FLAG_OWNED_BY_DML = 0x1,\\r\\n};"},"DML_TENSOR_TYPE":{"comment":"","exp":"","file":"DirectML.h","line":60,"type":"Enum","value":"enum DML_TENSOR_TYPE\\r\\n{\\r\\n    DML_TENSOR_TYPE_INVALID,\\r\\n    DML_TENSOR_TYPE_BUFFER,\\r\\n};"},"DML_TILE_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":837,"type":"Struct","value":"struct DML_TILE_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    UINT RepeatsCount;\\r\\n    _Field_size_(RepeatsCount) const UINT* Repeats;\\r\\n};"},"DML_TOP_K_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":845,"type":"Struct","value":"struct DML_TOP_K_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputValueTensor;\\r\\n    const DML_TENSOR_DESC* OutputIndexTensor;\\r\\n    UINT Axis;\\r\\n    UINT K;\\r\\n};"},"DML_UPSAMPLE_2D_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":806,"type":"Struct","value":"struct DML_UPSAMPLE_2D_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    DML_SIZE_2D ScaleSize;\\r\\n    DML_INTERPOLATION_MODE InterpolationMode;\\r\\n};"},"DML_VALUE_SCALE_2D_OPERATOR_DESC":{"comment":"","exp":"","file":"DirectML.h","line":797,"type":"Struct","value":"struct DML_VALUE_SCALE_2D_OPERATOR_DESC\\r\\n{\\r\\n    const DML_TENSOR_DESC* InputTensor;\\r\\n    const DML_TENSOR_DESC* OutputTensor;\\r\\n    FLOAT Scale;\\r\\n    UINT ChannelCount;\\r\\n    _Field_size_(ChannelCount) const FLOAT* Bias;\\r\\n};"}},"__includes_list":{"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|DirectML.h":[["d3d12.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\d3d12.h"]]}}