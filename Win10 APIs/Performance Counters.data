{"__const_list":{"DATA_SOURCE_LOGFILE":{"comment":"","exp":"((DWORD) 0x00000002)","file":"Pdh.h","line":1115,"type":"Integer","value":2},"DATA_SOURCE_REGISTRY":{"comment":"","exp":"((DWORD) 0x00000001)","file":"Pdh.h","line":1114,"type":"Integer","value":1},"DATA_SOURCE_WBEM":{"comment":"","exp":"((DWORD) 0x00000004)","file":"Pdh.h","line":1116,"type":"Integer","value":4},"H_REALTIME_DATASOURCE":{"comment":"","exp":"NULL","file":"Pdh.h","line":88,"type":"Unknown","value":"NULL"},"H_WBEM_DATASOURCE":{"comment":"","exp":"INVALID_HANDLE_VALUE","file":"Pdh.h","line":89,"type":"Integer","value":-1},"INVALID_HANDLE_VALUE":{"comment":"","exp":"((HANDLE)((LONG_PTR)-1))","file":"Pdh.h","line":85,"type":"Integer","value":-1},"MAX_COUNTER_PATH":{"comment":"\/\/ Maximum counter path length. This is an obsolute constance.","exp":"256","file":"Pdh.h","line":59,"type":"Integer","value":256},"MAX_PERF_OBJECTS_IN_QUERY_FUNCTION":{"comment":"","dupe":[{"comment":"","exp":"(8L)","file":"winperf.h","line":686,"type":"Unknown","value":"(8L)"}],"exp":"(64L)","file":"winperf.h","line":671,"type":"Integer","value":64},"MAX_TIME_VALUE":{"comment":"","exp":"((LONGLONG) 0x7FFFFFFFFFFFFFFF)","file":"Pdh.h","line":308,"type":"Integer","value":9223372036854775807},"MIN_TIME_VALUE":{"comment":"","exp":"((LONGLONG) 0)","file":"Pdh.h","line":309,"type":"Integer","value":0},"PDH_BROWSE_DLG_CONFIG":{"comment":"","dupe":[{"comment":"","exp":"PDH_BROWSE_DLG_CONFIG_A","file":"Pdh.h","line":1432,"type":"Unknown","value":"PDH_BROWSE_DLG_CONFIG_A"}],"exp":"PDH_BROWSE_DLG_CONFIG_W","file":"Pdh.h","line":1369,"type":"Unknown","value":"PDH_BROWSE_DLG_CONFIG_W"},"PDH_BROWSE_DLG_CONFIG_H":{"comment":"","dupe":[{"comment":"","exp":"PDH_BROWSE_DLG_CONFIG_HA","file":"Pdh.h","line":1455,"type":"Unknown","value":"PDH_BROWSE_DLG_CONFIG_HA"}],"exp":"PDH_BROWSE_DLG_CONFIG_HW","file":"Pdh.h","line":1393,"type":"Unknown","value":"PDH_BROWSE_DLG_CONFIG_HW"},"PDH_COUNTER_INFO":{"comment":"","dupe":[{"comment":"","exp":"PDH_COUNTER_INFO_A","file":"Pdh.h","line":1417,"type":"Unknown","value":"PDH_COUNTER_INFO_A"}],"exp":"PDH_COUNTER_INFO_W","file":"Pdh.h","line":1354,"type":"Unknown","value":"PDH_COUNTER_INFO_W"},"PDH_COUNTER_PATH_ELEMENTS":{"comment":"","dupe":[{"comment":"","exp":"PDH_COUNTER_PATH_ELEMENTS_A","file":"Pdh.h","line":1424,"type":"Unknown","value":"PDH_COUNTER_PATH_ELEMENTS_A"}],"exp":"PDH_COUNTER_PATH_ELEMENTS_W","file":"Pdh.h","line":1361,"type":"Unknown","value":"PDH_COUNTER_PATH_ELEMENTS_W"},"PDH_CVERSION_WIN40":{"comment":"","exp":"((DWORD)(0x0400))","file":"Pdh.h","line":44,"type":"Integer","value":1024},"PDH_CVERSION_WIN50":{"comment":"","exp":"((DWORD)(0x0500))","file":"Pdh.h","line":45,"type":"Integer","value":1280},"PDH_FLAGS_CLOSE_QUERY":{"comment":"","exp":"((DWORD) 0x00000001)","file":"Pdh.h","line":1029,"type":"Integer","value":1},"PDH_FLAGS_FILE_BROWSER_ONLY":{"comment":"","exp":"((DWORD) 0x00000001)","file":"Pdh.h","line":1033,"type":"Integer","value":1},"PDH_FMT_1000":{"comment":"","exp":"((DWORD) 0x00002000)","file":"Pdh.h","line":444,"type":"Integer","value":8192},"PDH_FMT_ANSI":{"comment":"","exp":"((DWORD) 0x00000020)","file":"Pdh.h","line":438,"type":"Integer","value":32},"PDH_FMT_COUNTERVALUE_ITEM":{"comment":"","dupe":[{"comment":"","exp":"PDH_FMT_COUNTERVALUE_ITEM_A","file":"Pdh.h","line":1436,"type":"Unknown","value":"PDH_FMT_COUNTERVALUE_ITEM_A"}],"exp":"PDH_FMT_COUNTERVALUE_ITEM_W","file":"Pdh.h","line":1373,"type":"Unknown","value":"PDH_FMT_COUNTERVALUE_ITEM_W"},"PDH_FMT_DOUBLE":{"comment":"","exp":"((DWORD) 0x00000200)","file":"Pdh.h","line":441,"type":"Integer","value":512},"PDH_FMT_LARGE":{"comment":"","exp":"((DWORD) 0x00000400)","file":"Pdh.h","line":442,"type":"Integer","value":1024},"PDH_FMT_LONG":{"comment":"","exp":"((DWORD) 0x00000100)","file":"Pdh.h","line":440,"type":"Integer","value":256},"PDH_FMT_NOCAP100":{"comment":"","exp":"((DWORD) 0x00008000)","file":"Pdh.h","line":446,"type":"Integer","value":32768},"PDH_FMT_NODATA":{"comment":"","exp":"((DWORD) 0x00004000)","file":"Pdh.h","line":445,"type":"Integer","value":16384},"PDH_FMT_NOSCALE":{"comment":"","exp":"((DWORD) 0x00001000)","file":"Pdh.h","line":443,"type":"Integer","value":4096},"PDH_FMT_RAW":{"comment":"","exp":"((DWORD) 0x00000010)","file":"Pdh.h","line":437,"type":"Integer","value":16},"PDH_FMT_UNICODE":{"comment":"","exp":"((DWORD) 0x00000040)","file":"Pdh.h","line":439,"type":"Integer","value":64},"PDH_FUNCTION":{"comment":"","exp":"PDH_STATUS __stdcall","file":"Pdh.h","line":41,"type":"Unknown","value":"PDH_STATUS __stdcall"},"PDH_LOG_ACCESS_MASK":{"comment":"","exp":"((DWORD) 0x000F0000)","file":"Pdh.h","line":948,"type":"Integer","value":983040},"PDH_LOG_CREATE_ALWAYS":{"comment":"","exp":"((DWORD) 0x00000002)","file":"Pdh.h","line":951,"type":"Integer","value":2},"PDH_LOG_CREATE_MASK":{"comment":"","exp":"((DWORD) 0x0000000F)","file":"Pdh.h","line":954,"type":"Integer","value":15},"PDH_LOG_CREATE_NEW":{"comment":"","exp":"((DWORD) 0x00000001)","file":"Pdh.h","line":950,"type":"Integer","value":1},"PDH_LOG_OPEN_ALWAYS":{"comment":"","exp":"((DWORD) 0x00000003)","file":"Pdh.h","line":952,"type":"Integer","value":3},"PDH_LOG_OPEN_EXISTING":{"comment":"","exp":"((DWORD) 0x00000004)","file":"Pdh.h","line":953,"type":"Integer","value":4},"PDH_LOG_OPT_APPEND":{"comment":"","exp":"((DWORD) 0x08000000)","file":"Pdh.h","line":960,"type":"Integer","value":134217728},"PDH_LOG_OPT_CIRCULAR":{"comment":"","exp":"((DWORD) 0x02000000)","file":"Pdh.h","line":957,"type":"Integer","value":33554432},"PDH_LOG_OPT_MASK":{"comment":"","exp":"((DWORD) 0x0F000000)","file":"Pdh.h","line":962,"type":"Integer","value":251658240},"PDH_LOG_OPT_MAX_IS_BYTES":{"comment":"","exp":"((DWORD) 0x04000000)","file":"Pdh.h","line":958,"type":"Integer","value":67108864},"PDH_LOG_OPT_USER_STRING":{"comment":"","exp":"((DWORD) 0x01000000)","file":"Pdh.h","line":956,"type":"Integer","value":16777216},"PDH_LOG_READ_ACCESS":{"comment":"","exp":"((DWORD) 0x00010000)","file":"Pdh.h","line":945,"type":"Integer","value":65536},"PDH_LOG_SERVICE_QUERY_INFO":{"comment":"","dupe":[{"comment":"","exp":"PDH_LOG_SERVICE_QUERY_INFO_A","file":"Pdh.h","line":1447,"type":"Unknown","value":"PDH_LOG_SERVICE_QUERY_INFO_A"}],"exp":"PDH_LOG_SERVICE_QUERY_INFO_W","file":"Pdh.h","line":1384,"type":"Unknown","value":"PDH_LOG_SERVICE_QUERY_INFO_W"},"PDH_LOG_TYPE_BINARY":{"comment":"","dupe":[{"comment":"\/\/ Obsolete - not supported.","exp":"3","file":"Pdh.h","line":975,"type":"Unknown","value":"3"}],"exp":"8","file":"Pdh.h","line":973,"type":"Integer","value":8},"PDH_LOG_TYPE_CSV":{"comment":"","exp":"1","file":"Pdh.h","line":965,"type":"Integer","value":1},"PDH_LOG_TYPE_PERFMON":{"comment":"\/\/ Obsolete - not supported.","exp":"6","file":"Pdh.h","line":970,"type":"Integer","value":6},"PDH_LOG_TYPE_RETIRED_BIN":{"comment":"\/\/ Obsolete - not supported.","exp":"3","file":"Pdh.h","line":967,"type":"Integer","value":3},"PDH_LOG_TYPE_SQL":{"comment":"","exp":"7","file":"Pdh.h","line":972,"type":"Integer","value":7},"PDH_LOG_TYPE_TRACE_GENERIC":{"comment":"","exp":"5","file":"Pdh.h","line":969,"type":"Integer","value":5},"PDH_LOG_TYPE_TRACE_KERNEL":{"comment":"","exp":"4","file":"Pdh.h","line":968,"type":"Integer","value":4},"PDH_LOG_TYPE_TSV":{"comment":"","exp":"2","file":"Pdh.h","line":966,"type":"Integer","value":2},"PDH_LOG_TYPE_UNDEFINED":{"comment":"","exp":"0","file":"Pdh.h","line":964,"type":"Integer","value":0},"PDH_LOG_UPDATE_ACCESS":{"comment":"","exp":"((DWORD) 0x00040000)","file":"Pdh.h","line":947,"type":"Integer","value":262144},"PDH_LOG_WRITE_ACCESS":{"comment":"","exp":"((DWORD) 0x00020000)","file":"Pdh.h","line":946,"type":"Integer","value":131072},"PDH_MAX_COUNTER_NAME":{"comment":"\/\/ Maximum counter name length.","exp":"1024","file":"Pdh.h","line":62,"type":"Integer","value":1024},"PDH_MAX_COUNTER_PATH":{"comment":"\/\/ Maximum full counter path length.","exp":"2048","file":"Pdh.h","line":64,"type":"Integer","value":2048},"PDH_MAX_DATASOURCE_PATH":{"comment":"\/\/ MAximum full counter log name length.","exp":"1024","file":"Pdh.h","line":65,"type":"Integer","value":1024},"PDH_MAX_INSTANCE_NAME":{"comment":"\/\/ Maximum counter instance name length.","exp":"1024","file":"Pdh.h","line":63,"type":"Integer","value":1024},"PDH_MAX_SCALE":{"comment":"","exp":"(7L)","file":"Pdh.h","line":512,"type":"Integer","value":7},"PDH_MIN_SCALE":{"comment":"","exp":"(-7L)","file":"Pdh.h","line":513,"type":"Integer","value":-7},"PDH_NOEXPANDCOUNTERS":{"comment":"","exp":"1","file":"Pdh.h","line":917,"type":"Integer","value":1},"PDH_NOEXPANDINSTANCES":{"comment":"","exp":"2","file":"Pdh.h","line":918,"type":"Integer","value":2},"PDH_OBJECT_HAS_INSTANCES":{"comment":"","exp":"((DWORD) 0x00000001)","file":"Pdh.h","line":68,"type":"Integer","value":1},"PDH_PATH_WBEM_INPUT":{"comment":"","exp":"((DWORD) 0x00000002)","file":"Pdh.h","line":628,"type":"Integer","value":2},"PDH_PATH_WBEM_RESULT":{"comment":"","exp":"((DWORD) 0x00000001)","file":"Pdh.h","line":627,"type":"Integer","value":1},"PDH_RAW_COUNTER_ITEM":{"comment":"","dupe":[{"comment":"","exp":"PDH_RAW_COUNTER_ITEM_A","file":"Pdh.h","line":1438,"type":"Unknown","value":"PDH_RAW_COUNTER_ITEM_A"}],"exp":"PDH_RAW_COUNTER_ITEM_W","file":"Pdh.h","line":1375,"type":"Unknown","value":"PDH_RAW_COUNTER_ITEM_W"},"PDH_REFRESHCOUNTERS":{"comment":"","exp":"4","file":"Pdh.h","line":920,"type":"Integer","value":4},"PDH_VERSION":{"comment":"","exp":"((DWORD)((PDH_CVERSION_WIN50) + 0x0003))","file":"Pdh.h","line":50,"type":"Integer","value":1283},"PERF_100NSEC_MULTI_TIMER":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_DELTA_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_MULTI_COUNTER | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":431,"type":"Integer","value":575735040},"PERF_100NSEC_MULTI_TIMER_INV":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_DELTA_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_MULTI_COUNTER | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":440,"type":"Integer","value":592512256},"PERF_100NSEC_TIMER":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":396,"type":"Integer","value":542180608},"PERF_100NSEC_TIMER_INV":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":402,"type":"Integer","value":558957824},"PERF_ADD_COUNTER":{"comment":"","exp":"1","file":"perflib.h","line":182,"type":"Integer","value":1},"PERF_AGGREGATE_AVG":{"comment":"\/* Average.","exp":"2","file":"perflib.h","line":94,"type":"Integer","value":2},"PERF_AGGREGATE_INSTANCE":{"comment":"","exp":"L\"_Total\"","file":"perflib.h","line":179,"type":"String","value":"L\"_Total\""},"PERF_AGGREGATE_MAX":{"comment":"\/* Maximum.","exp":"4","file":"perflib.h","line":98,"type":"Integer","value":4},"PERF_AGGREGATE_MIN":{"comment":"\/* Minimum.","exp":"3","file":"perflib.h","line":96,"type":"Integer","value":3},"PERF_AGGREGATE_TOTAL":{"comment":"\/* Total.","exp":"1","file":"perflib.h","line":92,"type":"Integer","value":1},"PERF_AGGREGATE_UNDEFINED":{"comment":"\/* Undefined. *\/","exp":"0","file":"perflib.h","line":91,"type":"Integer","value":0},"PERF_ATTRIB_BY_REFERENCE":{"comment":"\/* Reference.","exp":"0x0000000000000001","file":"perflib.h","line":111,"type":"Integer","value":1},"PERF_ATTRIB_DISPLAY_AS_HEX":{"comment":"\/* Display as hexadecimal.","exp":"0x0000000000000010","file":"perflib.h","line":122,"type":"Integer","value":16},"PERF_ATTRIB_DISPLAY_AS_REAL":{"comment":"\/* Display as real.","exp":"0x0000000000000008","file":"perflib.h","line":119,"type":"Integer","value":8},"PERF_ATTRIB_NO_DISPLAYABLE":{"comment":"\/* No display.","exp":"0x0000000000000002","file":"perflib.h","line":113,"type":"Integer","value":2},"PERF_ATTRIB_NO_GROUP_SEPARATOR":{"comment":"\/* No group separator.","exp":"0x0000000000000004","file":"perflib.h","line":116,"type":"Integer","value":4},"PERF_AVERAGE_BASE":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW | 0x00000002)","file":"winperf.h","line":374,"type":"Integer","value":1073939458},"PERF_AVERAGE_BULK":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DISPLAY_NOSHOW)","file":"winperf.h","line":383,"type":"Integer","value":1073874176},"PERF_AVERAGE_TIMER":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DISPLAY_SECONDS)","file":"winperf.h","line":367,"type":"Integer","value":805438464},"PERF_COLLECT_END":{"comment":"","exp":"6","file":"perflib.h","line":186,"type":"Integer","value":6},"PERF_COLLECT_START":{"comment":"","exp":"5","file":"perflib.h","line":185,"type":"Integer","value":5},"PERF_COUNTERSET_FLAG_AGGREGATE":{"comment":"","exp":"4","file":"perflib.h","line":43,"type":"Integer","value":4},"PERF_COUNTERSET_FLAG_HISTORY":{"comment":"","exp":"8","file":"perflib.h","line":44,"type":"Integer","value":8},"PERF_COUNTERSET_FLAG_INSTANCE":{"comment":"","exp":"16","file":"perflib.h","line":45,"type":"Integer","value":16},"PERF_COUNTERSET_FLAG_MULTIPLE":{"comment":"","exp":"2","file":"perflib.h","line":42,"type":"Integer","value":2},"PERF_COUNTERSET_INSTANCE_AGGREGATE":{"comment":"\/*","exp":"(PERF_COUNTERSET_MULTI_AGGREGATE | PERF_COUNTERSET_FLAG_INSTANCE)","file":"perflib.h","line":79,"type":"Integer","value":22},"PERF_COUNTERSET_MULTI_AGGREGATE":{"comment":"\/*","exp":"(PERF_COUNTERSET_FLAG_AGGREGATE | PERF_COUNTERSET_FLAG_MULTIPLE)","file":"perflib.h","line":61,"type":"Integer","value":6},"PERF_COUNTERSET_MULTI_INSTANCES":{"comment":"\/*","exp":"(PERF_COUNTERSET_FLAG_MULTIPLE)","file":"perflib.h","line":51,"type":"Integer","value":2},"PERF_COUNTERSET_SINGLE_AGGREGATE":{"comment":"\/*","exp":"(PERF_COUNTERSET_FLAG_AGGREGATE)","file":"perflib.h","line":55,"type":"Integer","value":4},"PERF_COUNTERSET_SINGLE_AGGREGATE_HISTORY":{"comment":"\/*","exp":"(PERF_COUNTERSET_FLAG_HISTORY | PERF_COUNTERSET_SINGLE_AGGREGATE)","file":"perflib.h","line":69,"type":"Integer","value":12},"PERF_COUNTERSET_SINGLE_INSTANCE":{"comment":"\/*","exp":"0","file":"perflib.h","line":47,"type":"Integer","value":0},"PERF_COUNTER_100NS_QUEUELEN_TYPE":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":284,"type":"Integer","value":5571840},"PERF_COUNTER_BASE":{"comment":"\/\/ base value used in fractions","exp":"0x00030000","file":"winperf.h","line":224,"type":"Integer","value":196608},"PERF_COUNTER_BULK_COUNT":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PER_SEC)","file":"winperf.h","line":295,"type":"Integer","value":272696576},"PERF_COUNTER_COUNTER":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PER_SEC)","file":"winperf.h","line":262,"type":"Integer","value":272696320},"PERF_COUNTER_DELTA":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_VALUE | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":492,"type":"Integer","value":4195328},"PERF_COUNTER_ELAPSED":{"comment":"\/\/ subtract counter from current time","exp":"0x00040000","file":"winperf.h","line":225,"type":"Integer","value":262144},"PERF_COUNTER_FRACTION":{"comment":"\/\/ divide ctr \/ base","exp":"0x00020000","file":"winperf.h","line":223,"type":"Integer","value":131072},"PERF_COUNTER_HISTOGRAM":{"comment":"\/\/ Counter begins or ends a histogram","exp":"0x00060000","file":"winperf.h","line":227,"type":"Integer","value":393216},"PERF_COUNTER_HISTOGRAM_TYPE":{"comment":"","exp":"0x80000000","file":"winperf.h","line":482,"type":"Integer","value":2147483648},"PERF_COUNTER_LARGE_DELTA":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_VALUE | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":496,"type":"Integer","value":4195584},"PERF_COUNTER_LARGE_QUEUELEN_TYPE":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":278,"type":"Integer","value":4523264},"PERF_COUNTER_LARGE_RAWCOUNT":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_NUMBER | PERF_NUMBER_DECIMAL | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":312,"type":"Integer","value":65792},"PERF_COUNTER_LARGE_RAWCOUNT_HEX":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_NUMBER | PERF_NUMBER_HEX | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":325,"type":"Integer","value":256},"PERF_COUNTER_MULTI_BASE":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_MULTI_COUNTER | PERF_DISPLAY_NOSHOW)","file":"winperf.h","line":425,"type":"Integer","value":1107494144},"PERF_COUNTER_MULTI_TIMER":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_DELTA_COUNTER | PERF_TIMER_TICK | PERF_MULTI_COUNTER | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":409,"type":"Integer","value":574686464},"PERF_COUNTER_MULTI_TIMER_INV":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_DELTA_COUNTER | PERF_MULTI_COUNTER | PERF_TIMER_TICK | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":418,"type":"Integer","value":591463680},"PERF_COUNTER_NODATA":{"comment":"","exp":"(PERF_SIZE_ZERO | PERF_DISPLAY_NOSHOW)","file":"winperf.h","line":344,"type":"Integer","value":1073742336},"PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_OBJECT_TIMER | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":290,"type":"Integer","value":6620416},"PERF_COUNTER_PRECISION":{"comment":"\/\/ divide ctr \/ private clock","exp":"0x00070000","file":"winperf.h","line":228,"type":"Integer","value":458752},"PERF_COUNTER_QUEUELEN":{"comment":"\/\/ Use Queuelen processing func.","exp":"0x00050000","file":"winperf.h","line":226,"type":"Integer","value":327680},"PERF_COUNTER_QUEUELEN_TYPE":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_QUEUELEN | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":273,"type":"Integer","value":4523008},"PERF_COUNTER_RATE":{"comment":"\/\/ divide ctr \/ delta time","exp":"0x00010000","file":"winperf.h","line":222,"type":"Integer","value":65536},"PERF_COUNTER_RAWCOUNT":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_NUMBER | PERF_NUMBER_DECIMAL | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":307,"type":"Integer","value":65536},"PERF_COUNTER_RAWCOUNT_HEX":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_NUMBER | PERF_NUMBER_HEX | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":320,"type":"Integer","value":0},"PERF_COUNTER_TEXT":{"comment":"","exp":"(PERF_SIZE_VARIABLE_LEN | PERF_TYPE_TEXT | PERF_TEXT_UNICODE | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":300,"type":"Integer","value":2816},"PERF_COUNTER_TIMER":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":268,"type":"Integer","value":541132032},"PERF_COUNTER_TIMER_INV":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_INVERSE_COUNTER | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":349,"type":"Integer","value":557909248},"PERF_COUNTER_VALUE":{"comment":"\/\/ display counter value","exp":"0x00000000","file":"winperf.h","line":221,"type":"Integer","value":0},"PERF_DATA_REVISION":{"comment":"","exp":"1","file":"winperf.h","line":65,"type":"Integer","value":1},"PERF_DATA_VERSION":{"comment":"","exp":"1","file":"winperf.h","line":64,"type":"Integer","value":1},"PERF_DELTA_BASE":{"comment":"\/\/ compute base diff as well","exp":"0x00800000","file":"winperf.h","line":246,"type":"Integer","value":8388608},"PERF_DELTA_COUNTER":{"comment":"\/\/ compute difference first","exp":"0x00400000","file":"winperf.h","line":245,"type":"Integer","value":4194304},"PERF_DETAIL_ADVANCED":{"comment":"\/\/ For the advanced user","exp":"200","file":"winperf.h","line":543,"type":"Integer","value":200},"PERF_DETAIL_COSTLY":{"comment":"","exp":"((DWORD) 0x00010000)","file":"Pdh.h","line":447,"type":"Integer","value":65536},"PERF_DETAIL_EXPERT":{"comment":"\/\/ For the expert user","exp":"300","file":"winperf.h","line":544,"type":"Integer","value":300},"PERF_DETAIL_NOVICE":{"comment":"\/\/ The uninformed can understand it","exp":"100","file":"winperf.h","line":542,"type":"Integer","value":100},"PERF_DETAIL_STANDARD":{"comment":"","exp":"((DWORD) 0x0000FFFF)","file":"Pdh.h","line":448,"type":"Integer","value":65535},"PERF_DETAIL_WIZARD":{"comment":"\/\/ For the system designer","exp":"400","file":"winperf.h","line":545,"type":"Integer","value":400},"PERF_DISPLAY_NOSHOW":{"comment":"\/\/ value is not displayed","exp":"0x40000000","file":"winperf.h","line":256,"type":"Integer","value":1073741824},"PERF_DISPLAY_NO_SUFFIX":{"comment":"\/\/ no suffix","exp":"0x00000000","file":"winperf.h","line":252,"type":"Integer","value":0},"PERF_DISPLAY_PERCENT":{"comment":"\/\/ \"%\"","exp":"0x20000000","file":"winperf.h","line":254,"type":"Integer","value":536870912},"PERF_DISPLAY_PER_SEC":{"comment":"\/\/ \"\/sec\"","exp":"0x10000000","file":"winperf.h","line":253,"type":"Integer","value":268435456},"PERF_DISPLAY_SECONDS":{"comment":"\/\/ \"secs\"","exp":"0x30000000","file":"winperf.h","line":255,"type":"Integer","value":805306368},"PERF_ELAPSED_TIME":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_ELAPSED | PERF_OBJECT_TIMER | PERF_DISPLAY_SECONDS)","file":"winperf.h","line":474,"type":"Integer","value":807666944},"PERF_ENUM_INSTANCES":{"comment":"","exp":"3","file":"perflib.h","line":184,"type":"Integer","value":3},"PERF_FILTER":{"comment":"","exp":"9","file":"perflib.h","line":187,"type":"Integer","value":9},"PERF_INVERSE_COUNTER":{"comment":"\/\/ show as 1.00-value (assumes:","exp":"0x01000000","file":"winperf.h","line":247,"type":"Integer","value":16777216},"PERF_LARGE_RAW_BASE":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW )","file":"winperf.h","line":463,"type":"Integer","value":1073939712},"PERF_LARGE_RAW_FRACTION":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":452,"type":"Integer","value":537003264},"PERF_MAX_INSTANCE_NAME":{"comment":"","exp":"1024","file":"perflib.h","line":180,"type":"Integer","value":1024},"PERF_MULTI_COUNTER":{"comment":"\/\/ sum of multiple instances","exp":"0x02000000","file":"winperf.h","line":248,"type":"Integer","value":33554432},"PERF_NO_INSTANCES":{"comment":"\/\/ no instances (see NumInstances above)","exp":"-1","file":"winperf.h","line":177,"type":"Integer","value":-1},"PERF_NO_UNIQUE_ID":{"comment":"","exp":"-1","file":"winperf.h","line":598,"type":"Integer","value":-1},"PERF_NUMBER_DECIMAL":{"comment":"\/\/ display as a decimal integer","exp":"0x00010000","file":"winperf.h","line":215,"type":"Integer","value":65536},"PERF_NUMBER_DEC_1000":{"comment":"\/\/ display as a decimal\/1000","exp":"0x00020000","file":"winperf.h","line":216,"type":"Integer","value":131072},"PERF_NUMBER_HEX":{"comment":"\/\/ display as HEX value","exp":"0x00000000","file":"winperf.h","line":214,"type":"Integer","value":0},"PERF_OBJECT_TIMER":{"comment":"\/\/ use the object timer freq","exp":"0x00200000","file":"winperf.h","line":240,"type":"Integer","value":2097152},"PERF_OBJ_TIME_TIMER":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_OBJECT_TIMER | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":389,"type":"Integer","value":543229184},"PERF_PRECISION_100NS_TIMER":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_PRECISION | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT )","file":"winperf.h","line":522,"type":"Integer","value":542573824},"PERF_PRECISION_OBJECT_TIMER":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_PRECISION | PERF_OBJECT_TIMER | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT )","file":"winperf.h","line":528,"type":"Integer","value":543622400},"PERF_PRECISION_SYSTEM_TIMER":{"comment":"","exp":"(PERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_PRECISION | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT )","file":"winperf.h","line":517,"type":"Integer","value":541525248},"PERF_PRECISION_TIMESTAMP":{"comment":"","exp":"PERF_LARGE_RAW_BASE","file":"winperf.h","line":534,"type":"Integer","value":1073939712},"PERF_PROVIDER_DRIVER":{"comment":"","exp":"2","file":"perflib.h","line":36,"type":"Integer","value":2},"PERF_PROVIDER_KERNEL_MODE":{"comment":"","exp":"1","file":"perflib.h","line":35,"type":"Integer","value":1},"PERF_PROVIDER_USER_MODE":{"comment":"","exp":"0","file":"perflib.h","line":34,"type":"Integer","value":0},"PERF_QUERY_COSTLY":{"comment":"","exp":"((LONG)0x80000002)","file":"winperf.h","line":654,"type":"Integer","value":2147483650},"PERF_QUERY_GLOBAL":{"comment":"","exp":"((LONG)0x80000001)","file":"winperf.h","line":653,"type":"Integer","value":2147483649},"PERF_QUERY_OBJECTS":{"comment":"","exp":"((LONG)0x80000000)","file":"winperf.h","line":652,"type":"Integer","value":2147483648},"PERF_RAW_BASE":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW | 0x00000003)","file":"winperf.h","line":458,"type":"Integer","value":1073939459},"PERF_RAW_FRACTION":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":448,"type":"Integer","value":537003008},"PERF_REMOVE_COUNTER":{"comment":"","exp":"2","file":"perflib.h","line":183,"type":"Integer","value":2},"PERF_SAMPLE_BASE":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_BASE | PERF_DISPLAY_NOSHOW | 0x00000001)","file":"winperf.h","line":358,"type":"Integer","value":1073939457},"PERF_SAMPLE_COUNTER":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_TICK | PERF_DELTA_COUNTER | PERF_DISPLAY_NO_SUFFIX)","file":"winperf.h","line":338,"type":"Integer","value":4260864},"PERF_SAMPLE_FRACTION":{"comment":"","exp":"(PERF_SIZE_DWORD | PERF_TYPE_COUNTER | PERF_COUNTER_FRACTION | PERF_DELTA_COUNTER | PERF_DELTA_BASE | PERF_DISPLAY_PERCENT)","file":"winperf.h","line":332,"type":"Integer","value":549585920},"PERF_SIZE_DWORD":{"comment":"\/\/ 32 bit field","exp":"0x00000000","file":"winperf.h","line":198,"type":"Integer","value":0},"PERF_SIZE_LARGE":{"comment":"\/\/ 64 bit field","exp":"0x00000100","file":"winperf.h","line":199,"type":"Integer","value":256},"PERF_SIZE_VARIABLE_LEN":{"comment":"\/\/ length is in CounterLength field","exp":"0x00000300","file":"winperf.h","line":201,"type":"Integer","value":768},"PERF_SIZE_ZERO":{"comment":"\/\/ for Zero Length fields","exp":"0x00000200","file":"winperf.h","line":200,"type":"Integer","value":512},"PERF_TEXT_ASCII":{"comment":"\/\/ ASCII using the CodePage field","exp":"0x00010000","file":"winperf.h","line":234,"type":"Integer","value":65536},"PERF_TEXT_UNICODE":{"comment":"\/\/ type of text in text field","exp":"0x00000000","file":"winperf.h","line":233,"type":"Integer","value":0},"PERF_TIMER_100NS":{"comment":"\/\/ use 100 NS timer time base units","exp":"0x00100000","file":"winperf.h","line":239,"type":"Integer","value":1048576},"PERF_TIMER_TICK":{"comment":"\/\/ use system perf. freq for base","exp":"0x00000000","file":"winperf.h","line":238,"type":"Integer","value":0},"PERF_TYPE_COUNTER":{"comment":"\/\/ an increasing numeric value","exp":"0x00000400","file":"winperf.h","line":207,"type":"Integer","value":1024},"PERF_TYPE_NUMBER":{"comment":"\/\/ a number (not a counter)","exp":"0x00000000","file":"winperf.h","line":206,"type":"Integer","value":0},"PERF_TYPE_TEXT":{"comment":"\/\/ a text field","exp":"0x00000800","file":"winperf.h","line":208,"type":"Integer","value":2048},"PERF_TYPE_ZERO":{"comment":"\/\/ displays a zero","exp":"0x00000C00","file":"winperf.h","line":209,"type":"Integer","value":3072},"PERF_WILDCARD_COUNTER":{"comment":"","exp":"0xFFFFFFFF","file":"perflib.h","line":177,"type":"Integer","value":4294967295},"PERF_WILDCARD_INSTANCE":{"comment":"","exp":"L\"*\"","file":"perflib.h","line":178,"type":"String","value":"L\"*\""},"PPDH_BROWSE_DLG_CONFIG":{"comment":"","dupe":[{"comment":"","exp":"PPDH_BROWSE_DLG_CONFIG_A","file":"Pdh.h","line":1433,"type":"Unknown","value":"PPDH_BROWSE_DLG_CONFIG_A"}],"exp":"PPDH_BROWSE_DLG_CONFIG_W","file":"Pdh.h","line":1370,"type":"Unknown","value":"PPDH_BROWSE_DLG_CONFIG_W"},"PPDH_BROWSE_DLG_CONFIG_H":{"comment":"","dupe":[{"comment":"","exp":"PPDH_BROWSE_DLG_CONFIG_HA","file":"Pdh.h","line":1456,"type":"Unknown","value":"PPDH_BROWSE_DLG_CONFIG_HA"}],"exp":"PPDH_BROWSE_DLG_CONFIG_HW","file":"Pdh.h","line":1394,"type":"Unknown","value":"PPDH_BROWSE_DLG_CONFIG_HW"},"PPDH_COUNTER_INFO":{"comment":"","dupe":[{"comment":"","exp":"PPDH_COUNTER_INFO_A","file":"Pdh.h","line":1418,"type":"Unknown","value":"PPDH_COUNTER_INFO_A"}],"exp":"PPDH_COUNTER_INFO_W","file":"Pdh.h","line":1355,"type":"Unknown","value":"PPDH_COUNTER_INFO_W"},"PPDH_COUNTER_PATH_ELEMENTS":{"comment":"","dupe":[{"comment":"","exp":"PPDH_COUNTER_PATH_ELEMENTS_A","file":"Pdh.h","line":1425,"type":"Unknown","value":"PPDH_COUNTER_PATH_ELEMENTS_A"}],"exp":"PPDH_COUNTER_PATH_ELEMENTS_W","file":"Pdh.h","line":1362,"type":"Unknown","value":"PPDH_COUNTER_PATH_ELEMENTS_W"},"PPDH_FMT_COUNTERVALUE_ITEM":{"comment":"","dupe":[{"comment":"","exp":"PPDH_FMT_COUNTERVALUE_ITEM_A","file":"Pdh.h","line":1437,"type":"Unknown","value":"PPDH_FMT_COUNTERVALUE_ITEM_A"}],"exp":"PPDH_FMT_COUNTERVALUE_ITEM_W","file":"Pdh.h","line":1374,"type":"Unknown","value":"PPDH_FMT_COUNTERVALUE_ITEM_W"},"PPDH_LOG_SERVICE_QUERY_INFO":{"comment":"","dupe":[{"comment":"","exp":"PPDH_LOG_SERVICE_QUERY_INFO_A","file":"Pdh.h","line":1448,"type":"Unknown","value":"PPDH_LOG_SERVICE_QUERY_INFO_A"}],"exp":"PPDH_LOG_SERVICE_QUERY_INFO_W","file":"Pdh.h","line":1385,"type":"Unknown","value":"PPDH_LOG_SERVICE_QUERY_INFO_W"},"PPDH_RAW_COUNTER_ITEM":{"comment":"","dupe":[{"comment":"","exp":"PPDH_RAW_COUNTER_ITEM_A","file":"Pdh.h","line":1439,"type":"Unknown","value":"PPDH_RAW_COUNTER_ITEM_A"}],"exp":"PPDH_RAW_COUNTER_ITEM_W","file":"Pdh.h","line":1376,"type":"Unknown","value":"PPDH_RAW_COUNTER_ITEM_W"},"PdhAddCounter":{"comment":"","dupe":[{"comment":"","exp":"PdhAddCounterA","file":"Pdh.h","line":1411,"type":"Unknown","value":"PdhAddCounterA"}],"exp":"PdhAddCounterW","file":"Pdh.h","line":1348,"type":"Unknown","value":"PdhAddCounterW"},"PdhAddEnglishCounter":{"comment":"","dupe":[{"comment":"","exp":"PdhAddEnglishCounterA","file":"Pdh.h","line":1413,"type":"Unknown","value":"PdhAddEnglishCounterA"}],"exp":"PdhAddEnglishCounterW","file":"Pdh.h","line":1350,"type":"Unknown","value":"PdhAddEnglishCounterW"},"PdhBindInputDataSource":{"comment":"","dupe":[{"comment":"","exp":"PdhBindInputDataSourceA","file":"Pdh.h","line":1454,"type":"Unknown","value":"PdhBindInputDataSourceA"}],"exp":"PdhBindInputDataSourceW","file":"Pdh.h","line":1391,"type":"Unknown","value":"PdhBindInputDataSourceW"},"PdhBrowseCounters":{"comment":"","dupe":[{"comment":"","exp":"PdhBrowseCountersA","file":"Pdh.h","line":1431,"type":"Unknown","value":"PdhBrowseCountersA"}],"exp":"PdhBrowseCountersW","file":"Pdh.h","line":1368,"type":"Unknown","value":"PdhBrowseCountersW"},"PdhBrowseCountersH":{"comment":"","dupe":[{"comment":"","exp":"PdhBrowseCountersHA","file":"Pdh.h","line":1457,"type":"Unknown","value":"PdhBrowseCountersHA"}],"exp":"PdhBrowseCountersHW","file":"Pdh.h","line":1392,"type":"Unknown","value":"PdhBrowseCountersHW"},"PdhConnectMachine":{"comment":"","dupe":[{"comment":"","exp":"PdhConnectMachineA","file":"Pdh.h","line":1419,"type":"Unknown","value":"PdhConnectMachineA"}],"exp":"PdhConnectMachineW","file":"Pdh.h","line":1356,"type":"Unknown","value":"PdhConnectMachineW"},"PdhCreateSQLTables":{"comment":"","dupe":[{"comment":"","exp":"PdhCreateSQLTablesA","file":"Pdh.h","line":1465,"type":"Unknown","value":"PdhCreateSQLTablesA"}],"exp":"PdhCreateSQLTablesW","file":"Pdh.h","line":1402,"type":"Unknown","value":"PdhCreateSQLTablesW"},"PdhEnumLogSetNames":{"comment":"","dupe":[{"comment":"","exp":"PdhEnumLogSetNamesA","file":"Pdh.h","line":1464,"type":"Unknown","value":"PdhEnumLogSetNamesA"}],"exp":"PdhEnumLogSetNamesW","file":"Pdh.h","line":1401,"type":"Unknown","value":"PdhEnumLogSetNamesW"},"PdhEnumMachines":{"comment":"","dupe":[{"comment":"","exp":"PdhEnumMachinesA","file":"Pdh.h","line":1420,"type":"Unknown","value":"PdhEnumMachinesA"}],"exp":"PdhEnumMachinesW","file":"Pdh.h","line":1357,"type":"Unknown","value":"PdhEnumMachinesW"},"PdhEnumMachinesH":{"comment":"","dupe":[{"comment":"","exp":"PdhEnumMachinesHA","file":"Pdh.h","line":1458,"type":"Unknown","value":"PdhEnumMachinesHA"}],"exp":"PdhEnumMachinesHW","file":"Pdh.h","line":1395,"type":"Unknown","value":"PdhEnumMachinesHW"},"PdhEnumObjectItems":{"comment":"","dupe":[{"comment":"","exp":"PdhEnumObjectItemsA","file":"Pdh.h","line":1422,"type":"Unknown","value":"PdhEnumObjectItemsA"}],"exp":"PdhEnumObjectItemsW","file":"Pdh.h","line":1359,"type":"Unknown","value":"PdhEnumObjectItemsW"},"PdhEnumObjectItemsH":{"comment":"","dupe":[{"comment":"","exp":"PdhEnumObjectItemsHA","file":"Pdh.h","line":1460,"type":"Unknown","value":"PdhEnumObjectItemsHA"}],"exp":"PdhEnumObjectItemsHW","file":"Pdh.h","line":1397,"type":"Unknown","value":"PdhEnumObjectItemsHW"},"PdhEnumObjects":{"comment":"","dupe":[{"comment":"","exp":"PdhEnumObjectsA","file":"Pdh.h","line":1421,"type":"Unknown","value":"PdhEnumObjectsA"}],"exp":"PdhEnumObjectsW","file":"Pdh.h","line":1358,"type":"Unknown","value":"PdhEnumObjectsW"},"PdhEnumObjectsH":{"comment":"","dupe":[{"comment":"","exp":"PdhEnumObjectsHA","file":"Pdh.h","line":1459,"type":"Unknown","value":"PdhEnumObjectsHA"}],"exp":"PdhEnumObjectsHW","file":"Pdh.h","line":1396,"type":"Unknown","value":"PdhEnumObjectsHW"},"PdhExpandCounterPath":{"comment":"","dupe":[{"comment":"","exp":"PdhExpandCounterPathA","file":"Pdh.h","line":1434,"type":"Unknown","value":"PdhExpandCounterPathA"}],"exp":"PdhExpandCounterPathW","file":"Pdh.h","line":1371,"type":"Unknown","value":"PdhExpandCounterPathW"},"PdhExpandWildCardPath":{"comment":"","dupe":[{"comment":"","exp":"PdhExpandWildCardPathA","file":"Pdh.h","line":1451,"type":"Unknown","value":"PdhExpandWildCardPathA"}],"exp":"PdhExpandWildCardPathW","file":"Pdh.h","line":1388,"type":"Unknown","value":"PdhExpandWildCardPathW"},"PdhExpandWildCardPathH":{"comment":"","dupe":[{"comment":"","exp":"PdhExpandWildCardPathHA","file":"Pdh.h","line":1461,"type":"Unknown","value":"PdhExpandWildCardPathHA"}],"exp":"PdhExpandWildCardPathHW","file":"Pdh.h","line":1398,"type":"Unknown","value":"PdhExpandWildCardPathHW"},"PdhGetCounterInfo":{"comment":"","dupe":[{"comment":"","exp":"PdhGetCounterInfoA","file":"Pdh.h","line":1416,"type":"Unknown","value":"PdhGetCounterInfoA"}],"exp":"PdhGetCounterInfoW","file":"Pdh.h","line":1353,"type":"Unknown","value":"PdhGetCounterInfoW"},"PdhGetDataSourceTimeRange":{"comment":"","dupe":[{"comment":"","exp":"PdhGetDataSourceTimeRangeA","file":"Pdh.h","line":1446,"type":"Unknown","value":"PdhGetDataSourceTimeRangeA"}],"exp":"PdhGetDataSourceTimeRangeW","file":"Pdh.h","line":1383,"type":"Unknown","value":"PdhGetDataSourceTimeRangeW"},"PdhGetDefaultPerfCounter":{"comment":"","dupe":[{"comment":"","exp":"PdhGetDefaultPerfCounterA","file":"Pdh.h","line":1430,"type":"Unknown","value":"PdhGetDefaultPerfCounterA"}],"exp":"PdhGetDefaultPerfCounterW","file":"Pdh.h","line":1367,"type":"Unknown","value":"PdhGetDefaultPerfCounterW"},"PdhGetDefaultPerfCounterH":{"comment":"","dupe":[{"comment":"","exp":"PdhGetDefaultPerfCounterHA","file":"Pdh.h","line":1463,"type":"Unknown","value":"PdhGetDefaultPerfCounterHA"}],"exp":"PdhGetDefaultPerfCounterHW","file":"Pdh.h","line":1400,"type":"Unknown","value":"PdhGetDefaultPerfCounterHW"},"PdhGetDefaultPerfObject":{"comment":"","dupe":[{"comment":"","exp":"PdhGetDefaultPerfObjectA","file":"Pdh.h","line":1429,"type":"Unknown","value":"PdhGetDefaultPerfObjectA"}],"exp":"PdhGetDefaultPerfObjectW","file":"Pdh.h","line":1366,"type":"Unknown","value":"PdhGetDefaultPerfObjectW"},"PdhGetDefaultPerfObjectH":{"comment":"","dupe":[{"comment":"","exp":"PdhGetDefaultPerfObjectHA","file":"Pdh.h","line":1462,"type":"Unknown","value":"PdhGetDefaultPerfObjectHA"}],"exp":"PdhGetDefaultPerfObjectHW","file":"Pdh.h","line":1399,"type":"Unknown","value":"PdhGetDefaultPerfObjectHW"},"PdhGetFormattedCounterArray":{"comment":"","dupe":[{"comment":"","exp":"PdhGetFormattedCounterArrayA","file":"Pdh.h","line":1440,"type":"Unknown","value":"PdhGetFormattedCounterArrayA"}],"exp":"PdhGetFormattedCounterArrayW","file":"Pdh.h","line":1377,"type":"Unknown","value":"PdhGetFormattedCounterArrayW"},"PdhGetRawCounterArray":{"comment":"","dupe":[{"comment":"","exp":"PdhGetRawCounterArrayA","file":"Pdh.h","line":1441,"type":"Unknown","value":"PdhGetRawCounterArrayA"}],"exp":"PdhGetRawCounterArrayW","file":"Pdh.h","line":1378,"type":"Unknown","value":"PdhGetRawCounterArrayW"},"PdhLogServiceControl":{"comment":"","dupe":[{"comment":"","exp":"PdhLogServiceControlA","file":"Pdh.h","line":1449,"type":"Unknown","value":"PdhLogServiceControlA"}],"exp":"PdhLogServiceControlW","file":"Pdh.h","line":1386,"type":"Unknown","value":"PdhLogServiceControlW"},"PdhLogServiceQuery":{"comment":"","dupe":[{"comment":"","exp":"PdhLogServiceQueryA","file":"Pdh.h","line":1450,"type":"Unknown","value":"PdhLogServiceQueryA"}],"exp":"PdhLogServiceQueryW","file":"Pdh.h","line":1387,"type":"Unknown","value":"PdhLogServiceQueryW"},"PdhLookupPerfIndexByName":{"comment":"","dupe":[{"comment":"","exp":"PdhLookupPerfIndexByNameA","file":"Pdh.h","line":1467,"type":"Unknown","value":"PdhLookupPerfIndexByNameA"}],"exp":"PdhLookupPerfIndexByNameW","file":"Pdh.h","line":1404,"type":"Unknown","value":"PdhLookupPerfIndexByNameW"},"PdhLookupPerfNameByIndex":{"comment":"","dupe":[{"comment":"","exp":"PdhLookupPerfNameByIndexA","file":"Pdh.h","line":1442,"type":"Unknown","value":"PdhLookupPerfNameByIndexA"}],"exp":"PdhLookupPerfNameByIndexW","file":"Pdh.h","line":1379,"type":"Unknown","value":"PdhLookupPerfNameByIndexW"},"PdhMakeCounterPath":{"comment":"","dupe":[{"comment":"","exp":"PdhMakeCounterPathA","file":"Pdh.h","line":1423,"type":"Unknown","value":"PdhMakeCounterPathA"}],"exp":"PdhMakeCounterPathW","file":"Pdh.h","line":1360,"type":"Unknown","value":"PdhMakeCounterPathW"},"PdhOpenLog":{"comment":"","dupe":[{"comment":"","exp":"PdhOpenLogA","file":"Pdh.h","line":1443,"type":"Unknown","value":"PdhOpenLogA"}],"exp":"PdhOpenLogW","file":"Pdh.h","line":1380,"type":"Unknown","value":"PdhOpenLogW"},"PdhOpenQuery":{"comment":"","dupe":[{"comment":"","exp":"PdhOpenQueryA","file":"Pdh.h","line":1410,"type":"Unknown","value":"PdhOpenQueryA"}],"exp":"PdhOpenQueryW","file":"Pdh.h","line":1347,"type":"Unknown","value":"PdhOpenQueryW"},"PdhParseCounterPath":{"comment":"","dupe":[{"comment":"","exp":"PdhParseCounterPathA","file":"Pdh.h","line":1426,"type":"Unknown","value":"PdhParseCounterPathA"}],"exp":"PdhParseCounterPathW","file":"Pdh.h","line":1363,"type":"Unknown","value":"PdhParseCounterPathW"},"PdhParseInstanceName":{"comment":"","dupe":[{"comment":"","exp":"PdhParseInstanceNameA","file":"Pdh.h","line":1427,"type":"Unknown","value":"PdhParseInstanceNameA"}],"exp":"PdhParseInstanceNameW","file":"Pdh.h","line":1364,"type":"Unknown","value":"PdhParseInstanceNameW"},"PdhSelectDataSource":{"comment":"","dupe":[{"comment":"","exp":"PdhSelectDataSourceA","file":"Pdh.h","line":1445,"type":"Unknown","value":"PdhSelectDataSourceA"}],"exp":"PdhSelectDataSourceW","file":"Pdh.h","line":1382,"type":"Unknown","value":"PdhSelectDataSourceW"},"PdhUpdateLog":{"comment":"","dupe":[{"comment":"","exp":"PdhUpdateLogA","file":"Pdh.h","line":1444,"type":"Unknown","value":"PdhUpdateLogA"}],"exp":"PdhUpdateLogW","file":"Pdh.h","line":1381,"type":"Unknown","value":"PdhUpdateLogW"},"PdhValidatePath":{"comment":"","dupe":[{"comment":"","exp":"PdhValidatePathA","file":"Pdh.h","line":1428,"type":"Unknown","value":"PdhValidatePathA"}],"exp":"PdhValidatePathW","file":"Pdh.h","line":1365,"type":"Unknown","value":"PdhValidatePathW"},"PdhValidatePathEx":{"comment":"","dupe":[{"comment":"","exp":"PdhValidatePathExA","file":"Pdh.h","line":1414,"type":"Unknown","value":"PdhValidatePathExA"}],"exp":"PdhValidatePathExW","file":"Pdh.h","line":1351,"type":"Unknown","value":"PdhValidatePathExW"},"PdhVerifySQLDB":{"comment":"","dupe":[{"comment":"","exp":"PdhVerifySQLDBA","file":"Pdh.h","line":1466,"type":"Unknown","value":"PdhVerifySQLDBA"}],"exp":"PdhVerifySQLDBW","file":"Pdh.h","line":1403,"type":"Unknown","value":"PdhVerifySQLDBW"},"WINPERF_LOG_DEBUG":{"comment":"\/\/ Report debug errors as well","exp":"2","file":"winperf.h","line":683,"type":"Integer","value":2},"WINPERF_LOG_NONE":{"comment":"\/\/ No event reported","exp":"0","file":"winperf.h","line":681,"type":"Integer","value":0},"WINPERF_LOG_USER":{"comment":"\/\/ Report only errors","exp":"1","file":"winperf.h","line":682,"type":"Integer","value":1},"WINPERF_LOG_VERBOSE":{"comment":"\/\/ Report everything","exp":"3","file":"winperf.h","line":684,"type":"Integer","value":3},"_BrowseDlgConfig_A":{"comment":"","exp":"","file":"Pdh.h","line":779,"type":"Struct","value":"typedef struct _BrowseDlgConfig_A {\\r\\n    \/\/ Configuration flags\\r\\n    DWORD   bIncludeInstanceIndex:1,\\r\\n            bSingleCounterPerAdd:1,\\r\\n            bSingleCounterPerDialog:1,\\r\\n            bLocalCountersOnly:1,\\r\\n            bWildCardInstances:1,\\r\\n            bHideDetailBox:1,\\r\\n            bInitializePath:1,\\r\\n            bDisableMachineSelection:1,\\r\\n            bIncludeCostlyObjects:1,\\r\\n            bShowObjectBrowser:1,\\r\\n            bReserved:22;\\r\\n    HWND                hWndOwner;\\r\\n    LPSTR               szDataSource;\\r\\n    _Field_size_(cchReturnPathLength) LPSTR               szReturnPathBuffer;\\r\\n    DWORD               cchReturnPathLength;\\r\\n    CounterPathCallBack pCallBack;\\r\\n    DWORD_PTR           dwCallBackArg;\\r\\n    PDH_STATUS          CallBackStatus;\\r\\n    DWORD               dwDefaultDetailLevel;\\r\\n    LPSTR               szDialogBoxCaption;\\r\\n} PDH_BROWSE_DLG_CONFIG_A, * PPDH_BROWSE_DLG_CONFIG_A;"},"_BrowseDlgConfig_HA":{"comment":"","exp":"","file":"Pdh.h","line":729,"type":"Struct","value":"typedef struct _BrowseDlgConfig_HA {\\r\\n    \/\/ Configuration flags\\r\\n    DWORD   bIncludeInstanceIndex:1,\\r\\n            bSingleCounterPerAdd:1,\\r\\n            bSingleCounterPerDialog:1,\\r\\n            bLocalCountersOnly:1,\\r\\n            bWildCardInstances:1,\\r\\n            bHideDetailBox:1,\\r\\n            bInitializePath:1,\\r\\n            bDisableMachineSelection:1,\\r\\n            bIncludeCostlyObjects:1,\\r\\n            bShowObjectBrowser:1,\\r\\n            bReserved:22;\\r\\n    HWND                hWndOwner;\\r\\n    PDH_HLOG            hDataSource;\\r\\n    LPSTR               szReturnPathBuffer;\\r\\n    DWORD               cchReturnPathLength;\\r\\n    CounterPathCallBack pCallBack;\\r\\n    DWORD_PTR           dwCallBackArg;\\r\\n    PDH_STATUS          CallBackStatus;\\r\\n    DWORD               dwDefaultDetailLevel;\\r\\n    LPSTR               szDialogBoxCaption;\\r\\n} PDH_BROWSE_DLG_CONFIG_HA, * PPDH_BROWSE_DLG_CONFIG_HA;"},"_BrowseDlgConfig_HW":{"comment":"","exp":"","file":"Pdh.h","line":704,"type":"Struct","value":"typedef struct _BrowseDlgConfig_HW {\\r\\n    \/\/ Configuration flags\\r\\n    DWORD   bIncludeInstanceIndex:1,\\r\\n            bSingleCounterPerAdd:1,\\r\\n            bSingleCounterPerDialog:1,\\r\\n            bLocalCountersOnly:1,\\r\\n            bWildCardInstances:1,\\r\\n            bHideDetailBox:1,\\r\\n            bInitializePath:1,\\r\\n            bDisableMachineSelection:1,\\r\\n            bIncludeCostlyObjects:1,\\r\\n            bShowObjectBrowser:1,\\r\\n            bReserved:22;\\r\\n    HWND                hWndOwner;\\r\\n    PDH_HLOG            hDataSource;\\r\\n    LPWSTR              szReturnPathBuffer;\\r\\n    DWORD               cchReturnPathLength;\\r\\n    CounterPathCallBack pCallBack;\\r\\n    DWORD_PTR           dwCallBackArg;\\r\\n    PDH_STATUS          CallBackStatus;\\r\\n    DWORD               dwDefaultDetailLevel;\\r\\n    LPWSTR              szDialogBoxCaption;\\r\\n} PDH_BROWSE_DLG_CONFIG_HW, * PPDH_BROWSE_DLG_CONFIG_HW;"},"_BrowseDlgConfig_W":{"comment":"","exp":"","file":"Pdh.h","line":754,"type":"Struct","value":"typedef struct _BrowseDlgConfig_W {\\r\\n    \/\/ Configuration flags\\r\\n    DWORD   bIncludeInstanceIndex:1,\\r\\n            bSingleCounterPerAdd:1,\\r\\n            bSingleCounterPerDialog:1,\\r\\n            bLocalCountersOnly:1,\\r\\n            bWildCardInstances:1,\\r\\n            bHideDetailBox:1,\\r\\n            bInitializePath:1,\\r\\n            bDisableMachineSelection:1,\\r\\n            bIncludeCostlyObjects:1,\\r\\n            bShowObjectBrowser:1,\\r\\n            bReserved:22;\\r\\n    HWND                hWndOwner;\\r\\n    LPWSTR              szDataSource;\\r\\n    LPWSTR              szReturnPathBuffer;\\r\\n    DWORD               cchReturnPathLength;\\r\\n    CounterPathCallBack pCallBack;\\r\\n    DWORD_PTR           dwCallBackArg;\\r\\n    PDH_STATUS          CallBackStatus;\\r\\n    DWORD               dwDefaultDetailLevel;\\r\\n    LPWSTR              szDialogBoxCaption;\\r\\n} PDH_BROWSE_DLG_CONFIG_W, * PPDH_BROWSE_DLG_CONFIG_W;"},"_PDH_COUNTER_INFO_A":{"comment":"","exp":"","file":"Pdh.h","line":170,"type":"Struct","value":"typedef struct _PDH_COUNTER_INFO_A {\\r\\n    DWORD   dwLength;\\r\\n    DWORD   dwType;\\r\\n    DWORD   CVersion;\\r\\n    DWORD   CStatus;\\r\\n    LONG    lScale;\\r\\n    LONG    lDefaultScale;\\r\\n    DWORD_PTR   dwUserData;\\r\\n    DWORD_PTR   dwQueryUserData;\\r\\n    LPSTR   szFullPath;\\r\\n    union   {\\r\\n        PDH_DATA_ITEM_PATH_ELEMENTS_A DataItemPath;\\r\\n        PDH_COUNTER_PATH_ELEMENTS_A CounterPath;\\r\\n        struct {\\r\\n            LPSTR   szMachineName;\\r\\n            LPSTR   szObjectName;\\r\\n            LPSTR   szInstanceName;\\r\\n            LPSTR   szParentInstance;\\r\\n            DWORD   dwInstanceIndex;\\r\\n            LPSTR   szCounterName;\\r\\n        };\\r\\n    };\\r\\n    LPSTR   szExplainText;\\r\\n    DWORD   DataBuffer[1];\\r\\n} PDH_COUNTER_INFO_A, * PPDH_COUNTER_INFO_A;"},"_PDH_COUNTER_INFO_W":{"comment":"","exp":"","file":"Pdh.h","line":196,"type":"Struct","value":"typedef struct _PDH_COUNTER_INFO_W {\\r\\n    DWORD   dwLength;\\r\\n    DWORD   dwType;\\r\\n    DWORD   CVersion;\\r\\n    DWORD   CStatus;\\r\\n    LONG    lScale;\\r\\n    LONG    lDefaultScale;\\r\\n    DWORD_PTR   dwUserData;\\r\\n    DWORD_PTR   dwQueryUserData;\\r\\n    LPWSTR  szFullPath;\\r\\n    union   {\\r\\n        PDH_DATA_ITEM_PATH_ELEMENTS_W DataItemPath;\\r\\n        PDH_COUNTER_PATH_ELEMENTS_W CounterPath;\\r\\n        struct {\\r\\n            LPWSTR   szMachineName;\\r\\n            LPWSTR   szObjectName;\\r\\n            LPWSTR   szInstanceName;\\r\\n            LPWSTR   szParentInstance;\\r\\n            DWORD    dwInstanceIndex;\\r\\n            LPWSTR   szCounterName;\\r\\n        };\\r\\n    };\\r\\n    LPWSTR  szExplainText;\\r\\n    DWORD   DataBuffer[1];\\r\\n} PDH_COUNTER_INFO_W, * PPDH_COUNTER_INFO_W;"},"_PDH_COUNTER_PATH_ELEMENTS_A":{"comment":"","exp":"","file":"Pdh.h","line":138,"type":"Struct","value":"typedef struct _PDH_COUNTER_PATH_ELEMENTS_A {\\r\\n    LPSTR   szMachineName;\\r\\n    LPSTR   szObjectName;\\r\\n    LPSTR   szInstanceName;\\r\\n    LPSTR   szParentInstance;\\r\\n    DWORD   dwInstanceIndex;\\r\\n    LPSTR   szCounterName;\\r\\n} PDH_COUNTER_PATH_ELEMENTS_A, * PPDH_COUNTER_PATH_ELEMENTS_A;"},"_PDH_COUNTER_PATH_ELEMENTS_W":{"comment":"","exp":"","file":"Pdh.h","line":147,"type":"Struct","value":"typedef struct _PDH_COUNTER_PATH_ELEMENTS_W {\\r\\n    LPWSTR  szMachineName;\\r\\n    LPWSTR  szObjectName;\\r\\n    LPWSTR  szInstanceName;\\r\\n    LPWSTR  szParentInstance;\\r\\n    DWORD   dwInstanceIndex;\\r\\n    LPWSTR  szCounterName;\\r\\n} PDH_COUNTER_PATH_ELEMENTS_W, * PPDH_COUNTER_PATH_ELEMENTS_W;"},"_PDH_DATA_ITEM_PATH_ELEMENTS_A":{"comment":"","exp":"","file":"Pdh.h","line":156,"type":"Struct","value":"typedef struct _PDH_DATA_ITEM_PATH_ELEMENTS_A {\\r\\n    LPSTR   szMachineName;\\r\\n    GUID    ObjectGUID;\\r\\n    DWORD   dwItemId;\\r\\n    LPSTR   szInstanceName;\\r\\n} PDH_DATA_ITEM_PATH_ELEMENTS_A, * PPDH_DATA_ITEM_PATH_ELEMENTS_A;"},"_PDH_DATA_ITEM_PATH_ELEMENTS_W":{"comment":"","exp":"","file":"Pdh.h","line":163,"type":"Struct","value":"typedef struct _PDH_DATA_ITEM_PATH_ELEMENTS_W {\\r\\n    LPWSTR  szMachineName;\\r\\n    GUID    ObjectGUID;\\r\\n    DWORD   dwItemId;\\r\\n    LPWSTR  szInstanceName;\\r\\n} PDH_DATA_ITEM_PATH_ELEMENTS_W, * PPDH_DATA_ITEM_PATH_ELEMENTS_W;"},"_PDH_FMT_COUNTERVALUE":{"comment":"","exp":"","file":"Pdh.h","line":109,"type":"Struct","value":"typedef struct _PDH_FMT_COUNTERVALUE {\\r\\n    DWORD    CStatus;\\r\\n    union {\\r\\n        LONG        longValue;\\r\\n        double      doubleValue;\\r\\n        LONGLONG    largeValue;\\r\\n        LPCSTR      AnsiStringValue;\\r\\n        LPCWSTR     WideStringValue;\\r\\n    };\\r\\n} PDH_FMT_COUNTERVALUE, * PPDH_FMT_COUNTERVALUE;"},"_PDH_FMT_COUNTERVALUE_ITEM_A":{"comment":"","exp":"","file":"Pdh.h","line":120,"type":"Struct","value":"typedef struct _PDH_FMT_COUNTERVALUE_ITEM_A {\\r\\n    LPSTR                   szName;\\r\\n    PDH_FMT_COUNTERVALUE    FmtValue;\\r\\n} PDH_FMT_COUNTERVALUE_ITEM_A, * PPDH_FMT_COUNTERVALUE_ITEM_A;"},"_PDH_FMT_COUNTERVALUE_ITEM_W":{"comment":"","exp":"","file":"Pdh.h","line":125,"type":"Struct","value":"typedef struct _PDH_FMT_COUNTERVALUE_ITEM_W {\\r\\n    LPWSTR                  szName;\\r\\n    PDH_FMT_COUNTERVALUE    FmtValue;\\r\\n} PDH_FMT_COUNTERVALUE_ITEM_W, * PPDH_FMT_COUNTERVALUE_ITEM_W;"},"_PDH_LOG_SERVICE_QUERY_INFO_A":{"comment":"","exp":"","file":"Pdh.h","line":235,"type":"Struct","value":"typedef struct _PDH_LOG_SERVICE_QUERY_INFO_A {\\r\\n    DWORD   dwSize;\\r\\n    DWORD   dwFlags;\\r\\n    DWORD   dwLogQuota;\\r\\n    LPSTR   szLogFileCaption;\\r\\n    LPSTR   szDefaultDir;\\r\\n    LPSTR   szBaseFileName;\\r\\n    DWORD   dwFileType;\\r\\n    DWORD   dwReserved;\\r\\n    union {\\r\\n        struct {\\r\\n            DWORD   PdlAutoNameInterval;\\r\\n            DWORD   PdlAutoNameUnits;\\r\\n            LPSTR   PdlCommandFilename;\\r\\n            LPSTR   PdlCounterList;\\r\\n            DWORD   PdlAutoNameFormat;\\r\\n            DWORD   PdlSampleInterval;\\r\\n            FILETIME    PdlLogStartTime;\\r\\n            FILETIME    PdlLogEndTime;\\r\\n        };\\r\\n        struct {\\r\\n            DWORD   TlNumberOfBuffers;\\r\\n            DWORD   TlMinimumBuffers;\\r\\n            DWORD   TlMaximumBuffers;\\r\\n            DWORD   TlFreeBuffers;\\r\\n            DWORD   TlBufferSize;\\r\\n            DWORD   TlEventsLost;\\r\\n            DWORD   TlLoggerThreadId;\\r\\n            DWORD   TlBuffersWritten;\\r\\n            DWORD   TlLogHandle;\\r\\n            LPSTR   TlLogFileName;\\r\\n        };\\r\\n    };\\r\\n} PDH_LOG_SERVICE_QUERY_INFO_A, * PPDH_LOG_SERVICE_QUERY_INFO_A;"},"_PDH_LOG_SERVICE_QUERY_INFO_W":{"comment":"","exp":"","file":"Pdh.h","line":270,"type":"Struct","value":"typedef struct _PDH_LOG_SERVICE_QUERY_INFO_W {\\r\\n    DWORD   dwSize;\\r\\n    DWORD   dwFlags;\\r\\n    DWORD   dwLogQuota;\\r\\n    LPWSTR  szLogFileCaption;\\r\\n    LPWSTR  szDefaultDir;\\r\\n    LPWSTR  szBaseFileName;\\r\\n    DWORD   dwFileType;\\r\\n    DWORD   dwReserved;\\r\\n    union {\\r\\n        struct {\\r\\n            DWORD   PdlAutoNameInterval;\\r\\n            DWORD   PdlAutoNameUnits;\\r\\n            LPWSTR  PdlCommandFilename;\\r\\n            LPWSTR  PdlCounterList;\\r\\n            DWORD   PdlAutoNameFormat;\\r\\n            DWORD   PdlSampleInterval;\\r\\n            FILETIME    PdlLogStartTime;\\r\\n            FILETIME    PdlLogEndTime;\\r\\n        };\\r\\n        struct {\\r\\n            DWORD   TlNumberOfBuffers;\\r\\n            DWORD   TlMinimumBuffers;\\r\\n            DWORD   TlMaximumBuffers;\\r\\n            DWORD   TlFreeBuffers;\\r\\n            DWORD   TlBufferSize;\\r\\n            DWORD   TlEventsLost;\\r\\n            DWORD   TlLoggerThreadId;\\r\\n            DWORD   TlBuffersWritten;\\r\\n            DWORD   TlLogHandle;\\r\\n            LPWSTR  TlLogFileName;\\r\\n        };\\r\\n    };\\r\\n} PDH_LOG_SERVICE_QUERY_INFO_W, * PPDH_LOG_SERVICE_QUERY_INFO_W;"},"_PDH_RAW_COUNTER":{"comment":"","exp":"","file":"Pdh.h","line":91,"type":"Struct","value":"typedef struct _PDH_RAW_COUNTER {\\r\\n    volatile DWORD CStatus;\\r\\n    FILETIME    TimeStamp;\\r\\n    LONGLONG    FirstValue;\\r\\n    LONGLONG    SecondValue;\\r\\n    DWORD       MultiCount;\\r\\n} PDH_RAW_COUNTER, * PPDH_RAW_COUNTER;"},"_PDH_RAW_COUNTER_ITEM_A":{"comment":"","exp":"","file":"Pdh.h","line":99,"type":"Struct","value":"typedef struct _PDH_RAW_COUNTER_ITEM_A {\\r\\n    LPSTR           szName;\\r\\n    PDH_RAW_COUNTER RawValue;\\r\\n} PDH_RAW_COUNTER_ITEM_A, * PPDH_RAW_COUNTER_ITEM_A;"},"_PDH_RAW_COUNTER_ITEM_W":{"comment":"","exp":"","file":"Pdh.h","line":104,"type":"Struct","value":"typedef struct _PDH_RAW_COUNTER_ITEM_W {\\r\\n    LPWSTR          szName;\\r\\n    PDH_RAW_COUNTER RawValue;\\r\\n} PDH_RAW_COUNTER_ITEM_W, * PPDH_RAW_COUNTER_ITEM_W;"},"_PDH_RAW_LOG_RECORD":{"comment":"","exp":"","file":"Pdh.h","line":228,"type":"Struct","value":"typedef struct _PDH_RAW_LOG_RECORD {\\r\\n    DWORD       dwStructureSize;\\r\\n    DWORD       dwRecordType;\\r\\n    DWORD       dwItems;\\r\\n    UCHAR       RawBytes[1];\\r\\n} PDH_RAW_LOG_RECORD, * PPDH_RAW_LOG_RECORD;"},"_PDH_STATISTICS":{"comment":"","exp":"","file":"Pdh.h","line":130,"type":"Struct","value":"typedef struct _PDH_STATISTICS {\\r\\n    DWORD                   dwFormat;\\r\\n    DWORD                   count;\\r\\n    PDH_FMT_COUNTERVALUE    min;\\r\\n    PDH_FMT_COUNTERVALUE    max;\\r\\n    PDH_FMT_COUNTERVALUE    mean;\\r\\n} PDH_STATISTICS, * PPDH_STATISTICS;"},"_PDH_TIME_INFO":{"comment":"","exp":"","file":"Pdh.h","line":222,"type":"Struct","value":"typedef struct _PDH_TIME_INFO {\\r\\n    LONGLONG    StartTime;\\r\\n    LONGLONG    EndTime;\\r\\n    DWORD       SampleCount;\\r\\n} PDH_TIME_INFO, * PPDH_TIME_INFO;"},"_PERF_COUNTERSET_INFO":{"comment":"","exp":"","file":"perflib.h","line":130,"type":"Struct","value":"typedef struct _PERF_COUNTERSET_INFO {\\r\\n    GUID   CounterSetGuid;\\r\\n    GUID   ProviderGuid;\\r\\n    ULONG  NumCounters;\\r\\n    ULONG  InstanceType;\\r\\n} PERF_COUNTERSET_INFO, * PPERF_COUNTERSET_INFO;"},"_PERF_COUNTERSET_INSTANCE":{"comment":"","exp":"","file":"perflib.h","line":151,"type":"Struct","value":"typedef struct _PERF_COUNTERSET_INSTANCE {\\r\\n    GUID   CounterSetGuid;\\r\\n    ULONG  dwSize;\\r\\n    ULONG  InstanceId;\\r\\n    ULONG  InstanceNameOffset;\\r\\n    ULONG  InstanceNameSize;\\r\\n} PERF_COUNTERSET_INSTANCE, * PPERF_COUNTERSET_INSTANCE;"},"_PERF_COUNTERSET_REG_INFO":{"comment":"","exp":"","file":"perflib.h","line":404,"type":"Struct","value":"typedef struct _PERF_COUNTERSET_REG_INFO {\\r\\n    GUID   CounterSetGuid; \/\/ Unique ID for the counter set\\r\\n    ULONG  CounterSetType; \/\/ Reserved.\\r\\n    ULONG  DetailLevel;    \/\/ PERF_DETAIL_NOVICE or PERF_DETAIL_ADVANCED.\\r\\n    ULONG  NumCounters;    \/\/ Number of PERF_COUNTER_REG_INFO structures in this block.\\r\\n    ULONG  InstanceType;   \/\/ PERF_COUNTERSET_* type (SINGLE_INSTANCE, MULTI_INSTANCES, etc.)\\r\\n    \/\/ Followed by:\\r\\n    \/\/ PERF_COUNTER_REG_INFO CounterInfo[NumCounters];\\r\\n} PERF_COUNTERSET_REG_INFO, * PPERF_COUNTERSET_REG_INFO;"},"_PERF_COUNTER_BLOCK":{"comment":"","exp":"","file":"winperf.h","line":639,"type":"Struct","value":"typedef struct _PERF_COUNTER_BLOCK {\\r\\n    DWORD           ByteLength;         \/\/ Length in bytes of this structure,\\r\\n                                        \/\/ including the following counters\\r\\n} PERF_COUNTER_BLOCK, *PPERF_COUNTER_BLOCK;"},"_PERF_COUNTER_DATA":{"comment":"","exp":"","file":"perflib.h","line":639,"type":"Struct","value":"typedef struct _PERF_COUNTER_DATA {\\r\\n    ULONG      dwDataSize; \/\/ Size of the counter data, in bytes.\\r\\n    ULONG      dwSize;     \/\/ = sizeof(PERF_COUNTER_DATA) + sizeof(Data) + sizeof(Padding)\\r\\n    \/\/ Followed by:\\r\\n    \/\/ BYTE Data[dwDataSize];\\r\\n    \/\/ BYTE Padding[];\\r\\n} PERF_COUNTER_DATA, * PPERF_COUNTER_DATA;"},"_PERF_COUNTER_DEFINITION":{"comment":"","exp":"","file":"winperf.h","line":553,"type":"Struct","value":"typedef struct _PERF_COUNTER_DEFINITION {\\r\\n    DWORD           ByteLength;         \/\/ Length in bytes of this structure\\r\\n    DWORD           CounterNameTitleIndex;\\r\\n                                        \/\/ Index of Counter name into\\r\\n                                        \/\/ Title Database\\r\\n#ifdef _WIN64\\r\\n    DWORD           CounterNameTitle;\\r\\n#else\\r\\n    LPWSTR          CounterNameTitle;   \/\/ Initially NULL, for use by\\r\\n                                        \/\/ analysis program to point to\\r\\n                                        \/\/ retrieved title string\\r\\n#endif\\r\\n    DWORD           CounterHelpTitleIndex;\\r\\n                                        \/\/ Index of Counter Help into\\r\\n                                        \/\/ Title Database\\r\\n#ifdef _WIN64\\r\\n    DWORD           CounterHelpTitle;\\r\\n#else\\r\\n    LPWSTR          CounterHelpTitle;   \/\/ Initially NULL, for use by\\r\\n                                        \/\/ analysis program to point to\\r\\n                                        \/\/ retrieved title string\\r\\n#endif\\r\\n    LONG            DefaultScale;       \/\/ Power of 10 by which to scale\\r\\n                                        \/\/ chart line if vertical axis is 100\\r\\n                                        \/\/ 0 ==> 1, 1 ==> 10, -1 ==>1\/10, etc.\\r\\n    DWORD           DetailLevel;        \/\/ Counter level of detail (for\\r\\n                                        \/\/ controlling display complexity)\\r\\n    DWORD           CounterType;        \/\/ Type of counter\\r\\n    DWORD           CounterSize;        \/\/ Size of counter in bytes\\r\\n    DWORD           CounterOffset;      \/\/ Offset from the start of the\\r\\n                                        \/\/ PERF_COUNTER_BLOCK to the first\\r\\n                                        \/\/ byte of this counter\\r\\n} PERF_COUNTER_DEFINITION, *PPERF_COUNTER_DEFINITION;"},"_PERF_COUNTER_HEADER":{"comment":"","exp":"","file":"perflib.h","line":581,"type":"Struct","value":"typedef struct _PERF_COUNTER_HEADER {\\r\\n    ULONG      dwStatus;        \/\/ Win32 error code indicating success\/failure of the query operation.\\r\\n    PerfCounterDataType dwType; \/\/ Result type - error, single\/single, multi\/single, single\/multi, multi\/multi.\\r\\n    ULONG      dwSize;          \/\/ = sizeof(PERF_COUNTER_HEADER) + sizeof(Additional data)\\r\\n    ULONG      Reserved;        \/\/ Reserved.\\r\\n    \/\/ Followed by additional data:\\r\\n    \/\/ If dwType == PERF_ERROR_RETURN:       nothing.\\r\\n    \/\/ If dwType == PERF_SINGLE_COUNTER:     PERF_COUNTER_DATA block.\\r\\n    \/\/ If dwType == PERF_MULTIPLE_COUNTERS:  PERF_MULTI_COUNTERS block + PERF_COUNTER_DATA blocks.\\r\\n    \/\/ If dwType == PERF_MULTIPLE_INSTANCES: PERF_MULTI_INSTANCES block.\\r\\n    \/\/ If dwType == PERF_COUNTERSET:         PERF_MULTI_COUNTERS block + PERF_MULTI_INSTANCES block.\\r\\n} PERF_COUNTER_HEADER, * PPERF_COUNTER_HEADER;"},"_PERF_COUNTER_IDENTIFIER":{"comment":"","exp":"","file":"perflib.h","line":497,"type":"Struct","value":"typedef struct _PERF_COUNTER_IDENTIFIER {\\r\\n    GUID   CounterSetGuid; \/\/ The GUID of the counterset.\\r\\n    ULONG  Status;         \/\/ Win32 error code indicating success\/failure of the add\/delete operation.\\r\\n    ULONG  Size;           \/\/ sizeof(PERF_COUNTER_IDENTIFIER) + sizeof(InstanceName) + sizeof(Padding)\\r\\n    ULONG  CounterId;      \/\/ CounterId, or PERF_WILDCARD_COUNTER for all counters.\\r\\n    ULONG  InstanceId;     \/\/ InstanceId, or 0xFFFFFFFF to not filter on instance ID.\\r\\n    ULONG  Index;          \/\/ Set by PerfQueryCounterInfo to the position in which the corresponding counter data is returned.\\r\\n    ULONG  Reserved;       \/\/ Reserved.\\r\\n    \/\/ Followed by:\\r\\n    \/\/ WCHAR InstanceName[];\\r\\n    \/\/ WCHAR Padding[];\\r\\n} PERF_COUNTER_IDENTIFIER, * PPERF_COUNTER_IDENTIFIER;"},"_PERF_COUNTER_IDENTITY":{"comment":"","exp":"","file":"perflib.h","line":167,"type":"Struct","value":"typedef struct _PERF_COUNTER_IDENTITY {\\r\\n    GUID   CounterSetGuid;\\r\\n    ULONG  BufferSize;\\r\\n    ULONG  CounterId;\\r\\n    ULONG  InstanceId;\\r\\n    ULONG  MachineOffset;\\r\\n    ULONG  NameOffset;\\r\\n    ULONG  Reserved;\\r\\n} PERF_COUNTER_IDENTITY, * PPERF_COUNTER_IDENTITY;"},"_PERF_COUNTER_INFO":{"comment":"","exp":"","file":"perflib.h","line":137,"type":"Struct","value":"typedef struct _PERF_COUNTER_INFO {\\r\\n    ULONG      CounterId;     \/\/ max of 64K counters per GUID instance\\r\\n    ULONG      Type;\\r\\n    ULONGLONG  Attrib;\\r\\n    ULONG      Size;\\r\\n    ULONG      DetailLevel;\\r\\n    LONG       Scale;\\r\\n    ULONG      Offset;         \/\/ overlays to give the actual counter\\r\\n} PERF_COUNTER_INFO, * PPERF_COUNTER_INFO;"},"_PERF_COUNTER_REG_INFO":{"comment":"","exp":"","file":"perflib.h","line":422,"type":"Struct","value":"typedef struct _PERF_COUNTER_REG_INFO {\\r\\n    ULONG     CounterId;     \/\/ Counter ID is unique within the counter set. Max of 64K counters per counter set.\\r\\n    ULONG     Type;          \/\/ Counter type from winperf.h, e.g. PERF_COUNTER_COUNTER, PERF_SAMPLE_COUNTER, etc.\\r\\n    ULONGLONG Attrib;        \/\/ PERF_ATTRIB value.\\r\\n    ULONG     DetailLevel;   \/\/ PERF_DETAIL_NOVICE or PERF_DETAIL_ADVANCED.\\r\\n    LONG      DefaultScale;  \/\/ -10 to 10. ScaledValue = RawValue * (10^DefaultScale).\\r\\n    ULONG     BaseCounterId; \/\/ The counter ID of the base counter, 0xffffffff for none.\\r\\n    ULONG     PerfTimeId;    \/\/ The counter ID of the perf counter, 0xffffffff for none.\\r\\n    ULONG     PerfFreqId;    \/\/ The counter ID of the freq counter, 0xffffffff for none.\\r\\n    ULONG     MultiId;       \/\/ The counter ID of the multi counter, 0xffffffff for none.\\r\\n    ULONG     AggregateFunc; \/\/ PERF_AGGREGATE value, used if counter set type is aggregate.\\r\\n    ULONG     Reserved;      \/\/ Reserved.\\r\\n} PERF_COUNTER_REG_INFO, * PPERF_COUNTER_REG_INFO;"},"_PERF_DATA_BLOCK":{"comment":"","exp":"","file":"winperf.h","line":68,"type":"Struct","value":"typedef struct _PERF_DATA_BLOCK {\\r\\n    WCHAR           Signature[4];       \/\/ Signature: Unicode \"PERF\"\\r\\n    DWORD           LittleEndian;       \/\/ 0 = Big Endian, 1 = Little Endian\\r\\n    DWORD           Version;            \/\/ Version of these data structures\\r\\n                                        \/\/ starting at 1\\r\\n    DWORD           Revision;           \/\/ Revision of these data structures\\r\\n                                        \/\/ starting at 0 for each Version\\r\\n    DWORD           TotalByteLength;    \/\/ Total length of data block\\r\\n    DWORD           HeaderLength;       \/\/ Length of this structure\\r\\n    DWORD           NumObjectTypes;     \/\/ Number of types of objects\\r\\n                                        \/\/ being reported\\r\\n    LONG            DefaultObject;      \/\/ Object Title Index of default\\r\\n                                        \/\/ object to display when data from\\r\\n                                        \/\/ this system is retrieved (-1 =\\r\\n                                        \/\/ none, but this is not expected to\\r\\n                                        \/\/ be used)\\r\\n    SYSTEMTIME      SystemTime;         \/\/ Time at the system under\\r\\n                                        \/\/ measurement\\r\\n    LARGE_INTEGER   PerfTime;           \/\/ Performance counter value\\r\\n                                        \/\/ at the system under measurement\\r\\n    LARGE_INTEGER   PerfFreq;           \/\/ Performance counter frequency\\r\\n                                        \/\/ at the system under measurement\\r\\n    LARGE_INTEGER   PerfTime100nSec;    \/\/ Performance counter time in 100 nsec\\r\\n                                        \/\/ units at the system under measurement\\r\\n    DWORD           SystemNameLength;   \/\/ Length of the system name\\r\\n    DWORD           SystemNameOffset;   \/\/ Offset, from beginning of this\\r\\n                                        \/\/ structure, to name of system\\r\\n                                        \/\/ being measured\\r\\n} PERF_DATA_BLOCK, *PPERF_DATA_BLOCK;"},"_PERF_DATA_HEADER":{"comment":"","exp":"","file":"perflib.h","line":525,"type":"Struct","value":"typedef struct _PERF_DATA_HEADER {\\r\\n    ULONG      dwTotalSize;     \/\/ = sizeof(PERF_DATA_HEADER) + sizeof(PERF_COUNTER_HEADER blocks...)\\r\\n    ULONG      dwNumCounters;   \/\/ The number of PERF_COUNTER_HEADER blocks.\\r\\n    LONGLONG   PerfTimeStamp;   \/\/ Timestamp from a high-resolution clock.\\r\\n    LONGLONG   PerfTime100NSec; \/\/ The number of 100 nanosecond intervals since January 1, 1601, in Coordinated Universal Time (UTC).\\r\\n    LONGLONG   PerfFreq;        \/\/ The frequency of a high-resolution clock.\\r\\n    SYSTEMTIME SystemTime;      \/\/ The time at which data is collected on the provider side.\\r\\n    \/\/ Followed by:\\r\\n    \/\/ PERF_COUNTER_HEADER blocks...;\\r\\n} PERF_DATA_HEADER, * PPERF_DATA_HEADER;"},"_PERF_INSTANCE_DEFINITION":{"comment":"","exp":"","file":"winperf.h","line":600,"type":"Struct","value":"typedef struct _PERF_INSTANCE_DEFINITION {\\r\\n    DWORD           ByteLength;         \/\/ Length in bytes of this structure,\\r\\n                                        \/\/ including the subsequent name\\r\\n    DWORD           ParentObjectTitleIndex;\\r\\n                                        \/\/ Title Index to name of \"parent\"\\r\\n                                        \/\/ object (e.g., if thread, then\\r\\n                                        \/\/ process is parent object type);\\r\\n                                        \/\/ if logical drive, the physical\\r\\n                                        \/\/ drive is parent object type\\r\\n    DWORD           ParentObjectInstance;\\r\\n                                        \/\/ Index to instance of parent object\\r\\n                                        \/\/ type which is the parent of this\\r\\n                                        \/\/ instance.\\r\\n    LONG            UniqueID;           \/\/ A unique ID used instead of\\r\\n                                        \/\/ matching the name to identify\\r\\n                                        \/\/ this instance, -1 = none\\r\\n    DWORD           NameOffset;         \/\/ Offset from beginning of\\r\\n                                        \/\/ this struct to the Unicode name\\r\\n                                        \/\/ of this instance\\r\\n    DWORD           NameLength;         \/\/ Length in bytes of name; 0 = none\\r\\n                                        \/\/ this length includes the characters\\r\\n                                        \/\/ in the string plus the size of the\\r\\n                                        \/\/ terminating NULL char. It does not\\r\\n                                        \/\/ include any additional pad bytes to\\r\\n                                        \/\/ correct structure alignment\\r\\n} PERF_INSTANCE_DEFINITION, *PPERF_INSTANCE_DEFINITION;"},"_PERF_INSTANCE_HEADER":{"comment":"","exp":"","file":"perflib.h","line":358,"type":"Struct","value":"typedef struct _PERF_INSTANCE_HEADER {\\r\\n    ULONG Size;       \/\/ = sizeof(PERF_INSTANCE_HEADER) + sizeof(InstanceName) + sizeof(Padding)\\r\\n    ULONG InstanceId; \/\/ Instance ID.\\r\\n    \/\/ Followed by:\\r\\n    \/\/ WCHAR InstanceName[]; \/\/ Nul-terminated.\\r\\n    \/\/ WCHAR Padding[];      \/\/ Pad to a multiple of 8 bytes\\r\\n} PERF_INSTANCE_HEADER, *PPERF_INSTANCE_HEADER;"},"_PERF_MULTI_COUNTERS":{"comment":"","exp":"","file":"perflib.h","line":623,"type":"Struct","value":"typedef struct _PERF_MULTI_COUNTERS {\\r\\n    ULONG      dwSize;     \/\/ sizeof(PERF_MULTI_COUNTERS) + sizeof(CounterIds)\\r\\n    ULONG      dwCounters; \/\/ Number of counter ids.\\r\\n    \/\/ Followed by:\\r\\n    \/\/ DWORD CounterIds[dwCounters];\\r\\n} PERF_MULTI_COUNTERS, * PPERF_MULTI_COUNTERS;"},"_PERF_MULTI_INSTANCES":{"comment":"","exp":"","file":"perflib.h","line":609,"type":"Struct","value":"typedef struct _PERF_MULTI_INSTANCES {\\r\\n    ULONG      dwTotalSize; \/\/ = sizeof(PERF_MULTI_INSTANCES) + sizeof(instance data blocks...)\\r\\n    ULONG      dwInstances; \/\/ Number of instance data blocks.\\r\\n    \/\/ Followed by:\\r\\n    \/\/ Instance data blocks...;\\r\\n} PERF_MULTI_INSTANCES, * PPERF_MULTI_INSTANCES;"},"_PERF_OBJECT_TYPE":{"comment":"","exp":"","file":"winperf.h","line":106,"type":"Struct","value":"typedef struct _PERF_OBJECT_TYPE {\\r\\n    DWORD           TotalByteLength;    \/\/ Length of this object definition\\r\\n                                        \/\/ including this structure, the\\r\\n                                        \/\/ counter definitions, and the\\r\\n                                        \/\/ instance definitions and the\\r\\n                                        \/\/ counter blocks for each instance:\\r\\n                                        \/\/ This is the offset from this\\r\\n                                        \/\/ structure to the next object, if\\r\\n                                        \/\/ any\\r\\n    DWORD           DefinitionLength;   \/\/ Length of object definition,\\r\\n                                        \/\/ which includes this structure\\r\\n                                        \/\/ and the counter definition\\r\\n                                        \/\/ structures for this object: this\\r\\n                                        \/\/ is the offset of the first\\r\\n                                        \/\/ instance or of the counters\\r\\n                                        \/\/ for this object if there is\\r\\n                                        \/\/ no instance\\r\\n    DWORD           HeaderLength;       \/\/ Length of this structure: this\\r\\n                                        \/\/ is the offset to the first\\r\\n                                        \/\/ counter definition for this\\r\\n                                        \/\/ object\\r\\n    DWORD           ObjectNameTitleIndex;\\r\\n                                        \/\/ Index to name in Title Database\\r\\n#ifdef _WIN64\\r\\n    DWORD           ObjectNameTitle;    \/\/ Should use this as an offset\\r\\n#else\\r\\n    LPWSTR          ObjectNameTitle;    \/\/ Initially NULL, for use by\\r\\n                                        \/\/ analysis program to point to\\r\\n                                        \/\/ retrieved title string\\r\\n#endif\\r\\n    DWORD           ObjectHelpTitleIndex;\\r\\n                                        \/\/ Index to Help in Title Database\\r\\n#ifdef _WIN64\\r\\n    DWORD           ObjectHelpTitle;    \/\/ Should use this as an offset\\r\\n#else\\r\\n    LPWSTR          ObjectHelpTitle;    \/\/ Initially NULL, for use by\\r\\n                                        \/\/ analysis program to point to\\r\\n                                        \/\/ retrieved title string\\r\\n#endif\\r\\n    DWORD           DetailLevel;        \/\/ Object level of detail (for\\r\\n                                        \/\/ controlling display complexity);\\r\\n                                        \/\/ will be min of detail levels\\r\\n                                        \/\/ for all this object's counters\\r\\n    DWORD           NumCounters;        \/\/ Number of counters in each\\r\\n                                        \/\/ counter block (one counter\\r\\n                                        \/\/ block per instance)\\r\\n    LONG            DefaultCounter;     \/\/ Default counter to display when\\r\\n                                        \/\/ this object is selected, index\\r\\n                                        \/\/ starting at 0 (-1 = none, but\\r\\n                                        \/\/ this is not expected to be used)\\r\\n    LONG            NumInstances;       \/\/ Number of object instances\\r\\n                                        \/\/ for which counters are being\\r\\n                                        \/\/ returned from the system under\\r\\n                                        \/\/ measurement. If the object defined\\r\\n                                        \/\/ will never have any instance data\\r\\n                                        \/\/ structures (PERF_INSTANCE_DEFINITION)\\r\\n                                        \/\/ then this value should be -1, if the\\r\\n                                        \/\/ object can have 0 or more instances,\\r\\n                                        \/\/ but has none present, then this\\r\\n                                        \/\/ should be 0, otherwise this field\\r\\n                                        \/\/ contains the number of instances of\\r\\n                                        \/\/ this counter.\\r\\n    DWORD           CodePage;           \/\/ 0 if instance strings are in\\r\\n                                        \/\/ UNICODE, else the Code Page of\\r\\n                                        \/\/ the instance names\\r\\n    LARGE_INTEGER   PerfTime;           \/\/ Sample Time in \"Object\" units\\r\\n                                        \/\/\\r\\n    LARGE_INTEGER   PerfFreq;           \/\/ Frequency of \"Object\" units in\\r\\n                                        \/\/ counts per second.\\r\\n} PERF_OBJECT_TYPE, *PPERF_OBJECT_TYPE;"},"_PROVIDER_CONTEXT":{"comment":"","exp":"","file":"perflib.h","line":217,"type":"Struct","value":"typedef struct _PROVIDER_CONTEXT {\\r\\n    DWORD          ContextSize; \/\/ should be sizeof(PERF_PROVIDER_CONTEXT)\\r\\n    DWORD          Reserved;\\r\\n    PERFLIBREQUEST ControlCallback;\\r\\n    PERF_MEM_ALLOC MemAllocRoutine;\\r\\n    PERF_MEM_FREE  MemFreeRoutine;\\r\\n    LPVOID         pMemContext;\\r\\n} PERF_PROVIDER_CONTEXT, * PPERF_PROVIDER_CONTEXT;"},"_PerfCounterDataType":{"comment":"","exp":"","file":"perflib.h","line":541,"type":"Enum","value":"typedef enum _PerfCounterDataType {\\r\\n    PERF_ERROR_RETURN = 0,       \/* An error occurred when the performance counter value was queried. *\/\\r\\n    PERF_SINGLE_COUNTER = 1,     \/* Query returned a single counter from a single-instance. *\/\\r\\n    PERF_MULTIPLE_COUNTERS = 2,  \/* Query returned multiple counters from a single instance. *\/\\r\\n    PERF_MULTIPLE_INSTANCES = 4, \/* Query returned a single counter from each of multiple instances. *\/\\r\\n    PERF_COUNTERSET = 6          \/* Query returned multiple counters from each of multiple instances. *\/\\r\\n} PerfCounterDataType;"},"_PerfRegInfoType":{"comment":"","exp":"","file":"perflib.h","line":370,"type":"Enum","value":"typedef enum _PerfRegInfoType {\\r\\n    PERF_REG_COUNTERSET_STRUCT = 1,   \/* Returns a PERF_COUNTERSET_REG_INFO block.\\r\\n        The block includes a PERF_COUNTERSET_REG_INFO structure followed by 1 or\\r\\n        more PERF_COUNTER_REG_INFO structures. *\/\\r\\n    PERF_REG_COUNTER_STRUCT,          \/* Returns a PERF_COUNTER_REG_INFO structure.\\r\\n        Uses requestLangId to specify the counter ID. *\/\\r\\n    PERF_REG_COUNTERSET_NAME_STRING,  \/* Returns a nul-terminated utf-16le string.\\r\\n        Uses requestLangId to specify the preferred locale of the result. *\/\\r\\n    PERF_REG_COUNTERSET_HELP_STRING,  \/* Returns a nul-terminated utf-16le string.\\r\\n        Uses requestLangId to specify the preferred locale of the result. *\/\\r\\n    PERF_REG_COUNTER_NAME_STRINGS,    \/* Returns a PERF_STRING_BUFFER_HEADER block.\\r\\n        The block includes a PERF_STRING_BUFFER_HEADER structure followed by 1\\r\\n        or more PERF_STRING_COUNTER_HEADER structures followed by string data.\\r\\n        Uses requestLangId to specify the preferred locale of the result. *\/\\r\\n    PERF_REG_COUNTER_HELP_STRINGS,    \/* Returns a PERF_STRING_BUFFER_HEADER block.\\r\\n        The block includes a PERF_STRING_BUFFER_HEADER structure followed by 1\\r\\n        or more PERF_STRING_COUNTER_HEADER structures followed by string data.\\r\\n        Uses requestLangId to specify the preferred locale of the result. *\/\\r\\n    PERF_REG_PROVIDER_NAME,           \/* Returns a nul-terminated utf-16le string. *\/\\r\\n    PERF_REG_PROVIDER_GUID,           \/* Returns a GUID. *\/\\r\\n    PERF_REG_COUNTERSET_ENGLISH_NAME, \/* Returns a nul-terminated utf-16le string.\\r\\n        Equivalent to PERF_REG_COUNTERSET_NAME_STRING with requestLangId = 0. *\/\\r\\n    PERF_REG_COUNTER_ENGLISH_NAMES    \/* Returns a PERF_STRING_BUFFER_HEADER block.\\r\\n        Equivalent to PERF_REG_COUNTER_NAME_STRINGS with requestLangId = 0. *\/\\r\\n} PerfRegInfoType;"},"_STRING_BUFFER_HEADER":{"comment":"","exp":"","file":"perflib.h","line":447,"type":"Struct","value":"typedef struct _STRING_BUFFER_HEADER {\\r\\n    DWORD  dwSize;     \/\/ = sizeof(PERF_STRING_BUFFER_HEADER) + sizeof(Counters) + sizeof(StringData)\\r\\n    DWORD  dwCounters; \/\/ Number of PERF_STRING_COUNTER_HEADER structures in this block.\\r\\n    \/\/ Followed by:\\r\\n    \/\/ PERF_STRING_COUNTER_HEADER Counters[dwCounters];\\r\\n    \/\/ WCHAR StringData[];\\r\\n} PERF_STRING_BUFFER_HEADER, *PPERF_STRING_BUFFER_HEADER;"},"_STRING_COUNTER_HEADER":{"comment":"","exp":"","file":"perflib.h","line":469,"type":"Struct","value":"typedef struct _STRING_COUNTER_HEADER {\\r\\n    DWORD  dwCounterId; \/\/ ID of the counter.\\r\\n    DWORD  dwOffset;    \/\/ Byte offset from PERF_STRING_BUFFER_HEADER to string. Offset can be 0xffffffff to indicate NULL.\\r\\n} PERF_STRING_COUNTER_HEADER, *PPERF_STRING_COUNTER_HEADER;"}},"__includes_list":{"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|Pdh.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["winperf.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\winperf.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|perflib.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|winperf.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["pshpack8.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\pshpack8.h"],["poppack.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\poppack.h"]]}}