{"__const_list":{"ADDRINFOEX_VERSION_2":{"comment":"","exp":"2","file":"ws2def.h","line":970,"type":"Integer","value":2},"ADDRINFOEX_VERSION_3":{"comment":"","exp":"3","file":"ws2def.h","line":971,"type":"Integer","value":3},"ADDRINFOEX_VERSION_4":{"comment":"","exp":"4","file":"ws2def.h","line":972,"type":"Integer","value":4},"AF_12844":{"comment":"\/\/ IEEE 1284.4 WG AF","exp":"25","file":"ws2def.h","line":123,"type":"Integer","value":25},"AF_APPLETALK":{"comment":"\/\/ AppleTalk","exp":"16","file":"ws2def.h","line":114,"type":"Integer","value":16},"AF_ATM":{"comment":"\/\/ Native ATM Services","exp":"22","file":"ws2def.h","line":120,"type":"Integer","value":22},"AF_BAN":{"comment":"\/\/ Banyan","exp":"21","file":"ws2def.h","line":119,"type":"Integer","value":21},"AF_BTH":{"comment":"\/\/ Bluetooth RFCOMM\/L2CAP protocols","exp":"32","file":"ws2def.h","line":138,"type":"Integer","value":32},"AF_CCITT":{"comment":"\/\/ CCITT protocols, X.25 etc","exp":"10","file":"ws2def.h","line":108,"type":"Integer","value":10},"AF_CHAOS":{"comment":"\/\/ mit CHAOS protocols","exp":"5","file":"ws2def.h","line":101,"type":"Integer","value":5},"AF_CLUSTER":{"comment":"\/\/ Microsoft Wolfpack","exp":"24","file":"ws2def.h","line":122,"type":"Integer","value":24},"AF_DATAKIT":{"comment":"\/\/ datakit protocols","exp":"9","file":"ws2def.h","line":107,"type":"Integer","value":9},"AF_DECnet":{"comment":"\/\/ DECnet","exp":"12","file":"ws2def.h","line":110,"type":"Integer","value":12},"AF_DLI":{"comment":"\/\/ Direct data link interface","exp":"13","file":"ws2def.h","line":111,"type":"Integer","value":13},"AF_ECMA":{"comment":"\/\/ european computer manufacturers","exp":"8","file":"ws2def.h","line":106,"type":"Integer","value":8},"AF_FIREFOX":{"comment":"\/\/ Protocols from Firefox","exp":"19","file":"ws2def.h","line":117,"type":"Integer","value":19},"AF_HYLINK":{"comment":"\/\/ NSC Hyperchannel","exp":"15","file":"ws2def.h","line":113,"type":"Integer","value":15},"AF_HYPERV":{"comment":"","exp":"34","file":"ws2def.h","line":146,"type":"Integer","value":34},"AF_ICLFXBM":{"comment":"","exp":"31","file":"ws2def.h","line":133,"type":"Integer","value":31},"AF_IMPLINK":{"comment":"\/\/ arpanet imp addresses","exp":"3","file":"ws2def.h","line":99,"type":"Integer","value":3},"AF_INET":{"comment":"\/\/ internetwork: UDP, TCP, etc.","exp":"2","file":"ws2def.h","line":98,"type":"Integer","value":2},"AF_INET6":{"comment":"\/\/ Internetwork Version 6","exp":"23","file":"ws2def.h","line":121,"type":"Integer","value":23},"AF_IPX":{"comment":"\/\/ IPX protocols: IPX, SPX, etc.","exp":"AF_NS","file":"ws2def.h","line":103,"type":"Integer","value":6},"AF_IRDA":{"comment":"\/\/ IrDA","exp":"26","file":"ws2def.h","line":124,"type":"Integer","value":26},"AF_ISO":{"comment":"\/\/ ISO protocols","exp":"7","file":"ws2def.h","line":104,"type":"Integer","value":7},"AF_LAT":{"comment":"\/\/ LAT","exp":"14","file":"ws2def.h","line":112,"type":"Integer","value":14},"AF_LINK":{"comment":"","exp":"33","file":"ws2def.h","line":142,"type":"Integer","value":33},"AF_MAX":{"comment":"","dupe":[{"comment":"","exp":"32","file":"ws2def.h","line":136,"type":"Unknown","value":"32"},{"comment":"","exp":"33","file":"ws2def.h","line":140,"type":"Unknown","value":"33"},{"comment":"","exp":"34","file":"ws2def.h","line":144,"type":"Unknown","value":"34"},{"comment":"","exp":"35","file":"ws2def.h","line":147,"type":"Unknown","value":"35"}],"exp":"29","file":"ws2def.h","line":128,"type":"Integer","value":29},"AF_NETBIOS":{"comment":"\/\/ NetBios-style addresses","exp":"17","file":"ws2def.h","line":115,"type":"Integer","value":17},"AF_NETDES":{"comment":"\/\/ Network Designers OSI & gateway","exp":"28","file":"ws2def.h","line":125,"type":"Integer","value":28},"AF_NS":{"comment":"\/\/ XEROX NS protocols","exp":"6","file":"ws2def.h","line":102,"type":"Integer","value":6},"AF_OSI":{"comment":"\/\/ OSI is ISO","exp":"AF_ISO","file":"ws2def.h","line":105,"type":"Integer","value":7},"AF_PUP":{"comment":"\/\/ pup protocols: e.g. BSP","exp":"4","file":"ws2def.h","line":100,"type":"Integer","value":4},"AF_SNA":{"comment":"\/\/ IBM SNA","exp":"11","file":"ws2def.h","line":109,"type":"Integer","value":11},"AF_TCNMESSAGE":{"comment":"","exp":"30","file":"ws2def.h","line":132,"type":"Integer","value":30},"AF_TCNPROCESS":{"comment":"","exp":"29","file":"ws2def.h","line":131,"type":"Integer","value":29},"AF_UNIX":{"comment":"\/\/ local to host (pipes, portals)","exp":"1","file":"ws2def.h","line":97,"type":"Integer","value":1},"AF_UNKNOWN1":{"comment":"\/\/ Somebody is using this!","exp":"20","file":"ws2def.h","line":118,"type":"Integer","value":20},"AF_UNSPEC":{"comment":"\/\/ unspecified","exp":"0","file":"ws2def.h","line":96,"type":"Integer","value":0},"AF_VOICEVIEW":{"comment":"\/\/ VoiceView","exp":"18","file":"ws2def.h","line":116,"type":"Integer","value":18},"AI_ADDRCONFIG":{"comment":"\/\/ Resolution only if global address configured","exp":"0x00000400","file":"ws2def.h","line":886,"type":"Integer","value":1024},"AI_ALL":{"comment":"\/\/ Query both IP6 and IP4 with AI_V4MAPPED","exp":"0x00000100","file":"ws2def.h","line":885,"type":"Integer","value":256},"AI_CANONNAME":{"comment":"\/\/ Return canonical name in first ai_canonname","exp":"0x00000002","file":"ws2def.h","line":880,"type":"Integer","value":2},"AI_DISABLE_IDN_ENCODING":{"comment":"\/\/ Disable Internationalized Domain Names handling","exp":"0x00080000","file":"ws2def.h","line":895,"type":"Integer","value":524288},"AI_DNS_ONLY":{"comment":"\/\/ Restrict queries to unicast DNS only (no LLMNR, netbios, etc.)","exp":"0x00000010","file":"ws2def.h","line":883,"type":"Integer","value":16},"AI_EXTENDED":{"comment":"\/\/ Indicates this is extended ADDRINFOEX(2\/..) struct","exp":"0x80000000","file":"ws2def.h","line":896,"type":"Integer","value":2147483648},"AI_FILESERVER":{"comment":"\/\/ Resolving fileserver name resolution","exp":"0x00040000","file":"ws2def.h","line":894,"type":"Integer","value":262144},"AI_FQDN":{"comment":"\/\/ Return the FQDN in ai_canonname","exp":"0x00020000","file":"ws2def.h","line":893,"type":"Integer","value":131072},"AI_NON_AUTHORITATIVE":{"comment":"\/\/ LUP_NON_AUTHORITATIVE","exp":"0x00004000","file":"ws2def.h","line":889,"type":"Integer","value":16384},"AI_NUMERICHOST":{"comment":"\/\/ Nodename must be a numeric address string","exp":"0x00000004","file":"ws2def.h","line":881,"type":"Integer","value":4},"AI_NUMERICSERV":{"comment":"\/\/ Servicename must be a numeric port number","exp":"0x00000008","file":"ws2def.h","line":882,"type":"Integer","value":8},"AI_PASSIVE":{"comment":"\/\/ Socket address will be used in bind() call","exp":"0x00000001","file":"ws2def.h","line":879,"type":"Integer","value":1},"AI_RESOLUTION_HANDLE":{"comment":"\/\/ Request resolution handle","exp":"0x40000000","file":"ws2def.h","line":897,"type":"Integer","value":1073741824},"AI_RETURN_PREFERRED_NAMES":{"comment":"\/\/ LUP_RETURN_PREFERRED_NAMES","exp":"0x00010000","file":"ws2def.h","line":891,"type":"Integer","value":65536},"AI_SECURE":{"comment":"\/\/ LUP_SECURE","exp":"0x00008000","file":"ws2def.h","line":890,"type":"Integer","value":32768},"AI_V4MAPPED":{"comment":"\/\/ On v6 failure, query v4 and convert to V4MAPPED format","exp":"0x00000800","file":"ws2def.h","line":887,"type":"Integer","value":2048},"ANY_SIZE":{"comment":"","exp":"1","file":"Iprtrmib.h","line":70,"type":"Integer","value":1},"BEST_IF":{"comment":"","exp":"(MCAST_MFE_STATS + 1)","file":"Iprtrmib.h","line":104,"type":"Integer","value":20},"BEST_ROUTE":{"comment":"","exp":"(BEST_IF + 1)","file":"Iprtrmib.h","line":105,"type":"Integer","value":21},"BROADCAST_NODETYPE":{"comment":"","exp":"1","file":"IPTypes.h","line":52,"type":"Integer","value":1},"CMSGDATA_ALIGN":{"comment":"","exp":"WSA_CMSGDATA_ALIGN","file":"ws2def.h","line":751,"type":"Unknown","value":"WSA_CMSGDATA_ALIGN"},"CMSGHDR_ALIGN":{"comment":"","exp":"WSA_CMSGHDR_ALIGN","file":"ws2def.h","line":750,"type":"Unknown","value":"WSA_CMSGHDR_ALIGN"},"CMSG_FIRSTHDR":{"comment":"","exp":"WSA_CMSG_FIRSTHDR","file":"ws2def.h","line":772,"type":"Unknown","value":"WSA_CMSG_FIRSTHDR"},"CMSG_LEN":{"comment":"","exp":"WSA_CMSG_LEN","file":"ws2def.h","line":854,"type":"Unknown","value":"WSA_CMSG_LEN"},"CMSG_NXTHDR":{"comment":"","exp":"WSA_CMSG_NXTHDR","file":"ws2def.h","line":800,"type":"Unknown","value":"WSA_CMSG_NXTHDR"},"CMSG_SPACE":{"comment":"","exp":"WSA_CMSG_SPACE","file":"ws2def.h","line":837,"type":"Unknown","value":"WSA_CMSG_SPACE"},"DEFAULT_MINIMUM_ENTITIES":{"comment":"\/\/ arb.","exp":"32","file":"IPTypes.h","line":39,"type":"Integer","value":32},"DEST_LONGER":{"comment":"","exp":"(DEST_MATCHING + 1)","file":"Iprtrmib.h","line":113,"type":"Integer","value":29},"DEST_MATCHING":{"comment":"","exp":"(MCAST_SCOPE + 1)","file":"Iprtrmib.h","line":112,"type":"Integer","value":28},"DEST_SHORTER":{"comment":"","exp":"(DEST_LONGER + 1)","file":"Iprtrmib.h","line":114,"type":"Integer","value":30},"DNS_INTERFACE_SETTINGS_VERSION1":{"comment":"","exp":"0x0001","file":"netioapi.h","line":3167,"type":"Integer","value":1},"DNS_INTERFACE_SETTINGS_VERSION2":{"comment":"","exp":"0x0002","file":"netioapi.h","line":3168,"type":"Integer","value":2},"DNS_SETTINGS_ENABLE_LLMNR":{"comment":"","exp":"0x0080","file":"netioapi.h","line":3177,"type":"Integer","value":128},"DNS_SETTINGS_QUERY_ADAPTER_NAME":{"comment":"","exp":"0x0100","file":"netioapi.h","line":3178,"type":"Integer","value":256},"DNS_SETTINGS_VERSION1":{"comment":"","exp":"0x0001","file":"netioapi.h","line":3166,"type":"Integer","value":1},"DNS_SETTING_DISABLE_UNCONSTRAINED_QUERIES":{"comment":"","exp":"0x0400","file":"netioapi.h","line":3180,"type":"Integer","value":1024},"DNS_SETTING_DOMAIN":{"comment":"","exp":"0x0020","file":"netioapi.h","line":3175,"type":"Integer","value":32},"DNS_SETTING_HOSTNAME":{"comment":"","exp":"0x0040","file":"netioapi.h","line":3176,"type":"Integer","value":64},"DNS_SETTING_IPV6":{"comment":"","exp":"0x0001","file":"netioapi.h","line":3170,"type":"Integer","value":1},"DNS_SETTING_NAMESERVER":{"comment":"","exp":"0x0002","file":"netioapi.h","line":3171,"type":"Integer","value":2},"DNS_SETTING_PROFILE_NAMESERVER":{"comment":"","exp":"0x0200","file":"netioapi.h","line":3179,"type":"Integer","value":512},"DNS_SETTING_REGISTER_ADAPTER_NAME":{"comment":"","exp":"0x0010","file":"netioapi.h","line":3174,"type":"Integer","value":16},"DNS_SETTING_REGISTRATION_ENABLED":{"comment":"","exp":"0x0008","file":"netioapi.h","line":3173,"type":"Integer","value":8},"DNS_SETTING_SEARCHLIST":{"comment":"","exp":"0x0004","file":"netioapi.h","line":3172,"type":"Integer","value":4},"DNS_SETTING_SUPPLEMENTAL_SEARCH_LIST":{"comment":"","exp":"0x0800","file":"netioapi.h","line":3181,"type":"Integer","value":2048},"GAA_FLAG_INCLUDE_ALL_COMPARTMENTS":{"comment":"","exp":"0x0200","file":"IPTypes.h","line":411,"type":"Integer","value":512},"GAA_FLAG_INCLUDE_ALL_INTERFACES":{"comment":"","exp":"0x0100","file":"IPTypes.h","line":410,"type":"Integer","value":256},"GAA_FLAG_INCLUDE_GATEWAYS":{"comment":"","exp":"0x0080","file":"IPTypes.h","line":409,"type":"Integer","value":128},"GAA_FLAG_INCLUDE_PREFIX":{"comment":"","exp":"0x0010","file":"IPTypes.h","line":406,"type":"Integer","value":16},"GAA_FLAG_INCLUDE_TUNNEL_BINDINGORDER":{"comment":"","exp":"0x0400","file":"IPTypes.h","line":412,"type":"Integer","value":1024},"GAA_FLAG_INCLUDE_WINS_INFO":{"comment":"","exp":"0x0040","file":"IPTypes.h","line":408,"type":"Integer","value":64},"GAA_FLAG_SKIP_ANYCAST":{"comment":"","exp":"0x0002","file":"IPTypes.h","line":403,"type":"Integer","value":2},"GAA_FLAG_SKIP_DNS_INFO":{"comment":"","exp":"0x0800","file":"IPTypes.h","line":413,"type":"Integer","value":2048},"GAA_FLAG_SKIP_DNS_SERVER":{"comment":"","exp":"0x0008","file":"IPTypes.h","line":405,"type":"Integer","value":8},"GAA_FLAG_SKIP_FRIENDLY_NAME":{"comment":"","exp":"0x0020","file":"IPTypes.h","line":407,"type":"Integer","value":32},"GAA_FLAG_SKIP_MULTICAST":{"comment":"","exp":"0x0004","file":"IPTypes.h","line":404,"type":"Integer","value":4},"GAA_FLAG_SKIP_UNICAST":{"comment":"","exp":"0x0001","file":"IPTypes.h","line":402,"type":"Integer","value":1},"HYBRID_NODETYPE":{"comment":"","exp":"8","file":"IPTypes.h","line":55,"type":"Integer","value":8},"ICMP_STATS":{"comment":"","exp":"(IP_NETROW + 1)","file":"Iprtrmib.h","line":95,"type":"Integer","value":11},"IFF_BROADCAST":{"comment":"\/\/ Broadcast is  supported.","exp":"0x00000002","file":"ws2ipdef.h","line":112,"type":"Integer","value":2},"IFF_LOOPBACK":{"comment":"\/\/ This is loopback interface.","exp":"0x00000004","file":"ws2ipdef.h","line":113,"type":"Integer","value":4},"IFF_MULTICAST":{"comment":"\/\/ Multicast is supported.","exp":"0x00000010","file":"ws2ipdef.h","line":115,"type":"Integer","value":16},"IFF_POINTTOPOINT":{"comment":"\/\/ This is point-to-point interface.","exp":"0x00000008","file":"ws2ipdef.h","line":114,"type":"Integer","value":8},"IFF_UP":{"comment":"\/\/ Interface is up.","exp":"0x00000001","file":"ws2ipdef.h","line":111,"type":"Integer","value":1},"IFI_UNSPECIFIED":{"comment":"","exp":"NET_IFINDEX_UNSPECIFIED","file":"ifdef.h","line":196,"type":"Unknown","value":"(NET_IFINDEX)(0)"},"IF_MAX_PHYS_ADDRESS_LENGTH":{"comment":"","exp":"32","file":"ifdef.h","line":282,"type":"Integer","value":32},"IF_MAX_STRING_SIZE":{"comment":"","exp":"256","file":"ifdef.h","line":273,"type":"Integer","value":256},"IF_NAMESIZE":{"comment":"","exp":"NDIS_IF_MAX_STRING_SIZE","file":"netioapi.h","line":2749,"type":"Integer","value":256},"IF_NUMBER":{"comment":"","exp":"0","file":"Iprtrmib.h","line":84,"type":"Integer","value":0},"IF_ROW":{"comment":"","exp":"(IF_TABLE + 1)","file":"Iprtrmib.h","line":86,"type":"Integer","value":2},"IF_STATUS":{"comment":"","exp":"(MCAST_GLOBAL + 1)","file":"Iprtrmib.h","line":109,"type":"Integer","value":25},"IF_TABLE":{"comment":"","exp":"(IF_NUMBER + 1)","file":"Iprtrmib.h","line":85,"type":"Integer","value":1},"IN6ADDR_6BONETESTPREFIX_INIT":{"comment":"","exp":"{ 0x3f, 0xfe }","file":"ws2ipdef.h","line":317,"type":"Other","value":"{ 0x3f, 0xfe }"},"IN6ADDR_6TO4PREFIX_INIT":{"comment":"","exp":"{ 0x20, 0x02, }","file":"ws2ipdef.h","line":307,"type":"Other","value":"{ 0x20, 0x02, }"},"IN6ADDR_6TO4PREFIX_LENGTH":{"comment":"","exp":"16","file":"ws2ipdef.h","line":327,"type":"Integer","value":16},"IN6ADDR_ALLMLDV2ROUTERSONLINK_INIT":{"comment":"","exp":"{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16}","file":"ws2ipdef.h","line":267,"type":"Other","value":"{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16}"},"IN6ADDR_ALLNODESONLINK_INIT":{"comment":"","exp":"{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01}","file":"ws2ipdef.h","line":257,"type":"Other","value":"{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01}"},"IN6ADDR_ALLNODESONNODE_INIT":{"comment":"","exp":"{ 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01}","file":"ws2ipdef.h","line":252,"type":"Other","value":"{ 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01}"},"IN6ADDR_ALLROUTERSONLINK_INIT":{"comment":"","exp":"{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02}","file":"ws2ipdef.h","line":262,"type":"Other","value":"{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02}"},"IN6ADDR_ANY_INIT":{"comment":"","exp":"{{{ 0 }}}","file":"ws2ipdef.h","line":248,"type":"Other","value":"{{{ 0 }}}"},"IN6ADDR_LINKLOCALPREFIX_INIT":{"comment":"","exp":"{ 0xfe, 0x80, }","file":"ws2ipdef.h","line":293,"type":"Other","value":"{ 0xfe, 0x80, }"},"IN6ADDR_LINKLOCALPREFIX_LENGTH":{"comment":"","exp":"64","file":"ws2ipdef.h","line":319,"type":"Integer","value":64},"IN6ADDR_LOOPBACK_INIT":{"comment":"","exp":"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 }","file":"ws2ipdef.h","line":250,"type":"Other","value":"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 }"},"IN6ADDR_MULTICASTPREFIX_INIT":{"comment":"","exp":"{ 0xff, 0x00, }","file":"ws2ipdef.h","line":295,"type":"Other","value":"{ 0xff, 0x00, }"},"IN6ADDR_MULTICASTPREFIX_LENGTH":{"comment":"","exp":"8","file":"ws2ipdef.h","line":321,"type":"Integer","value":8},"IN6ADDR_SITELOCALPREFIX_INIT":{"comment":"","exp":"{0xfe, 0xc0 }","file":"ws2ipdef.h","line":315,"type":"Other","value":"{0xfe, 0xc0 }"},"IN6ADDR_SOLICITEDNODEMULTICASTPREFIX_INIT":{"comment":"","exp":"{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff,}","file":"ws2ipdef.h","line":297,"type":"Other","value":"{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff,}"},"IN6ADDR_SOLICITEDNODEMULTICASTPREFIX_LENGTH":{"comment":"","exp":"104","file":"ws2ipdef.h","line":323,"type":"Integer","value":104},"IN6ADDR_TEREDOINITIALLINKLOCALADDRESS_INIT":{"comment":"","exp":"{ 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe}","file":"ws2ipdef.h","line":272,"type":"Other","value":"{ 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe}"},"IN6ADDR_TEREDOOLDLINKLOCALADDRESSVISTA_INIT":{"comment":"","exp":"{ 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}","file":"ws2ipdef.h","line":288,"type":"Other","value":"{ 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}"},"IN6ADDR_TEREDOOLDLINKLOCALADDRESSXP_INIT":{"comment":"","exp":"{ 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 'T', 'E', 'R', 'E', 'D', 'O'}","file":"ws2ipdef.h","line":280,"type":"Other","value":"{ 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 'T', 'E', 'R', 'E', 'D', 'O'}"},"IN6ADDR_TEREDOPREFIX_INIT":{"comment":"","exp":"{ 0x20, 0x01, 0x00, 0x00, }","file":"ws2ipdef.h","line":309,"type":"Other","value":"{ 0x20, 0x01, 0x00, 0x00, }"},"IN6ADDR_TEREDOPREFIX_INIT_OLD":{"comment":"","exp":"{ 0x3f, 0xfe, 0x83, 0x1f, }","file":"ws2ipdef.h","line":311,"type":"Other","value":"{ 0x3f, 0xfe, 0x83, 0x1f, }"},"IN6ADDR_TEREDOPREFIX_LENGTH":{"comment":"","exp":"32","file":"ws2ipdef.h","line":329,"type":"Integer","value":32},"IN6ADDR_ULAPREFIX_INIT":{"comment":"","exp":"{0xfc }","file":"ws2ipdef.h","line":313,"type":"Other","value":"{0xfc }"},"IN6ADDR_V4MAPPEDPREFIX_INIT":{"comment":"","exp":"{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,}","file":"ws2ipdef.h","line":302,"type":"Other","value":"{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,}"},"IN6ADDR_V4MAPPEDPREFIX_LENGTH":{"comment":"","exp":"96","file":"ws2ipdef.h","line":325,"type":"Integer","value":96},"IN6_ARE_ADDR_EQUAL":{"comment":"","exp":"IN6_ADDR_EQUAL","file":"ws2ipdef.h","line":387,"type":"Unknown","value":"IN6_ADDR_EQUAL"},"INADDR_ANY":{"comment":"","exp":"(ULONG)0x00000000","file":"ws2def.h","line":600,"type":"Integer","value":0},"INADDR_BROADCAST":{"comment":"","exp":"(ULONG)0xffffffff","file":"ws2def.h","line":602,"type":"Integer","value":4294967295},"INADDR_LOOPBACK":{"comment":"","exp":"0x7f000001","file":"ws2def.h","line":601,"type":"Integer","value":2130706433},"INADDR_NONE":{"comment":"","exp":"0xffffffff","file":"ws2def.h","line":603,"type":"Integer","value":4294967295},"INET6_ADDRSTRLEN":{"comment":"","exp":"65","file":"ws2ipdef.h","line":939,"type":"Integer","value":65},"INET_ADDRSTRLEN":{"comment":"","exp":"22","file":"ws2ipdef.h","line":938,"type":"Integer","value":22},"INTERFACE_HARDWARE_CROSSTIMESTAMP_VERSION_1":{"comment":"","exp":"0x01","file":"iphlpapi.h","line":957,"type":"Integer","value":1},"INTERFACE_TIMESTAMP_CAPABILITIES_VERSION_1":{"comment":"","exp":"0x01","file":"iphlpapi.h","line":956,"type":"Integer","value":1},"IN_CLASSA_HOST":{"comment":"","exp":"0x00ffffff","file":"ws2def.h","line":580,"type":"Integer","value":16777215},"IN_CLASSA_MAX":{"comment":"","exp":"128","file":"ws2def.h","line":581,"type":"Integer","value":128},"IN_CLASSA_NET":{"comment":"","exp":"0xff000000","file":"ws2def.h","line":578,"type":"Integer","value":4278190080},"IN_CLASSA_NSHIFT":{"comment":"","exp":"24","file":"ws2def.h","line":579,"type":"Integer","value":24},"IN_CLASSB_HOST":{"comment":"","exp":"0x0000ffff","file":"ws2def.h","line":586,"type":"Integer","value":65535},"IN_CLASSB_MAX":{"comment":"","exp":"65536","file":"ws2def.h","line":587,"type":"Integer","value":65536},"IN_CLASSB_NET":{"comment":"","exp":"0xffff0000","file":"ws2def.h","line":584,"type":"Integer","value":4294901760},"IN_CLASSB_NSHIFT":{"comment":"","exp":"16","file":"ws2def.h","line":585,"type":"Integer","value":16},"IN_CLASSC_HOST":{"comment":"","exp":"0x000000ff","file":"ws2def.h","line":592,"type":"Integer","value":255},"IN_CLASSC_NET":{"comment":"","exp":"0xffffff00","file":"ws2def.h","line":590,"type":"Integer","value":4294967040},"IN_CLASSC_NSHIFT":{"comment":"","exp":"8","file":"ws2def.h","line":591,"type":"Integer","value":8},"IN_CLASSD_HOST":{"comment":"\/* routing needn't know.    *\/","exp":"0x0fffffff","file":"ws2def.h","line":597,"type":"Integer","value":268435455},"IN_CLASSD_NET":{"comment":"\/* These ones aren't really *\/","exp":"0xf0000000","file":"ws2def.h","line":595,"type":"Integer","value":4026531840},"IN_CLASSD_NSHIFT":{"comment":"\/* net and host fields, but *\/","exp":"28","file":"ws2def.h","line":596,"type":"Integer","value":28},"IOCPARM_MASK":{"comment":"\/* parameters must be < 128 bytes *\/","exp":"0x7f","file":"ws2def.h","line":671,"type":"Integer","value":127},"IOCTL_ARP_SEND_REQUEST":{"comment":"","exp":"103","file":"IPExport.h","line":272,"type":"Integer","value":103},"IOCTL_IP_ADDCHANGE_NOTIFY_REQUEST":{"comment":"","exp":"102","file":"IPExport.h","line":271,"type":"Integer","value":102},"IOCTL_IP_GET_BEST_INTERFACE":{"comment":"","exp":"105","file":"IPExport.h","line":274,"type":"Integer","value":105},"IOCTL_IP_INTERFACE_INFO":{"comment":"","exp":"104","file":"IPExport.h","line":273,"type":"Integer","value":104},"IOCTL_IP_RTCHANGE_NOTIFY_REQUEST":{"comment":"","exp":"101","file":"IPExport.h","line":270,"type":"Integer","value":101},"IOCTL_IP_UNIDIRECTIONAL_ADAPTER_ADDRESS":{"comment":"","exp":"106","file":"IPExport.h","line":275,"type":"Integer","value":106},"IOC_IN":{"comment":"\/* copy in parameters *\/","exp":"0x80000000","file":"ws2def.h","line":674,"type":"Integer","value":2147483648},"IOC_INOUT":{"comment":"","exp":"(IOC_IN|IOC_OUT)","file":"ws2def.h","line":675,"type":"Integer","value":3221225472},"IOC_OUT":{"comment":"\/* copy out parameters *\/","exp":"0x40000000","file":"ws2def.h","line":673,"type":"Integer","value":1073741824},"IOC_PROTOCOL":{"comment":"","exp":"0x10000000","file":"ws2def.h","line":378,"type":"Integer","value":268435456},"IOC_UNIX":{"comment":"","exp":"0x00000000","file":"ws2def.h","line":376,"type":"Integer","value":0},"IOC_VENDOR":{"comment":"","exp":"0x18000000","file":"ws2def.h","line":379,"type":"Integer","value":402653184},"IOC_VOID":{"comment":"\/* no parameters *\/","exp":"0x20000000","file":"ws2def.h","line":672,"type":"Integer","value":536870912},"IOC_WS2":{"comment":"","exp":"0x08000000","file":"ws2def.h","line":377,"type":"Integer","value":134217728},"IOC_WSK":{"comment":"","exp":"(IOC_WS2|0x07000000)","file":"ws2def.h","line":386,"type":"Integer","value":251658240},"IP6T_SO_ORIGINAL_DST":{"comment":"","exp":"SO_ORIGINAL_DST","file":"ws2def.h","line":220,"type":"Integer","value":12303},"IP6_STATS":{"comment":"","exp":"(MCAST_MFE_STATS_EX + 1)","file":"Iprtrmib.h","line":120,"type":"Integer","value":36},"IPHLPAPI_DLL_LINKAGE":{"comment":"","exp":"DECLSPEC_IMPORT","file":"IcmpAPI.h","line":39,"type":"Unknown","value":"DECLSPEC_IMPORT"},"IPPORT_BIFFUDP":{"comment":"","exp":"512","file":"ws2def.h","line":552,"type":"Integer","value":512},"IPPORT_CHARGEN":{"comment":"","exp":"19","file":"ws2def.h","line":509,"type":"Integer","value":19},"IPPORT_CMDSERVER":{"comment":"","exp":"514","file":"ws2def.h","line":546,"type":"Integer","value":514},"IPPORT_DAYTIME":{"comment":"","exp":"13","file":"ws2def.h","line":505,"type":"Integer","value":13},"IPPORT_DISCARD":{"comment":"","exp":"9","file":"ws2def.h","line":503,"type":"Integer","value":9},"IPPORT_DYNAMIC_MAX":{"comment":"","exp":"0xffff","file":"ws2def.h","line":566,"type":"Integer","value":65535},"IPPORT_DYNAMIC_MIN":{"comment":"","exp":"0xc000","file":"ws2def.h","line":565,"type":"Integer","value":49152},"IPPORT_ECHO":{"comment":"","exp":"7","file":"ws2def.h","line":502,"type":"Integer","value":7},"IPPORT_EFSSERVER":{"comment":"","exp":"520","file":"ws2def.h","line":547,"type":"Integer","value":520},"IPPORT_EPMAP":{"comment":"","exp":"135","file":"ws2def.h","line":533,"type":"Integer","value":135},"IPPORT_EXECSERVER":{"comment":"","exp":"512","file":"ws2def.h","line":544,"type":"Integer","value":512},"IPPORT_FINGER":{"comment":"","exp":"79","file":"ws2def.h","line":524,"type":"Integer","value":79},"IPPORT_FTP":{"comment":"","exp":"21","file":"ws2def.h","line":511,"type":"Integer","value":21},"IPPORT_FTP_DATA":{"comment":"","exp":"20","file":"ws2def.h","line":510,"type":"Integer","value":20},"IPPORT_HTTPS":{"comment":"","exp":"443","file":"ws2def.h","line":542,"type":"Integer","value":443},"IPPORT_IMAP":{"comment":"","exp":"143","file":"ws2def.h","line":537,"type":"Integer","value":143},"IPPORT_IMAP3":{"comment":"","exp":"220","file":"ws2def.h","line":540,"type":"Integer","value":220},"IPPORT_LDAP":{"comment":"","exp":"389","file":"ws2def.h","line":541,"type":"Integer","value":389},"IPPORT_LOGINSERVER":{"comment":"","exp":"513","file":"ws2def.h","line":545,"type":"Integer","value":513},"IPPORT_MICROSOFT_DS":{"comment":"","exp":"445","file":"ws2def.h","line":543,"type":"Integer","value":445},"IPPORT_MSP":{"comment":"","exp":"18","file":"ws2def.h","line":508,"type":"Integer","value":18},"IPPORT_MTP":{"comment":"","exp":"57","file":"ws2def.h","line":517,"type":"Integer","value":57},"IPPORT_NAMESERVER":{"comment":"","exp":"42","file":"ws2def.h","line":515,"type":"Integer","value":42},"IPPORT_NETBIOS_DGM":{"comment":"","exp":"138","file":"ws2def.h","line":535,"type":"Integer","value":138},"IPPORT_NETBIOS_NS":{"comment":"","exp":"137","file":"ws2def.h","line":534,"type":"Integer","value":137},"IPPORT_NETBIOS_SSN":{"comment":"","exp":"139","file":"ws2def.h","line":536,"type":"Integer","value":139},"IPPORT_NETSTAT":{"comment":"","exp":"15","file":"ws2def.h","line":506,"type":"Integer","value":15},"IPPORT_NTP":{"comment":"","exp":"123","file":"ws2def.h","line":532,"type":"Integer","value":123},"IPPORT_POP3":{"comment":"","exp":"110","file":"ws2def.h","line":531,"type":"Integer","value":110},"IPPORT_QOTD":{"comment":"","exp":"17","file":"ws2def.h","line":507,"type":"Integer","value":17},"IPPORT_REGISTERED_MAX":{"comment":"","exp":"0xbfff","file":"ws2def.h","line":564,"type":"Integer","value":49151},"IPPORT_REGISTERED_MIN":{"comment":"","exp":"IPPORT_RESERVED","file":"ws2def.h","line":563,"type":"Integer","value":1024},"IPPORT_RESERVED":{"comment":"","exp":"1024","file":"ws2def.h","line":561,"type":"Integer","value":1024},"IPPORT_RJE":{"comment":"","exp":"77","file":"ws2def.h","line":523,"type":"Integer","value":77},"IPPORT_ROUTESERVER":{"comment":"","exp":"520","file":"ws2def.h","line":554,"type":"Integer","value":520},"IPPORT_SMTP":{"comment":"","exp":"25","file":"ws2def.h","line":513,"type":"Integer","value":25},"IPPORT_SNMP":{"comment":"","exp":"161","file":"ws2def.h","line":538,"type":"Integer","value":161},"IPPORT_SNMP_TRAP":{"comment":"","exp":"162","file":"ws2def.h","line":539,"type":"Integer","value":162},"IPPORT_SUPDUP":{"comment":"","exp":"95","file":"ws2def.h","line":526,"type":"Integer","value":95},"IPPORT_SYSTAT":{"comment":"","exp":"11","file":"ws2def.h","line":504,"type":"Integer","value":11},"IPPORT_TCPMUX":{"comment":"","exp":"1","file":"ws2def.h","line":501,"type":"Integer","value":1},"IPPORT_TELNET":{"comment":"","exp":"23","file":"ws2def.h","line":512,"type":"Integer","value":23},"IPPORT_TFTP":{"comment":"","exp":"69","file":"ws2def.h","line":522,"type":"Integer","value":69},"IPPORT_TIMESERVER":{"comment":"","exp":"37","file":"ws2def.h","line":514,"type":"Integer","value":37},"IPPORT_TTYLINK":{"comment":"","exp":"87","file":"ws2def.h","line":525,"type":"Integer","value":87},"IPPORT_WHOIS":{"comment":"","exp":"43","file":"ws2def.h","line":516,"type":"Integer","value":43},"IPPORT_WHOSERVER":{"comment":"","exp":"513","file":"ws2def.h","line":553,"type":"Integer","value":513},"IPPROTO_IP":{"comment":"","exp":"0","file":"ws2def.h","line":433,"type":"Integer","value":0},"IPRTRMGR_PID":{"comment":"","exp":"10000","file":"Iprtrmib.h","line":66,"type":"Integer","value":10000},"IPV6_ADDRESS_BITS":{"comment":"","exp":"RTL_BITS_OF(IN6_ADDR)","file":"ws2ipdef.h","line":177,"type":"Unknown","value":"RTL_BITS_OF(IN6_ADDR)"},"IPV6_ADD_IFLIST":{"comment":"\/\/ Add an interface list entry.","exp":"29","file":"ws2ipdef.h","line":793,"type":"Integer","value":29},"IPV6_ADD_MEMBERSHIP":{"comment":"\/\/ Add an IP group membership.","exp":"12","file":"ws2ipdef.h","line":780,"type":"Integer","value":12},"IPV6_CHECKSUM":{"comment":"\/\/ Offset to checksum for raw IP socket send.","exp":"26","file":"ws2ipdef.h","line":790,"type":"Integer","value":26},"IPV6_DEL_IFLIST":{"comment":"\/\/ Delete an interface list entry.","exp":"30","file":"ws2ipdef.h","line":794,"type":"Integer","value":30},"IPV6_DONTFRAG":{"comment":"\/\/ Don't fragment IP datagrams.","exp":"14","file":"ws2ipdef.h","line":784,"type":"Integer","value":14},"IPV6_DROP_MEMBERSHIP":{"comment":"\/\/ Drop an IP group membership.","exp":"13","file":"ws2ipdef.h","line":782,"type":"Integer","value":13},"IPV6_ECN":{"comment":"\/\/ Receive ECN codepoints in the IP header.","exp":"50","file":"ws2ipdef.h","line":801,"type":"Integer","value":50},"IPV6_GET_IFLIST":{"comment":"\/\/ Get an interface list.","exp":"33","file":"ws2ipdef.h","line":797,"type":"Integer","value":33},"IPV6_HDRINCL":{"comment":"\/\/ Header is included with data.","exp":"2","file":"ws2ipdef.h","line":775,"type":"Integer","value":2},"IPV6_HOPLIMIT":{"comment":"\/\/ Receive packet hop limit.","exp":"21","file":"ws2ipdef.h","line":786,"type":"Integer","value":21},"IPV6_HOPOPTS":{"comment":"\/\/ Set\/get IPv6 hop-by-hop options.","exp":"1","file":"ws2ipdef.h","line":774,"type":"Integer","value":1},"IPV6_IFLIST":{"comment":"\/\/ Enable\/Disable an interface list.","exp":"28","file":"ws2ipdef.h","line":792,"type":"Integer","value":28},"IPV6_JOIN_GROUP":{"comment":"","exp":"IPV6_ADD_MEMBERSHIP","file":"ws2ipdef.h","line":781,"type":"Integer","value":12},"IPV6_LEAVE_GROUP":{"comment":"","exp":"IPV6_DROP_MEMBERSHIP","file":"ws2ipdef.h","line":783,"type":"Integer","value":13},"IPV6_MTU":{"comment":"\/\/ Get path MTU.","exp":"72","file":"ws2ipdef.h","line":806,"type":"Integer","value":72},"IPV6_MTU_DISCOVER":{"comment":"\/\/ Set\/get path MTU discover state.","exp":"71","file":"ws2ipdef.h","line":805,"type":"Integer","value":71},"IPV6_MULTICAST_HOPS":{"comment":"\/\/ IP multicast hop limit.","exp":"10","file":"ws2ipdef.h","line":778,"type":"Integer","value":10},"IPV6_MULTICAST_IF":{"comment":"\/\/ IP multicast interface.","exp":"9","file":"ws2ipdef.h","line":777,"type":"Integer","value":9},"IPV6_MULTICAST_LOOP":{"comment":"\/\/ IP multicast loopback.","exp":"11","file":"ws2ipdef.h","line":779,"type":"Integer","value":11},"IPV6_NRT_INTERFACE":{"comment":"\/\/ Set NRT interface constraint (outbound).","exp":"74","file":"ws2ipdef.h","line":807,"type":"Integer","value":74},"IPV6_PKTINFO":{"comment":"\/\/ Receive packet information.","exp":"19","file":"ws2ipdef.h","line":785,"type":"Integer","value":19},"IPV6_PKTINFO_EX":{"comment":"\/\/ Receive extended packet information.","exp":"51","file":"ws2ipdef.h","line":802,"type":"Integer","value":51},"IPV6_PROTECTION_LEVEL":{"comment":"\/\/ Set\/get IPv6 protection level.","exp":"23","file":"ws2ipdef.h","line":787,"type":"Integer","value":23},"IPV6_RECVDSTADDR":{"comment":"\/\/ Receive destination address.","exp":"25","file":"ws2ipdef.h","line":789,"type":"Integer","value":25},"IPV6_RECVERR":{"comment":"\/\/ Receive ICMPv6 errors.","exp":"75","file":"ws2ipdef.h","line":808,"type":"Integer","value":75},"IPV6_RECVIF":{"comment":"\/\/ Receive arrival interface.","exp":"24","file":"ws2ipdef.h","line":788,"type":"Integer","value":24},"IPV6_RECVRTHDR":{"comment":"\/\/ Receive the routing header.","exp":"38","file":"ws2ipdef.h","line":798,"type":"Integer","value":38},"IPV6_RECVTCLASS":{"comment":"\/\/ Receive packet traffic class.","exp":"40","file":"ws2ipdef.h","line":800,"type":"Integer","value":40},"IPV6_RTHDR":{"comment":"\/\/ Set\/get IPv6 routing header.","exp":"32","file":"ws2ipdef.h","line":796,"type":"Integer","value":32},"IPV6_TCLASS":{"comment":"\/\/ Packet traffic class.","exp":"39","file":"ws2ipdef.h","line":799,"type":"Integer","value":39},"IPV6_UNICAST_HOPS":{"comment":"\/\/ IP unicast hop limit.","exp":"4","file":"ws2ipdef.h","line":776,"type":"Integer","value":4},"IPV6_UNICAST_IF":{"comment":"\/\/ IP unicast interface.","exp":"31","file":"ws2ipdef.h","line":795,"type":"Integer","value":31},"IPV6_USER_MTU":{"comment":"\/\/ Set\/get app defined upper bound IP layer MTU.","exp":"76","file":"ws2ipdef.h","line":809,"type":"Integer","value":76},"IPV6_V6ONLY":{"comment":"\/\/ Treat wildcard bind as AF_INET6-only.","exp":"27","file":"ws2ipdef.h","line":791,"type":"Integer","value":27},"IPV6_WFP_REDIRECT_CONTEXT":{"comment":"\/\/ WFP's Connection Redirect Context","exp":"70","file":"ws2ipdef.h","line":804,"type":"Integer","value":70},"IPV6_WFP_REDIRECT_RECORDS":{"comment":"\/\/ WFP's Connection Redirect Records","exp":"60","file":"ws2ipdef.h","line":803,"type":"Integer","value":60},"IP_ADAPTER_ADDRESS_DNS_ELIGIBLE":{"comment":"","exp":"0x01","file":"IPTypes.h","line":166,"type":"Integer","value":1},"IP_ADAPTER_ADDRESS_TRANSIENT":{"comment":"","exp":"0x02","file":"IPTypes.h","line":167,"type":"Integer","value":2},"IP_ADAPTER_DDNS_ENABLED":{"comment":"","exp":"0x00000001","file":"IPTypes.h","line":275,"type":"Integer","value":1},"IP_ADAPTER_DHCP_ENABLED":{"comment":"","exp":"0x00000004","file":"IPTypes.h","line":277,"type":"Integer","value":4},"IP_ADAPTER_IPV4_ENABLED":{"comment":"","exp":"0x00000080","file":"IPTypes.h","line":282,"type":"Integer","value":128},"IP_ADAPTER_IPV6_ENABLED":{"comment":"","exp":"0x00000100","file":"IPTypes.h","line":283,"type":"Integer","value":256},"IP_ADAPTER_IPV6_MANAGE_ADDRESS_CONFIG":{"comment":"","exp":"0x00000200","file":"IPTypes.h","line":284,"type":"Integer","value":512},"IP_ADAPTER_IPV6_OTHER_STATEFUL_CONFIG":{"comment":"","exp":"0x00000020","file":"IPTypes.h","line":280,"type":"Integer","value":32},"IP_ADAPTER_NETBIOS_OVER_TCPIP_ENABLED":{"comment":"","exp":"0x00000040","file":"IPTypes.h","line":281,"type":"Integer","value":64},"IP_ADAPTER_NO_MULTICAST":{"comment":"","exp":"0x00000010","file":"IPTypes.h","line":279,"type":"Integer","value":16},"IP_ADAPTER_RECEIVE_ONLY":{"comment":"","exp":"0x00000008","file":"IPTypes.h","line":278,"type":"Integer","value":8},"IP_ADAPTER_REGISTER_ADAPTER_SUFFIX":{"comment":"","exp":"0x00000002","file":"IPTypes.h","line":276,"type":"Integer","value":2},"IP_ADDRROW":{"comment":"","exp":"(IP_ADDRTABLE + 1)","file":"Iprtrmib.h","line":89,"type":"Integer","value":5},"IP_ADDRTABLE":{"comment":"","exp":"(IP_STATS + 1)","file":"Iprtrmib.h","line":88,"type":"Integer","value":4},"IP_ADDR_ADDED":{"comment":"","exp":"(IP_STATUS_BASE + 23)","file":"IPExport.h","line":222,"type":"Integer","value":11023},"IP_ADDR_DELETED":{"comment":"","exp":"(IP_STATUS_BASE + 19)","file":"IPExport.h","line":218,"type":"Integer","value":11019},"IP_ADD_IFLIST":{"comment":"\/\/ Add an interface list entry.","exp":"29","file":"ws2ipdef.h","line":154,"type":"Integer","value":29},"IP_ADD_MEMBERSHIP":{"comment":"\/\/ Add an IP group membership.","exp":"12","file":"ws2ipdef.h","line":140,"type":"Integer","value":12},"IP_ADD_SOURCE_MEMBERSHIP":{"comment":"\/\/ Join IP group\/source.","exp":"15","file":"ws2ipdef.h","line":143,"type":"Integer","value":15},"IP_BAD_DESTINATION":{"comment":"","exp":"(IP_STATUS_BASE + 18)","file":"IPExport.h","line":189,"type":"Integer","value":11018},"IP_BAD_HEADER":{"comment":"","exp":"(IP_STATUS_BASE + 42)","file":"IPExport.h","line":209,"type":"Integer","value":11042},"IP_BAD_OPTION":{"comment":"","exp":"(IP_STATUS_BASE + 7)","file":"IPExport.h","line":178,"type":"Integer","value":11007},"IP_BAD_REQ":{"comment":"","exp":"(IP_STATUS_BASE + 11)","file":"IPExport.h","line":182,"type":"Integer","value":11011},"IP_BAD_ROUTE":{"comment":"","exp":"(IP_STATUS_BASE + 12)","file":"IPExport.h","line":183,"type":"Integer","value":11012},"IP_BIND_ADAPTER":{"comment":"","exp":"(IP_STATUS_BASE + 26)","file":"IPExport.h","line":225,"type":"Integer","value":11026},"IP_BLOCK_SOURCE":{"comment":"\/\/ Block IP group\/source.","exp":"17","file":"ws2ipdef.h","line":145,"type":"Integer","value":17},"IP_BUF_TOO_SMALL":{"comment":"","exp":"(IP_STATUS_BASE + 1)","file":"IPExport.h","line":172,"type":"Integer","value":11001},"IP_DEL_IFLIST":{"comment":"\/\/ Delete an interface list entry.","exp":"30","file":"ws2ipdef.h","line":155,"type":"Integer","value":30},"IP_DEST_ADDR_UNREACHABLE":{"comment":"","exp":"(IP_STATUS_BASE + 3)","file":"IPExport.h","line":196,"type":"Integer","value":11003},"IP_DEST_HOST_UNREACHABLE":{"comment":"","exp":"(IP_STATUS_BASE + 3)","file":"IPExport.h","line":174,"type":"Integer","value":11003},"IP_DEST_NET_UNREACHABLE":{"comment":"","exp":"(IP_STATUS_BASE + 2)","file":"IPExport.h","line":173,"type":"Integer","value":11002},"IP_DEST_NO_ROUTE":{"comment":"","exp":"(IP_STATUS_BASE + 2)","file":"IPExport.h","line":195,"type":"Integer","value":11002},"IP_DEST_PORT_UNREACHABLE":{"comment":"","exp":"(IP_STATUS_BASE + 5)","file":"IPExport.h","line":176,"type":"Integer","value":11005},"IP_DEST_PROHIBITED":{"comment":"","exp":"(IP_STATUS_BASE + 4)","file":"IPExport.h","line":197,"type":"Integer","value":11004},"IP_DEST_PROT_UNREACHABLE":{"comment":"","exp":"(IP_STATUS_BASE + 4)","file":"IPExport.h","line":175,"type":"Integer","value":11004},"IP_DEST_SCOPE_MISMATCH":{"comment":"","exp":"(IP_STATUS_BASE + 45)","file":"IPExport.h","line":212,"type":"Integer","value":11045},"IP_DEST_UNREACHABLE":{"comment":"","exp":"(IP_STATUS_BASE + 40)","file":"IPExport.h","line":207,"type":"Integer","value":11040},"IP_DEVICE_DOES_NOT_EXIST":{"comment":"","exp":"(IP_STATUS_BASE + 28)","file":"IPExport.h","line":227,"type":"Integer","value":11028},"IP_DONTFRAGMENT":{"comment":"\/\/ Don't fragment IP datagrams.","exp":"14","file":"ws2ipdef.h","line":142,"type":"Integer","value":14},"IP_DROP_MEMBERSHIP":{"comment":"\/\/ Drop an IP group membership.","exp":"13","file":"ws2ipdef.h","line":141,"type":"Integer","value":13},"IP_DROP_SOURCE_MEMBERSHIP":{"comment":"\/\/ Leave IP group\/source.","exp":"16","file":"ws2ipdef.h","line":144,"type":"Integer","value":16},"IP_DUPLICATE_ADDRESS":{"comment":"","exp":"(IP_STATUS_BASE + 29)","file":"IPExport.h","line":228,"type":"Integer","value":11029},"IP_DUPLICATE_IPADD":{"comment":"","exp":"(IP_STATUS_BASE + 34)","file":"IPExport.h","line":233,"type":"Integer","value":11034},"IP_ECN":{"comment":"\/\/ Receive ECN codepoints in the IP header.","exp":"50","file":"ws2ipdef.h","line":164,"type":"Integer","value":50},"IP_EXPORT_INCLUDED":{"comment":"","exp":"1","file":"IPExport.h","line":14,"type":"Integer","value":1},"IP_FLAG_DF":{"comment":"\/\/ Don't fragment this packet.","exp":"0x2","file":"IPExport.h","line":244,"type":"Integer","value":2},"IP_FLAG_REVERSE":{"comment":"\/\/ Do a round-trip echo request.","exp":"0x1","file":"IPExport.h","line":243,"type":"Integer","value":1},"IP_FORWARDNUMBER":{"comment":"","exp":"(IP_ADDRROW + 1)","file":"Iprtrmib.h","line":90,"type":"Integer","value":6},"IP_FORWARDROW":{"comment":"","exp":"(IP_FORWARDTABLE + 1)","file":"Iprtrmib.h","line":92,"type":"Integer","value":8},"IP_FORWARDTABLE":{"comment":"","exp":"(IP_FORWARDNUMBER + 1)","file":"Iprtrmib.h","line":91,"type":"Integer","value":7},"IP_GENERAL_FAILURE":{"comment":"","exp":"(IP_STATUS_BASE + 50)","file":"IPExport.h","line":235,"type":"Integer","value":11050},"IP_GET_IFLIST":{"comment":"\/\/ Get an interface list.","exp":"33","file":"ws2ipdef.h","line":158,"type":"Integer","value":33},"IP_HDRINCL":{"comment":"\/\/ Header is included with data.","exp":"2","file":"ws2ipdef.h","line":134,"type":"Integer","value":2},"IP_HOPLIMIT":{"comment":"\/\/ Receive packet hop limit.","exp":"21","file":"ws2ipdef.h","line":148,"type":"Integer","value":21},"IP_HOP_LIMIT_EXCEEDED":{"comment":"","exp":"(IP_STATUS_BASE + 13)","file":"IPExport.h","line":199,"type":"Integer","value":11013},"IP_HW_ERROR":{"comment":"","exp":"(IP_STATUS_BASE + 8)","file":"IPExport.h","line":179,"type":"Integer","value":11008},"IP_ICMP_ERROR":{"comment":"","exp":"(IP_STATUS_BASE + 44)","file":"IPExport.h","line":211,"type":"Integer","value":11044},"IP_IFLIST":{"comment":"\/\/ Enable\/Disable an interface list.","exp":"28","file":"ws2ipdef.h","line":153,"type":"Integer","value":28},"IP_INTERFACE_METRIC_CHANGE":{"comment":"","exp":"(IP_STATUS_BASE + 30)","file":"IPExport.h","line":229,"type":"Integer","value":11030},"IP_INTERFACE_WOL_CAPABILITY_CHANGE":{"comment":"","exp":"(IP_STATUS_BASE + 33)","file":"IPExport.h","line":232,"type":"Integer","value":11033},"IP_MEDIA_CONNECT":{"comment":"","exp":"(IP_STATUS_BASE + 24)","file":"IPExport.h","line":223,"type":"Integer","value":11024},"IP_MEDIA_DISCONNECT":{"comment":"","exp":"(IP_STATUS_BASE + 25)","file":"IPExport.h","line":224,"type":"Integer","value":11025},"IP_MTU":{"comment":"\/\/ Get path MTU.","exp":"73","file":"ws2ipdef.h","line":169,"type":"Integer","value":73},"IP_MTU_CHANGE":{"comment":"","exp":"(IP_STATUS_BASE + 21)","file":"IPExport.h","line":220,"type":"Integer","value":11021},"IP_MTU_DISCOVER":{"comment":"\/\/ Set\/get path MTU discover state.","exp":"71","file":"ws2ipdef.h","line":168,"type":"Integer","value":71},"IP_MULTICAST_IF":{"comment":"\/\/ IP multicast interface.","exp":"9","file":"ws2ipdef.h","line":137,"type":"Integer","value":9},"IP_MULTICAST_LOOP":{"comment":"\/\/ IP multicast loopback.","exp":"11","file":"ws2ipdef.h","line":139,"type":"Integer","value":11},"IP_MULTICAST_TTL":{"comment":"\/\/ IP multicast TTL (hop limit).","exp":"10","file":"ws2ipdef.h","line":138,"type":"Integer","value":10},"IP_NEGOTIATING_IPSEC":{"comment":"","exp":"(IP_STATUS_BASE + 32)","file":"IPExport.h","line":231,"type":"Integer","value":11032},"IP_NETROW":{"comment":"","exp":"(IP_NETTABLE + 1)","file":"Iprtrmib.h","line":94,"type":"Integer","value":10},"IP_NETTABLE":{"comment":"","exp":"(IP_FORWARDROW + 1)","file":"Iprtrmib.h","line":93,"type":"Integer","value":9},"IP_NO_RESOURCES":{"comment":"","exp":"(IP_STATUS_BASE + 6)","file":"IPExport.h","line":177,"type":"Integer","value":11006},"IP_NRT_INTERFACE":{"comment":"\/\/ Set NRT interface constraint (outbound).","exp":"74","file":"ws2ipdef.h","line":170,"type":"Integer","value":74},"IP_OPTIONS":{"comment":"\/\/ Set\/get IP options.","exp":"1","file":"ws2ipdef.h","line":133,"type":"Integer","value":1},"IP_OPTION_TOO_BIG":{"comment":"","exp":"(IP_STATUS_BASE + 17)","file":"IPExport.h","line":188,"type":"Integer","value":11017},"IP_OPT_EOL":{"comment":"\/\/ End of list option","exp":"0","file":"IPExport.h","line":253,"type":"Integer","value":0},"IP_OPT_LSRR":{"comment":"\/\/ Loose source route","exp":"0x83","file":"IPExport.h","line":256,"type":"Integer","value":131},"IP_OPT_NOP":{"comment":"\/\/ No operation","exp":"1","file":"IPExport.h","line":254,"type":"Integer","value":1},"IP_OPT_ROUTER_ALERT":{"comment":"\/\/ Router Alert Option","exp":"0x94","file":"IPExport.h","line":261,"type":"Integer","value":148},"IP_OPT_RR":{"comment":"\/\/ Record route","exp":"0x7","file":"IPExport.h","line":258,"type":"Integer","value":7},"IP_OPT_SECURITY":{"comment":"\/\/ Security option","exp":"0x82","file":"IPExport.h","line":255,"type":"Integer","value":130},"IP_OPT_SID":{"comment":"\/\/ Stream ID (obsolete)","exp":"0x88","file":"IPExport.h","line":260,"type":"Integer","value":136},"IP_OPT_SSRR":{"comment":"\/\/ Strict source route","exp":"0x89","file":"IPExport.h","line":257,"type":"Integer","value":137},"IP_OPT_TS":{"comment":"\/\/ Timestamp","exp":"0x44","file":"IPExport.h","line":259,"type":"Integer","value":68},"IP_ORIGINAL_ARRIVAL_IF":{"comment":"\/\/ Original Arrival Interface Index.","exp":"47","file":"ws2ipdef.h","line":163,"type":"Integer","value":47},"IP_PACKET_TOO_BIG":{"comment":"","exp":"(IP_STATUS_BASE + 9)","file":"IPExport.h","line":180,"type":"Integer","value":11009},"IP_PARAMETER_PROBLEM":{"comment":"","exp":"(IP_STATUS_BASE + 15)","file":"IPExport.h","line":201,"type":"Integer","value":11015},"IP_PARAM_PROBLEM":{"comment":"","exp":"(IP_STATUS_BASE + 15)","file":"IPExport.h","line":186,"type":"Integer","value":11015},"IP_PENDING":{"comment":"","exp":"(IP_STATUS_BASE + 255)","file":"IPExport.h","line":237,"type":"Integer","value":11255},"IP_PKTINFO":{"comment":"\/\/ Receive packet information.","exp":"19","file":"ws2ipdef.h","line":147,"type":"Integer","value":19},"IP_PKTINFO_EX":{"comment":"\/\/ Receive extended packet information.","exp":"51","file":"ws2ipdef.h","line":165,"type":"Integer","value":51},"IP_PROTECTION_LEVEL":{"comment":"","exp":"IPV6_PROTECTION_LEVEL","file":"ws2ipdef.h","line":813,"type":"Integer","value":23},"IP_REASSEMBLY_TIME_EXCEEDED":{"comment":"","exp":"(IP_STATUS_BASE + 14)","file":"IPExport.h","line":200,"type":"Integer","value":11014},"IP_RECEIVE_BROADCAST":{"comment":"\/\/ Allow\/block broadcast reception.","exp":"22","file":"ws2ipdef.h","line":150,"type":"Integer","value":22},"IP_RECONFIG_SECFLTR":{"comment":"","exp":"(IP_STATUS_BASE + 31)","file":"IPExport.h","line":230,"type":"Integer","value":11031},"IP_RECVDSTADDR":{"comment":"\/\/ Receive destination address.","exp":"25","file":"ws2ipdef.h","line":152,"type":"Integer","value":25},"IP_RECVERR":{"comment":"\/\/ Receive ICMP errors.","exp":"75","file":"ws2ipdef.h","line":171,"type":"Integer","value":75},"IP_RECVIF":{"comment":"\/\/ Receive arrival interface.","exp":"24","file":"ws2ipdef.h","line":151,"type":"Integer","value":24},"IP_RECVRTHDR":{"comment":"\/\/ Receive the routing header.","exp":"38","file":"ws2ipdef.h","line":159,"type":"Integer","value":38},"IP_RECVTCLASS":{"comment":"\/\/ Receive packet traffic class.","exp":"40","file":"ws2ipdef.h","line":161,"type":"Integer","value":40},"IP_RECVTOS":{"comment":"\/\/ Receive packet Type Of Service (TOS).","exp":"40","file":"ws2ipdef.h","line":162,"type":"Integer","value":40},"IP_RECVTTL":{"comment":"\/\/ Receive packet Time To Live (TTL).","exp":"21","file":"ws2ipdef.h","line":149,"type":"Integer","value":21},"IP_REQ_TIMED_OUT":{"comment":"","exp":"(IP_STATUS_BASE + 10)","file":"IPExport.h","line":181,"type":"Integer","value":11010},"IP_RTHDR":{"comment":"\/\/ Set\/get IPv6 routing header.","exp":"32","file":"ws2ipdef.h","line":157,"type":"Integer","value":32},"IP_SOURCE_QUENCH":{"comment":"","exp":"(IP_STATUS_BASE + 16)","file":"IPExport.h","line":187,"type":"Integer","value":11016},"IP_SPEC_MTU_CHANGE":{"comment":"","exp":"(IP_STATUS_BASE + 20)","file":"IPExport.h","line":219,"type":"Integer","value":11020},"IP_STATS":{"comment":"","exp":"(IF_ROW + 1)","file":"Iprtrmib.h","line":87,"type":"Integer","value":3},"IP_STATUS_BASE":{"comment":"","exp":"11000","file":"IPExport.h","line":169,"type":"Integer","value":11000},"IP_SUCCESS":{"comment":"","exp":"0","file":"IPExport.h","line":171,"type":"Integer","value":0},"IP_TCLASS":{"comment":"\/\/ Packet traffic class.","exp":"39","file":"ws2ipdef.h","line":160,"type":"Integer","value":39},"IP_TIME_EXCEEDED":{"comment":"","exp":"(IP_STATUS_BASE + 41)","file":"IPExport.h","line":208,"type":"Integer","value":11041},"IP_TOS":{"comment":"\/\/ IP type of service.","exp":"3","file":"ws2ipdef.h","line":135,"type":"Integer","value":3},"IP_TTL":{"comment":"\/\/ IP TTL (hop limit).","exp":"4","file":"ws2ipdef.h","line":136,"type":"Integer","value":4},"IP_TTL_EXPIRED_REASSEM":{"comment":"","exp":"(IP_STATUS_BASE + 14)","file":"IPExport.h","line":185,"type":"Integer","value":11014},"IP_TTL_EXPIRED_TRANSIT":{"comment":"","exp":"(IP_STATUS_BASE + 13)","file":"IPExport.h","line":184,"type":"Integer","value":11013},"IP_UNBIND_ADAPTER":{"comment":"","exp":"(IP_STATUS_BASE + 27)","file":"IPExport.h","line":226,"type":"Integer","value":11027},"IP_UNBLOCK_SOURCE":{"comment":"\/\/ Unblock IP group\/source.","exp":"18","file":"ws2ipdef.h","line":146,"type":"Integer","value":18},"IP_UNICAST_IF":{"comment":"\/\/ IP unicast interface.","exp":"31","file":"ws2ipdef.h","line":156,"type":"Integer","value":31},"IP_UNLOAD":{"comment":"","exp":"(IP_STATUS_BASE + 22)","file":"IPExport.h","line":221,"type":"Integer","value":11022},"IP_UNRECOGNIZED_NEXT_HEADER":{"comment":"","exp":"(IP_STATUS_BASE + 43)","file":"IPExport.h","line":210,"type":"Integer","value":11043},"IP_UNSPECIFIED_HOP_LIMIT":{"comment":"","exp":"-1","file":"ws2ipdef.h","line":811,"type":"Integer","value":-1},"IP_UNSPECIFIED_TYPE_OF_SERVICE":{"comment":"","exp":"-1","file":"ws2ipdef.h","line":174,"type":"Integer","value":-1},"IP_UNSPECIFIED_USER_MTU":{"comment":"","exp":"MAXULONG","file":"ws2ipdef.h","line":175,"type":"Integer","value":4294967295},"IP_USER_MTU":{"comment":"\/\/ Set\/get app defined upper bound IP layer MTU.","exp":"76","file":"ws2ipdef.h","line":172,"type":"Integer","value":76},"IP_WFP_REDIRECT_CONTEXT":{"comment":"\/\/ WFP's Connection Redirect Context.","exp":"70","file":"ws2ipdef.h","line":167,"type":"Integer","value":70},"IP_WFP_REDIRECT_RECORDS":{"comment":"\/\/ WFP's Connection Redirect Records.","exp":"60","file":"ws2ipdef.h","line":166,"type":"Integer","value":60},"MAX_ADAPTER_ADDRESS_LENGTH":{"comment":"\/\/ arb.","exp":"8","file":"IPTypes.h","line":38,"type":"Integer","value":8},"MAX_ADAPTER_DESCRIPTION_LENGTH":{"comment":"\/\/ arb.","exp":"128","file":"IPTypes.h","line":36,"type":"Integer","value":128},"MAX_ADAPTER_NAME":{"comment":"","exp":"128","file":"IPExport.h","line":136,"type":"Integer","value":128},"MAX_ADAPTER_NAME_LENGTH":{"comment":"\/\/ arb.","exp":"256","file":"IPTypes.h","line":37,"type":"Integer","value":256},"MAX_DHCPV6_DUID_LENGTH":{"comment":"\/\/ RFC 3315.","exp":"130","file":"IPTypes.h","line":43,"type":"Integer","value":130},"MAX_DNS_SUFFIX_STRING_LENGTH":{"comment":"","exp":"256","file":"IPTypes.h","line":44,"type":"Integer","value":256},"MAX_DOMAIN_NAME_LEN":{"comment":"\/\/ arb.","exp":"128","file":"IPTypes.h","line":41,"type":"Integer","value":128},"MAX_HOSTNAME_LEN":{"comment":"\/\/ arb.","exp":"128","file":"IPTypes.h","line":40,"type":"Integer","value":128},"MAX_IP_STATUS":{"comment":"","exp":"IP_GENERAL_FAILURE","file":"IPExport.h","line":236,"type":"Integer","value":11050},"MAX_MIB_OFFSET":{"comment":"","exp":"8","file":"Iprtrmib.h","line":314,"type":"Integer","value":8},"MAX_OPT_SIZE":{"comment":"\/\/ Maximum length of IP options in bytes","exp":"40","file":"IPExport.h","line":263,"type":"Integer","value":40},"MAX_SCOPE_ID_LEN":{"comment":"\/\/ arb.","exp":"256","file":"IPTypes.h","line":42,"type":"Integer","value":256},"MAX_SCOPE_NAME_LEN":{"comment":"","exp":"255","file":"Iprtrmib.h","line":218,"type":"Integer","value":255},"MCAST_BLOCK_SOURCE":{"comment":"\/\/ Block IP group\/source.","exp":"43","file":"ws2ipdef.h","line":724,"type":"Integer","value":43},"MCAST_BOUNDARY":{"comment":"","exp":"(IF_STATUS + 1)","file":"Iprtrmib.h","line":110,"type":"Integer","value":26},"MCAST_GLOBAL":{"comment":"","exp":"(MCAST_IF_ENTRY + 1)","file":"Iprtrmib.h","line":108,"type":"Integer","value":24},"MCAST_IF_ENTRY":{"comment":"","exp":"(PROXY_ARP + 1)","file":"Iprtrmib.h","line":107,"type":"Integer","value":23},"MCAST_JOIN_GROUP":{"comment":"\/\/ Join all sources for a group.","exp":"41","file":"ws2ipdef.h","line":722,"type":"Integer","value":41},"MCAST_JOIN_SOURCE_GROUP":{"comment":"\/\/ Join IP group\/source.","exp":"45","file":"ws2ipdef.h","line":726,"type":"Integer","value":45},"MCAST_LEAVE_GROUP":{"comment":"\/\/ Drop all sources for a group.","exp":"42","file":"ws2ipdef.h","line":723,"type":"Integer","value":42},"MCAST_LEAVE_SOURCE_GROUP":{"comment":"\/\/ Leave IP group\/source.","exp":"46","file":"ws2ipdef.h","line":727,"type":"Integer","value":46},"MCAST_MFE":{"comment":"","exp":"(UDP_ROW + 1)","file":"Iprtrmib.h","line":102,"type":"Integer","value":18},"MCAST_MFE_STATS":{"comment":"","exp":"(MCAST_MFE + 1)","file":"Iprtrmib.h","line":103,"type":"Integer","value":19},"MCAST_MFE_STATS_EX":{"comment":"","exp":"(ROUTE_STATE + 1)","file":"Iprtrmib.h","line":119,"type":"Integer","value":35},"MCAST_SCOPE":{"comment":"","exp":"(MCAST_BOUNDARY + 1)","file":"Iprtrmib.h","line":111,"type":"Integer","value":27},"MCAST_UNBLOCK_SOURCE":{"comment":"\/\/ Unblock IP group\/source.","exp":"44","file":"ws2ipdef.h","line":725,"type":"Integer","value":44},"MIB_INVALID_TEREDO_PORT_NUMBER":{"comment":"","exp":"0","file":"netioapi.h","line":2214,"type":"Integer","value":0},"MIXED_NODETYPE":{"comment":"","exp":"4","file":"IPTypes.h","line":54,"type":"Integer","value":4},"MSG_BCAST":{"comment":"","exp":"0x0400","file":"ws2def.h","line":864,"type":"Integer","value":1024},"MSG_CTRUNC":{"comment":"","exp":"0x0200","file":"ws2def.h","line":863,"type":"Integer","value":512},"MSG_ERRQUEUE":{"comment":"","exp":"0x1000","file":"ws2def.h","line":866,"type":"Integer","value":4096},"MSG_MCAST":{"comment":"","exp":"0x0800","file":"ws2def.h","line":865,"type":"Integer","value":2048},"MSG_TRUNC":{"comment":"","exp":"0x0100","file":"ws2def.h","line":862,"type":"Integer","value":256},"NETIOAPI_API":{"comment":"","critical":{"NETIO_STATUS":{"comment":"","exp":"NTSTATUS","file":"netioapi.h","line":103,"type":"Unknown","value":"NTSTATUS"}},"exp":"NETIO_STATUS NETIOAPI_API_","file":"netioapi.h","line":115,"type":"Unknown","value":"DWORD NETIOAPI_API_"},"NETIOAPI_API_":{"comment":"","dupe":[{"comment":"","exp":"NTAPI","file":"netioapi.h","line":105,"type":"Unknown","value":"NTAPI"}],"exp":"WINAPI","file":"netioapi.h","line":90,"type":"Unknown","value":"WINAPI"},"NETIO_STATUS":{"comment":"","dupe":[{"comment":"","exp":"NTSTATUS","file":"netioapi.h","line":103,"type":"Unknown","value":"NTSTATUS"}],"exp":"DWORD","file":"netioapi.h","line":88,"type":"Unknown","value":"DWORD"},"NET_ADDRESS_FORMAT_":{"comment":"","exp":"","file":"iphlpapi.h","line":1276,"type":"Enum","value":"typedef enum NET_ADDRESS_FORMAT_\\r\\n{\\r\\n   NET_ADDRESS_FORMAT_UNSPECIFIED = 0,\\r\\n   NET_ADDRESS_DNS_NAME,\\r\\n   NET_ADDRESS_IPV4,\\r\\n   NET_ADDRESS_IPV6\\r\\n} NET_ADDRESS_FORMAT;"},"NET_ADDRESS_INFO_":{"comment":"","exp":"","file":"iphlpapi.h","line":1289,"type":"Struct","value":"typedef struct NET_ADDRESS_INFO_\\r\\n{\\r\\n   NET_ADDRESS_FORMAT Format;\\r\\n   union\\r\\n   {\\r\\n      struct {\\r\\n         WCHAR Address[DNS_MAX_NAME_BUFFER_LENGTH];\\r\\n         WCHAR Port[6];\\r\\n      } NamedAddress;\\r\\n      SOCKADDR_IN Ipv4Address;\\r\\n      SOCKADDR_IN6 Ipv6Address;\\r\\n      SOCKADDR IpAddress;\\r\\n   };\\r\\n} NET_ADDRESS_INFO, *PNET_ADDRESS_INFO;"},"NET_IFINDEX_UNSPECIFIED":{"comment":"\/\/ Not a valid ifIndex","exp":"(NET_IFINDEX)(0)","file":"ifdef.h","line":154,"type":"Unknown","value":"(NET_IFINDEX)(0)"},"NET_IFLUID_UNSPECIFIED":{"comment":"\/\/ Not a valid if Luid","exp":"(0)","file":"ifdef.h","line":155,"type":"Integer","value":0},"NET_IF_COMPARTMENT_ID_PRIMARY":{"comment":"","exp":"(NET_IF_COMPARTMENT_ID)1","file":"ifdef.h","line":26,"type":"Unknown","value":"(NET_IF_COMPARTMENT_ID)1"},"NET_IF_COMPARTMENT_ID_UNSPECIFIED":{"comment":"","exp":"(NET_IF_COMPARTMENT_ID)0","file":"ifdef.h","line":25,"type":"Unknown","value":"(NET_IF_COMPARTMENT_ID)0"},"NET_IF_COMPARTMENT_SCOPE_ALL":{"comment":"","exp":"((NET_IF_COMPARTMENT_SCOPE)-1)","file":"ifdef.h","line":65,"type":"Unknown","value":"((NET_IF_COMPARTMENT_SCOPE)-1)"},"NET_IF_COMPARTMENT_SCOPE_UNSPECIFIED":{"comment":"","exp":"(NET_IF_COMPARTMENT_SCOPE)0","file":"ifdef.h","line":64,"type":"Unknown","value":"(NET_IF_COMPARTMENT_SCOPE)0"},"NET_IF_CURRENT_SESSION":{"comment":"","exp":"((ULONG)-1)","file":"nldef.h","line":294,"type":"Integer","value":-1},"NET_IF_LINK_SPEED_UNKNOWN":{"comment":"","exp":"((ULONG64)(-1))","file":"ifdef.h","line":245,"type":"Integer","value":-1},"NET_IF_OID_COMPARTMENT_ID":{"comment":"\/\/ identifies the compartment ID for an interface.","exp":"0x00000002","file":"ifdef.h","line":68,"type":"Integer","value":2},"NET_IF_OID_IF_ALIAS":{"comment":"\/\/ identifies the ifAlias string for an interface","exp":"0x00000001","file":"ifdef.h","line":67,"type":"Integer","value":1},"NET_IF_OID_IF_ENTRY":{"comment":"\/\/ identifies statistics for an interface.","exp":"0x00000004","file":"ifdef.h","line":70,"type":"Integer","value":4},"NET_IF_OID_NETWORK_GUID":{"comment":"\/\/ identifies the NetworkGuid for an interface.","exp":"0x00000003","file":"ifdef.h","line":69,"type":"Integer","value":3},"NET_IF_OPER_STATUS_DORMANT_LOW_POWER":{"comment":"","exp":"0x00000008","file":"ifdef.h","line":60,"type":"Integer","value":8},"NET_IF_OPER_STATUS_DORMANT_PAUSED":{"comment":"","exp":"0x00000004","file":"ifdef.h","line":59,"type":"Integer","value":4},"NET_IF_OPER_STATUS_DOWN_NOT_AUTHENTICATED":{"comment":"","exp":"0x00000001","file":"ifdef.h","line":57,"type":"Integer","value":1},"NET_IF_OPER_STATUS_DOWN_NOT_MEDIA_CONNECTED":{"comment":"","exp":"0x00000002","file":"ifdef.h","line":58,"type":"Integer","value":2},"NET_SITEID_MAXSYSTEM":{"comment":"","exp":"(0x0fffffff)","file":"ifdef.h","line":91,"type":"Integer","value":268435455},"NET_SITEID_MAXUSER":{"comment":"","exp":"(0x07ffffff)","file":"ifdef.h","line":90,"type":"Integer","value":134217727},"NET_SITEID_UNSPECIFIED":{"comment":"","exp":"(0)","file":"ifdef.h","line":89,"type":"Integer","value":0},"NET_STRING_ANY_ADDRESS":{"comment":"","exp":"(NET_STRING_NAMED_ADDRESS | NET_STRING_IP_ADDRESS)","file":"iphlpapi.h","line":1264,"type":"Integer","value":265},"NET_STRING_ANY_ADDRESS_NO_SCOPE":{"comment":"","exp":"(NET_STRING_NAMED_ADDRESS | NET_STRING_IP_ADDRESS_NO_SCOPE)","file":"iphlpapi.h","line":1267,"type":"Integer","value":273},"NET_STRING_ANY_SERVICE":{"comment":"","exp":"(NET_STRING_NAMED_SERVICE | NET_STRING_IP_SERVICE)","file":"iphlpapi.h","line":1270,"type":"Integer","value":546},"NET_STRING_ANY_SERVICE_NO_SCOPE":{"comment":"","exp":"(NET_STRING_NAMED_SERVICE | NET_STRING_IP_SERVICE_NO_SCOPE)","file":"iphlpapi.h","line":1273,"type":"Integer","value":578},"NET_STRING_IPV4_ADDRESS":{"comment":"","exp":"0x00000001","file":"iphlpapi.h","line":1216,"type":"Integer","value":1},"NET_STRING_IPV4_NETWORK":{"comment":"","exp":"0x00000004","file":"iphlpapi.h","line":1222,"type":"Integer","value":4},"NET_STRING_IPV4_SERVICE":{"comment":"","exp":"0x00000002","file":"iphlpapi.h","line":1219,"type":"Integer","value":2},"NET_STRING_IPV6_ADDRESS":{"comment":"","exp":"0x00000008","file":"iphlpapi.h","line":1225,"type":"Integer","value":8},"NET_STRING_IPV6_ADDRESS_NO_SCOPE":{"comment":"","exp":"0x00000010","file":"iphlpapi.h","line":1228,"type":"Integer","value":16},"NET_STRING_IPV6_NETWORK":{"comment":"","exp":"0x00000080","file":"iphlpapi.h","line":1239,"type":"Integer","value":128},"NET_STRING_IPV6_SERVICE":{"comment":"","exp":"0x00000020","file":"iphlpapi.h","line":1232,"type":"Integer","value":32},"NET_STRING_IPV6_SERVICE_NO_SCOPE":{"comment":"","exp":"0x00000040","file":"iphlpapi.h","line":1235,"type":"Integer","value":64},"NET_STRING_IP_ADDRESS":{"comment":"","exp":"(NET_STRING_IPV4_ADDRESS | NET_STRING_IPV6_ADDRESS)","file":"iphlpapi.h","line":1249,"type":"Integer","value":9},"NET_STRING_IP_ADDRESS_NO_SCOPE":{"comment":"","exp":"(NET_STRING_IPV4_ADDRESS | NET_STRING_IPV6_ADDRESS_NO_SCOPE)","file":"iphlpapi.h","line":1252,"type":"Integer","value":17},"NET_STRING_IP_NETWORK":{"comment":"","exp":"(NET_STRING_IPV4_NETWORK | NET_STRING_IPV6_NETWORK)","file":"iphlpapi.h","line":1261,"type":"Integer","value":132},"NET_STRING_IP_SERVICE":{"comment":"","exp":"(NET_STRING_IPV4_SERVICE | NET_STRING_IPV6_SERVICE)","file":"iphlpapi.h","line":1255,"type":"Integer","value":34},"NET_STRING_IP_SERVICE_NO_SCOPE":{"comment":"","exp":"(NET_STRING_IPV4_SERVICE | NET_STRING_IPV6_SERVICE_NO_SCOPE)","file":"iphlpapi.h","line":1258,"type":"Integer","value":66},"NET_STRING_NAMED_ADDRESS":{"comment":"","exp":"0x00000100","file":"iphlpapi.h","line":1242,"type":"Integer","value":256},"NET_STRING_NAMED_SERVICE":{"comment":"","exp":"0x00000200","file":"iphlpapi.h","line":1245,"type":"Integer","value":512},"NIIF_BUS_NUMBER_UNKNOWN":{"comment":"","exp":"((ULONG)(-1))","file":"ifdef.h","line":259,"type":"Integer","value":-1},"NIIF_FILTER_INTERFACE":{"comment":"","exp":"0x00000002","file":"ifdef.h","line":202,"type":"Integer","value":2},"NIIF_FUNCTION_NUMBER_UNKNOWN":{"comment":"","exp":"((ULONG)(-1))","file":"ifdef.h","line":261,"type":"Integer","value":-1},"NIIF_HARDWARE_INTERFACE":{"comment":"\/\/ Set iff hardware","exp":"0x00000001","file":"ifdef.h","line":201,"type":"Integer","value":1},"NIIF_NDIS_ENDPOINT_INTERFACE":{"comment":"","exp":"0x00000040","file":"ifdef.h","line":207,"type":"Integer","value":64},"NIIF_NDIS_ISCSI_INTERFACE":{"comment":"","exp":"0x00000080","file":"ifdef.h","line":208,"type":"Integer","value":128},"NIIF_NDIS_RESERVED1":{"comment":"","exp":"0x00000004","file":"ifdef.h","line":203,"type":"Integer","value":4},"NIIF_NDIS_RESERVED2":{"comment":"","exp":"0x00000008","file":"ifdef.h","line":204,"type":"Integer","value":8},"NIIF_NDIS_RESERVED3":{"comment":"","exp":"0x00000010","file":"ifdef.h","line":205,"type":"Integer","value":16},"NIIF_NDIS_RESERVED4":{"comment":"","exp":"0x00000100","file":"ifdef.h","line":209,"type":"Integer","value":256},"NIIF_NDIS_WDM_INTERFACE":{"comment":"","exp":"0x00000020","file":"ifdef.h","line":206,"type":"Integer","value":32},"NIIF_SLOT_NUMBER_UNKNOWN":{"comment":"","exp":"((ULONG)(-1))","file":"ifdef.h","line":260,"type":"Integer","value":-1},"NIIF_WAN_TUNNEL_TYPE_UNKNOWN":{"comment":"","exp":"((ULONG)(-1))","file":"ifdef.h","line":211,"type":"Integer","value":-1},"NI_DGRAM":{"comment":"\/* Service is a datagram service *\/","exp":"0x10","file":"ws2def.h","line":1107,"type":"Integer","value":16},"NI_MAXHOST":{"comment":"\/* Max size of a fully-qualified domain name *\/","exp":"1025","file":"ws2def.h","line":1109,"type":"Integer","value":1025},"NI_MAXSERV":{"comment":"\/* Max size of a service name *\/","exp":"32","file":"ws2def.h","line":1110,"type":"Integer","value":32},"NI_NAMEREQD":{"comment":"\/* Error if the host's name not in DNS *\/","exp":"0x04","file":"ws2def.h","line":1105,"type":"Integer","value":4},"NI_NOFQDN":{"comment":"\/* Only return nodename portion for local hosts *\/","exp":"0x01","file":"ws2def.h","line":1103,"type":"Integer","value":1},"NI_NUMERICHOST":{"comment":"\/* Return numeric form of the host's address *\/","exp":"0x02","file":"ws2def.h","line":1104,"type":"Integer","value":2},"NI_NUMERICSERV":{"comment":"\/* Return numeric form of the service (port #) *\/","exp":"0x08","file":"ws2def.h","line":1106,"type":"Integer","value":8},"NL_MAX_METRIC_COMPONENT":{"comment":"","exp":"((((ULONG) 1) << 31) - 1)","file":"nldef.h","line":98,"type":"Integer","value":2147483647},"NS_ALL":{"comment":"","exp":"(0)","file":"ws2def.h","line":1057,"type":"Integer","value":0},"NS_BTH":{"comment":"\/* Bluetooth SDP Namespace *\/","exp":"(16)","file":"ws2def.h","line":1076,"type":"Integer","value":16},"NS_DHCP":{"comment":"","exp":"(6)","file":"ws2def.h","line":1063,"type":"Integer","value":6},"NS_DNS":{"comment":"","exp":"(12)","file":"ws2def.h","line":1067,"type":"Integer","value":12},"NS_EMAIL":{"comment":"","exp":"(37)","file":"ws2def.h","line":1086,"type":"Integer","value":37},"NS_MS":{"comment":"","exp":"(30)","file":"ws2def.h","line":1081,"type":"Integer","value":30},"NS_NBP":{"comment":"","exp":"(20)","file":"ws2def.h","line":1079,"type":"Integer","value":20},"NS_NDS":{"comment":"","exp":"(2)","file":"ws2def.h","line":1060,"type":"Integer","value":2},"NS_NETBT":{"comment":"","exp":"(13)","file":"ws2def.h","line":1068,"type":"Integer","value":13},"NS_NETDES":{"comment":"\/* Network Designers Limited *\/","exp":"(60)","file":"ws2def.h","line":1097,"type":"Integer","value":60},"NS_NIS":{"comment":"","exp":"(41)","file":"ws2def.h","line":1092,"type":"Integer","value":41},"NS_NISPLUS":{"comment":"","exp":"(42)","file":"ws2def.h","line":1093,"type":"Integer","value":42},"NS_NLA":{"comment":"\/* Network Location Awareness *\/","exp":"(15)","file":"ws2def.h","line":1072,"type":"Integer","value":15},"NS_NTDS":{"comment":"","exp":"(32)","file":"ws2def.h","line":1083,"type":"Integer","value":32},"NS_PEER_BROWSE":{"comment":"","exp":"(3)","file":"ws2def.h","line":1061,"type":"Integer","value":3},"NS_PNRPCLOUD":{"comment":"","exp":"(39)","file":"ws2def.h","line":1088,"type":"Integer","value":39},"NS_PNRPNAME":{"comment":"","exp":"(38)","file":"ws2def.h","line":1087,"type":"Integer","value":38},"NS_SAP":{"comment":"","exp":"(1)","file":"ws2def.h","line":1059,"type":"Integer","value":1},"NS_SLP":{"comment":"","exp":"(5)","file":"ws2def.h","line":1062,"type":"Integer","value":5},"NS_STDA":{"comment":"","exp":"(31)","file":"ws2def.h","line":1082,"type":"Integer","value":31},"NS_TCPIP_HOSTS":{"comment":"","exp":"(11)","file":"ws2def.h","line":1066,"type":"Integer","value":11},"NS_TCPIP_LOCAL":{"comment":"","exp":"(10)","file":"ws2def.h","line":1065,"type":"Integer","value":10},"NS_WINS":{"comment":"","exp":"(14)","file":"ws2def.h","line":1069,"type":"Integer","value":14},"NS_WRQ":{"comment":"","exp":"(50)","file":"ws2def.h","line":1095,"type":"Integer","value":50},"NS_X500":{"comment":"","exp":"(40)","file":"ws2def.h","line":1091,"type":"Integer","value":40},"NUMBER_OF_EXPORTED_VARIABLES":{"comment":"","dupe":[{"comment":"","exp":"(ROUTE_STATE + 1)","file":"Iprtrmib.h","line":127,"type":"Unknown","value":"(ROUTE_STATE + 1)"}],"exp":"(TCP6_STATS + 1)","file":"Iprtrmib.h","line":125,"type":"Integer","value":39},"NlpoDhcp":{"comment":"","exp":"IpPrefixOriginDhcp","file":"nldef.h","line":50,"type":"Unknown","value":"IpPrefixOriginDhcp"},"NlpoManual":{"comment":"","exp":"IpPrefixOriginManual","file":"nldef.h","line":48,"type":"Unknown","value":"IpPrefixOriginManual"},"NlpoOther":{"comment":"","exp":"IpPrefixOriginOther","file":"nldef.h","line":47,"type":"Unknown","value":"IpPrefixOriginOther"},"NlpoRouterAdvertisement":{"comment":"","exp":"IpPrefixOriginRouterAdvertisement","file":"nldef.h","line":51,"type":"Unknown","value":"IpPrefixOriginRouterAdvertisement"},"NlpoWellKnown":{"comment":"","exp":"IpPrefixOriginWellKnown","file":"nldef.h","line":49,"type":"Unknown","value":"IpPrefixOriginWellKnown"},"PEER_TO_PEER_NODETYPE":{"comment":"","exp":"2","file":"IPTypes.h","line":53,"type":"Integer","value":2},"PROTECTION_LEVEL_DEFAULT":{"comment":"","dupe":[{"comment":"","exp":"((UINT)-1)","file":"ws2ipdef.h","line":825,"type":"Unknown","value":"((UINT)-1)"}],"exp":"PROTECTION_LEVEL_EDGERESTRICTED","file":"ws2ipdef.h","line":823,"type":"Integer","value":20},"PROTECTION_LEVEL_EDGERESTRICTED":{"comment":"\/\/ Same as unrestricted. Except for","exp":"20","file":"ws2ipdef.h","line":818,"type":"Integer","value":20},"PROTECTION_LEVEL_RESTRICTED":{"comment":"\/\/ For Intranet apps.","exp":"30","file":"ws2ipdef.h","line":820,"type":"Integer","value":30},"PROTECTION_LEVEL_UNRESTRICTED":{"comment":"\/\/ For peer-to-peer apps.","exp":"10","file":"ws2ipdef.h","line":817,"type":"Integer","value":10},"PROXY_ARP":{"comment":"","exp":"(BEST_ROUTE + 1)","file":"Iprtrmib.h","line":106,"type":"Integer","value":22},"ROUTE_LONGER":{"comment":"","exp":"(ROUTE_MATCHING + 1)","file":"Iprtrmib.h","line":116,"type":"Integer","value":32},"ROUTE_MATCHING":{"comment":"","exp":"(DEST_SHORTER + 1)","file":"Iprtrmib.h","line":115,"type":"Integer","value":31},"ROUTE_SHORTER":{"comment":"","exp":"(ROUTE_LONGER + 1)","file":"Iprtrmib.h","line":117,"type":"Integer","value":33},"ROUTE_STATE":{"comment":"","exp":"(ROUTE_SHORTER + 1)","file":"Iprtrmib.h","line":118,"type":"Integer","value":34},"RtlEthernetAddressToString":{"comment":"","dupe":[{"comment":"","exp":"RtlEthernetAddressToStringA","file":"ip2string.h","line":263,"type":"Other","value":"RtlEthernetAddressToStringA"}],"exp":"RtlEthernetAddressToStringW","file":"ip2string.h","line":252,"type":"Other","value":"RtlEthernetAddressToStringW"},"RtlEthernetStringToAddress":{"comment":"","dupe":[{"comment":"","exp":"RtlEthernetStringToAddressA","file":"ip2string.h","line":266,"type":"Other","value":"RtlEthernetStringToAddressA"}],"exp":"RtlEthernetStringToAddressW","file":"ip2string.h","line":255,"type":"Other","value":"RtlEthernetStringToAddressW"},"RtlIpv4AddressToString":{"comment":"","dupe":[{"comment":"","exp":"RtlIpv4AddressToStringA","file":"ip2string.h","line":261,"type":"Other","value":"RtlIpv4AddressToStringA"}],"exp":"RtlIpv4AddressToStringW","file":"ip2string.h","line":250,"type":"Other","value":"RtlIpv4AddressToStringW"},"RtlIpv4AddressToStringEx":{"comment":"","dupe":[{"comment":"","exp":"RtlIpv4AddressToStringExA","file":"ip2string.h","line":268,"type":"Other","value":"RtlIpv4AddressToStringExA"}],"exp":"RtlIpv4AddressToStringExW","file":"ip2string.h","line":257,"type":"Other","value":"RtlIpv4AddressToStringExW"},"RtlIpv4StringToAddress":{"comment":"","dupe":[{"comment":"","exp":"RtlIpv4StringToAddressA","file":"ip2string.h","line":264,"type":"Other","value":"RtlIpv4StringToAddressA"}],"exp":"RtlIpv4StringToAddressW","file":"ip2string.h","line":253,"type":"Other","value":"RtlIpv4StringToAddressW"},"RtlIpv4StringToAddressEx":{"comment":"","dupe":[{"comment":"","exp":"RtlIpv4StringToAddressExA","file":"ip2string.h","line":270,"type":"Other","value":"RtlIpv4StringToAddressExA"}],"exp":"RtlIpv4StringToAddressExW","file":"ip2string.h","line":259,"type":"Other","value":"RtlIpv4StringToAddressExW"},"RtlIpv6AddressToString":{"comment":"","dupe":[{"comment":"","exp":"RtlIpv6AddressToStringA","file":"ip2string.h","line":262,"type":"Other","value":"RtlIpv6AddressToStringA"}],"exp":"RtlIpv6AddressToStringW","file":"ip2string.h","line":251,"type":"Other","value":"RtlIpv6AddressToStringW"},"RtlIpv6AddressToStringEx":{"comment":"","dupe":[{"comment":"","exp":"RtlIpv6AddressToStringExA","file":"ip2string.h","line":269,"type":"Other","value":"RtlIpv6AddressToStringExA"}],"exp":"RtlIpv6AddressToStringExW","file":"ip2string.h","line":258,"type":"Other","value":"RtlIpv6AddressToStringExW"},"RtlIpv6StringToAddress":{"comment":"","dupe":[{"comment":"","exp":"RtlIpv6StringToAddressA","file":"ip2string.h","line":265,"type":"Other","value":"RtlIpv6StringToAddressA"}],"exp":"RtlIpv6StringToAddressW","file":"ip2string.h","line":254,"type":"Other","value":"RtlIpv6StringToAddressW"},"RtlIpv6StringToAddressEx":{"comment":"","dupe":[{"comment":"","exp":"RtlIpv6StringToAddressExA","file":"ip2string.h","line":267,"type":"Other","value":"RtlIpv6StringToAddressExA"}],"exp":"RtlIpv6StringToAddressExW","file":"ip2string.h","line":256,"type":"Other","value":"RtlIpv6StringToAddressExW"},"SCOPEID_UNSPECIFIED_INIT":{"comment":"","exp":"{ 0 }","file":"ws2def.h","line":632,"type":"Other","value":"{ 0 }"},"SIOCGIPMSFILTER":{"comment":"","exp":"SIO_GET_MULTICAST_FILTER","file":"ws2ipdef.h","line":696,"type":"Other","value":"SIO_GET_MULTICAST_FILTER"},"SIOCGMSFILTER":{"comment":"","exp":"_IOW('t', 127 | IOC_IN, ULONG)","file":"ws2ipdef.h","line":702,"type":"Other","value":"_IOW('t', 127 | IOC_IN, ULONG)"},"SIOCSIPMSFILTER":{"comment":"","exp":"SIO_SET_MULTICAST_FILTER","file":"ws2ipdef.h","line":695,"type":"Other","value":"SIO_SET_MULTICAST_FILTER"},"SIOCSMSFILTER":{"comment":"","exp":"_IOW('t', 126, ULONG)","file":"ws2ipdef.h","line":701,"type":"Other","value":"_IOW('t', 126, ULONG)"},"SIO_ADDRESS_LIST_CHANGE":{"comment":"","exp":"_WSAIO(IOC_WS2,23)","file":"ws2def.h","line":410,"type":"Other","value":"_WSAIO(IOC_WS2,23)"},"SIO_ADDRESS_LIST_QUERY":{"comment":"","exp":"_WSAIOR(IOC_WS2,22)","file":"ws2def.h","line":409,"type":"Other","value":"_WSAIOR(IOC_WS2,22)"},"SIO_ADDRESS_LIST_SORT":{"comment":"","exp":"_WSAIORW(IOC_WS2,25)","file":"ws2def.h","line":415,"type":"Other","value":"_WSAIORW(IOC_WS2,25)"},"SIO_ASSOCIATE_HANDLE":{"comment":"","exp":"_WSAIOW(IOC_WS2,1)","file":"ws2def.h","line":394,"type":"Other","value":"_WSAIOW(IOC_WS2,1)"},"SIO_ENABLE_CIRCULAR_QUEUEING":{"comment":"","exp":"_WSAIO(IOC_WS2,2)","file":"ws2def.h","line":395,"type":"Other","value":"_WSAIO(IOC_WS2,2)"},"SIO_FIND_ROUTE":{"comment":"","exp":"_WSAIOR(IOC_WS2,3)","file":"ws2def.h","line":396,"type":"Other","value":"_WSAIOR(IOC_WS2,3)"},"SIO_FLUSH":{"comment":"","exp":"_WSAIO(IOC_WS2,4)","file":"ws2def.h","line":397,"type":"Other","value":"_WSAIO(IOC_WS2,4)"},"SIO_GET_BROADCAST_ADDRESS":{"comment":"","exp":"_WSAIOR(IOC_WS2,5)","file":"ws2def.h","line":398,"type":"Other","value":"_WSAIOR(IOC_WS2,5)"},"SIO_GET_EXTENSION_FUNCTION_POINTER":{"comment":"","exp":"_WSAIORW(IOC_WS2,6)","file":"ws2def.h","line":399,"type":"Other","value":"_WSAIORW(IOC_WS2,6)"},"SIO_GET_GROUP_QOS":{"comment":"","exp":"_WSAIORW(IOC_WS2,8)","file":"ws2def.h","line":401,"type":"Other","value":"_WSAIORW(IOC_WS2,8)"},"SIO_GET_INTERFACE_LIST":{"comment":"","exp":"_IOR('t', 127, ULONG)","file":"ws2ipdef.h","line":691,"type":"Other","value":"_IOR('t', 127, ULONG)"},"SIO_GET_INTERFACE_LIST_EX":{"comment":"","exp":"_IOR('t', 126, ULONG)","file":"ws2ipdef.h","line":692,"type":"Other","value":"_IOR('t', 126, ULONG)"},"SIO_GET_MULTICAST_FILTER":{"comment":"","exp":"_IOW('t', 124 | IOC_IN, ULONG)","file":"ws2ipdef.h","line":694,"type":"Other","value":"_IOW('t', 124 | IOC_IN, ULONG)"},"SIO_GET_MULTIPLE_EXTENSION_FUNCTION_POINTER":{"comment":"","exp":"_WSAIORW(IOC_WS2,36)","file":"ws2def.h","line":423,"type":"Other","value":"_WSAIORW(IOC_WS2,36)"},"SIO_GET_QOS":{"comment":"","exp":"_WSAIORW(IOC_WS2,7)","file":"ws2def.h","line":400,"type":"Other","value":"_WSAIORW(IOC_WS2,7)"},"SIO_IDEAL_SEND_BACKLOG_CHANGE":{"comment":"","exp":"_IO('t', 122)","file":"ws2ipdef.h","line":715,"type":"Other","value":"_IO('t', 122)"},"SIO_IDEAL_SEND_BACKLOG_QUERY":{"comment":"","exp":"_IOR('t', 123, ULONG)","file":"ws2ipdef.h","line":714,"type":"Other","value":"_IOR('t', 123, ULONG)"},"SIO_MULTICAST_SCOPE":{"comment":"","exp":"_WSAIOW(IOC_WS2,10)","file":"ws2def.h","line":403,"type":"Other","value":"_WSAIOW(IOC_WS2,10)"},"SIO_MULTIPOINT_LOOPBACK":{"comment":"","exp":"_WSAIOW(IOC_WS2,9)","file":"ws2def.h","line":402,"type":"Other","value":"_WSAIOW(IOC_WS2,9)"},"SIO_QUERY_RSS_PROCESSOR_INFO":{"comment":"","exp":"_WSAIOR(IOC_WS2,37)","file":"ws2def.h","line":412,"type":"Other","value":"_WSAIOR(IOC_WS2,37)"},"SIO_QUERY_TARGET_PNP_HANDLE":{"comment":"","exp":"_WSAIOR(IOC_WS2,24)","file":"ws2def.h","line":411,"type":"Other","value":"_WSAIOR(IOC_WS2,24)"},"SIO_RESERVED_1":{"comment":"","exp":"_WSAIOW(IOC_WS2,26)","file":"ws2def.h","line":419,"type":"Other","value":"_WSAIOW(IOC_WS2,26)"},"SIO_RESERVED_2":{"comment":"","exp":"_WSAIOW(IOC_WS2,33)","file":"ws2def.h","line":420,"type":"Other","value":"_WSAIOW(IOC_WS2,33)"},"SIO_ROUTING_INTERFACE_CHANGE":{"comment":"","exp":"_WSAIOW(IOC_WS2,21)","file":"ws2def.h","line":408,"type":"Other","value":"_WSAIOW(IOC_WS2,21)"},"SIO_ROUTING_INTERFACE_QUERY":{"comment":"","exp":"_WSAIORW(IOC_WS2,20)","file":"ws2def.h","line":407,"type":"Other","value":"_WSAIORW(IOC_WS2,20)"},"SIO_SET_GROUP_QOS":{"comment":"","exp":"_WSAIOW(IOC_WS2,12)","file":"ws2def.h","line":405,"type":"Other","value":"_WSAIOW(IOC_WS2,12)"},"SIO_SET_MULTICAST_FILTER":{"comment":"","exp":"_IOW('t', 125, ULONG)","file":"ws2ipdef.h","line":693,"type":"Other","value":"_IOW('t', 125, ULONG)"},"SIO_SET_QOS":{"comment":"","exp":"_WSAIOW(IOC_WS2,11)","file":"ws2def.h","line":404,"type":"Other","value":"_WSAIOW(IOC_WS2,11)"},"SIO_TRANSLATE_HANDLE":{"comment":"","exp":"_WSAIORW(IOC_WS2,13)","file":"ws2def.h","line":406,"type":"Other","value":"_WSAIORW(IOC_WS2,13)"},"SOCK_DGRAM":{"comment":"","exp":"2","file":"ws2def.h","line":159,"type":"Integer","value":2},"SOCK_RAW":{"comment":"","exp":"3","file":"ws2def.h","line":160,"type":"Integer","value":3},"SOCK_RDM":{"comment":"","exp":"4","file":"ws2def.h","line":161,"type":"Integer","value":4},"SOCK_SEQPACKET":{"comment":"","exp":"5","file":"ws2def.h","line":162,"type":"Integer","value":5},"SOCK_STREAM":{"comment":"","exp":"1","file":"ws2def.h","line":158,"type":"Integer","value":1},"SOL_IP":{"comment":"","exp":"(SOL_SOCKET-4)","file":"ws2def.h","line":170,"type":"Integer","value":65531},"SOL_IPV6":{"comment":"","exp":"(SOL_SOCKET-5)","file":"ws2def.h","line":171,"type":"Integer","value":65530},"SOL_SOCKET":{"comment":"","exp":"0xffff","file":"ws2def.h","line":169,"type":"Integer","value":65535},"SO_ACCEPTCONN":{"comment":"\/\/ socket has had listen()","exp":"0x0002","file":"ws2def.h","line":178,"type":"Integer","value":2},"SO_BROADCAST":{"comment":"\/\/ permit sending of broadcast msgs","exp":"0x0020","file":"ws2def.h","line":182,"type":"Integer","value":32},"SO_BSP_STATE":{"comment":"\/\/ get socket 5-tuple state","exp":"0x1009","file":"ws2def.h","line":199,"type":"Integer","value":4105},"SO_COMPARTMENT_ID":{"comment":"\/\/ get\/set the compartment for a socket","exp":"0x3004","file":"ws2def.h","line":210,"type":"Integer","value":12292},"SO_CONDITIONAL_ACCEPT":{"comment":"\/\/ enable true conditional accept:","exp":"0x3002","file":"ws2def.h","line":205,"type":"Integer","value":12290},"SO_DEBUG":{"comment":"\/\/ turn on debugging info recording","exp":"0x0001","file":"ws2def.h","line":177,"type":"Integer","value":1},"SO_DONTLINGER":{"comment":"","exp":"(int)(~SO_LINGER)","file":"ws2def.h","line":187,"type":"Integer","value":-129},"SO_DONTROUTE":{"comment":"\/\/ just use interface addresses","exp":"0x0010","file":"ws2def.h","line":181,"type":"Integer","value":16},"SO_ERROR":{"comment":"\/\/ get error status and clear","exp":"0x1007","file":"ws2def.h","line":197,"type":"Integer","value":4103},"SO_EXCLUSIVEADDRUSE":{"comment":"","exp":"((int)(~SO_REUSEADDR))","file":"ws2def.h","line":188,"type":"Integer","value":-5},"SO_GROUP_ID":{"comment":"\/\/ ID of a socket group","exp":"0x2001","file":"ws2def.h","line":201,"type":"Integer","value":8193},"SO_GROUP_PRIORITY":{"comment":"\/\/ the relative priority within a group","exp":"0x2002","file":"ws2def.h","line":202,"type":"Integer","value":8194},"SO_KEEPALIVE":{"comment":"\/\/ keep connections alive","exp":"0x0008","file":"ws2def.h","line":180,"type":"Integer","value":8},"SO_LINGER":{"comment":"\/\/ linger on close if data present","exp":"0x0080","file":"ws2def.h","line":184,"type":"Integer","value":128},"SO_MAX_MSG_SIZE":{"comment":"\/\/ maximum message size","exp":"0x2003","file":"ws2def.h","line":203,"type":"Integer","value":8195},"SO_OOBINLINE":{"comment":"\/\/ leave received OOB data in line","exp":"0x0100","file":"ws2def.h","line":185,"type":"Integer","value":256},"SO_ORIGINAL_DST":{"comment":"\/\/ Query the original destination address","exp":"0x300F","file":"ws2def.h","line":218,"type":"Integer","value":12303},"SO_PAUSE_ACCEPT":{"comment":"\/\/ pause accepting new connections","exp":"0x3003","file":"ws2def.h","line":209,"type":"Integer","value":12291},"SO_PORT_SCALABILITY":{"comment":"\/\/ enable port scalability","exp":"0x3006","file":"ws2def.h","line":213,"type":"Integer","value":12294},"SO_RANDOMIZE_PORT":{"comment":"\/\/ randomize assignment of wildcard ports","exp":"0x3005","file":"ws2def.h","line":212,"type":"Integer","value":12293},"SO_RCVBUF":{"comment":"\/\/ receive buffer size","exp":"0x1002","file":"ws2def.h","line":192,"type":"Integer","value":4098},"SO_RCVLOWAT":{"comment":"\/\/ receive low-water mark","exp":"0x1004","file":"ws2def.h","line":194,"type":"Integer","value":4100},"SO_RCVTIMEO":{"comment":"\/\/ receive timeout","exp":"0x1006","file":"ws2def.h","line":196,"type":"Integer","value":4102},"SO_REUSEADDR":{"comment":"\/\/ allow local address reuse","exp":"0x0004","file":"ws2def.h","line":179,"type":"Integer","value":4},"SO_REUSE_MULTICASTPORT":{"comment":"\/\/ enable port reuse and disable unicast","exp":"0x3008","file":"ws2def.h","line":216,"type":"Integer","value":12296},"SO_REUSE_UNICASTPORT":{"comment":"\/\/ defer ephemeral port allocation for","exp":"0x3007","file":"ws2def.h","line":214,"type":"Integer","value":12295},"SO_SNDBUF":{"comment":"\/\/ send buffer size","exp":"0x1001","file":"ws2def.h","line":191,"type":"Integer","value":4097},"SO_SNDLOWAT":{"comment":"\/\/ send low-water mark","exp":"0x1003","file":"ws2def.h","line":193,"type":"Integer","value":4099},"SO_SNDTIMEO":{"comment":"\/\/ send timeout","exp":"0x1005","file":"ws2def.h","line":195,"type":"Integer","value":4101},"SO_TYPE":{"comment":"\/\/ get socket type","exp":"0x1008","file":"ws2def.h","line":198,"type":"Integer","value":4104},"SO_USELOOPBACK":{"comment":"\/\/ bypass hardware when possible","exp":"0x0040","file":"ws2def.h","line":183,"type":"Integer","value":64},"TCP6_STATS":{"comment":"","exp":"(UDP6_STATS + 1)","file":"Iprtrmib.h","line":122,"type":"Integer","value":38},"TCP_ATMARK":{"comment":"","exp":"8","file":"ws2ipdef.h","line":962,"type":"Integer","value":8},"TCP_CONGESTION_ALGORITHM":{"comment":"","exp":"12","file":"ws2ipdef.h","line":966,"type":"Integer","value":12},"TCP_DELAY_FIN_ACK":{"comment":"","exp":"13","file":"ws2ipdef.h","line":967,"type":"Integer","value":13},"TCP_EXPEDITED_1122":{"comment":"","exp":"0x0002","file":"ws2ipdef.h","line":956,"type":"Integer","value":2},"TCP_FAIL_CONNECT_ON_ICMP_ERROR":{"comment":"","exp":"18","file":"ws2ipdef.h","line":973,"type":"Integer","value":18},"TCP_FASTOPEN":{"comment":"","exp":"15","file":"ws2ipdef.h","line":969,"type":"Integer","value":15},"TCP_ICMP_ERROR_INFO":{"comment":"","exp":"19","file":"ws2ipdef.h","line":974,"type":"Integer","value":19},"TCP_KEEPALIVE":{"comment":"","exp":"3","file":"ws2ipdef.h","line":957,"type":"Integer","value":3},"TCP_KEEPCNT":{"comment":"","exp":"16","file":"ws2ipdef.h","line":970,"type":"Integer","value":16},"TCP_KEEPIDLE":{"comment":"","exp":"TCP_KEEPALIVE","file":"ws2ipdef.h","line":971,"type":"Integer","value":3},"TCP_KEEPINTVL":{"comment":"","exp":"17","file":"ws2ipdef.h","line":972,"type":"Integer","value":17},"TCP_MAXRT":{"comment":"","exp":"5","file":"ws2ipdef.h","line":959,"type":"Integer","value":5},"TCP_MAXRTMS":{"comment":"","exp":"14","file":"ws2ipdef.h","line":968,"type":"Integer","value":14},"TCP_MAXSEG":{"comment":"","exp":"4","file":"ws2ipdef.h","line":958,"type":"Integer","value":4},"TCP_NODELAY":{"comment":"","exp":"0x0001","file":"ws2def.h","line":233,"type":"Integer","value":1},"TCP_NOSYNRETRIES":{"comment":"","exp":"9","file":"ws2ipdef.h","line":963,"type":"Integer","value":9},"TCP_NOURG":{"comment":"","exp":"7","file":"ws2ipdef.h","line":961,"type":"Integer","value":7},"TCP_OFFLOAD_NOT_PREFERRED":{"comment":"","exp":"1","file":"ws2ipdef.h","line":952,"type":"Integer","value":1},"TCP_OFFLOAD_NO_PREFERENCE":{"comment":"","exp":"0","file":"ws2ipdef.h","line":951,"type":"Integer","value":0},"TCP_OFFLOAD_PREFERENCE":{"comment":"","exp":"11","file":"ws2ipdef.h","line":965,"type":"Integer","value":11},"TCP_OFFLOAD_PREFERRED":{"comment":"","exp":"2","file":"ws2ipdef.h","line":953,"type":"Integer","value":2},"TCP_ROW":{"comment":"","exp":"(TCP_TABLE + 1)","file":"Iprtrmib.h","line":98,"type":"Integer","value":14},"TCP_STATS":{"comment":"","exp":"(ICMP_STATS + 1)","file":"Iprtrmib.h","line":96,"type":"Integer","value":12},"TCP_STDURG":{"comment":"","exp":"6","file":"ws2ipdef.h","line":960,"type":"Integer","value":6},"TCP_TABLE":{"comment":"","exp":"(TCP_STATS + 1)","file":"Iprtrmib.h","line":97,"type":"Integer","value":13},"TCP_TIMESTAMPS":{"comment":"","exp":"10","file":"ws2ipdef.h","line":964,"type":"Integer","value":10},"UDP6_STATS":{"comment":"","exp":"(IP6_STATS + 1)","file":"Iprtrmib.h","line":121,"type":"Integer","value":37},"UDP_COALESCED_INFO":{"comment":"","exp":"3","file":"ws2ipdef.h","line":1002,"type":"Integer","value":3},"UDP_RECV_MAX_COALESCED_SIZE":{"comment":"","exp":"3","file":"ws2ipdef.h","line":995,"type":"Integer","value":3},"UDP_ROW":{"comment":"","exp":"(UDP_TABLE + 1)","file":"Iprtrmib.h","line":101,"type":"Integer","value":17},"UDP_SEND_MSG_SIZE":{"comment":"","exp":"2","file":"ws2ipdef.h","line":994,"type":"Integer","value":2},"UDP_STATS":{"comment":"","exp":"(TCP_ROW + 1)","file":"Iprtrmib.h","line":99,"type":"Integer","value":15},"UDP_TABLE":{"comment":"","exp":"(UDP_STATS + 1)","file":"Iprtrmib.h","line":100,"type":"Integer","value":16},"WS2DEF_INLINE":{"comment":"","dupe":[{"comment":"\/* GNU style *\/","exp":"extern inline","file":"ws2def.h","line":67,"type":"Unknown","value":"extern inline"}],"exp":"__inline","file":"ws2def.h","line":65,"type":"Unknown","value":"__inline"},"WS2TCPIP_INLINE":{"comment":"","dupe":[{"comment":"\/* GNU style *\/","exp":"extern inline","file":"ws2ipdef.h","line":63,"type":"Unknown","value":"extern inline"}],"exp":"__inline","file":"ws2ipdef.h","line":61,"type":"Unknown","value":"__inline"},"WSK_SO_BASE":{"comment":"","exp":"0x4000","file":"ws2def.h","line":227,"type":"Integer","value":16384},"_CSADDR_INFO":{"comment":"","exp":"","file":"ws2def.h","line":292,"type":"Struct","value":"typedef struct _CSADDR_INFO {\\r\\n    SOCKET_ADDRESS LocalAddr ;\\r\\n    SOCKET_ADDRESS RemoteAddr ;\\r\\n    INT iSocketType ;\\r\\n    INT iProtocol ;\\r\\n} CSADDR_INFO, *PCSADDR_INFO, FAR * LPCSADDR_INFO ;"},"_DNS_INTERFACE_SETTINGS":{"comment":"","exp":"","file":"netioapi.h","line":3192,"type":"Struct","value":"typedef struct _DNS_INTERFACE_SETTINGS\\r\\n{\\r\\n    ULONG Version;\\r\\n    ULONG64 Flags;\\r\\n    PWSTR Domain;\\r\\n    PWSTR NameServer;\\r\\n    PWSTR SearchList;\\r\\n    ULONG RegistrationEnabled;\\r\\n    ULONG RegisterAdapterName;\\r\\n    ULONG EnableLLMNR;\\r\\n    ULONG QueryAdapterName;\\r\\n    PWSTR ProfileNameServer;\\r\\n} DNS_INTERFACE_SETTINGS;"},"_DNS_INTERFACE_SETTINGS_EX":{"comment":"","exp":"","file":"netioapi.h","line":3206,"type":"Struct","value":"typedef struct _DNS_INTERFACE_SETTINGS_EX\\r\\n{\\r\\n    DNS_INTERFACE_SETTINGS SettingsV1;\\r\\n    ULONG                  DisableUnconstrainedQueries;\\r\\n    PWSTR                  SupplementalSearchList;\\r\\n} DNS_INTERFACE_SETTINGS_EX;"},"_DNS_SETTINGS":{"comment":"","exp":"","file":"netioapi.h","line":3183,"type":"Struct","value":"typedef struct _DNS_SETTINGS\\r\\n{\\r\\n    ULONG Version;\\r\\n    ULONG64 Flags;\\r\\n    PWSTR Hostname;\\r\\n    PWSTR Domain;\\r\\n    PWSTR SearchList;\\r\\n} DNS_SETTINGS;"},"_IF_ADMINISTRATIVE_STATE":{"comment":"","exp":"","file":"ifdef.h","line":311,"type":"Enum","value":"typedef enum _IF_ADMINISTRATIVE_STATE {\\r\\n    IF_ADMINISTRATIVE_DISABLED,\\r\\n    IF_ADMINISTRATIVE_ENABLED,\\r\\n    IF_ADMINISTRATIVE_DEMANDDIAL,\\r\\n} IF_ADMINISTRATIVE_STATE, *PIF_ADMINISTRATIVE_STATE;"},"_IF_COUNTED_STRING_LH":{"comment":"","exp":"","file":"ifdef.h","line":275,"type":"Struct","value":"typedef struct _IF_COUNTED_STRING_LH\\r\\n{\\r\\n    _Field_range_(0, (IF_MAX_STRING_SIZE + 1) * sizeof(WCHAR))\\r\\n    USHORT      Length; \/\/ in -Bytes-\\r\\n    WCHAR       String[IF_MAX_STRING_SIZE + 1];\\r\\n} IF_COUNTED_STRING_LH, *PIF_COUNTED_STRING_LH;"},"_IF_PHYSICAL_ADDRESS_LH":{"comment":"","exp":"","file":"ifdef.h","line":284,"type":"Struct","value":"typedef struct _IF_PHYSICAL_ADDRESS_LH\\r\\n{\\r\\n    _Field_range_(0, IF_MAX_PHYS_ADDRESS_LENGTH)\\r\\n    USHORT      Length;\\r\\n    UCHAR       Address[IF_MAX_PHYS_ADDRESS_LENGTH];\\r\\n} IF_PHYSICAL_ADDRESS_LH, *PIF_PHYSICAL_ADDRESS_LH;"},"_INTERFACE_HARDWARE_CROSSTIMESTAMP":{"comment":"","exp":"","file":"iphlpapi.h","line":988,"type":"Struct","value":"typedef struct _INTERFACE_HARDWARE_CROSSTIMESTAMP\\r\\n{\\r\\n    ULONG Version;\\r\\n    ULONG Flags;\\r\\n    ULONG64 SystemTimestamp1;\\r\\n    ULONG64 HardwareClockTimestamp;\\r\\n    ULONG64 SystemTimestamp2;\\r\\n} INTERFACE_HARDWARE_CROSSTIMESTAMP, *PINTERFACE_HARDWARE_CROSSTIMESTAMP;"},"_INTERFACE_INFO":{"comment":"","exp":"","file":"ws2ipdef.h","line":89,"type":"Struct","value":"typedef struct _INTERFACE_INFO {\\r\\n    ULONG iiFlags;              \/\/ Interface flags.\\r\\n    sockaddr_gen iiAddress;     \/\/ Interface address.\\r\\n    sockaddr_gen iiBroadcastAddress; \/\/ Broadcast address.\\r\\n    sockaddr_gen iiNetmask;     \/\/ Network mask.\\r\\n} INTERFACE_INFO, FAR *LPINTERFACE_INFO;"},"_INTERFACE_INFO_EX":{"comment":"","exp":"","file":"ws2ipdef.h","line":100,"type":"Struct","value":"typedef struct _INTERFACE_INFO_EX {\\r\\n    ULONG iiFlags;              \/\/ Interface flags.\\r\\n    SOCKET_ADDRESS iiAddress;   \/\/ Interface address.\\r\\n    SOCKET_ADDRESS iiBroadcastAddress; \/\/ Broadcast address.\\r\\n    SOCKET_ADDRESS iiNetmask;   \/\/ Network mask.\\r\\n} INTERFACE_INFO_EX, FAR *LPINTERFACE_INFO_EX;"},"_INTERFACE_TIMESTAMP_CAPABILITIES":{"comment":"","exp":"","file":"iphlpapi.h","line":978,"type":"Struct","value":"typedef struct _INTERFACE_TIMESTAMP_CAPABILITIES\\r\\n{\\r\\n    ULONG Version;\\r\\n    ULONG64 HardwareClockFrequencyHz;\\r\\n    BOOLEAN CrossTimestamp;\\r\\n    ULONG64 Reserved1;\\r\\n    ULONG64 Reserved2;\\r\\n    INTERFACE_TIMESTAMP_CAPABILITY_FLAGS TimestampFlags;\\r\\n} INTERFACE_TIMESTAMP_CAPABILITIES, *PINTERFACE_TIMESTAMP_CAPABILITIES;"},"_INTERFACE_TIMESTAMP_CAPABILITY_FLAGS":{"comment":"","exp":"","file":"iphlpapi.h","line":959,"type":"Struct","value":"typedef struct _INTERFACE_TIMESTAMP_CAPABILITY_FLAGS\\r\\n{\\r\\n    BOOLEAN PtpV2OverUdpIPv4EventMsgReceiveHw;\\r\\n    BOOLEAN PtpV2OverUdpIPv4AllMsgReceiveHw;\\r\\n    BOOLEAN PtpV2OverUdpIPv4EventMsgTransmitHw;\\r\\n    BOOLEAN PtpV2OverUdpIPv4AllMsgTransmitHw;\\r\\n    BOOLEAN PtpV2OverUdpIPv6EventMsgReceiveHw;\\r\\n    BOOLEAN PtpV2OverUdpIPv6AllMsgReceiveHw;\\r\\n    BOOLEAN PtpV2OverUdpIPv6EventMsgTransmitHw;\\r\\n    BOOLEAN PtpV2OverUdpIPv6AllMsgTransmitHw;\\r\\n    BOOLEAN AllReceiveHw;\\r\\n    BOOLEAN AllTransmitHw;\\r\\n    BOOLEAN TaggedTransmitHw;\\r\\n    BOOLEAN AllReceiveSw;\\r\\n    BOOLEAN AllTransmitSw;\\r\\n    BOOLEAN TaggedTransmitSw;\\r\\n} INTERFACE_TIMESTAMP_CAPABILITY_FLAGS, *PINTERFACE_TIMESTAMP_CAPABILITY_FLAGS;"},"_IPV6_ADDRESS_EX":{"comment":"","exp":"","file":"IPExport.h","line":106,"type":"Struct","value":"typedef struct _IPV6_ADDRESS_EX {\\r\\n    USHORT sin6_port;\\r\\n    ULONG  sin6_flowinfo;\\r\\n    USHORT sin6_addr[8];\\r\\n    ULONG  sin6_scope_id;\\r\\n} IPV6_ADDRESS_EX, *PIPV6_ADDRESS_EX;"},"_IP_ADAPTER_ADDRESSES_LH":{"comment":"","exp":"","file":"IPTypes.h","line":286,"type":"Struct","value":"typedef struct _IP_ADAPTER_ADDRESSES_LH {\\r\\n    union {\\r\\n        ULONGLONG Alignment;\\r\\n        struct {\\r\\n            ULONG Length;\\r\\n            IF_INDEX IfIndex;\\r\\n        };\\r\\n    };\\r\\n    struct _IP_ADAPTER_ADDRESSES_LH *Next;\\r\\n    PCHAR AdapterName;\\r\\n    PIP_ADAPTER_UNICAST_ADDRESS_LH FirstUnicastAddress;\\r\\n    PIP_ADAPTER_ANYCAST_ADDRESS_XP FirstAnycastAddress;\\r\\n    PIP_ADAPTER_MULTICAST_ADDRESS_XP FirstMulticastAddress;\\r\\n    PIP_ADAPTER_DNS_SERVER_ADDRESS_XP FirstDnsServerAddress;\\r\\n    PWCHAR DnsSuffix;\\r\\n    PWCHAR Description;\\r\\n    PWCHAR FriendlyName;\\r\\n    BYTE PhysicalAddress[MAX_ADAPTER_ADDRESS_LENGTH];\\r\\n    ULONG PhysicalAddressLength;\\r\\n    union {\\r\\n        ULONG Flags;\\r\\n        struct {\\r\\n            ULONG DdnsEnabled : 1;\\r\\n            ULONG RegisterAdapterSuffix : 1;\\r\\n            ULONG Dhcpv4Enabled : 1;\\r\\n            ULONG ReceiveOnly : 1;\\r\\n            ULONG NoMulticast : 1;\\r\\n            ULONG Ipv6OtherStatefulConfig : 1;\\r\\n            ULONG NetbiosOverTcpipEnabled : 1;\\r\\n            ULONG Ipv4Enabled : 1;\\r\\n            ULONG Ipv6Enabled : 1;\\r\\n            ULONG Ipv6ManagedAddressConfigurationSupported : 1;\\r\\n        };\\r\\n    };\\r\\n    ULONG Mtu;\\r\\n    IFTYPE IfType;\\r\\n    IF_OPER_STATUS OperStatus;\\r\\n    IF_INDEX Ipv6IfIndex;\\r\\n    ULONG ZoneIndices[16];\\r\\n    PIP_ADAPTER_PREFIX_XP FirstPrefix;\\r\\n    ULONG64 TransmitLinkSpeed;\\r\\n    ULONG64 ReceiveLinkSpeed;\\r\\n    PIP_ADAPTER_WINS_SERVER_ADDRESS_LH FirstWinsServerAddress;\\r\\n    PIP_ADAPTER_GATEWAY_ADDRESS_LH FirstGatewayAddress;\\r\\n    ULONG Ipv4Metric;\\r\\n    ULONG Ipv6Metric;\\r\\n    IF_LUID Luid;\\r\\n    SOCKET_ADDRESS Dhcpv4Server;\\r\\n    NET_IF_COMPARTMENT_ID CompartmentId;\\r\\n    NET_IF_NETWORK_GUID NetworkGuid;\\r\\n    NET_IF_CONNECTION_TYPE ConnectionType;\\r\\n    TUNNEL_TYPE TunnelType;\\r\\n    \/\/\\r\\n    \/\/ DHCP v6 Info.\\r\\n    \/\/\\r\\n    SOCKET_ADDRESS Dhcpv6Server;\\r\\n    BYTE Dhcpv6ClientDuid[MAX_DHCPV6_DUID_LENGTH];\\r\\n    ULONG Dhcpv6ClientDuidLength;\\r\\n    ULONG Dhcpv6Iaid;\\r\\n#if (NTDDI_VERSION >= NTDDI_VISTASP1)\\r\\n    PIP_ADAPTER_DNS_SUFFIX FirstDnsSuffix;\\r\\n#endif\\r\\n} IP_ADAPTER_ADDRESSES_LH,\\r\\n *PIP_ADAPTER_ADDRESSES_LH;"},"_IP_ADAPTER_ADDRESSES_XP":{"comment":"","exp":"","file":"IPTypes.h","line":352,"type":"Struct","value":"typedef struct _IP_ADAPTER_ADDRESSES_XP {\\r\\n    union {\\r\\n        ULONGLONG Alignment;\\r\\n        struct {\\r\\n            ULONG Length;\\r\\n            DWORD IfIndex;\\r\\n        };\\r\\n    };\\r\\n    struct _IP_ADAPTER_ADDRESSES_XP *Next;\\r\\n    PCHAR AdapterName;\\r\\n    PIP_ADAPTER_UNICAST_ADDRESS_XP FirstUnicastAddress;\\r\\n    PIP_ADAPTER_ANYCAST_ADDRESS_XP FirstAnycastAddress;\\r\\n    PIP_ADAPTER_MULTICAST_ADDRESS_XP FirstMulticastAddress;\\r\\n    PIP_ADAPTER_DNS_SERVER_ADDRESS_XP FirstDnsServerAddress;\\r\\n    PWCHAR DnsSuffix;\\r\\n    PWCHAR Description;\\r\\n    PWCHAR FriendlyName;\\r\\n    BYTE PhysicalAddress[MAX_ADAPTER_ADDRESS_LENGTH];\\r\\n    DWORD PhysicalAddressLength;\\r\\n    DWORD Flags;\\r\\n    DWORD Mtu;\\r\\n    DWORD IfType;\\r\\n    IF_OPER_STATUS OperStatus;\\r\\n    DWORD Ipv6IfIndex;\\r\\n    DWORD ZoneIndices[16];\\r\\n    PIP_ADAPTER_PREFIX_XP FirstPrefix;\\r\\n} IP_ADAPTER_ADDRESSES_XP,\\r\\n *PIP_ADAPTER_ADDRESSES_XP;"},"_IP_ADAPTER_ANYCAST_ADDRESS_XP":{"comment":"","exp":"","file":"IPTypes.h","line":169,"type":"Struct","value":"typedef struct _IP_ADAPTER_ANYCAST_ADDRESS_XP {\\r\\n    union {\\r\\n        ULONGLONG Alignment;\\r\\n        struct {\\r\\n            ULONG Length;\\r\\n            DWORD Flags;\\r\\n        };\\r\\n    };\\r\\n    struct _IP_ADAPTER_ANYCAST_ADDRESS_XP *Next;\\r\\n    SOCKET_ADDRESS Address;\\r\\n} IP_ADAPTER_ANYCAST_ADDRESS_XP, *PIP_ADAPTER_ANYCAST_ADDRESS_XP;"},"_IP_ADAPTER_DNS_SERVER_ADDRESS_XP":{"comment":"","exp":"","file":"IPTypes.h","line":201,"type":"Struct","value":"typedef struct _IP_ADAPTER_DNS_SERVER_ADDRESS_XP {\\r\\n    union {\\r\\n        ULONGLONG Alignment;\\r\\n        struct {\\r\\n            ULONG Length;\\r\\n            DWORD Reserved;\\r\\n        };\\r\\n    };\\r\\n    struct _IP_ADAPTER_DNS_SERVER_ADDRESS_XP *Next;\\r\\n    SOCKET_ADDRESS Address;\\r\\n} IP_ADAPTER_DNS_SERVER_ADDRESS_XP, *PIP_ADAPTER_DNS_SERVER_ADDRESS_XP;"},"_IP_ADAPTER_DNS_SUFFIX":{"comment":"","exp":"","file":"IPTypes.h","line":267,"type":"Struct","value":"typedef struct _IP_ADAPTER_DNS_SUFFIX {\\r\\n    struct _IP_ADAPTER_DNS_SUFFIX *Next;\\r\\n    WCHAR String[MAX_DNS_SUFFIX_STRING_LENGTH];\\r\\n}IP_ADAPTER_DNS_SUFFIX, *PIP_ADAPTER_DNS_SUFFIX;"},"_IP_ADAPTER_GATEWAY_ADDRESS_LH":{"comment":"","exp":"","file":"IPTypes.h","line":234,"type":"Struct","value":"typedef struct _IP_ADAPTER_GATEWAY_ADDRESS_LH {\\r\\n    union {\\r\\n        ULONGLONG Alignment;\\r\\n        struct {\\r\\n            ULONG Length;\\r\\n            DWORD Reserved;\\r\\n        };\\r\\n    };\\r\\n    struct _IP_ADAPTER_GATEWAY_ADDRESS_LH *Next;\\r\\n    SOCKET_ADDRESS Address;\\r\\n} IP_ADAPTER_GATEWAY_ADDRESS_LH, *PIP_ADAPTER_GATEWAY_ADDRESS_LH;"},"_IP_ADAPTER_INDEX_MAP":{"comment":"","exp":"","file":"IPExport.h","line":138,"type":"Struct","value":"typedef struct _IP_ADAPTER_INDEX_MAP {\\r\\n    ULONG   Index;\\r\\n    WCHAR   Name[MAX_ADAPTER_NAME];\\r\\n} IP_ADAPTER_INDEX_MAP, *PIP_ADAPTER_INDEX_MAP;"},"_IP_ADAPTER_INFO":{"comment":"","exp":"","file":"IPTypes.h","line":82,"type":"Struct","value":"typedef struct _IP_ADAPTER_INFO {\\r\\n    struct _IP_ADAPTER_INFO* Next;\\r\\n    DWORD ComboIndex;\\r\\n    char AdapterName[MAX_ADAPTER_NAME_LENGTH + 4];\\r\\n    char Description[MAX_ADAPTER_DESCRIPTION_LENGTH + 4];\\r\\n    UINT AddressLength;\\r\\n    BYTE Address[MAX_ADAPTER_ADDRESS_LENGTH];\\r\\n    DWORD Index;\\r\\n    UINT Type;\\r\\n    UINT DhcpEnabled;\\r\\n    PIP_ADDR_STRING CurrentIpAddress;\\r\\n    IP_ADDR_STRING IpAddressList;\\r\\n    IP_ADDR_STRING GatewayList;\\r\\n    IP_ADDR_STRING DhcpServer;\\r\\n    BOOL HaveWins;\\r\\n    IP_ADDR_STRING PrimaryWinsServer;\\r\\n    IP_ADDR_STRING SecondaryWinsServer;\\r\\n    time_t LeaseObtained;\\r\\n    time_t LeaseExpires;\\r\\n} IP_ADAPTER_INFO, *PIP_ADAPTER_INFO;"},"_IP_ADAPTER_MULTICAST_ADDRESS_XP":{"comment":"","exp":"","file":"IPTypes.h","line":185,"type":"Struct","value":"typedef struct _IP_ADAPTER_MULTICAST_ADDRESS_XP {\\r\\n    union {\\r\\n        ULONGLONG Alignment;\\r\\n        struct {\\r\\n            ULONG Length;\\r\\n            DWORD Flags;\\r\\n        };\\r\\n    };\\r\\n    struct _IP_ADAPTER_MULTICAST_ADDRESS_XP *Next;\\r\\n    SOCKET_ADDRESS Address;\\r\\n} IP_ADAPTER_MULTICAST_ADDRESS_XP, *PIP_ADAPTER_MULTICAST_ADDRESS_XP;"},"_IP_ADAPTER_ORDER_MAP":{"comment":"","exp":"","file":"IPExport.h","line":153,"type":"Struct","value":"typedef struct _IP_ADAPTER_ORDER_MAP {\\r\\n    ULONG   NumAdapters;\\r\\n    ULONG   AdapterOrder[1];\\r\\n} IP_ADAPTER_ORDER_MAP, *PIP_ADAPTER_ORDER_MAP;"},"_IP_ADAPTER_PREFIX_XP":{"comment":"","exp":"","file":"IPTypes.h","line":250,"type":"Struct","value":"typedef struct _IP_ADAPTER_PREFIX_XP {\\r\\n    union {\\r\\n        ULONGLONG Alignment;\\r\\n        struct {\\r\\n            ULONG Length;\\r\\n            DWORD Flags;\\r\\n        };\\r\\n    };\\r\\n    struct _IP_ADAPTER_PREFIX_XP *Next;\\r\\n    SOCKET_ADDRESS Address;\\r\\n    ULONG PrefixLength;\\r\\n} IP_ADAPTER_PREFIX_XP, *PIP_ADAPTER_PREFIX_XP;"},"_IP_ADAPTER_UNICAST_ADDRESS_LH":{"comment":"","exp":"","file":"IPTypes.h","line":113,"type":"Struct","value":"typedef struct _IP_ADAPTER_UNICAST_ADDRESS_LH {\\r\\n    union {\\r\\n        ULONGLONG Alignment;\\r\\n        struct {\\r\\n            ULONG Length;\\r\\n            DWORD Flags;\\r\\n        };\\r\\n    };\\r\\n    struct _IP_ADAPTER_UNICAST_ADDRESS_LH *Next;\\r\\n    SOCKET_ADDRESS Address;\\r\\n    IP_PREFIX_ORIGIN PrefixOrigin;\\r\\n    IP_SUFFIX_ORIGIN SuffixOrigin;\\r\\n    IP_DAD_STATE DadState;\\r\\n    ULONG ValidLifetime;\\r\\n    ULONG PreferredLifetime;\\r\\n    ULONG LeaseLifetime;\\r\\n    UINT8 OnLinkPrefixLength;\\r\\n} IP_ADAPTER_UNICAST_ADDRESS_LH,\\r\\n *PIP_ADAPTER_UNICAST_ADDRESS_LH;"},"_IP_ADAPTER_UNICAST_ADDRESS_XP":{"comment":"","exp":"","file":"IPTypes.h","line":135,"type":"Struct","value":"typedef struct _IP_ADAPTER_UNICAST_ADDRESS_XP {\\r\\n    union {\\r\\n        ULONGLONG Alignment;\\r\\n        struct {\\r\\n            ULONG Length;\\r\\n            DWORD Flags;\\r\\n        };\\r\\n    };\\r\\n    struct _IP_ADAPTER_UNICAST_ADDRESS_XP *Next;\\r\\n    SOCKET_ADDRESS Address;\\r\\n    IP_PREFIX_ORIGIN PrefixOrigin;\\r\\n    IP_SUFFIX_ORIGIN SuffixOrigin;\\r\\n    IP_DAD_STATE DadState;\\r\\n    ULONG ValidLifetime;\\r\\n    ULONG PreferredLifetime;\\r\\n    ULONG LeaseLifetime;\\r\\n} IP_ADAPTER_UNICAST_ADDRESS_XP, *PIP_ADAPTER_UNICAST_ADDRESS_XP;"},"_IP_ADAPTER_WINS_SERVER_ADDRESS_LH":{"comment":"","exp":"","file":"IPTypes.h","line":217,"type":"Struct","value":"typedef struct _IP_ADAPTER_WINS_SERVER_ADDRESS_LH {\\r\\n    union {\\r\\n        ULONGLONG Alignment;\\r\\n        struct {\\r\\n            ULONG Length;\\r\\n            DWORD Reserved;\\r\\n        };\\r\\n    };\\r\\n    struct _IP_ADAPTER_WINS_SERVER_ADDRESS_LH *Next;\\r\\n    SOCKET_ADDRESS Address;\\r\\n} IP_ADAPTER_WINS_SERVER_ADDRESS_LH, *PIP_ADAPTER_WINS_SERVER_ADDRESS_LH;"},"_IP_ADDRESS_PREFIX":{"comment":"","exp":"","file":"netioapi.h","line":1365,"type":"Struct","value":"typedef struct _IP_ADDRESS_PREFIX {\\r\\n    SOCKADDR_INET Prefix;\\r\\n    UINT8 PrefixLength;\\r\\n} IP_ADDRESS_PREFIX, *PIP_ADDRESS_PREFIX;"},"_IP_ADDR_STRING":{"comment":"","exp":"","file":"IPTypes.h","line":70,"type":"Struct","value":"typedef struct _IP_ADDR_STRING {\\r\\n    struct _IP_ADDR_STRING* Next;\\r\\n    IP_ADDRESS_STRING IpAddress;\\r\\n    IP_MASK_STRING IpMask;\\r\\n    DWORD Context;\\r\\n} IP_ADDR_STRING, *PIP_ADDR_STRING;"},"_IP_INTERFACE_INFO":{"comment":"","exp":"","file":"IPExport.h","line":143,"type":"Struct","value":"typedef struct _IP_INTERFACE_INFO {\\r\\n    LONG    NumAdapters;\\r\\n    IP_ADAPTER_INDEX_MAP Adapter[1];\\r\\n} IP_INTERFACE_INFO,*PIP_INTERFACE_INFO;"},"_IP_MCAST_COUNTER_INFO":{"comment":"","exp":"","file":"IPExport.h","line":158,"type":"Struct","value":"typedef struct _IP_MCAST_COUNTER_INFO {\\r\\n    ULONG64 InMcastOctets;\\r\\n    ULONG64 OutMcastOctets;\\r\\n    ULONG64 InMcastPkts;\\r\\n    ULONG64 OutMcastPkts;\\r\\n} IP_MCAST_COUNTER_INFO, *PIP_MCAST_COUNTER_INFO;"},"_IP_PER_ADAPTER_INFO_W2KSP1":{"comment":"","exp":"","file":"IPTypes.h","line":421,"type":"Struct","value":"typedef struct _IP_PER_ADAPTER_INFO_W2KSP1 {\\r\\n    UINT AutoconfigEnabled;\\r\\n    UINT AutoconfigActive;\\r\\n    PIP_ADDR_STRING CurrentDnsServer;\\r\\n    IP_ADDR_STRING DnsServerList;\\r\\n} IP_PER_ADAPTER_INFO_W2KSP1, *PIP_PER_ADAPTER_INFO_W2KSP1;"},"_IP_UNIDIRECTIONAL_ADAPTER_ADDRESS":{"comment":"","exp":"","file":"IPExport.h","line":148,"type":"Struct","value":"typedef struct _IP_UNIDIRECTIONAL_ADAPTER_ADDRESS {\\r\\n    ULONG   NumAdapters;\\r\\n    IPAddr  Address[1];\\r\\n} IP_UNIDIRECTIONAL_ADAPTER_ADDRESS, *PIP_UNIDIRECTIONAL_ADAPTER_ADDRESS;"},"_MIB_ANYCASTIPADDRESS_ROW":{"comment":"","exp":"","file":"netioapi.h","line":1103,"type":"Struct","value":"typedef struct _MIB_ANYCASTIPADDRESS_ROW {\\r\\n    \/\/\\r\\n    \/\/ Key Structure.\\r\\n    \/\/\\r\\n    SOCKADDR_INET Address;\\r\\n    NET_LUID InterfaceLuid;\\r\\n    NET_IFINDEX InterfaceIndex;\\r\\n    \/\/\\r\\n    \/\/ Read-Only Fields.\\r\\n    \/\/\\r\\n    SCOPE_ID ScopeId;\\r\\n} MIB_ANYCASTIPADDRESS_ROW, *PMIB_ANYCASTIPADDRESS_ROW;"},"_MIB_ANYCASTIPADDRESS_TABLE":{"comment":"","exp":"","file":"netioapi.h","line":1117,"type":"Struct","value":"typedef struct _MIB_ANYCASTIPADDRESS_TABLE {\\r\\n    ULONG NumEntries;\\r\\n    MIB_ANYCASTIPADDRESS_ROW Table[ANY_SIZE];\\r\\n} MIB_ANYCASTIPADDRESS_TABLE, *PMIB_ANYCASTIPADDRESS_TABLE;"},"_MIB_BEST_IF":{"comment":"","exp":"","file":"Iprtrmib.h","line":254,"type":"Struct","value":"typedef struct _MIB_BEST_IF\\r\\n{\\r\\n    DWORD       dwDestAddr;\\r\\n    DWORD       dwIfIndex;\\r\\n}MIB_BEST_IF, *PMIB_BEST_IF;"},"_MIB_IFSTACK_ROW":{"comment":"","exp":"","file":"netioapi.h","line":465,"type":"Struct","value":"typedef struct _MIB_IFSTACK_ROW {\\r\\n    NET_IFINDEX HigherLayerInterfaceIndex;\\r\\n    NET_IFINDEX LowerLayerInterfaceIndex;\\r\\n} MIB_IFSTACK_ROW, *PMIB_IFSTACK_ROW;"},"_MIB_IFSTACK_TABLE":{"comment":"","exp":"","file":"netioapi.h","line":475,"type":"Struct","value":"typedef struct _MIB_IFSTACK_TABLE {\\r\\n    ULONG NumEntries;\\r\\n    MIB_IFSTACK_ROW Table[ANY_SIZE];\\r\\n} MIB_IFSTACK_TABLE, *PMIB_IFSTACK_TABLE;"},"_MIB_IFSTATUS":{"comment":"","exp":"","file":"Iprtrmib.h","line":267,"type":"Struct","value":"typedef struct _MIB_IFSTATUS\\r\\n{\\r\\n    DWORD       dwIfIndex;\\r\\n    DWORD       dwAdminStatus;\\r\\n    DWORD       dwOperationalStatus;\\r\\n    BOOL        bMHbeatActive;\\r\\n    BOOL        bMHbeatAlive;\\r\\n}MIB_IFSTATUS, *PMIB_IFSTATUS;"},"_MIB_IF_ENTRY_LEVEL":{"comment":"","exp":"","file":"netioapi.h","line":268,"type":"Enum","value":"typedef enum _MIB_IF_ENTRY_LEVEL {\\r\\n    MibIfEntryNormal = 0,\\r\\n    MibIfEntryNormalWithoutStatistics = 2\\r\\n} MIB_IF_ENTRY_LEVEL, *PMIB_IF_ENTRY_LEVEL;"},"_MIB_IF_ROW2":{"comment":"","exp":"","file":"netioapi.h","line":154,"type":"Struct","value":"typedef struct _MIB_IF_ROW2 {\\r\\n    \/\/\\r\\n    \/\/ Key structure.  Sorted by preference.\\r\\n    \/\/\\r\\n    NET_LUID InterfaceLuid;\\r\\n    NET_IFINDEX InterfaceIndex;\\r\\n    \/\/\\r\\n    \/\/ Read-Only fields.\\r\\n    \/\/\\r\\n    GUID InterfaceGuid;\\r\\n    WCHAR Alias[IF_MAX_STRING_SIZE + 1];\\r\\n    WCHAR Description[IF_MAX_STRING_SIZE + 1];\\r\\n    ULONG PhysicalAddressLength;\\r\\n    UCHAR PhysicalAddress[IF_MAX_PHYS_ADDRESS_LENGTH];\\r\\n    UCHAR PermanentPhysicalAddress[IF_MAX_PHYS_ADDRESS_LENGTH];\\r\\n    ULONG Mtu;\\r\\n    IFTYPE Type;                \/\/ Interface Type.\\r\\n    TUNNEL_TYPE TunnelType;     \/\/ Tunnel Type, if Type = IF_TUNNEL.\\r\\n    NDIS_MEDIUM MediaType;\\r\\n    NDIS_PHYSICAL_MEDIUM PhysicalMediumType;\\r\\n    NET_IF_ACCESS_TYPE AccessType;\\r\\n    NET_IF_DIRECTION_TYPE DirectionType;\\r\\n    struct {\\r\\n        BOOLEAN HardwareInterface : 1;\\r\\n        BOOLEAN FilterInterface : 1;\\r\\n        BOOLEAN ConnectorPresent : 1;\\r\\n        BOOLEAN NotAuthenticated : 1;\\r\\n        BOOLEAN NotMediaConnected : 1;\\r\\n        BOOLEAN Paused : 1;\\r\\n        BOOLEAN LowPower : 1;\\r\\n        BOOLEAN EndPointInterface : 1;\\r\\n    } InterfaceAndOperStatusFlags;\\r\\n    IF_OPER_STATUS OperStatus;\\r\\n    NET_IF_ADMIN_STATUS AdminStatus;\\r\\n    NET_IF_MEDIA_CONNECT_STATE MediaConnectState;\\r\\n    NET_IF_NETWORK_GUID NetworkGuid;\\r\\n    NET_IF_CONNECTION_TYPE ConnectionType;\\r\\n    \/\/\\r\\n    \/\/ Statistics.\\r\\n    \/\/\\r\\n    ULONG64 TransmitLinkSpeed;\\r\\n    ULONG64 ReceiveLinkSpeed;\\r\\n    ULONG64 InOctets;\\r\\n    ULONG64 InUcastPkts;\\r\\n    ULONG64 InNUcastPkts;\\r\\n    ULONG64 InDiscards;\\r\\n    ULONG64 InErrors;\\r\\n    ULONG64 InUnknownProtos;\\r\\n    ULONG64 InUcastOctets;\\r\\n    ULONG64 InMulticastOctets;\\r\\n    ULONG64 InBroadcastOctets;\\r\\n    ULONG64 OutOctets;\\r\\n    ULONG64 OutUcastPkts;\\r\\n    ULONG64 OutNUcastPkts;\\r\\n    ULONG64 OutDiscards;\\r\\n    ULONG64 OutErrors;\\r\\n    ULONG64 OutUcastOctets;\\r\\n    ULONG64 OutMulticastOctets;\\r\\n    ULONG64 OutBroadcastOctets;\\r\\n    ULONG64 OutQLen;\\r\\n} MIB_IF_ROW2, *PMIB_IF_ROW2;"},"_MIB_IF_TABLE2":{"comment":"","exp":"","file":"netioapi.h","line":221,"type":"Struct","value":"typedef struct _MIB_IF_TABLE2 {\\r\\n    ULONG NumEntries;\\r\\n    MIB_IF_ROW2 Table[ANY_SIZE];\\r\\n} MIB_IF_TABLE2, *PMIB_IF_TABLE2;"},"_MIB_IF_TABLE_LEVEL":{"comment":"","exp":"","file":"netioapi.h","line":345,"type":"Enum","value":"typedef enum _MIB_IF_TABLE_LEVEL {\\r\\n    MibIfTableNormal,\\r\\n    MibIfTableRaw,\\r\\n    #if (NTDDI_VERSION >= NTDDI_WIN10_RS2)\\r\\n    MibIfTableNormalWithoutStatistics\\r\\n    #endif\\r\\n} MIB_IF_TABLE_LEVEL, *PMIB_IF_TABLE_LEVEL;"},"_MIB_INVERTEDIFSTACK_ROW":{"comment":"","exp":"","file":"netioapi.h","line":470,"type":"Struct","value":"typedef struct _MIB_INVERTEDIFSTACK_ROW {\\r\\n    NET_IFINDEX LowerLayerInterfaceIndex;\\r\\n    NET_IFINDEX HigherLayerInterfaceIndex;\\r\\n} MIB_INVERTEDIFSTACK_ROW, *PMIB_INVERTEDIFSTACK_ROW;"},"_MIB_INVERTEDIFSTACK_TABLE":{"comment":"","exp":"","file":"netioapi.h","line":480,"type":"Struct","value":"typedef struct _MIB_INVERTEDIFSTACK_TABLE {\\r\\n    ULONG NumEntries;\\r\\n    MIB_INVERTEDIFSTACK_ROW Table[ANY_SIZE];\\r\\n} MIB_INVERTEDIFSTACK_TABLE, *PMIB_INVERTEDIFSTACK_TABLE;"},"_MIB_IPDESTROW":{"comment":"","exp":"","file":"Iprtrmib.h","line":236,"type":"Struct","value":"typedef struct _MIB_IPDESTROW\\r\\n{\\r\\n#ifdef __cplusplus\\r\\n    MIB_IPFORWARDROW  ForwardRow;\\r\\n#else\\r\\n    MIB_IPFORWARDROW;\\r\\n#endif\\r\\n    DWORD             dwForwardPreference;\\r\\n    DWORD             dwForwardViewSet;\\r\\n}MIB_IPDESTROW, *PMIB_IPDESTROW;"},"_MIB_IPDESTTABLE":{"comment":"","exp":"","file":"Iprtrmib.h","line":248,"type":"Struct","value":"typedef struct _MIB_IPDESTTABLE\\r\\n{\\r\\n    DWORD             dwNumEntries;\\r\\n    MIB_IPDESTROW     table[ANY_SIZE];\\r\\n}MIB_IPDESTTABLE, *PMIB_IPDESTTABLE;"},"_MIB_IPFORWARD_ROW2":{"comment":"","exp":"","file":"netioapi.h","line":1370,"type":"Struct","value":"typedef struct _MIB_IPFORWARD_ROW2 {\\r\\n    \/\/\\r\\n    \/\/ Key Structure.\\r\\n    \/\/\\r\\n    NET_LUID InterfaceLuid;\\r\\n    NET_IFINDEX InterfaceIndex;\\r\\n    IP_ADDRESS_PREFIX DestinationPrefix;\\r\\n    SOCKADDR_INET NextHop;\\r\\n    \/\/\\r\\n    \/\/ Read-Write Fields.\\r\\n    \/\/\\r\\n    UCHAR SitePrefixLength;\\r\\n    ULONG ValidLifetime;\\r\\n    ULONG PreferredLifetime;\\r\\n    ULONG Metric;\\r\\n    NL_ROUTE_PROTOCOL Protocol;\\r\\n    BOOLEAN Loopback;\\r\\n    BOOLEAN AutoconfigureAddress;\\r\\n    BOOLEAN Publish;\\r\\n    BOOLEAN Immortal;\\r\\n    \/\/\\r\\n    \/\/ Read-Only Fields.\\r\\n    \/\/\\r\\n    ULONG Age;\\r\\n    NL_ROUTE_ORIGIN Origin;\\r\\n} MIB_IPFORWARD_ROW2, *PMIB_IPFORWARD_ROW2;"},"_MIB_IPFORWARD_TABLE2":{"comment":"","exp":"","file":"netioapi.h","line":1400,"type":"Struct","value":"typedef struct _MIB_IPFORWARD_TABLE2 {\\r\\n    ULONG NumEntries;\\r\\n    MIB_IPFORWARD_ROW2 Table[ANY_SIZE];\\r\\n} MIB_IPFORWARD_TABLE2, *PMIB_IPFORWARD_TABLE2;"},"_MIB_IPINTERFACE_ROW":{"comment":"","exp":"","file":"netioapi.h","line":394,"type":"Struct","value":"typedef struct _MIB_IPINTERFACE_ROW {\\r\\n    \/\/\\r\\n    \/\/ Key Structure;\\r\\n    \/\/\\r\\n    ADDRESS_FAMILY Family;\\r\\n    NET_LUID InterfaceLuid;\\r\\n    NET_IFINDEX InterfaceIndex;\\r\\n    \/\/\\r\\n    \/\/ Read-Write fields.\\r\\n    \/\/\\r\\n    \/\/\\r\\n    \/\/ Fields currently not exposed.\\r\\n    \/\/\\r\\n    ULONG MaxReassemblySize;\\r\\n    ULONG64 InterfaceIdentifier;\\r\\n    ULONG MinRouterAdvertisementInterval;\\r\\n    ULONG MaxRouterAdvertisementInterval;\\r\\n    \/\/\\r\\n    \/\/ Fileds currently exposed.\\r\\n    \/\/\\r\\n    BOOLEAN AdvertisingEnabled;\\r\\n    BOOLEAN ForwardingEnabled;\\r\\n    BOOLEAN WeakHostSend;\\r\\n    BOOLEAN WeakHostReceive;\\r\\n    BOOLEAN UseAutomaticMetric;\\r\\n    BOOLEAN UseNeighborUnreachabilityDetection;\\r\\n    BOOLEAN ManagedAddressConfigurationSupported;\\r\\n    BOOLEAN OtherStatefulConfigurationSupported;\\r\\n    BOOLEAN AdvertiseDefaultRoute;\\r\\n    NL_ROUTER_DISCOVERY_BEHAVIOR RouterDiscoveryBehavior;\\r\\n    ULONG DadTransmits;         \/\/ DupAddrDetectTransmits in RFC 2462.\\r\\n    ULONG BaseReachableTime;\\r\\n    ULONG RetransmitTime;\\r\\n    ULONG PathMtuDiscoveryTimeout; \/\/ Path MTU discovery timeout (in ms).\\r\\n    NL_LINK_LOCAL_ADDRESS_BEHAVIOR LinkLocalAddressBehavior;\\r\\n    ULONG LinkLocalAddressTimeout; \/\/ In ms.\\r\\n    ULONG ZoneIndices[ScopeLevelCount]; \/\/ Zone part of a SCOPE_ID.\\r\\n    ULONG SitePrefixLength;\\r\\n    ULONG Metric;\\r\\n    ULONG NlMtu;\\r\\n    \/\/\\r\\n    \/\/ Read Only fields.\\r\\n    \/\/\\r\\n    BOOLEAN Connected;\\r\\n    BOOLEAN SupportsWakeUpPatterns;\\r\\n    BOOLEAN SupportsNeighborDiscovery;\\r\\n    BOOLEAN SupportsRouterDiscovery;\\r\\n    ULONG ReachableTime;\\r\\n    NL_INTERFACE_OFFLOAD_ROD TransmitOffload;\\r\\n    NL_INTERFACE_OFFLOAD_ROD ReceiveOffload;\\r\\n    \/\/\\r\\n    \/\/ Disables using default route on the interface. This flag\\r\\n    \/\/ can be used by VPN clients to restrict Split tunnelling.\\r\\n    \/\/\\r\\n    BOOLEAN DisableDefaultRoutes;\\r\\n} MIB_IPINTERFACE_ROW, *PMIB_IPINTERFACE_ROW;"},"_MIB_IPINTERFACE_TABLE":{"comment":"","exp":"","file":"netioapi.h","line":460,"type":"Struct","value":"typedef struct _MIB_IPINTERFACE_TABLE {\\r\\n    ULONG NumEntries;\\r\\n    MIB_IPINTERFACE_ROW Table[ANY_SIZE];\\r\\n} MIB_IPINTERFACE_TABLE, *PMIB_IPINTERFACE_TABLE;"},"_MIB_IPMCAST_BOUNDARY":{"comment":"","exp":"","file":"Iprtrmib.h","line":188,"type":"Struct","value":"typedef struct _MIB_IPMCAST_BOUNDARY\\r\\n{\\r\\n    DWORD   dwIfIndex;\\r\\n    DWORD   dwGroupAddress;\\r\\n    DWORD   dwGroupMask;\\r\\n    DWORD   dwStatus;\\r\\n}MIB_IPMCAST_BOUNDARY, *PMIB_IPMCAST_BOUNDARY;"},"_MIB_IPMCAST_BOUNDARY_TABLE":{"comment":"","exp":"","file":"Iprtrmib.h","line":196,"type":"Struct","value":"typedef struct _MIB_IPMCAST_BOUNDARY_TABLE\\r\\n{\\r\\n    DWORD       dwNumEntries;\\r\\n    MIB_IPMCAST_BOUNDARY   table[ANY_SIZE];\\r\\n}MIB_IPMCAST_BOUNDARY_TABLE, *PMIB_IPMCAST_BOUNDARY_TABLE;"},"_MIB_IPMCAST_SCOPE":{"comment":"","exp":"","file":"Iprtrmib.h","line":228,"type":"Struct","value":"typedef struct _MIB_IPMCAST_SCOPE\\r\\n{\\r\\n    DWORD             dwGroupAddress;\\r\\n    DWORD             dwGroupMask;\\r\\n    SCOPE_NAME_BUFFER snNameBuffer;\\r\\n    DWORD             dwStatus;\\r\\n}MIB_IPMCAST_SCOPE, *PMIB_IPMCAST_SCOPE;"},"_MIB_IPNET_ROW2":{"comment":"","exp":"","file":"netioapi.h","line":1920,"type":"Struct","value":"typedef struct _MIB_IPNET_ROW2 {\\r\\n    \/\/\\r\\n    \/\/ Key Struture.\\r\\n    \/\/\\r\\n    SOCKADDR_INET Address;\\r\\n    NET_IFINDEX InterfaceIndex;\\r\\n    NET_LUID InterfaceLuid;\\r\\n    \/\/\\r\\n    \/\/ Read-Write.\\r\\n    \/\/\\r\\n    UCHAR PhysicalAddress[IF_MAX_PHYS_ADDRESS_LENGTH];\\r\\n    \/\/\\r\\n    \/\/ Read-Only.\\r\\n    \/\/\\r\\n    ULONG PhysicalAddressLength;\\r\\n    NL_NEIGHBOR_STATE State;\\r\\n    union {\\r\\n        struct {\\r\\n            BOOLEAN IsRouter : 1;\\r\\n            BOOLEAN IsUnreachable : 1;\\r\\n        };\\r\\n        UCHAR Flags;\\r\\n    };\\r\\n    union {\\r\\n        ULONG LastReachable;\\r\\n        ULONG LastUnreachable;\\r\\n    } ReachabilityTime;\\r\\n} MIB_IPNET_ROW2, *PMIB_IPNET_ROW2;"},"_MIB_IPNET_TABLE2":{"comment":"","exp":"","file":"netioapi.h","line":1953,"type":"Struct","value":"typedef struct _MIB_IPNET_TABLE2 {\\r\\n    ULONG NumEntries;\\r\\n    MIB_IPNET_ROW2 Table[ANY_SIZE];\\r\\n} MIB_IPNET_TABLE2, *PMIB_IPNET_TABLE2;"},"_MIB_IPPATH_ROW":{"comment":"","exp":"","file":"netioapi.h","line":1760,"type":"Struct","value":"typedef struct _MIB_IPPATH_ROW {\\r\\n    \/\/\\r\\n    \/\/ Key.\\r\\n    \/\/\\r\\n    SOCKADDR_INET Source;\\r\\n    SOCKADDR_INET Destination;\\r\\n    NET_LUID InterfaceLuid;\\r\\n    NET_IFINDEX InterfaceIndex;\\r\\n    \/\/\\r\\n    \/\/ RO.\\r\\n    \/\/\\r\\n    \/\/\\r\\n    \/\/ The current next hop.  This can change over the lifetime of a path.\\r\\n    \/\/\\r\\n    SOCKADDR_INET CurrentNextHop;\\r\\n    \/\/\\r\\n    \/\/ MTU of path to destination. Includes the IP header length.\\r\\n    \/\/\\r\\n    ULONG PathMtu;\\r\\n    \/\/\\r\\n    \/\/ Estimated mean RTT.\\r\\n    \/\/\\r\\n    ULONG RttMean;\\r\\n    \/\/\\r\\n    \/\/ Mean deviation of RTT.\\r\\n    \/\/\\r\\n    ULONG RttDeviation;\\r\\n    union {\\r\\n        ULONG LastReachable;    \/\/ Milliseconds.\\r\\n        ULONG LastUnreachable;  \/\/ Milliseconds.\\r\\n    };\\r\\n    BOOLEAN IsReachable;\\r\\n    \/\/\\r\\n    \/\/ Estimated speed.\\r\\n    \/\/\\r\\n    ULONG64 LinkTransmitSpeed;\\r\\n    ULONG64 LinkReceiveSpeed;\\r\\n} MIB_IPPATH_ROW, *PMIB_IPPATH_ROW;"},"_MIB_IPPATH_TABLE":{"comment":"","exp":"","file":"netioapi.h","line":1806,"type":"Struct","value":"typedef struct _MIB_IPPATH_TABLE {\\r\\n    ULONG NumEntries;\\r\\n    MIB_IPPATH_ROW Table[ANY_SIZE];\\r\\n} MIB_IPPATH_TABLE, *PMIB_IPPATH_TABLE;"},"_MIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES":{"comment":"","exp":"","file":"netioapi.h","line":493,"type":"Struct","value":"typedef struct _MIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES {\\r\\n    NL_BANDWIDTH_INFORMATION InboundBandwidthInformation;\\r\\n    NL_BANDWIDTH_INFORMATION OutboundBandwidthInformation;\\r\\n} MIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES,\\r\\n  *PMIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES;"},"_MIB_MULTICASTIPADDRESS_ROW":{"comment":"","exp":"","file":"netioapi.h","line":1262,"type":"Struct","value":"typedef struct _MIB_MULTICASTIPADDRESS_ROW {\\r\\n    \/\/\\r\\n    \/\/ Key Structure.\\r\\n    \/\/\\r\\n    SOCKADDR_INET Address;\\r\\n    NET_IFINDEX InterfaceIndex;\\r\\n    NET_LUID InterfaceLuid;\\r\\n    \/\/\\r\\n    \/\/ Read-Only Fields.\\r\\n    \/\/\\r\\n    SCOPE_ID ScopeId;\\r\\n} MIB_MULTICASTIPADDRESS_ROW, *PMIB_MULTICASTIPADDRESS_ROW;"},"_MIB_MULTICASTIPADDRESS_TABLE":{"comment":"","exp":"","file":"netioapi.h","line":1276,"type":"Struct","value":"typedef struct _MIB_MULTICASTIPADDRESS_TABLE {\\r\\n    ULONG NumEntries;\\r\\n    MIB_MULTICASTIPADDRESS_ROW Table[ANY_SIZE];\\r\\n} MIB_MULTICASTIPADDRESS_TABLE, *PMIB_MULTICASTIPADDRESS_TABLE;"},"_MIB_NOTIFICATION_TYPE":{"comment":"","exp":"","file":"netioapi.h","line":117,"type":"Enum","value":"typedef enum _MIB_NOTIFICATION_TYPE {\\r\\n    \/\/\\r\\n    \/\/ ParameterChange.\\r\\n    \/\/\\r\\n    MibParameterNotification,\\r\\n    \/\/\\r\\n    \/\/ Addition.\\r\\n    \/\/\\r\\n    MibAddInstance,\\r\\n    \/\/\\r\\n    \/\/ Deletion.\\r\\n    \/\/\\r\\n    MibDeleteInstance,\\r\\n    \/\/\\r\\n    \/\/ Initial notification.\\r\\n    \/\/\\r\\n    MibInitialNotification,\\r\\n} MIB_NOTIFICATION_TYPE, *PMIB_NOTIFICATION_TYPE;"},"_MIB_OPAQUE_INFO":{"comment":"","exp":"","file":"Iprtrmib.h","line":302,"type":"Struct","value":"typedef struct _MIB_OPAQUE_INFO\\r\\n{\\r\\n    DWORD  dwId;\\r\\n    union\\r\\n    {\\r\\n        ULONGLONG   ullAlign;\\r\\n        BYTE        rgbyData[1];\\r\\n    };\\r\\n}MIB_OPAQUE_INFO, *PMIB_OPAQUE_INFO;"},"_MIB_OPAQUE_QUERY":{"comment":"","exp":"","file":"Iprtrmib.h","line":143,"type":"Struct","value":"typedef struct _MIB_OPAQUE_QUERY\\r\\n{\\r\\n    DWORD  dwVarId;\\r\\n    DWORD  rgdwVarIndex[ANY_SIZE];\\r\\n}MIB_OPAQUE_QUERY, *PMIB_OPAQUE_QUERY;"},"_MIB_PROXYARP":{"comment":"","exp":"","file":"Iprtrmib.h","line":260,"type":"Struct","value":"typedef struct _MIB_PROXYARP\\r\\n{\\r\\n    DWORD       dwAddress;\\r\\n    DWORD       dwMask;\\r\\n    DWORD       dwIfIndex;\\r\\n}MIB_PROXYARP, *PMIB_PROXYARP;"},"_MIB_ROUTESTATE":{"comment":"","exp":"","file":"Iprtrmib.h","line":276,"type":"Struct","value":"typedef struct _MIB_ROUTESTATE\\r\\n{\\r\\n    BOOL        bRoutesSetToStack;\\r\\n}MIB_ROUTESTATE, *PMIB_ROUTESTATE;"},"_MIB_UNICASTIPADDRESS_ROW":{"comment":"","exp":"","file":"netioapi.h","line":751,"type":"Struct","value":"typedef struct _MIB_UNICASTIPADDRESS_ROW {\\r\\n    \/\/\\r\\n    \/\/ Key Structure.\\r\\n    \/\/\\r\\n    SOCKADDR_INET Address;\\r\\n    NET_LUID InterfaceLuid;\\r\\n    NET_IFINDEX InterfaceIndex;\\r\\n    \/\/\\r\\n    \/\/ Read-Write Fileds.\\r\\n    \/\/\\r\\n    NL_PREFIX_ORIGIN PrefixOrigin;\\r\\n    NL_SUFFIX_ORIGIN SuffixOrigin;\\r\\n    ULONG ValidLifetime;\\r\\n    ULONG PreferredLifetime;\\r\\n    UINT8 OnLinkPrefixLength;\\r\\n    BOOLEAN SkipAsSource;\\r\\n    \/\/\\r\\n    \/\/ Read-Only Fields.\\r\\n    \/\/\\r\\n    NL_DAD_STATE DadState;\\r\\n    SCOPE_ID ScopeId;\\r\\n    LARGE_INTEGER CreationTimeStamp;\\r\\n} MIB_UNICASTIPADDRESS_ROW, *PMIB_UNICASTIPADDRESS_ROW;"},"_MIB_UNICASTIPADDRESS_TABLE":{"comment":"","exp":"","file":"netioapi.h","line":777,"type":"Struct","value":"typedef struct _MIB_UNICASTIPADDRESS_TABLE {\\r\\n    ULONG NumEntries;\\r\\n    MIB_UNICASTIPADDRESS_ROW Table[ANY_SIZE];\\r\\n} MIB_UNICASTIPADDRESS_TABLE, *PMIB_UNICASTIPADDRESS_TABLE;"},"_NDIS_INTERFACE_INFORMATION":{"comment":"","exp":"","file":"ifdef.h","line":340,"type":"Struct","value":"typedef struct _NDIS_INTERFACE_INFORMATION\\r\\n{\\r\\n    \/\/\\r\\n    \/\/  rod fields\\r\\n    \/\/\\r\\n    NET_IF_OPER_STATUS          ifOperStatus;\\r\\n    ULONG                       ifOperStatusFlags;\\r\\n    NET_IF_MEDIA_CONNECT_STATE  MediaConnectState;\\r\\n    NET_IF_MEDIA_DUPLEX_STATE   MediaDuplexState;\\r\\n    ULONG                       ifMtu;\\r\\n    BOOLEAN                     ifPromiscuousMode;\\r\\n    BOOLEAN                     ifDeviceWakeUpEnable;\\r\\n    ULONG64                     XmitLinkSpeed;\\r\\n    ULONG64                     RcvLinkSpeed;\\r\\n    ULONG64                     ifLastChange;\\r\\n    ULONG64                     ifCounterDiscontinuityTime;\\r\\n    ULONG64                     ifInUnknownProtos;\\r\\n    \/\/\\r\\n    \/\/ OID_GEN_STATISTICS\\r\\n    \/\/\\r\\n    ULONG64                     ifInDiscards;           \/\/ OID_GEN_RCV_DISCARDS = OID_GEN_RCV_ERROR + OID_GEN_RCV_NO_BUFFER\\r\\n    ULONG64                     ifInErrors;             \/\/ OID_GEN_RCV_ERROR\\r\\n    ULONG64                     ifHCInOctets;           \/\/ OID_GEN_BYTES_RCV = OID_GEN_DIRECTED_BYTES_RCV + OID_GEN_MULTICAST_BYTES_RCV + OID_GEN_BROADCAST_BYTES_RCV\\r\\n    ULONG64                     ifHCInUcastPkts;        \/\/ OID_GEN_DIRECTED_FRAMES_RCV\\r\\n    ULONG64                     ifHCInMulticastPkts;    \/\/ OID_GEN_MULTICAST_FRAMES_RCV\\r\\n    ULONG64                     ifHCInBroadcastPkts;    \/\/ OID_GEN_BROADCAST_FRAMES_RCV\\r\\n    ULONG64                     ifHCOutOctets;          \/\/ OID_GEN_BYTES_XMIT = OID_GEN_DIRECTED_BYTES_XMIT + OID_GEN_MULTICAST_BYTES_XMIT + OID_GEN_BROADCAST_BYTES_XMIT\\r\\n    ULONG64                     ifHCOutUcastPkts;       \/\/ OID_GEN_DIRECTED_FRAMES_XMIT\\r\\n    ULONG64                     ifHCOutMulticastPkts;   \/\/ OID_GEN_MULTICAST_FRAMES_XMIT\\r\\n    ULONG64                     ifHCOutBroadcastPkts;   \/\/ OID_GEN_BROADCAST_FRAMES_XMIT\\r\\n    ULONG64                     ifOutErrors;            \/\/ OID_GEN_XMIT_ERROR\\r\\n    ULONG64                     ifOutDiscards;          \/\/ OID_GEN_XMIT_DISCARDS\\r\\n    ULONG64                     ifHCInUcastOctets;      \/\/ OID_GEN_DIRECTED_BYTES_RCV\\r\\n    ULONG64                     ifHCInMulticastOctets;  \/\/ OID_GEN_MULTICAST_BYTES_RCV\\r\\n    ULONG64                     ifHCInBroadcastOctets;  \/\/ OID_GEN_BROADCAST_BYTES_RCV\\r\\n    ULONG64                     ifHCOutUcastOctets;     \/\/ OID_GEN_DIRECTED_BYTES_XMIT\\r\\n    ULONG64                     ifHCOutMulticastOctets; \/\/ OID_GEN_MULTICAST_BYTES_XMIT\\r\\n    ULONG64                     ifHCOutBroadcastOctets; \/\/ OID_GEN_BROADCAST_BYTES_XMIT\\r\\n    NET_IF_COMPARTMENT_ID       CompartmentId;\\r\\n    ULONG                       SupportedStatistics;\\r\\n}NDIS_INTERFACE_INFORMATION, *PNDIS_INTERFACE_INFORMATION;"},"_NETIOAPI_SUCCESS_":{"comment":"","exp":"_Success_(return==NO_ERROR)","file":"netioapi.h","line":91,"type":"Other","value":"_Success_(return==NO_ERROR)"},"_NET_IF_ACCESS_TYPE":{"comment":"","exp":"","file":"ifdef.h","line":216,"type":"Enum","value":"typedef enum _NET_IF_ACCESS_TYPE\\r\\n{\\r\\n    NET_IF_ACCESS_LOOPBACK = 1,\\r\\n    NET_IF_ACCESS_BROADCAST = 2,\\r\\n    NET_IF_ACCESS_POINT_TO_POINT = 3,\\r\\n    NET_IF_ACCESS_POINT_TO_MULTI_POINT = 4,\\r\\n    NET_IF_ACCESS_MAXIMUM = 5\\r\\n} NET_IF_ACCESS_TYPE, *PNET_IF_ACCESS_TYPE;"},"_NET_IF_ADMIN_STATUS":{"comment":"","exp":"","file":"ifdef.h","line":46,"type":"Enum","value":"typedef enum _NET_IF_ADMIN_STATUS\\r\\n{\\r\\n    NET_IF_ADMIN_STATUS_UP = 1,\\r\\n    NET_IF_ADMIN_STATUS_DOWN = 2,\\r\\n    NET_IF_ADMIN_STATUS_TESTING = 3\\r\\n} NET_IF_ADMIN_STATUS, *PNET_IF_ADMIN_STATUS;"},"_NET_IF_ALIAS_LH":{"comment":"","exp":"","file":"ifdef.h","line":108,"type":"Struct","value":"typedef struct _NET_IF_ALIAS_LH\\r\\n{\\r\\n    USHORT  ifAliasLength;  \/\/ in bytes, of ifAlias string\\r\\n    USHORT  ifAliasOffset;  \/\/ in bytes, from beginning of this struct\\r\\n} NET_IF_ALIAS_LH, *PNET_IF_ALIAS_LH;"},"_NET_IF_CONNECTION_TYPE":{"comment":"","exp":"","file":"ifdef.h","line":174,"type":"Enum","value":"typedef enum _NET_IF_CONNECTION_TYPE\\r\\n{\\r\\n   NET_IF_CONNECTION_DEDICATED = 1,\\r\\n   NET_IF_CONNECTION_PASSIVE = 2,\\r\\n   NET_IF_CONNECTION_DEMAND = 3,\\r\\n   NET_IF_CONNECTION_MAXIMUM = 4\\r\\n} NET_IF_CONNECTION_TYPE, *PNET_IF_CONNECTION_TYPE;"},"_NET_IF_DIRECTION_TYPE":{"comment":"","exp":"","file":"ifdef.h","line":229,"type":"Enum","value":"typedef enum _NET_IF_DIRECTION_TYPE\\r\\n{\\r\\n    NET_IF_DIRECTION_SENDRECEIVE,\\r\\n    NET_IF_DIRECTION_SENDONLY,\\r\\n    NET_IF_DIRECTION_RECEIVEONLY,\\r\\n    NET_IF_DIRECTION_MAXIMUM\\r\\n} NET_IF_DIRECTION_TYPE, *PNET_IF_DIRECTION_TYPE;"},"_NET_IF_MEDIA_CONNECT_STATE":{"comment":"","exp":"","file":"ifdef.h","line":238,"type":"Enum","value":"typedef enum _NET_IF_MEDIA_CONNECT_STATE\\r\\n{\\r\\n    MediaConnectStateUnknown,\\r\\n    MediaConnectStateConnected,\\r\\n    MediaConnectStateDisconnected\\r\\n} NET_IF_MEDIA_CONNECT_STATE, *PNET_IF_MEDIA_CONNECT_STATE;"},"_NET_IF_MEDIA_DUPLEX_STATE":{"comment":"","exp":"","file":"ifdef.h","line":250,"type":"Enum","value":"typedef enum _NET_IF_MEDIA_DUPLEX_STATE\\r\\n{\\r\\n    MediaDuplexStateUnknown,\\r\\n    MediaDuplexStateHalf,\\r\\n    MediaDuplexStateFull\\r\\n} NET_IF_MEDIA_DUPLEX_STATE, *PNET_IF_MEDIA_DUPLEX_STATE;"},"_NET_IF_OPER_STATUS":{"comment":"","exp":"","file":"ifdef.h","line":33,"type":"Enum","value":"typedef enum _NET_IF_OPER_STATUS\\r\\n{\\r\\n    NET_IF_OPER_STATUS_UP = 1,\\r\\n    NET_IF_OPER_STATUS_DOWN = 2,\\r\\n    NET_IF_OPER_STATUS_TESTING = 3,\\r\\n    NET_IF_OPER_STATUS_UNKNOWN = 4,\\r\\n    NET_IF_OPER_STATUS_DORMANT = 5,\\r\\n    NET_IF_OPER_STATUS_NOT_PRESENT = 6,\\r\\n    NET_IF_OPER_STATUS_LOWER_LAYER_DOWN = 7\\r\\n} NET_IF_OPER_STATUS, *PNET_IF_OPER_STATUS;"},"_NET_IF_RCV_ADDRESS_LH":{"comment":"","exp":"","file":"ifdef.h","line":101,"type":"Struct","value":"typedef struct _NET_IF_RCV_ADDRESS_LH\\r\\n{\\r\\n    NET_IF_RCV_ADDRESS_TYPE ifRcvAddressType;\\r\\n    USHORT                  ifRcvAddressLength;\\r\\n    USHORT                  ifRcvAddressOffset; \/\/ from beginning of this struct\\r\\n} NET_IF_RCV_ADDRESS_LH, *PNET_IF_RCV_ADDRESS_LH;"},"_NET_IF_RCV_ADDRESS_TYPE":{"comment":"","exp":"","file":"ifdef.h","line":94,"type":"Enum","value":"typedef enum _NET_IF_RCV_ADDRESS_TYPE\\r\\n{\\r\\n    NET_IF_RCV_ADDRESS_TYPE_OTHER = 1,\\r\\n    NET_IF_RCV_ADDRESS_TYPE_VOLATILE = 2,\\r\\n    NET_IF_RCV_ADDRESS_TYPE_NON_VOLATILE = 3\\r\\n} NET_IF_RCV_ADDRESS_TYPE, *PNET_IF_RCV_ADDRESS_TYPE;"},"_NET_PHYSICAL_LOCATION_LH":{"comment":"","exp":"","file":"ifdef.h","line":263,"type":"Struct","value":"typedef struct _NET_PHYSICAL_LOCATION_LH\\r\\n{\\r\\n    ULONG                   BusNumber;          \/\/ Physical location\\r\\n    ULONG                   SlotNumber;         \/\/ ... for hardware\\r\\n    ULONG                   FunctionNumber;     \/\/ ... devices.\\r\\n} NET_PHYSICAL_LOCATION_LH, *PNET_PHYSICAL_LOCATION_LH;"},"_NL_BANDWIDTH_FLAG":{"comment":"","exp":"","file":"nldef.h","line":237,"type":"Enum","value":"typedef enum _NL_BANDWIDTH_FLAG {\\r\\n    NlbwDisabled = 0,\\r\\n    NlbwEnabled,\\r\\n    NlbwUnchanged = -1\\r\\n} NL_BANDWIDTH_FLAG, *PNL_BANDWIDTH_FLAG;"},"_NL_BANDWIDTH_INFORMATION":{"comment":"","exp":"","file":"nldef.h","line":296,"type":"Struct","value":"typedef struct _NL_BANDWIDTH_INFORMATION {\\r\\n    ULONG64 Bandwidth;\\r\\n    ULONG64 Instability;\\r\\n    BOOLEAN BandwidthPeaked;\\r\\n} NL_BANDWIDTH_INFORMATION, *PNL_BANDWIDTH_INFORMATION;"},"_NL_INTERFACE_NETWORK_CATEGORY_STATE":{"comment":"","exp":"","file":"nldef.h","line":257,"type":"Enum","value":"typedef enum _NL_INTERFACE_NETWORK_CATEGORY_STATE {\\r\\n    NlincCategoryUnknown = 0,\\r\\n    NlincPublic = 1,\\r\\n    NlincPrivate = 2,\\r\\n    NlincDomainAuthenticated = 3,\\r\\n    NlincCategoryStateMax\\r\\n} NL_INTERFACE_NETWORK_CATEGORY_STATE,\\r\\n*PNL_INTERFACE_NETWORK_CATEGORY_STATE;"},"_NL_INTERFACE_OFFLOAD_ROD":{"comment":"","exp":"","file":"nldef.h","line":217,"type":"Struct","value":"typedef struct _NL_INTERFACE_OFFLOAD_ROD {\\r\\n    BOOLEAN NlChecksumSupported : 1;\\r\\n    BOOLEAN NlOptionsSupported : 1;\\r\\n    BOOLEAN TlDatagramChecksumSupported : 1;\\r\\n    BOOLEAN TlStreamChecksumSupported : 1;\\r\\n    BOOLEAN TlStreamOptionsSupported : 1;\\r\\n    BOOLEAN FastPathCompatible : 1;\\r\\n    BOOLEAN TlLargeSendOffloadSupported : 1;\\r\\n    BOOLEAN TlGiantSendOffloadSupported : 1;\\r\\n} NL_INTERFACE_OFFLOAD_ROD, *PNL_INTERFACE_OFFLOAD_ROD;"},"_NL_LINK_LOCAL_ADDRESS_BEHAVIOR":{"comment":"","exp":"","file":"nldef.h","line":205,"type":"Enum","value":"typedef enum _NL_LINK_LOCAL_ADDRESS_BEHAVIOR{\\r\\n    LinkLocalAlwaysOff = 0,     \/\/ Never use link locals.\\r\\n    LinkLocalDelayed,           \/\/ Use link locals only if no other addresses.\\r\\n                                \/\/ (default for IPv4).\\r\\n                                \/\/ Legacy mapping: IPAutoconfigurationEnabled.\\r\\n    LinkLocalAlwaysOn,          \/\/ Always use link locals (default for IPv6).\\r\\n    LinkLocalUnchanged = -1\\r\\n} NL_LINK_LOCAL_ADDRESS_BEHAVIOR;"},"_NL_NEIGHBOR_STATE":{"comment":"","exp":"","file":"nldef.h","line":194,"type":"Enum","value":"typedef enum _NL_NEIGHBOR_STATE {\\r\\n    NlnsUnreachable,\\r\\n    NlnsIncomplete,\\r\\n    NlnsProbe,\\r\\n    NlnsDelay,\\r\\n    NlnsStale,\\r\\n    NlnsReachable,\\r\\n    NlnsPermanent,\\r\\n    NlnsMaximum,\\r\\n} NL_NEIGHBOR_STATE, *PNL_NEIGHBOR_STATE;"},"_NL_NETWORK_CATEGORY":{"comment":"","exp":"","file":"nldef.h","line":249,"type":"Enum","value":"typedef enum _NL_NETWORK_CATEGORY {\\r\\n    NetworkCategoryPublic,\\r\\n    NetworkCategoryPrivate,\\r\\n    NetworkCategoryDomainAuthenticated,\\r\\n    NetworkCategoryUnchanged = -1,          \/\/ used in a set operation\\r\\n    NetworkCategoryUnknown = -1             \/\/ returned in a query operation\\r\\n} NL_NETWORK_CATEGORY, *PNL_NETWORK_CATEGORY;"},"_NL_NETWORK_CONNECTIVITY_COST_HINT":{"comment":"","exp":"","file":"nldef.h","line":275,"type":"Enum","value":"typedef enum _NL_NETWORK_CONNECTIVITY_COST_HINT {\\r\\n    NetworkConnectivityCostHintUnknown = 0,\\r\\n    NetworkConnectivityCostHintUnrestricted,\\r\\n    NetworkConnectivityCostHintFixed,\\r\\n    NetworkConnectivityCostHintVariable,\\r\\n} NL_NETWORK_CONNECTIVITY_COST_HINT;"},"_NL_NETWORK_CONNECTIVITY_HINT":{"comment":"","exp":"","file":"nldef.h","line":282,"type":"Struct","value":"typedef struct _NL_NETWORK_CONNECTIVITY_HINT {\\r\\n    NL_NETWORK_CONNECTIVITY_LEVEL_HINT ConnectivityLevel;\\r\\n    \/\/\\r\\n    \/\/ Fields reflecting cost factors.\\r\\n    \/\/\\r\\n    NL_NETWORK_CONNECTIVITY_COST_HINT ConnectivityCost;\\r\\n    BOOLEAN ApproachingDataLimit;\\r\\n    BOOLEAN OverDataLimit;\\r\\n    BOOLEAN Roaming;\\r\\n} NL_NETWORK_CONNECTIVITY_HINT;"},"_NL_NETWORK_CONNECTIVITY_LEVEL_HINT":{"comment":"","exp":"","file":"nldef.h","line":266,"type":"Enum","value":"typedef enum _NL_NETWORK_CONNECTIVITY_LEVEL_HINT {\\r\\n    NetworkConnectivityLevelHintUnknown = 0,\\r\\n    NetworkConnectivityLevelHintNone,\\r\\n    NetworkConnectivityLevelHintLocalAccess,\\r\\n    NetworkConnectivityLevelHintInternetAccess,\\r\\n    NetworkConnectivityLevelHintConstrainedInternetAccess,\\r\\n    NetworkConnectivityLevelHintHidden,\\r\\n} NL_NETWORK_CONNECTIVITY_LEVEL_HINT;"},"_NL_PATH_BANDWIDTH_ROD":{"comment":"","exp":"","file":"nldef.h","line":243,"type":"Struct","value":"typedef struct _NL_PATH_BANDWIDTH_ROD {\\r\\n    ULONG64 Bandwidth;\\r\\n    ULONG64 Instability;\\r\\n    BOOLEAN BandwidthPeaked;\\r\\n} NL_PATH_BANDWIDTH_ROD, *PNL_PATH_BANDWIDTH_ROD;"},"_NL_ROUTER_DISCOVERY_BEHAVIOR":{"comment":"","exp":"","file":"nldef.h","line":230,"type":"Enum","value":"typedef enum _NL_ROUTER_DISCOVERY_BEHAVIOR {\\r\\n    RouterDiscoveryDisabled = 0,\\r\\n    RouterDiscoveryEnabled,\\r\\n    RouterDiscoveryDhcp,\\r\\n    RouterDiscoveryUnchanged = -1\\r\\n} NL_ROUTER_DISCOVERY_BEHAVIOR;"},"_NL_ROUTE_ORIGIN":{"comment":"","exp":"","file":"nldef.h","line":179,"type":"Enum","value":"typedef enum _NL_ROUTE_ORIGIN {\\r\\n    NlroManual,\\r\\n    NlroWellKnown,\\r\\n    NlroDHCP,\\r\\n    NlroRouterAdvertisement,\\r\\n    Nlro6to4,\\r\\n} NL_ROUTE_ORIGIN, *PNL_ROUTE_ORIGIN;"},"_PMTUD_STATE":{"comment":"","exp":"","file":"ws2ipdef.h","line":121,"type":"Enum","value":"typedef enum _PMTUD_STATE {\\r\\n    IP_PMTUDISC_NOT_SET,\\r\\n    IP_PMTUDISC_DO,\\r\\n    IP_PMTUDISC_DONT,\\r\\n    IP_PMTUDISC_PROBE,\\r\\n    IP_PMTUDISC_MAX\\r\\n} PMTUD_STATE, *PPMTUD_STATE;"},"_SOCKET_ADDRESS":{"comment":"","exp":"","file":"ws2def.h","line":258,"type":"Struct","value":"typedef struct _SOCKET_ADDRESS {\\r\\n    _Field_size_bytes_(iSockaddrLength) LPSOCKADDR lpSockaddr;\\r\\n\/\/  ESP: 791.\\r\\n\/\/    _When_(\\r\\n\/\/        lpSockaddr->sa_family == AF_INET,\\r\\n\/\/        _Field_range_(>=, sizeof(SOCKADDR_IN)))\\r\\n\/\/    _When_(\\r\\n\/\/        lpSockaddr->sa_family == AF_INET6,\\r\\n\/\/        _Field_range_(>=, sizeof(SOCKADDR_IN6)))\\r\\n    INT iSockaddrLength;\\r\\n} SOCKET_ADDRESS, *PSOCKET_ADDRESS, *LPSOCKET_ADDRESS;"},"_SOCKET_ADDRESS_LIST":{"comment":"","exp":"","file":"ws2def.h","line":276,"type":"Struct","value":"typedef struct _SOCKET_ADDRESS_LIST {\\r\\n    INT             iAddressCount;\\r\\n    SOCKET_ADDRESS  Address[1];\\r\\n} SOCKET_ADDRESS_LIST, *PSOCKET_ADDRESS_LIST, FAR *LPSOCKET_ADDRESS_LIST;"},"_SOCKET_PROCESSOR_AFFINITY":{"comment":"","exp":"","file":"ws2def.h","line":365,"type":"Struct","value":"typedef struct _SOCKET_PROCESSOR_AFFINITY {\\r\\n    PROCESSOR_NUMBER Processor;\\r\\n    USHORT NumaNodeId;\\r\\n    USHORT Reserved;\\r\\n} SOCKET_PROCESSOR_AFFINITY, *PSOCKET_PROCESSOR_AFFINITY;"},"_SS_ALIGNSIZE":{"comment":"\/\/ Desired alignment","exp":"(sizeof(__int64))","file":"ws2def.h","line":309,"type":"Unknown","value":"(sizeof(__int64))"},"_SS_MAXSIZE":{"comment":"\/\/ Maximum size","exp":"128","file":"ws2def.h","line":308,"type":"Integer","value":128},"_SS_PAD1SIZE":{"comment":"","dupe":[{"comment":"","exp":"(_SS_ALIGNSIZE - sizeof (short))","file":"ws2def.h","line":319,"type":"Unknown","value":"(_SS_ALIGNSIZE - sizeof (short))"}],"exp":"(_SS_ALIGNSIZE - sizeof(USHORT))","file":"ws2def.h","line":316,"type":"Unknown","value":"((sizeof(__int64)) - sizeof)"},"_SS_PAD2SIZE":{"comment":"","dupe":[{"comment":"","exp":"(_SS_MAXSIZE - (sizeof (short) + _SS_PAD1SIZE + _SS_ALIGNSIZE))","file":"ws2def.h","line":320,"type":"Unknown","value":"(_SS_MAXSIZE - (sizeof (short) + _SS_PAD1SIZE + _SS_ALIGNSIZE))"}],"exp":"(_SS_MAXSIZE - (sizeof(USHORT) + _SS_PAD1SIZE + _SS_ALIGNSIZE))","file":"ws2def.h","line":317,"type":"Unknown","value":"(128 - (sizeof + _SS_PAD1SIZE + _SS_ALIGNSIZE))"},"_TCPIP_OWNER_MODULE_BASIC_INFO":{"comment":"","exp":"","file":"Iprtrmib.h","line":183,"type":"Struct","value":"typedef struct _TCPIP_OWNER_MODULE_BASIC_INFO {\\r\\n    PWCHAR pModuleName;\\r\\n    PWCHAR pModulePath;\\r\\n} TCPIP_OWNER_MODULE_BASIC_INFO, *PTCPIP_OWNER_MODULE_BASIC_INFO;"},"_TCPIP_OWNER_MODULE_INFO_CLASS":{"comment":"","exp":"","file":"Iprtrmib.h","line":179,"type":"Enum","value":"typedef enum _TCPIP_OWNER_MODULE_INFO_CLASS {\\r\\n    TCPIP_OWNER_MODULE_INFO_BASIC\\r\\n} TCPIP_OWNER_MODULE_INFO_CLASS, *PTCPIP_OWNER_MODULE_INFO_CLASS;"},"_TCP_BOOLEAN_OPTIONAL":{"comment":"","exp":"","file":"tcpestats.h","line":55,"type":"Enum","value":"typedef enum _TCP_BOOLEAN_OPTIONAL {\\r\\n    TcpBoolOptDisabled = 0,\\r\\n    TcpBoolOptEnabled,\\r\\n    TcpBoolOptUnchanged = -1\\r\\n} TCP_BOOLEAN_OPTIONAL, *PTCP_BOOLEAN_OPTIONAL;"},"_TCP_ESTATS_BANDWIDTH_ROD_v0":{"comment":"","exp":"","file":"tcpestats.h","line":334,"type":"Struct","value":"typedef struct _TCP_ESTATS_BANDWIDTH_ROD_v0 {\\r\\n    ULONG64 OutboundBandwidth;\\r\\n    ULONG64 InboundBandwidth;\\r\\n    ULONG64 OutboundInstability;\\r\\n    ULONG64 InboundInstability;\\r\\n    BOOLEAN OutboundBandwidthPeaked;\\r\\n    BOOLEAN InboundBandwidthPeaked;\\r\\n} TCP_ESTATS_BANDWIDTH_ROD_v0, *PTCP_ESTATS_BANDWIDTH_ROD_v0;"},"_TCP_ESTATS_BANDWIDTH_RW_v0":{"comment":"","exp":"","file":"tcpestats.h","line":321,"type":"Struct","value":"typedef struct _TCP_ESTATS_BANDWIDTH_RW_v0 {\\r\\n    TCP_BOOLEAN_OPTIONAL EnableCollectionOutbound;\\r\\n    TCP_BOOLEAN_OPTIONAL EnableCollectionInbound;\\r\\n} TCP_ESTATS_BANDWIDTH_RW_v0, *PTCP_ESTATS_BANDWIDTH_RW_v0;"},"_TCP_ESTATS_DATA_ROD_v0":{"comment":"","exp":"","file":"tcpestats.h","line":99,"type":"Struct","value":"typedef struct _TCP_ESTATS_DATA_ROD_v0 {\\r\\n    ULONG64 DataBytesOut;\\r\\n    ULONG64 DataSegsOut;\\r\\n    ULONG64 DataBytesIn;\\r\\n    ULONG64 DataSegsIn;\\r\\n    ULONG64 SegsOut;\\r\\n    ULONG64 SegsIn;\\r\\n    ULONG SoftErrors;\\r\\n    ULONG SoftErrorReason;\\r\\n    ULONG SndUna;\\r\\n    ULONG SndNxt;\\r\\n    ULONG SndMax;\\r\\n    ULONG64 ThruBytesAcked;\\r\\n    ULONG RcvNxt;\\r\\n    ULONG64 ThruBytesReceived;\\r\\n} TCP_ESTATS_DATA_ROD_v0, *PTCP_ESTATS_DATA_ROD_v0;"},"_TCP_ESTATS_DATA_RW_v0":{"comment":"","exp":"","file":"tcpestats.h","line":122,"type":"Struct","value":"typedef struct _TCP_ESTATS_DATA_RW_v0 {\\r\\n    BOOLEAN EnableCollection;\\r\\n} TCP_ESTATS_DATA_RW_v0, *PTCP_ESTATS_DATA_RW_v0;"},"_TCP_ESTATS_FINE_RTT_ROD_v0":{"comment":"","exp":"","file":"tcpestats.h","line":361,"type":"Struct","value":"typedef struct _TCP_ESTATS_FINE_RTT_ROD_v0 {\\r\\n    ULONG RttVar;\\r\\n    ULONG MaxRtt;\\r\\n    ULONG MinRtt;\\r\\n    ULONG SumRtt;\\r\\n} TCP_ESTATS_FINE_RTT_ROD_v0, *PTCP_ESTATS_FINE_RTT_ROD_v0;"},"_TCP_ESTATS_FINE_RTT_RW_v0":{"comment":"","exp":"","file":"tcpestats.h","line":350,"type":"Struct","value":"typedef struct _TCP_ESTATS_FINE_RTT_RW_v0 {\\r\\n    BOOLEAN EnableCollection;\\r\\n} TCP_ESTATS_FINE_RTT_RW_v0, *PTCP_ESTATS_FINE_RTT_RW_v0;"},"_TCP_ESTATS_OBS_REC_ROD_v0":{"comment":"","exp":"","file":"tcpestats.h","line":296,"type":"Struct","value":"typedef struct _TCP_ESTATS_OBS_REC_ROD_v0 {\\r\\n    ULONG CurRwinRcvd;\\r\\n    ULONG MaxRwinRcvd;\\r\\n    ULONG MinRwinRcvd;\\r\\n    UCHAR WinScaleRcvd;\\r\\n} TCP_ESTATS_OBS_REC_ROD_v0, *PTCP_ESTATS_OBS_REC_ROD_v0;"},"_TCP_ESTATS_OBS_REC_RW_v0":{"comment":"","exp":"","file":"tcpestats.h","line":310,"type":"Struct","value":"typedef struct _TCP_ESTATS_OBS_REC_RW_v0 {\\r\\n    BOOLEAN EnableCollection;\\r\\n} TCP_ESTATS_OBS_REC_RW_v0, *PTCP_ESTATS_OBS_REC_RW_v0;"},"_TCP_ESTATS_PATH_ROD_v0":{"comment":"","exp":"","file":"tcpestats.h","line":179,"type":"Struct","value":"typedef struct _TCP_ESTATS_PATH_ROD_v0 {\\r\\n    ULONG FastRetran;\\r\\n    ULONG Timeouts;\\r\\n    ULONG SubsequentTimeouts;\\r\\n    ULONG CurTimeoutCount;\\r\\n    ULONG AbruptTimeouts;\\r\\n    ULONG PktsRetrans;\\r\\n    ULONG BytesRetrans;\\r\\n    ULONG DupAcksIn;\\r\\n    ULONG SacksRcvd;\\r\\n    ULONG SackBlocksRcvd;\\r\\n    ULONG CongSignals;\\r\\n    ULONG PreCongSumCwnd;\\r\\n    ULONG PreCongSumRtt;\\r\\n    ULONG PostCongSumRtt;\\r\\n    ULONG PostCongCountRtt;\\r\\n    ULONG EcnSignals;\\r\\n    ULONG EceRcvd;\\r\\n    ULONG SendStall;\\r\\n    ULONG QuenchRcvd;\\r\\n    ULONG RetranThresh;\\r\\n    ULONG SndDupAckEpisodes;\\r\\n    ULONG SumBytesReordered;\\r\\n    ULONG NonRecovDa;\\r\\n    ULONG NonRecovDaEpisodes;\\r\\n    ULONG AckAfterFr;\\r\\n    ULONG DsackDups;\\r\\n    ULONG SampleRtt;\\r\\n    ULONG SmoothedRtt;\\r\\n    ULONG RttVar;\\r\\n    ULONG MaxRtt;\\r\\n    ULONG MinRtt;\\r\\n    ULONG SumRtt;\\r\\n    ULONG CountRtt;\\r\\n    ULONG CurRto;\\r\\n    ULONG MaxRto;\\r\\n    ULONG MinRto;\\r\\n    ULONG CurMss;\\r\\n    ULONG MaxMss;\\r\\n    ULONG MinMss;\\r\\n    ULONG SpuriousRtoDetections;\\r\\n} TCP_ESTATS_PATH_ROD_v0, *PTCP_ESTATS_PATH_ROD_v0;"},"_TCP_ESTATS_PATH_RW_v0":{"comment":"","exp":"","file":"tcpestats.h","line":228,"type":"Struct","value":"typedef struct _TCP_ESTATS_PATH_RW_v0 {\\r\\n    BOOLEAN EnableCollection;\\r\\n} TCP_ESTATS_PATH_RW_v0, *PTCP_ESTATS_PATH_RW_v0;"},"_TCP_ESTATS_REC_ROD_v0":{"comment":"","exp":"","file":"tcpestats.h","line":262,"type":"Struct","value":"typedef struct _TCP_ESTATS_REC_ROD_v0 {\\r\\n    ULONG CurRwinSent;\\r\\n    ULONG MaxRwinSent;\\r\\n    ULONG MinRwinSent;\\r\\n    ULONG LimRwin;\\r\\n    ULONG DupAckEpisodes;\\r\\n    ULONG DupAcksOut;\\r\\n    ULONG CeRcvd;\\r\\n    ULONG EcnSent;\\r\\n    ULONG EcnNoncesRcvd;\\r\\n    ULONG CurReasmQueue;\\r\\n    ULONG MaxReasmQueue;\\r\\n    SIZE_T CurAppRQueue;\\r\\n    SIZE_T MaxAppRQueue;\\r\\n    UCHAR WinScaleSent;\\r\\n} TCP_ESTATS_REC_ROD_v0, *PTCP_ESTATS_REC_ROD_v0;"},"_TCP_ESTATS_REC_RW_v0":{"comment":"","exp":"","file":"tcpestats.h","line":285,"type":"Struct","value":"typedef struct _TCP_ESTATS_REC_RW_v0 {\\r\\n    BOOLEAN EnableCollection;\\r\\n} TCP_ESTATS_REC_RW_v0, *PTCP_ESTATS_REC_RW_v0;"},"_TCP_ESTATS_SEND_BUFF_ROD_v0":{"comment":"","exp":"","file":"tcpestats.h","line":238,"type":"Struct","value":"typedef struct _TCP_ESTATS_SEND_BUFF_ROD_v0 {\\r\\n    SIZE_T CurRetxQueue;\\r\\n    SIZE_T MaxRetxQueue;\\r\\n    SIZE_T CurAppWQueue;\\r\\n    SIZE_T MaxAppWQueue;\\r\\n} TCP_ESTATS_SEND_BUFF_ROD_v0, *PTCP_ESTATS_SEND_BUFF_ROD_v0;"},"_TCP_ESTATS_SEND_BUFF_RW_v0":{"comment":"","exp":"","file":"tcpestats.h","line":251,"type":"Struct","value":"typedef struct _TCP_ESTATS_SEND_BUFF_RW_v0 {\\r\\n    BOOLEAN EnableCollection;\\r\\n} TCP_ESTATS_SEND_BUFF_RW_v0, *PTCP_ESTATS_SEND_BUFF_RW_v0;"},"_TCP_ESTATS_SND_CONG_ROD_v0":{"comment":"","exp":"","file":"tcpestats.h","line":133,"type":"Struct","value":"typedef struct _TCP_ESTATS_SND_CONG_ROD_v0 {\\r\\n    ULONG SndLimTransRwin;\\r\\n    ULONG SndLimTimeRwin;\\r\\n    SIZE_T SndLimBytesRwin;\\r\\n    ULONG SndLimTransCwnd;\\r\\n    ULONG SndLimTimeCwnd;\\r\\n    SIZE_T SndLimBytesCwnd;\\r\\n    ULONG SndLimTransSnd;\\r\\n    ULONG SndLimTimeSnd;\\r\\n    SIZE_T SndLimBytesSnd;\\r\\n    ULONG SlowStart;\\r\\n    ULONG CongAvoid;\\r\\n    ULONG OtherReductions;\\r\\n    ULONG CurCwnd;\\r\\n    ULONG MaxSsCwnd;\\r\\n    ULONG MaxCaCwnd;\\r\\n    ULONG CurSsthresh;\\r\\n    ULONG MaxSsthresh;\\r\\n    ULONG MinSsthresh;\\r\\n} TCP_ESTATS_SND_CONG_ROD_v0, *PTCP_ESTATS_SND_CONG_ROD_v0;"},"_TCP_ESTATS_SND_CONG_ROS_v0":{"comment":"","exp":"","file":"tcpestats.h","line":159,"type":"Struct","value":"typedef struct _TCP_ESTATS_SND_CONG_ROS_v0 {\\r\\n    ULONG LimCwnd;\\r\\n} TCP_ESTATS_SND_CONG_ROS_v0, *PTCP_ESTATS_SND_CONG_ROS_v0;"},"_TCP_ESTATS_SND_CONG_RW_v0":{"comment":"","exp":"","file":"tcpestats.h","line":169,"type":"Struct","value":"typedef struct _TCP_ESTATS_SND_CONG_RW_v0 {\\r\\n    BOOLEAN EnableCollection;\\r\\n} TCP_ESTATS_SND_CONG_RW_v0, *PTCP_ESTATS_SND_CONG_RW_v0;"},"_TCP_ESTATS_SYN_OPTS_ROS_v0":{"comment":"","exp":"","file":"tcpestats.h","line":67,"type":"Struct","value":"typedef struct _TCP_ESTATS_SYN_OPTS_ROS_v0 {\\r\\n    BOOLEAN ActiveOpen;\\r\\n    ULONG MssRcvd;\\r\\n    ULONG MssSent;\\r\\n} TCP_ESTATS_SYN_OPTS_ROS_v0, *PTCP_ESTATS_SYN_OPTS_ROS_v0;"},"_TCP_TABLE_CLASS":{"comment":"","exp":"","file":"Iprtrmib.h","line":161,"type":"Enum","value":"typedef enum _TCP_TABLE_CLASS {\\r\\n    TCP_TABLE_BASIC_LISTENER,\\r\\n    TCP_TABLE_BASIC_CONNECTIONS,\\r\\n    TCP_TABLE_BASIC_ALL,\\r\\n    TCP_TABLE_OWNER_PID_LISTENER,\\r\\n    TCP_TABLE_OWNER_PID_CONNECTIONS,\\r\\n    TCP_TABLE_OWNER_PID_ALL,\\r\\n    TCP_TABLE_OWNER_MODULE_LISTENER,\\r\\n    TCP_TABLE_OWNER_MODULE_CONNECTIONS,\\r\\n    TCP_TABLE_OWNER_MODULE_ALL\\r\\n} TCP_TABLE_CLASS, *PTCP_TABLE_CLASS;"},"_UDP_TABLE_CLASS":{"comment":"","exp":"","file":"Iprtrmib.h","line":173,"type":"Enum","value":"typedef enum _UDP_TABLE_CLASS {\\r\\n    UDP_TABLE_BASIC,\\r\\n    UDP_TABLE_OWNER_PID,\\r\\n    UDP_TABLE_OWNER_MODULE\\r\\n} UDP_TABLE_CLASS, *PUDP_TABLE_CLASS;"},"_WSABUF":{"comment":"","exp":"","file":"ws2def.h","line":689,"type":"Struct","value":"typedef struct _WSABUF {\\r\\n    ULONG len;     \/* the length of the buffer *\/\\r\\n    _Field_size_bytes_(len) CHAR FAR *buf; \/* the pointer to the buffer *\/\\r\\n} WSABUF, FAR * LPWSABUF;"},"_WSACMSGHDR":{"comment":"","dupe":[{"comment":"","exp":"","file":"ws2def.h","line":726,"type":"Struct","value":"typedef struct _WSACMSGHDR {\\r\\n    SIZE_T      cmsg_len;\\r\\n    INT         cmsg_level;\\r\\n    INT         cmsg_type;\\r\\n    \/* followed by UCHAR cmsg_data[] *\/\\r\\n} WSACMSGHDR, *PWSACMSGHDR, FAR *LPWSACMSGHDR;"}],"exp":"cmsghdr","file":"ws2def.h","line":723,"type":"Unknown","value":"cmsghdr"},"_WSAMSG":{"comment":"","exp":"","file":"ws2def.h","line":698,"type":"Struct","value":"typedef struct _WSAMSG {\\r\\n    _Field_size_bytes_(namelen) LPSOCKADDR       name;              \/* Remote address *\/\\r\\n    INT              namelen;           \/* Remote address length *\/\\r\\n    LPWSABUF         lpBuffers;         \/* Data buffer array *\/\\r\\n#if(_WIN32_WINNT >= 0x0600)\\r\\n    ULONG            dwBufferCount;     \/* Number of elements in the array *\/\\r\\n#else\\r\\n    DWORD            dwBufferCount;     \/* Number of elements in the array *\/\\r\\n#endif \/\/(_WIN32_WINNT>=0x0600)\\r\\n    WSABUF           Control;           \/* Control buffer *\/\\r\\n#if(_WIN32_WINNT >= 0x0600)\\r\\n    ULONG            dwFlags;           \/* Flags *\/\\r\\n#else\\r\\n    DWORD            dwFlags;           \/* Flags *\/\\r\\n#endif \/\/(_WIN32_WINNT>=0x0600)\\r\\n} WSAMSG, *PWSAMSG, * FAR LPWSAMSG;"},"_sockaddr_in6_pair":{"comment":"","exp":"","file":"ws2ipdef.h","line":232,"type":"Struct","value":"typedef struct _sockaddr_in6_pair\\r\\n{\\r\\n    PSOCKADDR_IN6 SourceAddress;\\r\\n    PSOCKADDR_IN6 DestinationAddress;\\r\\n} SOCKADDR_IN6_PAIR, *PSOCKADDR_IN6_PAIR;"},"addrinfo":{"comment":"","exp":"","file":"ws2def.h","line":904,"type":"Struct","value":"typedef struct addrinfo\\r\\n{\\r\\n    int                 ai_flags;       \/\/ AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST\\r\\n    int                 ai_family;      \/\/ PF_xxx\\r\\n    int                 ai_socktype;    \/\/ SOCK_xxx\\r\\n    int                 ai_protocol;    \/\/ 0 or IPPROTO_xxx for IPv4 and IPv6\\r\\n    size_t              ai_addrlen;     \/\/ Length of ai_addr\\r\\n    char *              ai_canonname;   \/\/ Canonical name for nodename\\r\\n    _Field_size_bytes_(ai_addrlen) struct sockaddr *   ai_addr;        \/\/ Binary address\\r\\n    struct addrinfo *   ai_next;        \/\/ Next structure in linked list\\r\\n}\\r\\nADDRINFOA, *PADDRINFOA;"},"addrinfoW":{"comment":"","exp":"","file":"ws2def.h","line":917,"type":"Struct","value":"typedef struct addrinfoW\\r\\n{\\r\\n    int                 ai_flags;       \/\/ AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST\\r\\n    int                 ai_family;      \/\/ PF_xxx\\r\\n    int                 ai_socktype;    \/\/ SOCK_xxx\\r\\n    int                 ai_protocol;    \/\/ 0 or IPPROTO_xxx for IPv4 and IPv6\\r\\n    size_t              ai_addrlen;     \/\/ Length of ai_addr\\r\\n    PWSTR               ai_canonname;   \/\/ Canonical name for nodename\\r\\n    _Field_size_bytes_(ai_addrlen) struct sockaddr *   ai_addr;        \/\/ Binary address\\r\\n    struct addrinfoW *  ai_next;        \/\/ Next structure in linked list\\r\\n}\\r\\nADDRINFOW, *PADDRINFOW;"},"addrinfoex2W":{"comment":"","exp":"","file":"ws2def.h","line":995,"type":"Struct","value":"typedef struct addrinfoex2W\\r\\n{\\r\\n    int                  ai_flags;       \/\/ AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST\\r\\n    int                  ai_family;      \/\/ PF_xxx\\r\\n    int                  ai_socktype;    \/\/ SOCK_xxx\\r\\n    int                  ai_protocol;    \/\/ 0 or IPPROTO_xxx for IPv4 and IPv6\\r\\n    size_t               ai_addrlen;     \/\/ Length of ai_addr\\r\\n    PWSTR                ai_canonname;   \/\/ Canonical name for nodename\\r\\n    _Field_size_bytes_(ai_addrlen) struct sockaddr    *ai_addr;        \/\/ Binary address\\r\\n    _Field_size_(ai_bloblen) void               *ai_blob;\\r\\n    size_t               ai_bloblen;\\r\\n    LPGUID               ai_provider;\\r\\n    struct addrinfoex2W *ai_next;        \/\/ Next structure in linked list\\r\\n    int                  ai_version;\\r\\n    PWSTR                ai_fqdn;\\r\\n} ADDRINFOEX2W, *PADDRINFOEX2W, *LPADDRINFOEX2W;"},"addrinfoex3":{"comment":"","exp":"","file":"ws2def.h","line":1012,"type":"Struct","value":"typedef struct addrinfoex3\\r\\n{\\r\\n    int                  ai_flags;       \/\/ AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST\\r\\n    int                  ai_family;      \/\/ PF_xxx\\r\\n    int                  ai_socktype;    \/\/ SOCK_xxx\\r\\n    int                  ai_protocol;    \/\/ 0 or IPPROTO_xxx for IPv4 and IPv6\\r\\n    size_t               ai_addrlen;     \/\/ Length of ai_addr\\r\\n    PWSTR                ai_canonname;   \/\/ Canonical name for nodename\\r\\n    _Field_size_bytes_(ai_addrlen) struct sockaddr    *ai_addr;        \/\/ Binary address\\r\\n    _Field_size_(ai_bloblen) void               *ai_blob;\\r\\n    size_t               ai_bloblen;\\r\\n    LPGUID                 ai_provider;\\r\\n    struct addrinfoex3   *ai_next;        \/\/ Next structure in linked list\\r\\n    int                  ai_version;\\r\\n    PWSTR                ai_fqdn;\\r\\n    int                  ai_interfaceindex;\\r\\n} ADDRINFOEX3, *PADDRINFOEX3, *LPADDRINFOEX3;"},"addrinfoex4":{"comment":"","exp":"","file":"ws2def.h","line":1030,"type":"Struct","value":"typedef struct addrinfoex4\\r\\n{\\r\\n    int                  ai_flags;       \/\/ AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST\\r\\n    int                  ai_family;      \/\/ PF_xxx\\r\\n    int                  ai_socktype;    \/\/ SOCK_xxx\\r\\n    int                  ai_protocol;    \/\/ 0 or IPPROTO_xxx for IPv4 and IPv6\\r\\n    size_t               ai_addrlen;     \/\/ Length of ai_addr\\r\\n    PWSTR                ai_canonname;   \/\/ Canonical name for nodename\\r\\n    _Field_size_bytes_(ai_addrlen) struct sockaddr    *ai_addr;        \/\/ Binary address\\r\\n    _Field_size_(ai_bloblen) void               *ai_blob;\\r\\n    size_t               ai_bloblen;\\r\\n    GUID                 *ai_provider;\\r\\n    struct addrinfoex4   *ai_next;        \/\/ Next structure in linked list\\r\\n    int                  ai_version;\\r\\n    PWSTR                ai_fqdn;\\r\\n    int                  ai_interfaceindex;\\r\\n    HANDLE               ai_resolutionhandle;\\r\\n} ADDRINFOEX4, *PADDRINFOEX4, *LPADDRINFOEX4;"},"addrinfoexW":{"comment":"","exp":"","file":"ws2def.h","line":951,"type":"Struct","value":"typedef struct addrinfoexW\\r\\n{\\r\\n    int                 ai_flags;       \/\/ AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST\\r\\n    int                 ai_family;      \/\/ PF_xxx\\r\\n    int                 ai_socktype;    \/\/ SOCK_xxx\\r\\n    int                 ai_protocol;    \/\/ 0 or IPPROTO_xxx for IPv4 and IPv6\\r\\n    size_t              ai_addrlen;     \/\/ Length of ai_addr\\r\\n    PWSTR               ai_canonname;   \/\/ Canonical name for nodename\\r\\n    _Field_size_bytes_(ai_addrlen) struct sockaddr    *ai_addr;        \/\/ Binary address\\r\\n    _Field_size_(ai_bloblen) void               *ai_blob;\\r\\n    size_t              ai_bloblen;\\r\\n    LPGUID              ai_provider;\\r\\n    struct addrinfoexW *ai_next;        \/\/ Next structure in linked list\\r\\n} ADDRINFOEXW, *PADDRINFOEXW, *LPADDRINFOEXW;"},"arp_send_reply":{"comment":"","exp":"","file":"IPExport.h","line":126,"type":"Struct","value":"typedef struct arp_send_reply {\\r\\n    IPAddr  DestAddress;\\r\\n    IPAddr  SrcAddress;\\r\\n} ARP_SEND_REPLY, *PARP_SEND_REPLY;"},"group_filter":{"comment":"","exp":"","file":"ws2ipdef.h","line":860,"type":"Struct","value":"typedef struct group_filter {\\r\\n    ULONG gf_interface;         \/\/ Interface index.\\r\\n    SOCKADDR_STORAGE gf_group;  \/\/ Multicast address.\\r\\n    MULTICAST_MODE_TYPE gf_fmode; \/\/ Filter mode.\\r\\n    ULONG gf_numsrc;            \/\/ Number of sources.\\r\\n    SOCKADDR_STORAGE gf_slist[1]; \/\/ Source address.\\r\\n} GROUP_FILTER, *PGROUP_FILTER;"},"group_req":{"comment":"","exp":"","file":"ws2ipdef.h","line":841,"type":"Struct","value":"typedef struct group_req {\\r\\n    ULONG gr_interface;         \/\/ Interface index.\\r\\n    SOCKADDR_STORAGE gr_group;  \/\/ Multicast address.\\r\\n} GROUP_REQ, *PGROUP_REQ;"},"group_source_req":{"comment":"","exp":"","file":"ws2ipdef.h","line":850,"type":"Struct","value":"typedef struct group_source_req {\\r\\n    ULONG gsr_interface;        \/\/ Interface index.\\r\\n    SOCKADDR_STORAGE gsr_group; \/\/ Group address.\\r\\n    SOCKADDR_STORAGE gsr_source; \/\/ Source address.\\r\\n} GROUP_SOURCE_REQ, *PGROUP_SOURCE_REQ;"},"icmp_echo_reply":{"comment":"","exp":"","file":"IPExport.h","line":79,"type":"Struct","value":"typedef struct icmp_echo_reply {\\r\\n    IPAddr  Address;            \/\/ Replying address\\r\\n    ULONG   Status;             \/\/ Reply IP_STATUS\\r\\n    ULONG   RoundTripTime;      \/\/ RTT in milliseconds\\r\\n    USHORT  DataSize;           \/\/ Reply data size in bytes\\r\\n    USHORT  Reserved;           \/\/ Reserved for system use\\r\\n    _Field_size_bytes_(DataSize)\\r\\n    PVOID   Data;               \/\/ Pointer to the reply data\\r\\n    struct ip_option_information Options; \/\/ Reply options\\r\\n} ICMP_ECHO_REPLY, *PICMP_ECHO_REPLY;"},"icmp_echo_reply32":{"comment":"","exp":"","file":"IPExport.h","line":92,"type":"Struct","value":"typedef struct icmp_echo_reply32 {\\r\\n    IPAddr  Address;\\r\\n    ULONG   Status;\\r\\n    ULONG   RoundTripTime;\\r\\n    USHORT  DataSize;\\r\\n    USHORT  Reserved;\\r\\n    VOID * POINTER_32 Data;\\r\\n    struct ip_option_information32 Options;\\r\\n} ICMP_ECHO_REPLY32, *PICMP_ECHO_REPLY32;"},"icmp_error_info":{"comment":"","exp":"","file":"ws2ipdef.h","line":979,"type":"Struct","value":"typedef struct icmp_error_info {\\r\\n    SOCKADDR_INET srcaddress;\\r\\n    IPPROTO protocol;\\r\\n    UINT8 type;\\r\\n    UINT8 code;\\r\\n} ICMP_ERROR_INFO, *PICMP_ERROR_INFO;"},"icmpv6_echo_reply_lh":{"comment":"","exp":"","file":"IPExport.h","line":114,"type":"Struct","value":"typedef struct icmpv6_echo_reply_lh {\\r\\n    IPV6_ADDRESS_EX Address;    \/\/ Replying address.\\r\\n    ULONG Status;               \/\/ Reply IP_STATUS.\\r\\n    unsigned int RoundTripTime; \/\/ RTT in milliseconds.\\r\\n    \/\/ Reply data follows this structure in memory.\\r\\n} ICMPV6_ECHO_REPLY_LH, *PICMPV6_ECHO_REPLY_LH;"},"in6_pktinfo":{"comment":"","exp":"","file":"ws2ipdef.h","line":886,"type":"Struct","value":"typedef struct in6_pktinfo {\\r\\n    IN6_ADDR ipi6_addr;    \/\/ Source\/destination IPv6 address.\\r\\n    ULONG ipi6_ifindex;    \/\/ Send\/receive interface index.\\r\\n} IN6_PKTINFO, *PIN6_PKTINFO;"},"in6_pktinfo_ex":{"comment":"","exp":"","file":"ws2ipdef.h","line":906,"type":"Struct","value":"typedef struct in6_pktinfo_ex {\\r\\n    IN6_PKTINFO pkt_info;\\r\\n    SCOPE_ID scope_id;\\r\\n} IN6_PKTINFO_EX, *PIN6_PKTINFO_EX;"},"in_addr":{"comment":"","exp":"","file":"inaddr.h","line":25,"type":"Struct","value":"typedef struct in_addr {\\r\\n        union {\\r\\n                struct { UCHAR s_b1,s_b2,s_b3,s_b4; } S_un_b;\\r\\n                struct { USHORT s_w1,s_w2; } S_un_w;\\r\\n                ULONG S_addr;\\r\\n        } S_un;\\r\\n#define s_addr  S_un.S_addr \/* can be used for most tcp & ip code *\/\\r\\n#define s_host  S_un.S_un_b.s_b2    \/\/ host on imp\\r\\n#define s_net   S_un.S_un_b.s_b1    \/\/ network\\r\\n#define s_imp   S_un.S_un_w.s_w2    \/\/ imp\\r\\n#define s_impno S_un.S_un_b.s_b4    \/\/ imp #\\r\\n#define s_lh    S_un.S_un_b.s_b3    \/\/ logical host\\r\\n} IN_ADDR, *PIN_ADDR, FAR *LPIN_ADDR;"},"in_pktinfo":{"comment":"","exp":"","file":"ws2ipdef.h","line":876,"type":"Struct","value":"typedef struct in_pktinfo {\\r\\n    IN_ADDR ipi_addr;     \/\/ Source\/destination IPv4 address.\\r\\n    ULONG ipi_ifindex;    \/\/ Send\/receive interface index.\\r\\n} IN_PKTINFO, *PIN_PKTINFO;"},"in_pktinfo_ex":{"comment":"","exp":"","file":"ws2ipdef.h","line":896,"type":"Struct","value":"typedef struct in_pktinfo_ex {\\r\\n    IN_PKTINFO pkt_info;\\r\\n    SCOPE_ID scope_id;\\r\\n} IN_PKTINFO_EX, *PIN_PKTINFO_EX;"},"in_recverr":{"comment":"","exp":"","file":"ws2ipdef.h","line":916,"type":"Struct","value":"typedef struct in_recverr {\\r\\n    IPPROTO protocol;   \/\/ IPPROTO_ICMP or IPPROTO_ICMPV6.\\r\\n    ULONG info;         \/\/ MTU if frag needed or pkt too big message.\\r\\n    UINT8 type;\\r\\n    UINT8 code;\\r\\n} IN_RECVERR, *PIN_RECVERR;"},"ip_interface_name_info_w2ksp1":{"comment":"","exp":"","file":"IPTypes.h","line":456,"type":"Struct","value":"typedef struct ip_interface_name_info_w2ksp1 {\\r\\n    ULONG           Index;      \/\/ Interface Index\\r\\n    ULONG           MediaType;  \/\/ Interface Types - see ipifcons.h\\r\\n    UCHAR           ConnectionType;\\r\\n    UCHAR           AccessType;\\r\\n    GUID            DeviceGuid; \/\/ Device GUID is the guid of the device\\r\\n                                \/\/ that IP exposes\\r\\n    GUID            InterfaceGuid; \/\/ Interface GUID, if not GUID_NULL is the\\r\\n                                \/\/ GUID for the interface mapped to the device.\\r\\n} IP_INTERFACE_NAME_INFO_W2KSP1, *PIP_INTERFACE_NAME_INFO_W2KSP1;"},"ip_mreq":{"comment":"","exp":"","file":"ws2ipdef.h","line":740,"type":"Struct","value":"typedef struct ip_mreq {\\r\\n    IN_ADDR imr_multiaddr;  \/\/ IP multicast address of group.\\r\\n    IN_ADDR imr_interface;  \/\/ Local IP address of interface.\\r\\n} IP_MREQ, *PIP_MREQ;"},"ip_mreq_source":{"comment":"","exp":"","file":"ws2ipdef.h","line":749,"type":"Struct","value":"typedef struct ip_mreq_source {\\r\\n    IN_ADDR imr_multiaddr;  \/\/ IP multicast address of group.\\r\\n    IN_ADDR imr_sourceaddr; \/\/ IP address of source.\\r\\n    IN_ADDR imr_interface;  \/\/ Local IP address of interface.\\r\\n} IP_MREQ_SOURCE, *PIP_MREQ_SOURCE;"},"ip_msfilter":{"comment":"","exp":"","file":"ws2ipdef.h","line":758,"type":"Struct","value":"typedef struct ip_msfilter {\\r\\n    IN_ADDR imsf_multiaddr;  \/\/ IP multicast address of group.\\r\\n    IN_ADDR imsf_interface;  \/\/ Local IP address of interface.\\r\\n    MULTICAST_MODE_TYPE imsf_fmode;        \/\/ Filter mode.\\r\\n    ULONG imsf_numsrc;       \/\/ Number of sources in src_list.\\r\\n    IN_ADDR imsf_slist[1];   \/\/ Start of source list.\\r\\n} IP_MSFILTER, *PIP_MSFILTER;"},"ip_option_information":{"comment":"","exp":"","file":"IPExport.h","line":53,"type":"Struct","value":"typedef struct ip_option_information {\\r\\n    UCHAR   Ttl;                \/\/ Time To Live\\r\\n    UCHAR   Tos;                \/\/ Type Of Service\\r\\n    UCHAR   Flags;              \/\/ IP header flags\\r\\n    UCHAR   OptionsSize;        \/\/ Size in bytes of options data\\r\\n    _Field_size_bytes_(OptionsSize)\\r\\n    PUCHAR  OptionsData;        \/\/ Pointer to options data\\r\\n} IP_OPTION_INFORMATION, *PIP_OPTION_INFORMATION;"},"ip_option_information32":{"comment":"","exp":"","file":"IPExport.h","line":64,"type":"Struct","value":"typedef struct ip_option_information32 {\\r\\n    UCHAR   Ttl;\\r\\n    UCHAR   Tos;\\r\\n    UCHAR   Flags;\\r\\n    UCHAR   OptionsSize;\\r\\n    UCHAR * POINTER_32 OptionsData;\\r\\n} IP_OPTION_INFORMATION32, *PIP_OPTION_INFORMATION32;"},"ipv6_mreq":{"comment":"","exp":"","file":"ws2ipdef.h","line":831,"type":"Struct","value":"typedef struct ipv6_mreq {\\r\\n    IN6_ADDR ipv6mr_multiaddr;  \/\/ IPv6 multicast address.\\r\\n    ULONG ipv6mr_interface;     \/\/ Interface index.\\r\\n} IPV6_MREQ, *PIPV6_MREQ;"},"sockaddr":{"comment":"","exp":"","file":"ws2def.h","line":240,"type":"Struct","value":"typedef struct sockaddr {\\r\\n#if (_WIN32_WINNT < 0x0600)\\r\\n    u_short sa_family;\\r\\n#else\\r\\n    ADDRESS_FAMILY sa_family;           \/\/ Address family.\\r\\n#endif \/\/(_WIN32_WINNT < 0x0600)\\r\\n    CHAR sa_data[14];                   \/\/ Up to 14 bytes of direct address.\\r\\n} SOCKADDR, *PSOCKADDR, FAR *LPSOCKADDR;"},"sockaddr_dl":{"comment":"","exp":"","file":"ws2def.h","line":663,"type":"Struct","value":"typedef struct sockaddr_dl {\\r\\n    ADDRESS_FAMILY sdl_family;\\r\\n    UCHAR sdl_data[8];\\r\\n    UCHAR sdl_zero[4];\\r\\n} SOCKADDR_DL, *PSOCKADDR_DL;"},"sockaddr_in":{"comment":"","exp":"","file":"ws2def.h","line":638,"type":"Struct","value":"typedef struct sockaddr_in {\\r\\n#if(_WIN32_WINNT < 0x0600)\\r\\n    short   sin_family;\\r\\n#else \/\/(_WIN32_WINNT < 0x0600)\\r\\n    ADDRESS_FAMILY sin_family;\\r\\n#endif \/\/(_WIN32_WINNT < 0x0600)\\r\\n    USHORT sin_port;\\r\\n    IN_ADDR sin_addr;\\r\\n    CHAR sin_zero[8];\\r\\n} SOCKADDR_IN, *PSOCKADDR_IN;"},"sockaddr_in6":{"comment":"","exp":"","file":"ws2ipdef.h","line":190,"type":"Struct","value":"typedef struct sockaddr_in6 {\\r\\n    ADDRESS_FAMILY sin6_family; \/\/ AF_INET6.\\r\\n    USHORT sin6_port;           \/\/ Transport level port number.\\r\\n    ULONG  sin6_flowinfo;       \/\/ IPv6 flow information.\\r\\n    IN6_ADDR sin6_addr;         \/\/ IPv6 address.\\r\\n    union {\\r\\n        ULONG sin6_scope_id;     \/\/ Set of interfaces for a scope.\\r\\n        SCOPE_ID sin6_scope_struct;\\r\\n    };\\r\\n} SOCKADDR_IN6_LH, *PSOCKADDR_IN6_LH, FAR *LPSOCKADDR_IN6_LH;"},"sockaddr_in6_old":{"comment":"","exp":"","file":"ws2ipdef.h","line":72,"type":"Struct","value":"struct sockaddr_in6_old {\\r\\n    SHORT sin6_family;          \/\/ AF_INET6.\\r\\n    USHORT sin6_port;           \/\/ Transport level port number.\\r\\n    ULONG sin6_flowinfo;        \/\/ IPv6 flow information.\\r\\n    IN6_ADDR sin6_addr;         \/\/ IPv6 address.\\r\\n};"},"sockaddr_in6_w2ksp1":{"comment":"","exp":"","file":"ws2ipdef.h","line":201,"type":"Struct","value":"typedef struct sockaddr_in6_w2ksp1 {\\r\\n    short   sin6_family;        \/* AF_INET6 *\/\\r\\n    USHORT sin6_port;          \/* Transport level port number *\/\\r\\n    ULONG  sin6_flowinfo;      \/* IPv6 flow information *\/\\r\\n    struct in6_addr sin6_addr;  \/* IPv6 address *\/\\r\\n    ULONG sin6_scope_id;       \/* set of interfaces for a scope *\/\\r\\n} SOCKADDR_IN6_W2KSP1, *PSOCKADDR_IN6_W2KSP1, FAR *LPSOCKADDR_IN6_W2KSP1;"},"sockaddr_storage":{"comment":"","exp":"","file":"ws2def.h","line":324,"type":"Struct","value":"typedef struct sockaddr_storage {\\r\\n    ADDRESS_FAMILY ss_family;      \/\/ address family\\r\\n    CHAR __ss_pad1[_SS_PAD1SIZE];  \/\/ 6 byte pad, this is to make\\r\\n                                   \/\/   implementation specific pad up to\\r\\n                                   \/\/   alignment field that follows explicit\\r\\n                                   \/\/   in the data structure\\r\\n    __int64 __ss_align;            \/\/ Field to force desired structure\\r\\n    CHAR __ss_pad2[_SS_PAD2SIZE];  \/\/ 112 byte pad to achieve desired size;\\r\\n                                   \/\/   _SS_MAXSIZE value minus size of\\r\\n                                   \/\/   ss_family, __ss_pad1, and\\r\\n                                   \/\/   __ss_align fields is 112\\r\\n} SOCKADDR_STORAGE_LH, *PSOCKADDR_STORAGE_LH, FAR *LPSOCKADDR_STORAGE_LH;"},"sockaddr_storage_xp":{"comment":"","exp":"","file":"ws2def.h","line":340,"type":"Struct","value":"typedef struct sockaddr_storage_xp {\\r\\n    short ss_family;               \/\/ Address family.\\r\\n    CHAR __ss_pad1[_SS_PAD1SIZE];  \/\/ 6 byte pad, this is to make\\r\\n                                   \/\/   implementation specific pad up to\\r\\n                                   \/\/   alignment field that follows explicit\\r\\n                                   \/\/   in the data structure\\r\\n    __int64 __ss_align;            \/\/ Field to force desired structure\\r\\n    CHAR __ss_pad2[_SS_PAD2SIZE];  \/\/ 112 byte pad to achieve desired size;\\r\\n                                   \/\/   _SS_MAXSIZE value minus size of\\r\\n                                   \/\/   ss_family, __ss_pad1, and\\r\\n                                   \/\/   __ss_align fields is 112\\r\\n} SOCKADDR_STORAGE_XP, *PSOCKADDR_STORAGE_XP, FAR *LPSOCKADDR_STORAGE_XP;"},"tcp_reserve_port_range":{"comment":"","exp":"","file":"IPExport.h","line":131,"type":"Struct","value":"typedef struct tcp_reserve_port_range {\\r\\n    USHORT  UpperRange;\\r\\n    USHORT  LowerRange;\\r\\n} TCP_RESERVE_PORT_RANGE, *PTCP_RESERVE_PORT_RANGE;"}},"__includes_list":{"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|Iprtrmib.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["mprapidef.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\mprapidef.h"],["ipifcons.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ipifcons.h"],["ipmib.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ipmib.h"],["tcpmib.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\tcpmib.h"],["udpmib.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\udpmib.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|ifdef.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["ipifcons.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ipifcons.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|ip2string.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|netioapi.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["ws2def.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ws2def.h"],["ws2ipdef.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ws2ipdef.h"],["ifdef.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ifdef.h"],["nldef.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\nldef.h"],["ntddndis.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ntddndis.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|nldef.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|tcpestats.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|ws2def.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["ipv6prefast.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ipv6prefast.h"],["inaddr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\inaddr.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|ws2ipdef.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["in6addr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\in6addr.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|IPExport.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["in6addr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\in6addr.h"],["inaddr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\inaddr.h"],["packon.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\packon.h"],["packoff.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\packoff.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|IPTypes.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["time.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\ucrt\\time.h"],["ifdef.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ifdef.h"],["nldef.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\nldef.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|IcmpAPI.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|iphlpapi.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["iprtrmib.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\Iprtrmib.h"],["ipexport.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\IPExport.h"],["iptypes.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\IPTypes.h"],["tcpestats.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\tcpestats.h"],["netioapi.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\netioapi.h"]]}}