{"__const_list":{"AEC_INPUT_STREAM":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3717,"type":"Enum","value":"typedef\\r\\nenum AEC_INPUT_STREAM\\r\\n    {\\r\\n        AEC_CAPTURE_STREAM\\t= 0,\\r\\n        AEC_REFERENCE_STREAM\\t= 1\\r\\n    } \\tAEC_INPUT_STREAM;"},"AEC_MAX_SYSTEM_MODES":{"comment":"","exp":"6","file":"wmcodecdsp.h","line":3672,"type":"Integer","value":6},"AEC_SYSTEM_MODE":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3673,"type":"Enum","value":"typedef\\r\\nenum AEC_SYSTEM_MODE\\r\\n    {\\r\\n        SINGLE_CHANNEL_AEC\\t= 0,\\r\\n        ADAPTIVE_ARRAY_ONLY\\t= ( SINGLE_CHANNEL_AEC + 1 ) ,\\r\\n        OPTIBEAM_ARRAY_ONLY\\t= ( ADAPTIVE_ARRAY_ONLY + 1 ) ,\\r\\n        ADAPTIVE_ARRAY_AND_AEC\\t= ( OPTIBEAM_ARRAY_ONLY + 1 ) ,\\r\\n        OPTIBEAM_ARRAY_AND_AEC\\t= ( ADAPTIVE_ARRAY_AND_AEC + 1 ) ,\\r\\n        SINGLE_CHANNEL_NSAGC\\t= ( OPTIBEAM_ARRAY_AND_AEC + 1 ) ,\\r\\n        MODE_NOT_SET\\t= ( SINGLE_CHANNEL_NSAGC + 1 ) \\r\\n    } \\tAEC_SYSTEM_MODE;"},"AEC_VAD_MODE":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3708,"type":"Enum","value":"typedef\\r\\nenum AEC_VAD_MODE\\r\\n    {\\r\\n        AEC_VAD_DISABLED\\t= 0,\\r\\n        AEC_VAD_NORMAL\\t= ( AEC_VAD_DISABLED + 1 ) ,\\r\\n        AEC_VAD_FOR_AGC\\t= ( AEC_VAD_NORMAL + 1 ) ,\\r\\n        AEC_VAD_FOR_SILENCE_SUPPRESSION\\t= ( AEC_VAD_FOR_AGC + 1 ) \\r\\n    } \\tAEC_VAD_MODE;"},"ASF_MUX_STATISTICS":{"comment":"","exp":"","file":"wmcontainer.h","line":2023,"type":"Struct","value":"typedef struct ASF_MUX_STATISTICS\\r\\n    {\\r\\n    DWORD cFramesWritten;\\r\\n    DWORD cFramesDropped;\\r\\n    } \\tASF_MUX_STATISTICS;"},"ASF_SELECTION_STATUS":{"comment":"","exp":"","file":"wmcontainer.h","line":2219,"type":"Enum","value":"typedef\\r\\nenum ASF_SELECTION_STATUS\\r\\n    {\\r\\n        ASF_STATUS_NOTSELECTED\\t= 0,\\r\\n        ASF_STATUS_CLEANPOINTSONLY\\t= 1,\\r\\n        ASF_STATUS_ALLDATAUNITS\\t= 2\\r\\n    } \\tASF_SELECTION_STATUS;"},"ASF_STATUSFLAGS":{"comment":"","exp":"","file":"wmcontainer.h","line":2009,"type":"Enum","value":"typedef\\r\\nenum ASF_STATUSFLAGS\\r\\n    {\\r\\n        ASF_STATUSFLAGS_INCOMPLETE\\t= 0x1,\\r\\n        ASF_STATUSFLAGS_NONFATAL_ERROR\\t= 0x2\\r\\n    } \\tASF_STATUSFLAGS;"},"AVENC_H263V_LEVELCOUNT":{"comment":"","exp":"8","file":"codecapi.h","line":1273,"type":"Integer","value":8},"AVENC_H264V_LEVELCOUNT":{"comment":"","exp":"16","file":"codecapi.h","line":1287,"type":"Integer","value":16},"AVENC_H264V_MAX_MBBITS":{"comment":"\/\/Only applies to Baseline, Main, Extended profiles","exp":"3200","file":"codecapi.h","line":1288,"type":"Integer","value":3200},"AddInputStreams":{"comment":"","exp":"MFTAddInputStreams","file":"mftransform.h","line":210,"type":"Unknown","value":"MFTAddInputStreams"},"BASSMGMT_MODE_KEY_GUID":{"comment":"","exp":"(MFPKEY_CORR_BASS_MANAGEMENT_MODE.fmtid)","file":"wmcodecdsp.h","line":3081,"type":"Unknown","value":"(MFPKEY_CORR_BASS_MANAGEMENT_MODE.fmtid)"},"BIG_ROOM_KEY_GUID":{"comment":"","exp":"(MFPKEY_BASSMGMT_BIGROOM.fmtid)","file":"wmcodecdsp.h","line":3074,"type":"Unknown","value":"(MFPKEY_BASSMGMT_BIGROOM.fmtid)"},"BOOST_LEVEL_KEY_GUID":{"comment":"","exp":"(MFPKEY_BASS_BOOST_AMOUNT.fmtid)","file":"wmcodecdsp.h","line":3091,"type":"Unknown","value":"(MFPKEY_BASS_BOOST_AMOUNT.fmtid)"},"COPP_DefaultProtectionLevel":{"comment":"","exp":"0","file":"dxva9typ.h","line":803,"type":"Integer","value":0},"COPP_ImageAspectRatio_EN300294_Mask":{"comment":"","exp":"0x00000007","file":"dxva9typ.h","line":858,"type":"Integer","value":7},"COPP_NoProtectionLevelAvailable":{"comment":"","exp":"-1","file":"dxva9typ.h","line":802,"type":"Integer","value":-1},"CROSSOVER_FREQ_KEY_GUID":{"comment":"","exp":"(MFPKEY_BASSMGMT_CROSSOVER_FREQ.fmtid)","file":"wmcodecdsp.h","line":3070,"type":"Unknown","value":"(MFPKEY_BASSMGMT_CROSSOVER_FREQ.fmtid)"},"CodecAPIEventData":{"comment":"","exp":"","file":"icodecapi.h","line":64,"type":"Struct","value":"struct CodecAPIEventData\\r\\n    {\\r\\n    GUID guid;\\r\\n    DWORD dataLength;\\r\\n    DWORD reserved[ 3 ];\\r\\n    } ;"},"D3DFMT_A16B16G16R16F":{"comment":"","exp":"113","file":"mfapi.h","line":2123,"type":"Integer","value":113},"D3DFMT_A2B10G10R10":{"comment":"","exp":"31","file":"mfapi.h","line":2118,"type":"Integer","value":31},"D3DFMT_A8R8G8B8":{"comment":"","exp":"21","file":"mfapi.h","line":2114,"type":"Integer","value":21},"D3DFMT_D16":{"comment":"","exp":"80","file":"mfapi.h","line":2121,"type":"Integer","value":80},"D3DFMT_L16":{"comment":"","exp":"81","file":"mfapi.h","line":2122,"type":"Integer","value":81},"D3DFMT_L8":{"comment":"","exp":"50","file":"mfapi.h","line":2120,"type":"Integer","value":50},"D3DFMT_P8":{"comment":"","exp":"41","file":"mfapi.h","line":2119,"type":"Integer","value":41},"D3DFMT_R5G6B5":{"comment":"","exp":"23","file":"mfapi.h","line":2116,"type":"Integer","value":23},"D3DFMT_R8G8B8":{"comment":"","exp":"20","file":"mfapi.h","line":2113,"type":"Integer","value":20},"D3DFMT_X1R5G5B5":{"comment":"","exp":"24","file":"mfapi.h","line":2117,"type":"Integer","value":24},"D3DFMT_X8R8G8B8":{"comment":"","exp":"22","file":"mfapi.h","line":2115,"type":"Integer","value":22},"DEVICE_INFO":{"comment":"","exp":"","file":"mfsharingengine.h","line":114,"type":"Struct","value":"typedef struct DEVICE_INFO\\r\\n    {\\r\\n    BSTR pFriendlyDeviceName;\\r\\n    BSTR pUniqueDeviceName;\\r\\n    BSTR pManufacturerName;\\r\\n    BSTR pModelName;\\r\\n    BSTR pIconURL;\\r\\n    } \\tDEVICE_INFO;"},"DIRECT3D_VERSION":{"comment":"","exp":"0x0900","file":"dxva9typ.h","line":19,"type":"Integer","value":2304},"DXVA2_DECODE_GET_DRIVER_HANDLE":{"comment":"","exp":"0x725","file":"dxva2api.h","line":623,"type":"Integer","value":1829},"DXVA2_DECODE_SPECIFY_ENCRYPTED_BLOCKS":{"comment":"","exp":"0x724","file":"dxva2api.h","line":633,"type":"Integer","value":1828},"DXVA2_E_NEW_VIDEO_DEVICE":{"comment":"","exp":"((HRESULT)0x80041001L)","file":"dxva2api.h","line":175,"type":"Integer","value":2147749889},"DXVA2_E_NOT_AVAILABLE":{"comment":"","exp":"((HRESULT)0x80041003L)","file":"dxva2api.h","line":177,"type":"Integer","value":2147749891},"DXVA2_E_NOT_INITIALIZED":{"comment":"","exp":"((HRESULT)0x80041000L)","file":"dxva2api.h","line":174,"type":"Integer","value":2147749888},"DXVA2_E_VIDEO_DEVICE_LOCKED":{"comment":"","exp":"((HRESULT)0x80041002L)","file":"dxva2api.h","line":176,"type":"Integer","value":2147749890},"DXVA2_ModeH264_IDCT_FGT":{"comment":"","exp":"DXVA2_ModeH264_D","file":"dxva2api.h","line":171,"type":"Unknown","value":"DXVA2_ModeH264_D"},"DXVA2_ModeH264_IDCT_NoFGT":{"comment":"","exp":"DXVA2_ModeH264_C","file":"dxva2api.h","line":170,"type":"Unknown","value":"DXVA2_ModeH264_C"},"DXVA2_ModeH264_MoComp_FGT":{"comment":"","exp":"DXVA2_ModeH264_B","file":"dxva2api.h","line":169,"type":"Unknown","value":"DXVA2_ModeH264_B"},"DXVA2_ModeH264_MoComp_NoFGT":{"comment":"","exp":"DXVA2_ModeH264_A","file":"dxva2api.h","line":168,"type":"Unknown","value":"DXVA2_ModeH264_A"},"DXVA2_ModeH264_VLD_FGT":{"comment":"","exp":"DXVA2_ModeH264_F","file":"dxva2api.h","line":173,"type":"Unknown","value":"DXVA2_ModeH264_F"},"DXVA2_ModeH264_VLD_NoFGT":{"comment":"","exp":"DXVA2_ModeH264_E","file":"dxva2api.h","line":172,"type":"Unknown","value":"DXVA2_ModeH264_E"},"DXVA2_ModeMPEG2_MOCOMP":{"comment":"","exp":"DXVA2_ModeMPEG2_MoComp","file":"dxva2api.h","line":158,"type":"Unknown","value":"DXVA2_ModeMPEG2_MoComp"},"DXVA2_ModeVC1_IDCT":{"comment":"","exp":"DXVA2_ModeVC1_C","file":"dxva2api.h","line":166,"type":"Unknown","value":"DXVA2_ModeVC1_C"},"DXVA2_ModeVC1_MoComp":{"comment":"","exp":"DXVA2_ModeVC1_B","file":"dxva2api.h","line":165,"type":"Unknown","value":"DXVA2_ModeVC1_B"},"DXVA2_ModeVC1_PostProc":{"comment":"","exp":"DXVA2_ModeVC1_A","file":"dxva2api.h","line":164,"type":"Unknown","value":"DXVA2_ModeVC1_A"},"DXVA2_ModeVC1_VLD":{"comment":"","exp":"DXVA2_ModeVC1_D","file":"dxva2api.h","line":167,"type":"Unknown","value":"DXVA2_ModeVC1_D"},"DXVA2_ModeWMV8_MoComp":{"comment":"","exp":"DXVA2_ModeWMV8_B","file":"dxva2api.h","line":160,"type":"Unknown","value":"DXVA2_ModeWMV8_B"},"DXVA2_ModeWMV8_PostProc":{"comment":"","exp":"DXVA2_ModeWMV8_A","file":"dxva2api.h","line":159,"type":"Unknown","value":"DXVA2_ModeWMV8_A"},"DXVA2_ModeWMV9_IDCT":{"comment":"","exp":"DXVA2_ModeWMV9_C","file":"dxva2api.h","line":163,"type":"Unknown","value":"DXVA2_ModeWMV9_C"},"DXVA2_ModeWMV9_MoComp":{"comment":"","exp":"DXVA2_ModeWMV9_B","file":"dxva2api.h","line":162,"type":"Unknown","value":"DXVA2_ModeWMV9_B"},"DXVA2_ModeWMV9_PostProc":{"comment":"","exp":"DXVA2_ModeWMV9_A","file":"dxva2api.h","line":161,"type":"Unknown","value":"DXVA2_ModeWMV9_A"},"DXVA2_VideoTransFunc_22_240M":{"comment":"","exp":"DXVA2_VideoTransFunc_240M","file":"dxva2api.h","line":309,"type":"Unknown","value":"DXVA2_VideoTransFunc_240M"},"DXVA2_VideoTransFunc_22_709":{"comment":"","exp":"DXVA2_VideoTransFunc_709","file":"dxva2api.h","line":308,"type":"Unknown","value":"DXVA2_VideoTransFunc_709"},"DXVA2_VideoTransFunc_22_8bit_sRGB":{"comment":"","exp":"DXVA2_VideoTransFunc_sRGB","file":"dxva2api.h","line":310,"type":"Unknown","value":"DXVA2_VideoTransFunc_sRGB"},"DXVA_ALPHA_BLEND_COMBINATION_BUFFER":{"comment":"","exp":"13","file":"dxva9typ.h","line":105,"type":"Integer","value":13},"DXVA_AYUV_BUFFER":{"comment":"","exp":"8","file":"dxva9typ.h","line":100,"type":"Integer","value":8},"DXVA_BITSTREAM_DATA_BUFFER":{"comment":"","exp":"7","file":"dxva9typ.h","line":99,"type":"Integer","value":7},"DXVA_COPPCommandFnCode":{"comment":"","exp":"0x04","file":"dxva9typ.h","line":756,"type":"Integer","value":4},"DXVA_COPPGetCertificateLengthFnCode":{"comment":"","exp":"0x01","file":"dxva9typ.h","line":723,"type":"Integer","value":1},"DXVA_COPPKeyExchangeFnCode":{"comment":"","exp":"0x02","file":"dxva9typ.h","line":730,"type":"Integer","value":2},"DXVA_COPPQueryStatusFnCode":{"comment":"","exp":"0x05","file":"dxva9typ.h","line":929,"type":"Integer","value":5},"DXVA_COPPSequenceStartFnCode":{"comment":"","exp":"0x03","file":"dxva9typ.h","line":741,"type":"Integer","value":3},"DXVA_DCCMD_SURFACE_BUFFER":{"comment":"","exp":"12","file":"dxva9typ.h","line":104,"type":"Integer","value":12},"DXVA_DEBLOCKING_CONTROL_BUFFER":{"comment":"","exp":"4","file":"dxva9typ.h","line":96,"type":"Integer","value":4},"DXVA_DPXD_SURFACE_BUFFER":{"comment":"","exp":"10","file":"dxva9typ.h","line":102,"type":"Integer","value":10},"DXVA_DeinterlaceBltExFnCode":{"comment":"","exp":"0x02","file":"dxva9typ.h","line":611,"type":"Integer","value":2},"DXVA_DeinterlaceBltFnCode":{"comment":"","exp":"0x01","file":"dxva9typ.h","line":595,"type":"Integer","value":1},"DXVA_DeinterlaceBobDevice":{"comment":"","exp":"DXVAp_DeinterlaceBobDevice","file":"dxva9typ.h","line":394,"type":"Unknown","value":"DXVAp_DeinterlaceBobDevice"},"DXVA_DeinterlaceContainerDevice":{"comment":"","exp":"DXVAp_DeinterlaceContainerDevice","file":"dxva9typ.h","line":395,"type":"Unknown","value":"DXVAp_DeinterlaceContainerDevice"},"DXVA_DeinterlaceQueryAvailableModesFnCode":{"comment":"","exp":"0x01","file":"dxva9typ.h","line":622,"type":"Integer","value":1},"DXVA_DeinterlaceQueryModeCapsFnCode":{"comment":"","exp":"0x02","file":"dxva9typ.h","line":632,"type":"Integer","value":2},"DXVA_ExtColorData_ShiftBase":{"comment":"","exp":"8","file":"dxva9typ.h","line":265,"type":"Integer","value":8},"DXVA_HIGHLIGHT_BUFFER":{"comment":"","exp":"11","file":"dxva9typ.h","line":103,"type":"Integer","value":11},"DXVA_IA44_SURFACE_BUFFER":{"comment":"","exp":"9","file":"dxva9typ.h","line":101,"type":"Integer","value":9},"DXVA_INVERSE_QUANTIZATION_MATRIX_BUFFER":{"comment":"","exp":"5","file":"dxva9typ.h","line":97,"type":"Integer","value":5},"DXVA_MACROBLOCK_CONTROL_BUFFER":{"comment":"","exp":"2","file":"dxva9typ.h","line":94,"type":"Integer","value":2},"DXVA_PICTURE_DECODE_BUFFER":{"comment":"","exp":"1","file":"dxva9typ.h","line":93,"type":"Integer","value":1},"DXVA_PICTURE_RESAMPLE_BUFFER":{"comment":"","exp":"14","file":"dxva9typ.h","line":106,"type":"Integer","value":14},"DXVA_ProcAmpControlBltFnCode":{"comment":"","exp":"0x01","file":"dxva9typ.h","line":700,"type":"Integer","value":1},"DXVA_ProcAmpControlQueryCapsFnCode":{"comment":"","exp":"0x03","file":"dxva9typ.h","line":668,"type":"Integer","value":3},"DXVA_ProcAmpControlQueryRangeFnCode":{"comment":"","exp":"0x04","file":"dxva9typ.h","line":685,"type":"Integer","value":4},"DXVA_QUERYORREPLYFUNCFLAG_ACCEL_LOCK_FALSE_PLUS":{"comment":"","exp":"0xFFFFFF","file":"dxva9typ.h","line":91,"type":"Integer","value":16777215},"DXVA_QUERYORREPLYFUNCFLAG_ACCEL_LOCK_OK_COPY":{"comment":"","exp":"0xFFFFFC","file":"dxva9typ.h","line":89,"type":"Integer","value":16777212},"DXVA_QUERYORREPLYFUNCFLAG_ACCEL_PROBE_FALSE_PLUS":{"comment":"","exp":"0xFFFFFB","file":"dxva9typ.h","line":90,"type":"Integer","value":16777211},"DXVA_QUERYORREPLYFUNCFLAG_ACCEL_PROBE_OK_COPY":{"comment":"","exp":"0xFFFFF8","file":"dxva9typ.h","line":87,"type":"Integer","value":16777208},"DXVA_QUERYORREPLYFUNCFLAG_ACCEL_PROBE_OK_PLUS":{"comment":"","exp":"0xFFFFF9","file":"dxva9typ.h","line":88,"type":"Integer","value":16777209},"DXVA_QUERYORREPLYFUNCFLAG_DECODER_LOCK_QUERY":{"comment":"","exp":"0xFFFFF5","file":"dxva9typ.h","line":86,"type":"Integer","value":16777205},"DXVA_QUERYORREPLYFUNCFLAG_DECODER_PROBE_QUERY":{"comment":"","exp":"0xFFFFF1","file":"dxva9typ.h","line":85,"type":"Integer","value":16777201},"DXVA_READ_BACK_BUFFER":{"comment":"","exp":"15","file":"dxva9typ.h","line":107,"type":"Integer","value":15},"DXVA_RESIDUAL_DIFFERENCE_BUFFER":{"comment":"","exp":"3","file":"dxva9typ.h","line":95,"type":"Integer","value":3},"DXVA_SLICE_CONTROL_BUFFER":{"comment":"","exp":"6","file":"dxva9typ.h","line":98,"type":"Integer","value":6},"DeleteInputStream":{"comment":"","exp":"MFTDeleteInputStream","file":"mftransform.h","line":209,"type":"Unknown","value":"MFTDeleteInputStream"},"E_TOCPARSER_INVALIDASFFILE":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x99000001L)","file":"wmcodecdsp.h","line":3825,"type":"Integer","value":2566914049},"E_TOCPARSER_INVALIDRIFFFILE":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x99000002L)","file":"wmcodecdsp.h","line":3828,"type":"Integer","value":2566914050},"FILE_ACCESSMODE":{"comment":"","exp":"","file":"wmcodecdsp.h","line":4661,"type":"Enum","value":"enum FILE_ACCESSMODE\\r\\n    {\\r\\n        ACCESSMODE_READ\\t= 1,\\r\\n        ACCESSMODE_WRITE\\t= 2,\\r\\n        ACCESSMODE_READWRITE\\t= 3,\\r\\n        ACCESSMODE_WRITE_EXCLUSIVE\\t= 4\\r\\n    } ;"},"FILE_OPENMODE":{"comment":"","exp":"","file":"wmcodecdsp.h","line":4646,"type":"Enum","value":"enum FILE_OPENMODE\\r\\n    {\\r\\n        OPENMODE_FAIL_IF_NOT_EXIST\\t= 0,\\r\\n        OPENMODE_FAIL_IF_EXIST\\t= 1,\\r\\n        OPENMODE_RESET_IF_EXIST\\t= 2,\\r\\n        OPENMODE_APPEND_IF_EXIST\\t= 3,\\r\\n        OPENMODE_DELETE_IF_EXIST\\t= 4\\r\\n    } ;"},"FULL_RANGE_SPEAKERS_KEY_GUID":{"comment":"","exp":"(MFPKEY_BASSMGMT_SPKRBASSCONFIG.fmtid)","file":"wmcodecdsp.h","line":3072,"type":"Unknown","value":"(MFPKEY_BASSMGMT_SPKRBASSCONFIG.fmtid)"},"GetInputAvailableType":{"comment":"","exp":"MFTGetInputAvailableType","file":"mftransform.h","line":211,"type":"Unknown","value":"MFTGetInputAvailableType"},"GetInputCurrentType":{"comment":"","exp":"MFTGetInputCurrentType","file":"mftransform.h","line":215,"type":"Unknown","value":"MFTGetInputCurrentType"},"GetInputStatus":{"comment":"","exp":"MFTGetInputStatus","file":"mftransform.h","line":217,"type":"Unknown","value":"MFTGetInputStatus"},"GetInputStreamInfo":{"comment":"","exp":"MFTGetInputStreamInfo","file":"mftransform.h","line":207,"type":"Unknown","value":"MFTGetInputStreamInfo"},"GetOutputAvailableType":{"comment":"","exp":"MFTGetOutputAvailableType","file":"mftransform.h","line":212,"type":"Unknown","value":"MFTGetOutputAvailableType"},"GetOutputCurrentType":{"comment":"","exp":"MFTGetOutputCurrentType","file":"mftransform.h","line":216,"type":"Unknown","value":"MFTGetOutputCurrentType"},"GetOutputStatus":{"comment":"","exp":"MFTGetOutputStatus","file":"mftransform.h","line":218,"type":"Unknown","value":"MFTGetOutputStatus"},"GetOutputStreamInfo":{"comment":"","exp":"MFTGetOutputStreamInfo","file":"mftransform.h","line":208,"type":"Unknown","value":"MFTGetOutputStreamInfo"},"GetStreamCount":{"comment":"","exp":"MFTGetStreamCount","file":"mftransform.h","line":205,"type":"Unknown","value":"MFTGetStreamCount"},"GetStreamIDs":{"comment":"","exp":"MFTGetStreamIDs","file":"mftransform.h","line":206,"type":"Unknown","value":"MFTGetStreamIDs"},"GetStreamLimits":{"comment":"","exp":"MFTGetStreamLimits","file":"mftransform.h","line":204,"type":"Unknown","value":"MFTGetStreamLimits"},"IAdvancedMediaCaptureInitializationSettingsVtbl":{"comment":"","exp":"","file":"mfmediacapture.h","line":105,"type":"Struct","value":"typedef struct IAdvancedMediaCaptureInitializationSettingsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAdvancedMediaCaptureInitializationSettings * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAdvancedMediaCaptureInitializationSettings * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAdvancedMediaCaptureInitializationSettings * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDirectxDeviceManager )( \\r\\n            IAdvancedMediaCaptureInitializationSettings * This,\\r\\n            \/* [in] *\/ IMFDXGIDeviceManager *value);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAdvancedMediaCaptureInitializationSettingsVtbl;"},"IAdvancedMediaCaptureSettingsVtbl":{"comment":"","exp":"","file":"mfmediacapture.h","line":185,"type":"Struct","value":"typedef struct IAdvancedMediaCaptureSettingsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAdvancedMediaCaptureSettings * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAdvancedMediaCaptureSettings * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAdvancedMediaCaptureSettings * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDirectxDeviceManager )( \\r\\n            IAdvancedMediaCaptureSettings * This,\\r\\n            \/* [out] *\/ IMFDXGIDeviceManager **value);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAdvancedMediaCaptureSettingsVtbl;"},"IAdvancedMediaCaptureVtbl":{"comment":"","exp":"","file":"mfmediacapture.h","line":265,"type":"Struct","value":"typedef struct IAdvancedMediaCaptureVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IAdvancedMediaCapture * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IAdvancedMediaCapture * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IAdvancedMediaCapture * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAdvancedMediaCaptureSettings )( \\r\\n            __RPC__in IAdvancedMediaCapture * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IAdvancedMediaCaptureSettings **value);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAdvancedMediaCaptureVtbl;"},"IAudioSourceProviderVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":2919,"type":"Struct","value":"typedef struct IAudioSourceProviderVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioSourceProvider * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioSourceProvider * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioSourceProvider * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ProvideInput )( \\r\\n            IAudioSourceProvider * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSampleCount,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _Inout_  DWORD *pdwChannelCount,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_opt_(dwSampleCount * (*pdwChannelCount))  float *pInterleavedAudioData);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioSourceProviderVtbl;"},"IClusterDetectorVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":4990,"type":"Struct","value":"typedef struct IClusterDetectorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IClusterDetector * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IClusterDetector * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IClusterDetector * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Initialize )( \\r\\n            IClusterDetector * This,\\r\\n            \/* [in] *\/ WORD wBaseEntryLevel,\\r\\n            \/* [in] *\/ WORD wClusterEntryLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Detect )( \\r\\n            IClusterDetector * This,\\r\\n            \/* [in] *\/ DWORD dwMaxNumClusters,\\r\\n            \/* [in] *\/ FLOAT fMinClusterDuration,\\r\\n            \/* [in] *\/ FLOAT fMaxClusterDuration,\\r\\n            \/* [in] *\/ IToc *pSrcToc,\\r\\n            \/* [out] *\/ IToc **ppDstToc);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IClusterDetectorVtbl;"},"ICodecAPIVtbl":{"comment":"","exp":"","file":"icodecapi.h","line":169,"type":"Struct","value":"typedef struct ICodecAPIVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ICodecAPI * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ICodecAPI * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsSupported )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ const GUID *Api);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsModifiable )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ const GUID *Api);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParameterRange )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ const GUID *Api,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  VARIANT *ValueMin,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  VARIANT *ValueMax,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  VARIANT *SteppingDelta);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParameterValues )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ const GUID *Api,\\r\\n            \/* [annotation][size_is][size_is][out] *\/ \\r\\n            _Outptr_result_buffer_all_(*ValuesCount)  VARIANT **Values,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *ValuesCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDefaultValue )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ const GUID *Api,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  VARIANT *Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetValue )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ const GUID *Api,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  VARIANT *Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetValue )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ const GUID *Api,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  VARIANT *Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterForEvent )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ const GUID *Api,\\r\\n            \/* [in] *\/ LONG_PTR userData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnregisterForEvent )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ const GUID *Api);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAllDefaults )( \\r\\n            ICodecAPI * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetValueWithNotify )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ const GUID *Api,\\r\\n            \/* [in] *\/ VARIANT *Value,\\r\\n            \/* [annotation][size_is][size_is][out] *\/ \\r\\n            _Outptr_result_buffer_all_(*ChangedParamCount)  GUID **ChangedParam,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *ChangedParamCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAllDefaultsWithNotify )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [annotation][size_is][size_is][out] *\/ \\r\\n            _Outptr_result_buffer_all_(*ChangedParamCount)  GUID **ChangedParam,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *ChangedParamCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllSettings )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ IStream *__MIDL__ICodecAPI0000);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAllSettings )( \\r\\n            ICodecAPI * This,\\r\\n            \/* [in] *\/ IStream *__MIDL__ICodecAPI0001);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAllSettingsWithNotify )( \\r\\n            ICodecAPI * This,\\r\\n            IStream *__MIDL__ICodecAPI0002,\\r\\n            \/* [annotation][size_is][size_is][out] *\/ \\r\\n            _Outptr_result_buffer_all_(*ChangedParamCount)  GUID **ChangedParam,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *ChangedParamCount);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ICodecAPIVtbl;"},"IDXVAHD_DeviceVtbl":{"comment":"","exp":"","file":"dxvahd.h","line":576,"type":"Struct","value":"typedef struct IDXVAHD_DeviceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXVAHD_Device * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXVAHD_Device * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXVAHD_Device * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateVideoSurface )( \\r\\n            IDXVAHD_Device * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Width,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Height,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DFORMAT Format,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DPOOL Pool,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD Usage,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXVAHD_SURFACE_TYPE Type,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NumSurfaces,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(NumSurfaces)  IDirect3DSurface9 **ppSurfaces,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_opt_  HANDLE *pSharedHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorDeviceCaps )( \\r\\n            IDXVAHD_Device * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXVAHD_VPDEVCAPS *pCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorOutputFormats )( \\r\\n            IDXVAHD_Device * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Count,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(Count)  D3DFORMAT *pFormats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorInputFormats )( \\r\\n            IDXVAHD_Device * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Count,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(Count)  D3DFORMAT *pFormats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorCaps )( \\r\\n            IDXVAHD_Device * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Count,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(Count)  DXVAHD_VPCAPS *pCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorCustomRates )( \\r\\n            IDXVAHD_Device * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const GUID *pVPGuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Count,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(Count)  DXVAHD_CUSTOM_RATE_DATA *pRates);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorFilterRange )( \\r\\n            IDXVAHD_Device * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXVAHD_FILTER Filter,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXVAHD_FILTER_RANGE_DATA *pRange);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateVideoProcessor )( \\r\\n            IDXVAHD_Device * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const GUID *pVPGuid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IDXVAHD_VideoProcessor **ppVideoProcessor);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXVAHD_DeviceVtbl;"},"IDXVAHD_VideoProcessorVtbl":{"comment":"","exp":"","file":"dxvahd.h","line":786,"type":"Struct","value":"typedef struct IDXVAHD_VideoProcessorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDXVAHD_VideoProcessor * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDXVAHD_VideoProcessor * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDXVAHD_VideoProcessor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVideoProcessBltState )( \\r\\n            IDXVAHD_VideoProcessor * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXVAHD_BLT_STATE State,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessBltState )( \\r\\n            IDXVAHD_VideoProcessor * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXVAHD_BLT_STATE State,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT DataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Inout_updates_bytes_(DataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVideoProcessStreamState )( \\r\\n            IDXVAHD_VideoProcessor * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT StreamNumber,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXVAHD_STREAM_STATE State,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT DataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(DataSize)  const void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessStreamState )( \\r\\n            IDXVAHD_VideoProcessor * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT StreamNumber,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXVAHD_STREAM_STATE State,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT DataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Inout_updates_bytes_(DataSize)  void *pData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *VideoProcessBltHD )( \\r\\n            IDXVAHD_VideoProcessor * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDirect3DSurface9 *pOutputSurface,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT OutputFrame,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT StreamCount,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(StreamCount)  const DXVAHD_STREAM_DATA *pStreams);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDXVAHD_VideoProcessorVtbl;"},"IDirect3DDeviceManager9Vtbl":{"comment":"","exp":"","file":"dxva2api.h","line":714,"type":"Struct","value":"typedef struct IDirect3DDeviceManager9Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDirect3DDeviceManager9 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDirect3DDeviceManager9 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDirect3DDeviceManager9 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResetDevice )( \\r\\n            IDirect3DDeviceManager9 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDirect3DDevice9 *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT resetToken);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenDeviceHandle )( \\r\\n            IDirect3DDeviceManager9 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *phDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CloseDeviceHandle )( \\r\\n            IDirect3DDeviceManager9 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TestDevice )( \\r\\n            IDirect3DDeviceManager9 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockDevice )( \\r\\n            IDirect3DDeviceManager9 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IDirect3DDevice9 **ppDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fBlock);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockDevice )( \\r\\n            IDirect3DDeviceManager9 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fSaveState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoService )( \\r\\n            IDirect3DDeviceManager9 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE hDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  void **ppService);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDirect3DDeviceManager9Vtbl;"},"IDirectXVideoAccelerationServiceVtbl":{"comment":"","exp":"","file":"dxva2api.h","line":872,"type":"Struct","value":"typedef struct IDirectXVideoAccelerationServiceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDirectXVideoAccelerationService * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDirectXVideoAccelerationService * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDirectXVideoAccelerationService * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSurface )( \\r\\n            IDirectXVideoAccelerationService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Width,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Height,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT BackBuffers,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DFORMAT Format,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DPOOL Pool,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD Usage,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD DxvaType,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(BackBuffers+1)  IDirect3DSurface9 **ppSurface,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_opt_  HANDLE *pSharedHandle);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDirectXVideoAccelerationServiceVtbl;"},"IDirectXVideoDecoderServiceVtbl":{"comment":"","exp":"","file":"dxva2api.h","line":1006,"type":"Struct","value":"typedef struct IDirectXVideoDecoderServiceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDirectXVideoDecoderService * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDirectXVideoDecoderService * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDirectXVideoDecoderService * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSurface )( \\r\\n            IDirectXVideoDecoderService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Width,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Height,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT BackBuffers,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DFORMAT Format,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DPOOL Pool,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD Usage,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD DxvaType,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(BackBuffers+1)  IDirect3DSurface9 **ppSurface,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_opt_  HANDLE *pSharedHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDecoderDeviceGuids )( \\r\\n            IDirectXVideoDecoderService * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pCount,\\r\\n            \/* [annotation][size_is][unique][out] *\/ \\r\\n            _Outptr_result_buffer_maybenull_(*pCount)  GUID **pGuids);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDecoderRenderTargets )( \\r\\n            IDirectXVideoDecoderService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Guid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pCount,\\r\\n            \/* [annotation][size_is][unique][out] *\/ \\r\\n            _Outptr_result_buffer_maybenull_(*pCount)  D3DFORMAT **pFormats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDecoderConfigurations )( \\r\\n            IDirectXVideoDecoderService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Guid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_VideoDesc *pVideoDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _Reserved_  void *pReserved,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pCount,\\r\\n            \/* [annotation][size_is][unique][out] *\/ \\r\\n            _Outptr_result_buffer_maybenull_(*pCount)  DXVA2_ConfigPictureDecode **ppConfigs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateVideoDecoder )( \\r\\n            IDirectXVideoDecoderService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID Guid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_VideoDesc *pVideoDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_ConfigPictureDecode *pConfig,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumRenderTargets)  IDirect3DSurface9 **ppDecoderRenderTargets,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NumRenderTargets,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IDirectXVideoDecoder **ppDecode);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDirectXVideoDecoderServiceVtbl;"},"IDirectXVideoDecoderVtbl":{"comment":"","exp":"","file":"dxva2api.h","line":1486,"type":"Struct","value":"typedef struct IDirectXVideoDecoderVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDirectXVideoDecoder * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDirectXVideoDecoder * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDirectXVideoDecoder * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoDecoderService )( \\r\\n            IDirectXVideoDecoder * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IDirectXVideoDecoderService **ppService);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCreationParameters )( \\r\\n            IDirectXVideoDecoder * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  GUID *pDeviceGuid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DXVA2_VideoDesc *pVideoDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DXVA2_ConfigPictureDecode *pConfig,\\r\\n            \/* [annotation][size_is][unique][out] *\/ \\r\\n            _Out_writes_(*pNumSurfaces)  IDirect3DSurface9 ***pDecoderRenderTargets,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  UINT *pNumSurfaces);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            IDirectXVideoDecoder * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT BufferType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  void **ppBuffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pBufferSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReleaseBuffer )( \\r\\n            IDirectXVideoDecoder * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT BufferType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginFrame )( \\r\\n            IDirectXVideoDecoder * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDirect3DSurface9 *pRenderTarget,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  void *pvPVPData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndFrame )( \\r\\n            IDirectXVideoDecoder * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Inout_opt_  HANDLE *pHandleComplete);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Execute )( \\r\\n            IDirectXVideoDecoder * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_DecodeExecuteParams *pExecuteParams);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDirectXVideoDecoderVtbl;"},"IDirectXVideoMemoryConfigurationVtbl":{"comment":"","exp":"","file":"dxva2api.h","line":1830,"type":"Struct","value":"typedef struct IDirectXVideoMemoryConfigurationVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDirectXVideoMemoryConfiguration * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDirectXVideoMemoryConfiguration * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDirectXVideoMemoryConfiguration * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAvailableSurfaceTypeByIndex )( \\r\\n            IDirectXVideoMemoryConfiguration * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwTypeIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXVA2_SurfaceType *pdwType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSurfaceType )( \\r\\n            IDirectXVideoMemoryConfiguration * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DXVA2_SurfaceType dwType);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDirectXVideoMemoryConfigurationVtbl;"},"IDirectXVideoProcessorServiceVtbl":{"comment":"","exp":"","file":"dxva2api.h","line":1237,"type":"Struct","value":"typedef struct IDirectXVideoProcessorServiceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDirectXVideoProcessorService * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDirectXVideoProcessorService * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDirectXVideoProcessorService * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSurface )( \\r\\n            IDirectXVideoProcessorService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Width,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT Height,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT BackBuffers,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DFORMAT Format,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DPOOL Pool,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD Usage,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD DxvaType,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(BackBuffers+1)  IDirect3DSurface9 **ppSurface,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_opt_  HANDLE *pSharedHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterVideoProcessorSoftwareDevice )( \\r\\n            IDirectXVideoProcessorService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  void *pCallbacks);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorDeviceGuids )( \\r\\n            IDirectXVideoProcessorService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_VideoDesc *pVideoDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pCount,\\r\\n            \/* [annotation][size_is][unique][out] *\/ \\r\\n            _Outptr_result_buffer_maybenull_(*pCount)  GUID **pGuids);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorRenderTargets )( \\r\\n            IDirectXVideoProcessorService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID VideoProcDeviceGuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_VideoDesc *pVideoDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pCount,\\r\\n            \/* [annotation][size_is][unique][out] *\/ \\r\\n            _Outptr_result_buffer_maybenull_(*pCount)  D3DFORMAT **pFormats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorSubStreamFormats )( \\r\\n            IDirectXVideoProcessorService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID VideoProcDeviceGuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_VideoDesc *pVideoDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DFORMAT RenderTargetFormat,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pCount,\\r\\n            \/* [annotation][size_is][unique][out] *\/ \\r\\n            _Outptr_result_buffer_maybenull_(*pCount)  D3DFORMAT **pFormats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorCaps )( \\r\\n            IDirectXVideoProcessorService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID VideoProcDeviceGuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_VideoDesc *pVideoDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DFORMAT RenderTargetFormat,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXVA2_VideoProcessorCaps *pCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProcAmpRange )( \\r\\n            IDirectXVideoProcessorService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID VideoProcDeviceGuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_VideoDesc *pVideoDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DFORMAT RenderTargetFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT ProcAmpCap,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXVA2_ValueRange *pRange);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFilterPropertyRange )( \\r\\n            IDirectXVideoProcessorService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID VideoProcDeviceGuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_VideoDesc *pVideoDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DFORMAT RenderTargetFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT FilterSetting,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXVA2_ValueRange *pRange);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateVideoProcessor )( \\r\\n            IDirectXVideoProcessorService * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID VideoProcDeviceGuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_VideoDesc *pVideoDesc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  D3DFORMAT RenderTargetFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT MaxNumSubStreams,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IDirectXVideoProcessor **ppVidProcess);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDirectXVideoProcessorServiceVtbl;"},"IDirectXVideoProcessorVtbl":{"comment":"","exp":"","file":"dxva2api.h","line":1668,"type":"Struct","value":"typedef struct IDirectXVideoProcessorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDirectXVideoProcessor * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDirectXVideoProcessor * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDirectXVideoProcessor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorService )( \\r\\n            IDirectXVideoProcessor * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IDirectXVideoProcessorService **ppService);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCreationParameters )( \\r\\n            IDirectXVideoProcessor * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  GUID *pDeviceGuid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DXVA2_VideoDesc *pVideoDesc,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  D3DFORMAT *pRenderTargetFormat,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  UINT *pMaxNumSubStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorCaps )( \\r\\n            IDirectXVideoProcessor * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXVA2_VideoProcessorCaps *pCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProcAmpRange )( \\r\\n            IDirectXVideoProcessor * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT ProcAmpCap,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXVA2_ValueRange *pRange);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFilterPropertyRange )( \\r\\n            IDirectXVideoProcessor * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT FilterSetting,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DXVA2_ValueRange *pRange);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *VideoProcessBlt )( \\r\\n            IDirectXVideoProcessor * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IDirect3DSurface9 *pRenderTarget,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const DXVA2_VideoProcessBltParams *pBltParams,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(NumSamples)  const DXVA2_VideoSample *pSamples,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT NumSamples,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Inout_opt_  HANDLE *pHandleComplete);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDirectXVideoProcessorVtbl;"},"IEVRFilterConfigExVtbl":{"comment":"","exp":"","file":"evr.h","line":1438,"type":"Struct","value":"typedef struct IEVRFilterConfigExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IEVRFilterConfigEx * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IEVRFilterConfigEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IEVRFilterConfigEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetNumberOfStreams )( \\r\\n            __RPC__in IEVRFilterConfigEx * This,\\r\\n            \/* [in] *\/ DWORD dwMaxStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNumberOfStreams )( \\r\\n            __RPC__in IEVRFilterConfigEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwMaxStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetConfigPrefs )( \\r\\n            __RPC__in IEVRFilterConfigEx * This,\\r\\n            \/* [in] *\/ DWORD dwConfigFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetConfigPrefs )( \\r\\n            __RPC__in IEVRFilterConfigEx * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwConfigFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IEVRFilterConfigExVtbl;"},"IEVRFilterConfigVtbl":{"comment":"","exp":"","file":"evr.h","line":1332,"type":"Struct","value":"typedef struct IEVRFilterConfigVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IEVRFilterConfig * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IEVRFilterConfig * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IEVRFilterConfig * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetNumberOfStreams )( \\r\\n            IEVRFilterConfig * This,\\r\\n            \/* [in] *\/ DWORD dwMaxStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNumberOfStreams )( \\r\\n            IEVRFilterConfig * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwMaxStreams);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IEVRFilterConfigVtbl;"},"IEVRTrustedVideoPluginVtbl":{"comment":"","exp":"","file":"evr.h","line":1753,"type":"Struct","value":"typedef struct IEVRTrustedVideoPluginVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IEVRTrustedVideoPlugin * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IEVRTrustedVideoPlugin * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IEVRTrustedVideoPlugin * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsInTrustedVideoMode )( \\r\\n            IEVRTrustedVideoPlugin * This,\\r\\n            \/* [out] *\/ BOOL *pYes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CanConstrict )( \\r\\n            IEVRTrustedVideoPlugin * This,\\r\\n            \/* [out] *\/ BOOL *pYes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetConstriction )( \\r\\n            IEVRTrustedVideoPlugin * This,\\r\\n            DWORD dwKPix);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DisableImageExport )( \\r\\n            IEVRTrustedVideoPlugin * This,\\r\\n            BOOL bDisable);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IEVRTrustedVideoPluginVtbl;"},"IEVRVideoStreamControlVtbl":{"comment":"","exp":"","file":"evr9.h","line":115,"type":"Struct","value":"typedef struct IEVRVideoStreamControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IEVRVideoStreamControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IEVRVideoStreamControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IEVRVideoStreamControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamActiveState )( \\r\\n            IEVRVideoStreamControl * This,\\r\\n            \/* [in] *\/ BOOL fActive);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamActiveState )( \\r\\n            IEVRVideoStreamControl * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *lpfActive);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IEVRVideoStreamControlVtbl;"},"IFileClientVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":4888,"type":"Struct","value":"typedef struct IFileClientVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IFileClient * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IFileClient * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IFileClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetObjectDiskSize )( \\r\\n            IFileClient * This,\\r\\n            \/* [out] *\/ QWORD *pqwSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Write )( \\r\\n            IFileClient * This,\\r\\n            \/* [in] *\/ IFileIo *pFio);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Read )( \\r\\n            IFileClient * This,\\r\\n            \/* [in] *\/ IFileIo *pFio);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IFileClientVtbl;"},"IFileIoVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":4731,"type":"Struct","value":"typedef struct IFileIoVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IFileIo * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IFileIo * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IFileIo * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Initialize )( \\r\\n            IFileIo * This,\\r\\n            \/* [in] *\/ enum FILE_ACCESSMODE eAccessMode,\\r\\n            \/* [in] *\/ enum FILE_OPENMODE eOpenMode,\\r\\n            \/* [in] *\/ LPCWSTR pwszFileName);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLength )( \\r\\n            IFileIo * This,\\r\\n            \/* [out] *\/ QWORD *pqwLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetLength )( \\r\\n            IFileIo * This,\\r\\n            \/* [in] *\/ QWORD qwLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentPosition )( \\r\\n            IFileIo * This,\\r\\n            \/* [out] *\/ QWORD *pqwPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentPosition )( \\r\\n            IFileIo * This,\\r\\n            \/* [in] *\/ QWORD qwPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsEndOfStream )( \\r\\n            IFileIo * This,\\r\\n            \/* [out] *\/ BOOL *pbEndOfStream);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Read )( \\r\\n            IFileIo * This,\\r\\n            \/* [in] *\/ BYTE *pbt,\\r\\n            \/* [in] *\/ ULONG ul,\\r\\n            \/* [out] *\/ ULONG *pulRead);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Write )( \\r\\n            IFileIo * This,\\r\\n            \/* [in] *\/ BYTE *pbt,\\r\\n            \/* [in] *\/ ULONG ul,\\r\\n            \/* [out] *\/ ULONG *pulWritten);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Seek )( \\r\\n            IFileIo * This,\\r\\n            \/* [in] *\/ enum SEEK_ORIGIN eSeekOrigin,\\r\\n            \/* [in] *\/ QWORD qwSeekOffset,\\r\\n            \/* [in] *\/ DWORD dwSeekFlags,\\r\\n            \/* [out] *\/ QWORD *pqwCurrentPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            IFileIo * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IFileIoVtbl;"},"IMF2DBuffer2Vtbl":{"comment":"","exp":"","file":"mfobjects.h","line":1554,"type":"Struct","value":"typedef struct IMF2DBuffer2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMF2DBuffer2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMF2DBuffer2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMF2DBuffer2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Lock2D )( \\r\\n            IMF2DBuffer2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(_Inexpressible_(ComputePlaneSize(*plPitch)))  BYTE **ppbScanline0,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONG *plPitch);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Unlock2D )( \\r\\n            IMF2DBuffer2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetScanline0AndPitch )( \\r\\n            IMF2DBuffer2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BYTE **pbScanline0,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONG *plPitch);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsContiguousFormat )( \\r\\n            IMF2DBuffer2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfIsContiguous);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContiguousLength )( \\r\\n            IMF2DBuffer2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ContiguousCopyTo )( \\r\\n            IMF2DBuffer2 * This,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_bytes_(cbDestBuffer)  BYTE *pbDestBuffer,\\r\\n            \/* [in] *\/ DWORD cbDestBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ContiguousCopyFrom )( \\r\\n            IMF2DBuffer2 * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_bytes_(cbSrcBuffer)  const BYTE *pbSrcBuffer,\\r\\n            \/* [in] *\/ DWORD cbSrcBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Lock2DSize )( \\r\\n            IMF2DBuffer2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF2DBuffer_LockFlags lockFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(_Inexpressible_(ComputePlaneSize(*plPitch)))  BYTE **ppbScanline0,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONG *plPitch,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*pcbBufferLength)  BYTE **ppbBufferStart,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbBufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Copy2DTo )( \\r\\n            IMF2DBuffer2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMF2DBuffer2 *pDestBuffer);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMF2DBuffer2Vtbl;"},"IMF2DBufferVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":1390,"type":"Struct","value":"typedef struct IMF2DBufferVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMF2DBuffer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMF2DBuffer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMF2DBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Lock2D )( \\r\\n            IMF2DBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(_Inexpressible_(ComputePlaneSize(*plPitch)))  BYTE **ppbScanline0,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONG *plPitch);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Unlock2D )( \\r\\n            IMF2DBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetScanline0AndPitch )( \\r\\n            IMF2DBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BYTE **pbScanline0,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONG *plPitch);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsContiguousFormat )( \\r\\n            IMF2DBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfIsContiguous);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContiguousLength )( \\r\\n            IMF2DBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ContiguousCopyTo )( \\r\\n            IMF2DBuffer * This,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_bytes_(cbDestBuffer)  BYTE *pbDestBuffer,\\r\\n            \/* [in] *\/ DWORD cbDestBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ContiguousCopyFrom )( \\r\\n            IMF2DBuffer * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_bytes_(cbSrcBuffer)  const BYTE *pbSrcBuffer,\\r\\n            \/* [in] *\/ DWORD cbSrcBuffer);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMF2DBufferVtbl;"},"IMFASFContentInfoVtbl":{"comment":"","exp":"","file":"wmcontainer.h","line":177,"type":"Struct","value":"typedef struct IMFASFContentInfoVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFASFContentInfo * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFASFContentInfo * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFASFContentInfo * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetHeaderSize )( \\r\\n            IMFASFContentInfo * This,\\r\\n            \/* [in] *\/ IMFMediaBuffer *pIStartOfContent,\\r\\n            \/* [out] *\/ QWORD *cbHeaderSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ParseHeader )( \\r\\n            IMFASFContentInfo * This,\\r\\n            \/* [in] *\/ IMFMediaBuffer *pIHeaderBuffer,\\r\\n            \/* [in] *\/ QWORD cbOffsetWithinHeader);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GenerateHeader )( \\r\\n            IMFASFContentInfo * This,\\r\\n            \/* [out][in] *\/ IMFMediaBuffer *pIHeader,\\r\\n            \/* [out] *\/ DWORD *pcbHeader);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProfile )( \\r\\n            IMFASFContentInfo * This,\\r\\n            \/* [out] *\/ IMFASFProfile **ppIProfile);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetProfile )( \\r\\n            IMFASFContentInfo * This,\\r\\n            \/* [in] *\/ IMFASFProfile *pIProfile);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GeneratePresentationDescriptor )( \\r\\n            IMFASFContentInfo * This,\\r\\n            \/* [out] *\/ IMFPresentationDescriptor **ppIPresentationDescriptor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEncodingConfigurationPropertyStore )( \\r\\n            IMFASFContentInfo * This,\\r\\n            \/* [in] *\/ WORD wStreamNumber,\\r\\n            \/* [out] *\/ IPropertyStore **ppIStore);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFASFContentInfoVtbl;"},"IMFASFIndexerVtbl":{"comment":"","exp":"","file":"wmcontainer.h","line":1592,"type":"Struct","value":"typedef struct IMFASFIndexerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFASFIndexer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFASFIndexer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFlags )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [in] *\/ DWORD dwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFlags )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [out] *\/ DWORD *pdwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Initialize )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [in] *\/ IMFASFContentInfo *pIContentInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIndexPosition )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [in] *\/ IMFASFContentInfo *pIContentInfo,\\r\\n            \/* [out] *\/ QWORD *pcbIndexOffset);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetIndexByteStreams )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [in] *\/ IMFByteStream **ppIByteStreams,\\r\\n            \/* [in] *\/ DWORD cByteStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIndexByteStreamCount )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [out] *\/ DWORD *pcByteStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIndexStatus )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [in] *\/ ASF_INDEX_IDENTIFIER *pIndexIdentifier,\\r\\n            \/* [out] *\/ BOOL *pfIsIndexed,\\r\\n            \/* [out] *\/ BYTE *pbIndexDescriptor,\\r\\n            \/* [out][in] *\/ DWORD *pcbIndexDescriptor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetIndexStatus )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [in] *\/ BYTE *pbIndexDescriptor,\\r\\n            \/* [in] *\/ DWORD cbIndexDescriptor,\\r\\n            \/* [in] *\/ BOOL fGenerateIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSeekPositionForValue )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [in] *\/ const PROPVARIANT *pvarValue,\\r\\n            \/* [in] *\/ ASF_INDEX_IDENTIFIER *pIndexIdentifier,\\r\\n            \/* [out] *\/ QWORD *pcbOffsetWithinData,\\r\\n            \/* [optional][out] *\/ MFTIME *phnsApproxTime,\\r\\n            \/* [optional][out] *\/ DWORD *pdwPayloadNumberOfStreamWithinPacket);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GenerateIndexEntries )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [in] *\/ IMFSample *pIASFPacketSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CommitIndex )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [in] *\/ IMFASFContentInfo *pIContentInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIndexWriteSpace )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [out] *\/ QWORD *pcbIndexWriteSpace);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCompletedIndex )( \\r\\n            IMFASFIndexer * This,\\r\\n            \/* [in] *\/ IMFMediaBuffer *pIIndexBuffer,\\r\\n            \/* [in] *\/ QWORD cbOffsetWithinIndex);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFASFIndexerVtbl;"},"IMFASFMultiplexerVtbl":{"comment":"","exp":"","file":"wmcontainer.h","line":2084,"type":"Struct","value":"typedef struct IMFASFMultiplexerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFASFMultiplexer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFASFMultiplexer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFASFMultiplexer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Initialize )( \\r\\n            IMFASFMultiplexer * This,\\r\\n            \/* [in] *\/ IMFASFContentInfo *pIContentInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFlags )( \\r\\n            IMFASFMultiplexer * This,\\r\\n            \/* [in] *\/ DWORD dwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFlags )( \\r\\n            IMFASFMultiplexer * This,\\r\\n            \/* [out] *\/ DWORD *pdwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ProcessSample )( \\r\\n            IMFASFMultiplexer * This,\\r\\n            \/* [in] *\/ WORD wStreamNumber,\\r\\n            \/* [in] *\/ IMFSample *pISample,\\r\\n            \/* [in] *\/ LONGLONG hnsTimestampAdjust);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNextPacket )( \\r\\n            IMFASFMultiplexer * This,\\r\\n            \/* [out] *\/ DWORD *pdwStatusFlags,\\r\\n            \/* [out] *\/ IMFSample **ppIPacket);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Flush )( \\r\\n            IMFASFMultiplexer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *End )( \\r\\n            IMFASFMultiplexer * This,\\r\\n            \/* [out][in] *\/ IMFASFContentInfo *pIContentInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStatistics )( \\r\\n            IMFASFMultiplexer * This,\\r\\n            \/* [in] *\/ WORD wStreamNumber,\\r\\n            \/* [out] *\/ ASF_MUX_STATISTICS *pMuxStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSyncTolerance )( \\r\\n            IMFASFMultiplexer * This,\\r\\n            \/* [in] *\/ DWORD msSyncTolerance);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFASFMultiplexerVtbl;"},"IMFASFMutualExclusionVtbl":{"comment":"","exp":"","file":"wmcontainer.h","line":1248,"type":"Struct","value":"typedef struct IMFASFMutualExclusionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFASFMutualExclusion * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFASFMutualExclusion * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFASFMutualExclusion * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetType )( \\r\\n            IMFASFMutualExclusion * This,\\r\\n            \/* [out] *\/ GUID *pguidType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetType )( \\r\\n            IMFASFMutualExclusion * This,\\r\\n            \/* [in] *\/ REFGUID guidType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRecordCount )( \\r\\n            IMFASFMutualExclusion * This,\\r\\n            \/* [out] *\/ DWORD *pdwRecordCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamsForRecord )( \\r\\n            IMFASFMutualExclusion * This,\\r\\n            \/* [in] *\/ DWORD dwRecordNumber,\\r\\n            \/* [out] *\/ WORD *pwStreamNumArray,\\r\\n            \/* [out][in] *\/ DWORD *pcStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStreamForRecord )( \\r\\n            IMFASFMutualExclusion * This,\\r\\n            \/* [in] *\/ DWORD dwRecordNumber,\\r\\n            \/* [in] *\/ WORD wStreamNumber);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveStreamFromRecord )( \\r\\n            IMFASFMutualExclusion * This,\\r\\n            \/* [in] *\/ DWORD dwRecordNumber,\\r\\n            \/* [in] *\/ WORD wStreamNumber);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveRecord )( \\r\\n            IMFASFMutualExclusion * This,\\r\\n            \/* [in] *\/ DWORD dwRecordNumber);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddRecord )( \\r\\n            IMFASFMutualExclusion * This,\\r\\n            \/* [out] *\/ DWORD *pdwRecordNumber);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Clone )( \\r\\n            IMFASFMutualExclusion * This,\\r\\n            \/* [out] *\/ IMFASFMutualExclusion **ppIMutex);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFASFMutualExclusionVtbl;"},"IMFASFProfileVtbl":{"comment":"","exp":"","file":"wmcontainer.h","line":365,"type":"Struct","value":"typedef struct IMFASFProfileVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFASFProfile * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFASFProfile * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            IMFASFProfile * This,\\r\\n            IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ UINT8 **ppBuf,\\r\\n            \/* [out] *\/ UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            REFIID riid,\\r\\n            \/* [iid_is][out] *\/ LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            IMFASFProfile * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [string][in] *\/ LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            IMFASFProfile * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [in] *\/ IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            IMFASFProfile * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            IMFASFProfile * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [out] *\/ UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            IMFASFProfile * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [in] *\/ IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamCount )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [out] *\/ DWORD *pcStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStream )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [in] *\/ DWORD dwStreamIndex,\\r\\n            \/* [out] *\/ WORD *pwStreamNumber,\\r\\n            \/* [out] *\/ IMFASFStreamConfig **ppIStream);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamByNumber )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [in] *\/ WORD wStreamNumber,\\r\\n            \/* [out] *\/ IMFASFStreamConfig **ppIStream);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStream )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [in] *\/ IMFASFStreamConfig *pIStream);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveStream )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [in] *\/ WORD wStreamNumber);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateStream )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [in] *\/ IMFMediaType *pIMediaType,\\r\\n            \/* [out] *\/ IMFASFStreamConfig **ppIStream);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMutualExclusionCount )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [out] *\/ DWORD *pcMutexs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMutualExclusion )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [in] *\/ DWORD dwMutexIndex,\\r\\n            \/* [out] *\/ IMFASFMutualExclusion **ppIMutex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddMutualExclusion )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [in] *\/ IMFASFMutualExclusion *pIMutex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveMutualExclusion )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [in] *\/ DWORD dwMutexIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMutualExclusion )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [out] *\/ IMFASFMutualExclusion **ppIMutex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamPrioritization )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [out] *\/ IMFASFStreamPrioritization **ppIStreamPrioritization);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStreamPrioritization )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [in] *\/ IMFASFStreamPrioritization *pIStreamPrioritization);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveStreamPrioritization )( \\r\\n            IMFASFProfile * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateStreamPrioritization )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [out] *\/ IMFASFStreamPrioritization **ppIStreamPrioritization);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Clone )( \\r\\n            IMFASFProfile * This,\\r\\n            \/* [out] *\/ IMFASFProfile **ppIProfile);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFASFProfileVtbl;"},"IMFASFSplitterVtbl":{"comment":"","exp":"","file":"wmcontainer.h","line":1811,"type":"Struct","value":"typedef struct IMFASFSplitterVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFASFSplitter * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFASFSplitter * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFASFSplitter * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Initialize )( \\r\\n            IMFASFSplitter * This,\\r\\n            \/* [in] *\/ IMFASFContentInfo *pIContentInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFlags )( \\r\\n            IMFASFSplitter * This,\\r\\n            \/* [in] *\/ DWORD dwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFlags )( \\r\\n            IMFASFSplitter * This,\\r\\n            \/* [out] *\/ DWORD *pdwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SelectStreams )( \\r\\n            IMFASFSplitter * This,\\r\\n            \/* [in] *\/ WORD *pwStreamNumbers,\\r\\n            \/* [in] *\/ WORD wNumStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSelectedStreams )( \\r\\n            IMFASFSplitter * This,\\r\\n            \/* [out] *\/ WORD *pwStreamNumbers,\\r\\n            \/* [out][in] *\/ WORD *pwNumStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ParseData )( \\r\\n            IMFASFSplitter * This,\\r\\n            \/* [in] *\/ IMFMediaBuffer *pIBuffer,\\r\\n            \/* [in] *\/ DWORD cbBufferOffset,\\r\\n            \/* [in] *\/ DWORD cbLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNextSample )( \\r\\n            IMFASFSplitter * This,\\r\\n            \/* [out] *\/ DWORD *pdwStatusFlags,\\r\\n            \/* [out] *\/ WORD *pwStreamNumber,\\r\\n            \/* [out] *\/ IMFSample **ppISample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Flush )( \\r\\n            IMFASFSplitter * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLastSendTime )( \\r\\n            IMFASFSplitter * This,\\r\\n            \/* [out] *\/ DWORD *pdwLastSendTime);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFASFSplitterVtbl;"},"IMFASFStreamConfigVtbl":{"comment":"","exp":"","file":"wmcontainer.h","line":829,"type":"Struct","value":"typedef struct IMFASFStreamConfigVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFASFStreamConfig * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFASFStreamConfig * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ UINT8 **ppBuf,\\r\\n            \/* [out] *\/ UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            REFIID riid,\\r\\n            \/* [iid_is][out] *\/ LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            IMFASFStreamConfig * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [string][in] *\/ LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [in] *\/ IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            IMFASFStreamConfig * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            IMFASFStreamConfig * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            \/* [out] *\/ UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            \/* [in] *\/ IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamType )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            \/* [out] *\/ GUID *pguidStreamType);\\r\\n        \\r\\n        WORD ( STDMETHODCALLTYPE *GetStreamNumber )( \\r\\n            IMFASFStreamConfig * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamNumber )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            \/* [in] *\/ WORD wStreamNum);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaType )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            \/* [out] *\/ IMFMediaType **ppIMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMediaType )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            \/* [in] *\/ IMFMediaType *pIMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPayloadExtensionCount )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            \/* [out] *\/ WORD *pcPayloadExtensions);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPayloadExtension )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            \/* [in] *\/ WORD wPayloadExtensionNumber,\\r\\n            \/* [out] *\/ GUID *pguidExtensionSystemID,\\r\\n            \/* [out] *\/ WORD *pcbExtensionDataSize,\\r\\n            \/* [size_is][optional][out] *\/ BYTE *pbExtensionSystemInfo,\\r\\n            \/* [optional][out][in] *\/ DWORD *pcbExtensionSystemInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddPayloadExtension )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            \/* [in] *\/ GUID guidExtensionSystemID,\\r\\n            \/* [in] *\/ WORD cbExtensionDataSize,\\r\\n            \/* [size_is][in] *\/ BYTE *pbExtensionSystemInfo,\\r\\n            \/* [in] *\/ DWORD cbExtensionSystemInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllPayloadExtensions )( \\r\\n            IMFASFStreamConfig * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Clone )( \\r\\n            IMFASFStreamConfig * This,\\r\\n            \/* [out] *\/ IMFASFStreamConfig **ppIStreamConfig);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFASFStreamConfigVtbl;"},"IMFASFStreamPrioritizationVtbl":{"comment":"","exp":"","file":"wmcontainer.h","line":1403,"type":"Struct","value":"typedef struct IMFASFStreamPrioritizationVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFASFStreamPrioritization * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFASFStreamPrioritization * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFASFStreamPrioritization * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamCount )( \\r\\n            IMFASFStreamPrioritization * This,\\r\\n            \/* [out] *\/ DWORD *pdwStreamCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStream )( \\r\\n            IMFASFStreamPrioritization * This,\\r\\n            \/* [in] *\/ DWORD dwStreamIndex,\\r\\n            \/* [out] *\/ WORD *pwStreamNumber,\\r\\n            \/* [out] *\/ WORD *pwStreamFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStream )( \\r\\n            IMFASFStreamPrioritization * This,\\r\\n            \/* [in] *\/ WORD wStreamNumber,\\r\\n            \/* [in] *\/ WORD wStreamFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveStream )( \\r\\n            IMFASFStreamPrioritization * This,\\r\\n            \/* [in] *\/ DWORD dwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Clone )( \\r\\n            IMFASFStreamPrioritization * This,\\r\\n            \/* [out] *\/ IMFASFStreamPrioritization **ppIStreamPrioritization);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFASFStreamPrioritizationVtbl;"},"IMFASFStreamSelectorVtbl":{"comment":"","exp":"","file":"wmcontainer.h","line":2308,"type":"Struct","value":"typedef struct IMFASFStreamSelectorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFASFStreamSelector * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFASFStreamSelector * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamCount )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [out] *\/ DWORD *pcStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputCount )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [out] *\/ DWORD *pcOutputs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputStreamCount )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ DWORD dwOutputNum,\\r\\n            \/* [out] *\/ DWORD *pcStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputStreamNumbers )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ DWORD dwOutputNum,\\r\\n            \/* [out] *\/ WORD *rgwStreamNumbers);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputFromStream )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ WORD wStreamNum,\\r\\n            \/* [out] *\/ DWORD *pdwOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputOverride )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ DWORD dwOutputNum,\\r\\n            \/* [out] *\/ ASF_SELECTION_STATUS *pSelection);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputOverride )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ DWORD dwOutputNum,\\r\\n            \/* [in] *\/ ASF_SELECTION_STATUS Selection);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputMutexCount )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ DWORD dwOutputNum,\\r\\n            \/* [out] *\/ DWORD *pcMutexes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputMutex )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ DWORD dwOutputNum,\\r\\n            \/* [in] *\/ DWORD dwMutexNum,\\r\\n            \/* [out] *\/ IUnknown **ppMutex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputMutexSelection )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ DWORD dwOutputNum,\\r\\n            \/* [in] *\/ DWORD dwMutexNum,\\r\\n            \/* [in] *\/ WORD wSelectedRecord);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBandwidthStepCount )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [out] *\/ DWORD *pcStepCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBandwidthStep )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ DWORD dwStepNum,\\r\\n            \/* [out] *\/ DWORD *pdwBitrate,\\r\\n            \/* [out] *\/ WORD *rgwStreamNumbers,\\r\\n            \/* [out] *\/ ASF_SELECTION_STATUS *rgSelections);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BitrateToStepNumber )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ DWORD dwBitrate,\\r\\n            \/* [out] *\/ DWORD *pdwStepNum);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamSelectorFlags )( \\r\\n            IMFASFStreamSelector * This,\\r\\n            \/* [in] *\/ DWORD dwStreamSelectorFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFASFStreamSelectorVtbl;"},"IMFActivateVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":5284,"type":"Struct","value":"typedef struct IMFActivateVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFActivate * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFActivate * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in_opt IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            __RPC__in IMFActivate * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [string][in] *\/ __RPC__in_string LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            __RPC__in IMFActivate * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            __RPC__in IMFActivate * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateObject )( \\r\\n            __RPC__in IMFActivate * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [retval][iid_is][out] *\/ __RPC__deref_out_opt void **ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ShutdownObject )( \\r\\n            __RPC__in IMFActivate * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DetachObject )( \\r\\n            __RPC__in IMFActivate * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFActivateVtbl;"},"IMFAsyncCallbackLoggingVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":3534,"type":"Struct","value":"typedef struct IMFAsyncCallbackLoggingVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFAsyncCallbackLogging * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFAsyncCallbackLogging * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFAsyncCallbackLogging * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParameters )( \\r\\n            IMFAsyncCallbackLogging * This,\\r\\n            \/* [out] *\/ DWORD *pdwFlags,\\r\\n            \/* [out] *\/ DWORD *pdwQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Invoke )( \\r\\n            IMFAsyncCallbackLogging * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pAsyncResult);\\r\\n        \\r\\n        void *( STDMETHODCALLTYPE *GetObjectPointer )( \\r\\n            IMFAsyncCallbackLogging * This);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetObjectTag )( \\r\\n            IMFAsyncCallbackLogging * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFAsyncCallbackLoggingVtbl;"},"IMFAsyncCallbackVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":3433,"type":"Struct","value":"typedef struct IMFAsyncCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFAsyncCallback * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFAsyncCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFAsyncCallback * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetParameters )( \\r\\n            __RPC__in IMFAsyncCallback * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwFlags,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwQueue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Invoke )( \\r\\n            __RPC__in IMFAsyncCallback * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAsyncResult *pAsyncResult);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFAsyncCallbackVtbl;"},"IMFAsyncResultVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":3323,"type":"Struct","value":"typedef struct IMFAsyncResultVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFAsyncResult * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFAsyncResult * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFAsyncResult * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetState )( \\r\\n            __RPC__in IMFAsyncResult * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IUnknown **ppunkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStatus )( \\r\\n            __RPC__in IMFAsyncResult * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStatus )( \\r\\n            __RPC__in IMFAsyncResult * This,\\r\\n            \/* [in] *\/ HRESULT hrStatus);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetObject )( \\r\\n            __RPC__in IMFAsyncResult * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IUnknown **ppObject);\\r\\n        \\r\\n        \/* [local] *\/ IUnknown *( STDMETHODCALLTYPE *GetStateNoAddRef )( \\r\\n            IMFAsyncResult * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFAsyncResultVtbl;"},"IMFAttributesVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":426,"type":"Struct","value":"typedef struct IMFAttributesVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFAttributes * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFAttributes * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in_opt IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            __RPC__in IMFAttributes * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [string][in] *\/ __RPC__in_string LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            __RPC__in IMFAttributes * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            __RPC__in IMFAttributes * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            __RPC__in IMFAttributes * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAttributes *pDest);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFAttributesVtbl;"},"IMFAudioMediaTypeVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":2233,"type":"Struct","value":"typedef struct IMFAudioMediaTypeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFAudioMediaType * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFAudioMediaType * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFAudioMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            IMFAudioMediaType * This,\\r\\n            IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ UINT8 **ppBuf,\\r\\n            \/* [out] *\/ UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            REFIID riid,\\r\\n            \/* [iid_is][out] *\/ LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            IMFAudioMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [string][in] *\/ LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            IMFAudioMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [in] *\/ IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            IMFAudioMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            IMFAudioMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IMFAudioMediaType * This,\\r\\n            \/* [out] *\/ UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            IMFAudioMediaType * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            IMFAudioMediaType * This,\\r\\n            \/* [in] *\/ IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMajorType )( \\r\\n            IMFAudioMediaType * This,\\r\\n            \/* [out] *\/ GUID *pguidMajorType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsCompressedFormat )( \\r\\n            IMFAudioMediaType * This,\\r\\n            \/* [out] *\/ BOOL *pfCompressed);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsEqual )( \\r\\n            IMFAudioMediaType * This,\\r\\n            \/* [in] *\/ IMFMediaType *pIMediaType,\\r\\n            \/* [out] *\/ DWORD *pdwFlags);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *GetRepresentation )( \\r\\n            IMFAudioMediaType * This,\\r\\n            \/* [in] *\/ GUID guidRepresentation,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LPVOID *ppvRepresentation);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *FreeRepresentation )( \\r\\n            IMFAudioMediaType * This,\\r\\n            \/* [in] *\/ GUID guidRepresentation,\\r\\n            \/* [in] *\/ LPVOID pvRepresentation);\\r\\n        \\r\\n        const WAVEFORMATEX *( STDMETHODCALLTYPE *GetAudioFormat )( \\r\\n            IMFAudioMediaType * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFAudioMediaTypeVtbl;"},"IMFAudioPolicyVtbl":{"comment":"","exp":"","file":"mfidl.h","line":8652,"type":"Struct","value":"typedef struct IMFAudioPolicyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFAudioPolicy * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFAudioPolicy * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFAudioPolicy * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGroupingParam )( \\r\\n            IMFAudioPolicy * This,\\r\\n            \/* [in] *\/ REFGUID rguidClass);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGroupingParam )( \\r\\n            IMFAudioPolicy * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *pguidClass);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisplayName )( \\r\\n            IMFAudioPolicy * This,\\r\\n            \/* [in] *\/ LPCWSTR pszName);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( \\r\\n            IMFAudioPolicy * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *pszName);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetIconPath )( \\r\\n            IMFAudioPolicy * This,\\r\\n            \/* [in] *\/ LPCWSTR pszPath);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIconPath )( \\r\\n            IMFAudioPolicy * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *pszPath);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFAudioPolicyVtbl;"},"IMFAudioStreamVolumeVtbl":{"comment":"","exp":"","file":"mfidl.h","line":8513,"type":"Struct","value":"typedef struct IMFAudioStreamVolumeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFAudioStreamVolume * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFAudioStreamVolume * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFAudioStreamVolume * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( \\r\\n            __RPC__in IMFAudioStreamVolume * This,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pdwCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetChannelVolume )( \\r\\n            __RPC__in IMFAudioStreamVolume * This,\\r\\n            \/* [in] *\/ UINT32 dwIndex,\\r\\n            \/* [in] *\/ const float fLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetChannelVolume )( \\r\\n            __RPC__in IMFAudioStreamVolume * This,\\r\\n            \/* [in] *\/ UINT32 dwIndex,\\r\\n            \/* [out] *\/ __RPC__out float *pfLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAllVolumes )( \\r\\n            __RPC__in IMFAudioStreamVolume * This,\\r\\n            \/* [in] *\/ UINT32 dwCount,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(dwCount) const float *pfVolumes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllVolumes )( \\r\\n            __RPC__in IMFAudioStreamVolume * This,\\r\\n            \/* [in] *\/ UINT32 dwCount,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(dwCount) float *pfVolumes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFAudioStreamVolumeVtbl;"},"IMFBufferListNotifyVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":3234,"type":"Struct","value":"typedef struct IMFBufferListNotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFBufferListNotify * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFBufferListNotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFBufferListNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OnAddSourceBuffer )( \\r\\n            IMFBufferListNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OnRemoveSourceBuffer )( \\r\\n            IMFBufferListNotify * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFBufferListNotifyVtbl;"},"IMFByteStreamBufferingVtbl":{"comment":"","exp":"","file":"mfidl.h","line":11009,"type":"Struct","value":"typedef struct IMFByteStreamBufferingVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFByteStreamBuffering * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFByteStreamBuffering * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFByteStreamBuffering * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBufferingParams )( \\r\\n            __RPC__in IMFByteStreamBuffering * This,\\r\\n            \/* [in] *\/ __RPC__in MFBYTESTREAM_BUFFERING_PARAMS *pParams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnableBuffering )( \\r\\n            __RPC__in IMFByteStreamBuffering * This,\\r\\n            \/* [in] *\/ BOOL fEnable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *StopBuffering )( \\r\\n            __RPC__in IMFByteStreamBuffering * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFByteStreamBufferingVtbl;"},"IMFByteStreamCacheControl2Vtbl":{"comment":"","exp":"","file":"mfidl.h","line":11306,"type":"Struct","value":"typedef struct IMFByteStreamCacheControl2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFByteStreamCacheControl2 * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFByteStreamCacheControl2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFByteStreamCacheControl2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *StopBackgroundTransfer )( \\r\\n            __RPC__in IMFByteStreamCacheControl2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetByteRanges )( \\r\\n            __RPC__in IMFByteStreamCacheControl2 * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcRanges,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcRanges) MF_BYTE_STREAM_CACHE_RANGE **ppRanges);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCacheLimit )( \\r\\n            __RPC__in IMFByteStreamCacheControl2 * This,\\r\\n            \/* [in] *\/ QWORD qwBytes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsBackgroundTransferActive )( \\r\\n            __RPC__in IMFByteStreamCacheControl2 * This,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pfActive);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFByteStreamCacheControl2Vtbl;"},"IMFByteStreamCacheControlVtbl":{"comment":"","exp":"","file":"mfidl.h","line":11101,"type":"Struct","value":"typedef struct IMFByteStreamCacheControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFByteStreamCacheControl * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFByteStreamCacheControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFByteStreamCacheControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *StopBackgroundTransfer )( \\r\\n            __RPC__in IMFByteStreamCacheControl * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFByteStreamCacheControlVtbl;"},"IMFByteStreamHandlerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":12950,"type":"Struct","value":"typedef struct IMFByteStreamHandlerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFByteStreamHandler * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFByteStreamHandler * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFByteStreamHandler * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginCreateObject )( \\r\\n            IMFByteStreamHandler * This,\\r\\n            \/* [in] *\/ IMFByteStream *pByteStream,\\r\\n            \/* [in] *\/ LPCWSTR pwszURL,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [in] *\/ IPropertyStore *pProps,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_opt_  IUnknown **ppIUnknownCancelCookie,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndCreateObject )( \\r\\n            IMFByteStreamHandler * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_OBJECT_TYPE *pObjectType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IUnknown **ppObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CancelObjectCreation )( \\r\\n            IMFByteStreamHandler * This,\\r\\n            \/* [in] *\/ IUnknown *pIUnknownCancelCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaxNumberOfBytesRequiredForResolution )( \\r\\n            IMFByteStreamHandler * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  QWORD *pqwBytes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFByteStreamHandlerVtbl;"},"IMFByteStreamProxyClassFactoryVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":4762,"type":"Struct","value":"typedef struct IMFByteStreamProxyClassFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFByteStreamProxyClassFactory * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFByteStreamProxyClassFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFByteStreamProxyClassFactory * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateByteStreamProxy )( \\r\\n            __RPC__in IMFByteStreamProxyClassFactory * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFByteStream *pByteStream,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt IMFAttributes *pAttributes,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt LPVOID *ppvObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFByteStreamProxyClassFactoryVtbl;"},"IMFByteStreamTimeSeekVtbl":{"comment":"","exp":"","file":"mfidl.h","line":11188,"type":"Struct","value":"typedef struct IMFByteStreamTimeSeekVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFByteStreamTimeSeek * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFByteStreamTimeSeek * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFByteStreamTimeSeek * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsTimeSeekSupported )( \\r\\n            __RPC__in IMFByteStreamTimeSeek * This,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pfTimeSeekIsSupported);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TimeSeek )( \\r\\n            __RPC__in IMFByteStreamTimeSeek * This,\\r\\n            \/* [in] *\/ QWORD qwTimePosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTimeSeekResult )( \\r\\n            __RPC__in IMFByteStreamTimeSeek * This,\\r\\n            \/* [out] *\/ __RPC__out QWORD *pqwStartTime,\\r\\n            \/* [out] *\/ __RPC__out QWORD *pqwStopTime,\\r\\n            \/* [out] *\/ __RPC__out QWORD *pqwDuration);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFByteStreamTimeSeekVtbl;"},"IMFByteStreamVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":4472,"type":"Struct","value":"typedef struct IMFByteStreamVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFByteStream * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFByteStream * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFByteStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCapabilities )( \\r\\n            __RPC__in IMFByteStream * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwCapabilities);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLength )( \\r\\n            __RPC__in IMFByteStream * This,\\r\\n            \/* [out] *\/ __RPC__out QWORD *pqwLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetLength )( \\r\\n            __RPC__in IMFByteStream * This,\\r\\n            \/* [in] *\/ QWORD qwLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentPosition )( \\r\\n            __RPC__in IMFByteStream * This,\\r\\n            \/* [out] *\/ __RPC__out QWORD *pqwPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentPosition )( \\r\\n            __RPC__in IMFByteStream * This,\\r\\n            \/* [in] *\/ QWORD qwPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsEndOfStream )( \\r\\n            __RPC__in IMFByteStream * This,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pfEndOfStream);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Read )( \\r\\n            __RPC__in IMFByteStream * This,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cb) BYTE *pb,\\r\\n            \/* [in] *\/ ULONG cb,\\r\\n            \/* [out] *\/ __RPC__out ULONG *pcbRead);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginRead )( \\r\\n            IMFByteStream * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_(cb)  BYTE *pb,\\r\\n            \/* [in] *\/ ULONG cb,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndRead )( \\r\\n            IMFByteStream * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *pcbRead);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Write )( \\r\\n            __RPC__in IMFByteStream * This,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cb) const BYTE *pb,\\r\\n            \/* [in] *\/ ULONG cb,\\r\\n            \/* [out] *\/ __RPC__out ULONG *pcbWritten);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginWrite )( \\r\\n            IMFByteStream * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(cb)  const BYTE *pb,\\r\\n            \/* [in] *\/ ULONG cb,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndWrite )( \\r\\n            IMFByteStream * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *pcbWritten);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Seek )( \\r\\n            __RPC__in IMFByteStream * This,\\r\\n            \/* [in] *\/ MFBYTESTREAM_SEEK_ORIGIN SeekOrigin,\\r\\n            \/* [in] *\/ LONGLONG llSeekOffset,\\r\\n            \/* [in] *\/ DWORD dwSeekFlags,\\r\\n            \/* [out] *\/ __RPC__out QWORD *pqwCurrentPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Flush )( \\r\\n            __RPC__in IMFByteStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            __RPC__in IMFByteStream * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFByteStreamVtbl;"},"IMFCaptureEngineClassFactoryVtbl":{"comment":"","exp":"","file":"mfcaptureengine.h","line":1676,"type":"Struct","value":"typedef struct IMFCaptureEngineClassFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCaptureEngineClassFactory * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCaptureEngineClassFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCaptureEngineClassFactory * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( \\r\\n            IMFCaptureEngineClassFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFCLSID clsid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Out_  LPVOID *ppvObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCaptureEngineClassFactoryVtbl;"},"IMFCaptureEngineOnEventCallbackVtbl":{"comment":"","exp":"","file":"mfcaptureengine.h","line":261,"type":"Struct","value":"typedef struct IMFCaptureEngineOnEventCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCaptureEngineOnEventCallback * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCaptureEngineOnEventCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCaptureEngineOnEventCallback * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnEvent )( \\r\\n            IMFCaptureEngineOnEventCallback * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaEvent *pEvent);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCaptureEngineOnEventCallbackVtbl;"},"IMFCaptureEngineOnSampleCallback2Vtbl":{"comment":"","exp":"","file":"mfcaptureengine.h","line":1771,"type":"Struct","value":"typedef struct IMFCaptureEngineOnSampleCallback2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCaptureEngineOnSampleCallback2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCaptureEngineOnSampleCallback2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCaptureEngineOnSampleCallback2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnSample )( \\r\\n            IMFCaptureEngineOnSampleCallback2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFSample *pSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnSynchronizedEvent )( \\r\\n            IMFCaptureEngineOnSampleCallback2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaEvent *pEvent);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCaptureEngineOnSampleCallback2Vtbl;"},"IMFCaptureEngineOnSampleCallbackVtbl":{"comment":"","exp":"","file":"mfcaptureengine.h","line":343,"type":"Struct","value":"typedef struct IMFCaptureEngineOnSampleCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCaptureEngineOnSampleCallback * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCaptureEngineOnSampleCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCaptureEngineOnSampleCallback * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnSample )( \\r\\n            IMFCaptureEngineOnSampleCallback * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFSample *pSample);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCaptureEngineOnSampleCallbackVtbl;"},"IMFCaptureEngineVtbl":{"comment":"","exp":"","file":"mfcaptureengine.h","line":1523,"type":"Struct","value":"typedef struct IMFCaptureEngineVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCaptureEngine * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCaptureEngine * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCaptureEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Initialize )( \\r\\n            IMFCaptureEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFCaptureEngineOnEventCallback *pEventCallback,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pAudioSource,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pVideoSource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *StartPreview )( \\r\\n            IMFCaptureEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *StopPreview )( \\r\\n            IMFCaptureEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *StartRecord )( \\r\\n            IMFCaptureEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *StopRecord )( \\r\\n            IMFCaptureEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL bFinalize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL bFlushUnprocessedSamples);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TakePhoto )( \\r\\n            IMFCaptureEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSink )( \\r\\n            IMFCaptureEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_CAPTURE_ENGINE_SINK_TYPE mfCaptureEngineSinkType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFCaptureSink **ppSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSource )( \\r\\n            IMFCaptureEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFCaptureSource **ppSource);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCaptureEngineVtbl;"},"IMFCapturePhotoConfirmationVtbl":{"comment":"","exp":"","file":"mfidl.h","line":16423,"type":"Struct","value":"typedef struct IMFCapturePhotoConfirmationVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCapturePhotoConfirmation * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCapturePhotoConfirmation * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCapturePhotoConfirmation * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPhotoConfirmationCallback )( \\r\\n            IMFCapturePhotoConfirmation * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncCallback *pNotificationCallback);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPixelFormat )( \\r\\n            IMFCapturePhotoConfirmation * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  GUID subtype);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPixelFormat )( \\r\\n            IMFCapturePhotoConfirmation * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *subtype);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCapturePhotoConfirmationVtbl;"},"IMFCapturePhotoSinkVtbl":{"comment":"","exp":"","file":"mfcaptureengine.h","line":1041,"type":"Struct","value":"typedef struct IMFCapturePhotoSinkVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCapturePhotoSink * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCapturePhotoSink * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCapturePhotoSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputMediaType )( \\r\\n            IMFCapturePhotoSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSinkStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            IMFCapturePhotoSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSinkStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID rguidService,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IUnknown **ppUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStream )( \\r\\n            IMFCapturePhotoSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pdwSinkStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Prepare )( \\r\\n            IMFCapturePhotoSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllStreams )( \\r\\n            IMFCapturePhotoSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputFileName )( \\r\\n            IMFCapturePhotoSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR fileName);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSampleCallback )( \\r\\n            IMFCapturePhotoSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFCaptureEngineOnSampleCallback *pCallback);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputByteStream )( \\r\\n            IMFCapturePhotoSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFByteStream *pByteStream);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCapturePhotoSinkVtbl;"},"IMFCapturePreviewSinkVtbl":{"comment":"","exp":"","file":"mfcaptureengine.h","line":826,"type":"Struct","value":"typedef struct IMFCapturePreviewSinkVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCapturePreviewSink * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCapturePreviewSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputMediaType )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSinkStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSinkStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID rguidService,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IUnknown **ppUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStream )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pdwSinkStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Prepare )( \\r\\n            IMFCapturePreviewSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllStreams )( \\r\\n            IMFCapturePreviewSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRenderHandle )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE handle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRenderSurface )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pSurface);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UpdateVideo )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const MFVideoNormalizedRect *pSrc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const RECT *pDst,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const COLORREF *pBorderClr);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSampleCallback )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamSinkIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFCaptureEngineOnSampleCallback *pCallback);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMirrorState )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfMirrorState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMirrorState )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fMirrorState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRotation )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwRotationValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotation )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwRotationValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCustomSink )( \\r\\n            IMFCapturePreviewSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaSink *pMediaSink);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCapturePreviewSinkVtbl;"},"IMFCaptureRecordSinkVtbl":{"comment":"","exp":"","file":"mfcaptureengine.h","line":603,"type":"Struct","value":"typedef struct IMFCaptureRecordSinkVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCaptureRecordSink * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCaptureRecordSink * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCaptureRecordSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputMediaType )( \\r\\n            IMFCaptureRecordSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSinkStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            IMFCaptureRecordSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSinkStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID rguidService,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IUnknown **ppUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStream )( \\r\\n            IMFCaptureRecordSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pdwSinkStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Prepare )( \\r\\n            IMFCaptureRecordSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllStreams )( \\r\\n            IMFCaptureRecordSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputByteStream )( \\r\\n            IMFCaptureRecordSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFByteStream *pByteStream,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidContainerType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputFileName )( \\r\\n            IMFCaptureRecordSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR fileName);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSampleCallback )( \\r\\n            IMFCaptureRecordSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamSinkIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFCaptureEngineOnSampleCallback *pCallback);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCustomSink )( \\r\\n            IMFCaptureRecordSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaSink *pMediaSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRotation )( \\r\\n            IMFCaptureRecordSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwRotationValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotation )( \\r\\n            IMFCaptureRecordSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwRotationValue);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCaptureRecordSinkVtbl;"},"IMFCaptureSink2Vtbl":{"comment":"","exp":"","file":"mfcaptureengine.h","line":1866,"type":"Struct","value":"typedef struct IMFCaptureSink2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCaptureSink2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCaptureSink2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCaptureSink2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputMediaType )( \\r\\n            IMFCaptureSink2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSinkStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            IMFCaptureSink2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSinkStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID rguidService,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IUnknown **ppUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStream )( \\r\\n            IMFCaptureSink2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pdwSinkStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Prepare )( \\r\\n            IMFCaptureSink2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllStreams )( \\r\\n            IMFCaptureSink2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputMediaType )( \\r\\n            IMFCaptureSink2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pEncodingAttributes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCaptureSink2Vtbl;"},"IMFCaptureSinkVtbl":{"comment":"","exp":"","file":"mfcaptureengine.h","line":451,"type":"Struct","value":"typedef struct IMFCaptureSinkVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCaptureSink * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCaptureSink * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCaptureSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputMediaType )( \\r\\n            IMFCaptureSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSinkStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            IMFCaptureSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSinkStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID rguidService,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IUnknown **ppUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStream )( \\r\\n            IMFCaptureSink * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pdwSinkStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Prepare )( \\r\\n            IMFCaptureSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllStreams )( \\r\\n            IMFCaptureSink * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCaptureSinkVtbl;"},"IMFCaptureSourceVtbl":{"comment":"","exp":"","file":"mfcaptureengine.h","line":1270,"type":"Struct","value":"typedef struct IMFCaptureSourceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFCaptureSource * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFCaptureSource * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCaptureDeviceSource )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_CAPTURE_ENGINE_DEVICE_TYPE mfCaptureEngineDeviceType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFMediaSource **ppMediaSource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCaptureDeviceActivate )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_CAPTURE_ENGINE_DEVICE_TYPE mfCaptureEngineDeviceType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFActivate **ppActivate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID rguidService,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IUnknown **ppUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddEffect )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveEffect )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllEffects )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAvailableDeviceMediaType )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwMediaTypeIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentDeviceMediaType )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentDeviceMediaType )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceStreamCount )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwStreamCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceStreamCategory )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSourceStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_CAPTURE_ENGINE_STREAM_CATEGORY *pStreamCategory);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMirrorState )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfMirrorState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMirrorState )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fMirrorState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamIndexFromFriendlyName )( \\r\\n            IMFCaptureSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 uifriendlyName,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwActualStreamIndex);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCaptureSourceVtbl;"},"IMFCdmSuspendNotifyVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":4919,"type":"Struct","value":"typedef struct IMFCdmSuspendNotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFCdmSuspendNotify * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFCdmSuspendNotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFCdmSuspendNotify * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Begin )( \\r\\n            __RPC__in IMFCdmSuspendNotify * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *End )( \\r\\n            __RPC__in IMFCdmSuspendNotify * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCdmSuspendNotifyVtbl;"},"IMFClockConsumerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":2078,"type":"Struct","value":"typedef struct IMFClockConsumerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFClockConsumer * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFClockConsumer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFClockConsumer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPresentationClock )( \\r\\n            __RPC__in IMFClockConsumer * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFPresentationClock *pPresentationClock);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPresentationClock )( \\r\\n            __RPC__in IMFClockConsumer * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFPresentationClock **ppPresentationClock);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFClockConsumerVtbl;"},"IMFClockStateSinkVtbl":{"comment":"","exp":"","file":"mfidl.h","line":5706,"type":"Struct","value":"typedef struct IMFClockStateSinkVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFClockStateSink * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFClockStateSink * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFClockStateSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockStart )( \\r\\n            __RPC__in IMFClockStateSink * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime,\\r\\n            \/* [in] *\/ LONGLONG llClockStartOffset);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockStop )( \\r\\n            __RPC__in IMFClockStateSink * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockPause )( \\r\\n            __RPC__in IMFClockStateSink * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockRestart )( \\r\\n            __RPC__in IMFClockStateSink * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockSetRate )( \\r\\n            __RPC__in IMFClockStateSink * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime,\\r\\n            \/* [in] *\/ float flRate);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFClockStateSinkVtbl;"},"IMFClockVtbl":{"comment":"","exp":"","file":"mfidl.h","line":5232,"type":"Struct","value":"typedef struct IMFClockVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFClock * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFClock * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFClock * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetClockCharacteristics )( \\r\\n            __RPC__in IMFClock * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwCharacteristics);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCorrelatedTime )( \\r\\n            __RPC__in IMFClock * This,\\r\\n            \/* [in] *\/ DWORD dwReserved,\\r\\n            \/* [out] *\/ __RPC__out LONGLONG *pllClockTime,\\r\\n            \/* [out] *\/ __RPC__out MFTIME *phnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContinuityKey )( \\r\\n            __RPC__in IMFClock * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwContinuityKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetState )( \\r\\n            __RPC__in IMFClock * This,\\r\\n            \/* [in] *\/ DWORD dwReserved,\\r\\n            \/* [out] *\/ __RPC__out MFCLOCK_STATE *peClockState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProperties )( \\r\\n            __RPC__in IMFClock * This,\\r\\n            \/* [out] *\/ __RPC__out MFCLOCK_PROPERTIES *pClockProperties);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFClockVtbl;"},"IMFCollectionVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":5002,"type":"Struct","value":"typedef struct IMFCollectionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFCollection * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFCollection * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFCollection * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetElementCount )( \\r\\n            __RPC__in IMFCollection * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcElements);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetElement )( \\r\\n            __RPC__in IMFCollection * This,\\r\\n            \/* [in] *\/ DWORD dwElementIndex,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IUnknown **ppUnkElement);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddElement )( \\r\\n            __RPC__in IMFCollection * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pUnkElement);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveElement )( \\r\\n            __RPC__in IMFCollection * This,\\r\\n            \/* [in] *\/ DWORD dwElementIndex,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IUnknown **ppUnkElement);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InsertElementAt )( \\r\\n            __RPC__in IMFCollection * This,\\r\\n            \/* [in] *\/ DWORD dwIndex,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllElements )( \\r\\n            __RPC__in IMFCollection * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFCollectionVtbl;"},"IMFContentDecryptionModuleAccessVtbl":{"comment":"","exp":"","file":"mfcontentdecryptionmodule.h","line":530,"type":"Struct","value":"typedef struct IMFContentDecryptionModuleAccessVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFContentDecryptionModuleAccess * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFContentDecryptionModuleAccess * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFContentDecryptionModuleAccess * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateContentDecryptionModule )( \\r\\n            __RPC__in IMFContentDecryptionModuleAccess * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IPropertyStore *contentDecryptionModuleProperties,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFContentDecryptionModule **contentDecryptionModule);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetConfiguration )( \\r\\n            __RPC__in IMFContentDecryptionModuleAccess * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IPropertyStore **configuration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetKeySystem )( \\r\\n            __RPC__in IMFContentDecryptionModuleAccess * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt LPWSTR *keySystem);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFContentDecryptionModuleAccessVtbl;"},"IMFContentDecryptionModuleFactoryVtbl":{"comment":"","exp":"","file":"mfcontentdecryptionmodule.h","line":643,"type":"Struct","value":"typedef struct IMFContentDecryptionModuleFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFContentDecryptionModuleFactory * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFContentDecryptionModuleFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFContentDecryptionModuleFactory * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsTypeSupported )( \\r\\n            IMFContentDecryptionModuleFactory * This,\\r\\n            \/* [in] *\/ LPCWSTR keySystem,\\r\\n            \/* [optional][in] *\/ LPCWSTR contentType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateContentDecryptionModuleAccess )( \\r\\n            IMFContentDecryptionModuleFactory * This,\\r\\n            \/* [in] *\/ LPCWSTR keySystem,\\r\\n            \/* [size_is][size_is][in] *\/ IPropertyStore **configurations,\\r\\n            \/* [in] *\/ DWORD numConfigurations,\\r\\n            \/* [out] *\/ IMFContentDecryptionModuleAccess **contentDecryptionModuleAccess);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFContentDecryptionModuleFactoryVtbl;"},"IMFContentDecryptionModuleSessionCallbacksVtbl":{"comment":"","exp":"","file":"mfcontentdecryptionmodule.h","line":280,"type":"Struct","value":"typedef struct IMFContentDecryptionModuleSessionCallbacksVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFContentDecryptionModuleSessionCallbacks * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFContentDecryptionModuleSessionCallbacks * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFContentDecryptionModuleSessionCallbacks * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *KeyMessage )( \\r\\n            __RPC__in IMFContentDecryptionModuleSessionCallbacks * This,\\r\\n            \/* [in] *\/ MF_MEDIAKEYSESSION_MESSAGETYPE messageType,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(messageSize) const BYTE *message,\\r\\n            \/* [in] *\/ DWORD messageSize,\\r\\n            \/* [optional][in] *\/ __RPC__in LPCWSTR destinationURL);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *KeyStatusChanged )( \\r\\n            __RPC__in IMFContentDecryptionModuleSessionCallbacks * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFContentDecryptionModuleSessionCallbacksVtbl;"},"IMFContentDecryptionModuleSessionVtbl":{"comment":"","exp":"","file":"mfcontentdecryptionmodule.h","line":143,"type":"Struct","value":"typedef struct IMFContentDecryptionModuleSessionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFContentDecryptionModuleSession * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFContentDecryptionModuleSession * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFContentDecryptionModuleSession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSessionId )( \\r\\n            __RPC__in IMFContentDecryptionModuleSession * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt LPWSTR *sessionId);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetExpiration )( \\r\\n            __RPC__in IMFContentDecryptionModuleSession * This,\\r\\n            \/* [out] *\/ __RPC__out double *expiration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetKeyStatuses )( \\r\\n            __RPC__in IMFContentDecryptionModuleSession * This,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*numKeyStatuses) MFMediaKeyStatus **keyStatuses,\\r\\n            \/* [out] *\/ __RPC__out UINT *numKeyStatuses);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Load )( \\r\\n            __RPC__in IMFContentDecryptionModuleSession * This,\\r\\n            \/* [in] *\/ __RPC__in LPCWSTR sessionId,\\r\\n            \/* [out] *\/ __RPC__out BOOL *loaded);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GenerateRequest )( \\r\\n            __RPC__in IMFContentDecryptionModuleSession * This,\\r\\n            \/* [in] *\/ __RPC__in LPCWSTR initDataType,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(initDataSize) const BYTE *initData,\\r\\n            \/* [in] *\/ DWORD initDataSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Update )( \\r\\n            __RPC__in IMFContentDecryptionModuleSession * This,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(responseSize) const BYTE *response,\\r\\n            \/* [in] *\/ DWORD responseSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            __RPC__in IMFContentDecryptionModuleSession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Remove )( \\r\\n            __RPC__in IMFContentDecryptionModuleSession * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFContentDecryptionModuleSessionVtbl;"},"IMFContentDecryptionModuleVtbl":{"comment":"","exp":"","file":"mfcontentdecryptionmodule.h","line":394,"type":"Struct","value":"typedef struct IMFContentDecryptionModuleVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFContentDecryptionModule * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFContentDecryptionModule * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFContentDecryptionModule * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetContentEnabler )( \\r\\n            __RPC__in IMFContentDecryptionModule * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFContentEnabler *contentEnabler,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAsyncResult *result);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSuspendNotify )( \\r\\n            __RPC__in IMFContentDecryptionModule * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFCdmSuspendNotify **notify);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPMPHostApp )( \\r\\n            __RPC__in IMFContentDecryptionModule * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFPMPHostApp *pmpHostApp);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSession )( \\r\\n            __RPC__in IMFContentDecryptionModule * This,\\r\\n            \/* [in] *\/ MF_MEDIAKEYSESSION_TYPE sessionType,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFContentDecryptionModuleSessionCallbacks *callbacks,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFContentDecryptionModuleSession **session);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetServerCertificate )( \\r\\n            __RPC__in IMFContentDecryptionModule * This,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(certificateSize) const BYTE *certificate,\\r\\n            \/* [in] *\/ DWORD certificateSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateTrustedInput )( \\r\\n            __RPC__in IMFContentDecryptionModule * This,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(contentInitDataSize) const BYTE *contentInitData,\\r\\n            \/* [in] *\/ DWORD contentInitDataSize,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFTrustedInput **trustedInput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProtectionSystemIds )( \\r\\n            __RPC__in IMFContentDecryptionModule * This,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*count) GUID **systemIds,\\r\\n            \/* [out] *\/ __RPC__out DWORD *count);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFContentDecryptionModuleVtbl;"},"IMFContentDecryptorContextVtbl":{"comment":"","exp":"","file":"mfidl.h","line":17507,"type":"Struct","value":"typedef struct IMFContentDecryptorContextVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFContentDecryptorContext * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFContentDecryptorContext * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFContentDecryptorContext * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitializeHardwareKey )( \\r\\n            IMFContentDecryptorContext * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT InputPrivateDataByteCount,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_opt_(InputPrivateDataByteCount)  const void *InputPrivateData,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT64 *OutputPrivateData);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFContentDecryptorContextVtbl;"},"IMFContentEnablerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":7408,"type":"Struct","value":"typedef struct IMFContentEnablerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFContentEnabler * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFContentEnabler * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFContentEnabler * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEnableType )( \\r\\n            __RPC__in IMFContentEnabler * This,\\r\\n            \/* [out] *\/ __RPC__out GUID *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEnableURL )( \\r\\n            __RPC__in IMFContentEnabler * This,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcchURL) LPWSTR *ppwszURL,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcchURL,\\r\\n            \/* [unique][out][in] *\/ __RPC__inout_opt MF_URL_TRUST_STATUS *pTrustStatus);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEnableData )( \\r\\n            __RPC__in IMFContentEnabler * This,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbData) BYTE **ppbData,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcbData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsAutomaticSupported )( \\r\\n            __RPC__in IMFContentEnabler * This,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pfAutomatic);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AutomaticEnable )( \\r\\n            __RPC__in IMFContentEnabler * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MonitorEnable )( \\r\\n            __RPC__in IMFContentEnabler * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Cancel )( \\r\\n            __RPC__in IMFContentEnabler * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFContentEnablerVtbl;"},"IMFContentProtectionDeviceVtbl":{"comment":"","exp":"","file":"mfidl.h","line":17389,"type":"Struct","value":"typedef struct IMFContentProtectionDeviceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFContentProtectionDevice * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFContentProtectionDevice * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFContentProtectionDevice * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InvokeFunction )( \\r\\n            IMFContentProtectionDevice * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD FunctionId,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD InputBufferByteCount,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_bytes_(InputBufferByteCount)  const BYTE *InputBuffer,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  DWORD *OutputBufferByteCount,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_bytes_(*OutputBufferByteCount)  BYTE *OutputBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateDataByteCount )( \\r\\n            IMFContentProtectionDevice * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *PrivateInputByteCount,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *PrivateOutputByteCount);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFContentProtectionDeviceVtbl;"},"IMFContentProtectionManagerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":7257,"type":"Struct","value":"typedef struct IMFContentProtectionManagerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFContentProtectionManager * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFContentProtectionManager * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFContentProtectionManager * This);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginEnableContent )( \\r\\n            IMFContentProtectionManager * This,\\r\\n            \/* [in] *\/ IMFActivate *pEnablerActivate,\\r\\n            \/* [in] *\/ IMFTopology *pTopo,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndEnableContent )( \\r\\n            IMFContentProtectionManager * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFContentProtectionManagerVtbl;"},"IMFDLNASinkInitVtbl":{"comment":"","exp":"","file":"mfmp2dlna.h","line":93,"type":"Struct","value":"typedef struct IMFDLNASinkInitVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFDLNASinkInit * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFDLNASinkInit * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFDLNASinkInit * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Initialize )( \\r\\n            IMFDLNASinkInit * This,\\r\\n            IMFByteStream *pByteStream,\\r\\n            BOOL fPal);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFDLNASinkInitVtbl;"},"IMFDRMNetHelperVtbl":{"comment":"","exp":"","file":"wmcontainer.h","line":2568,"type":"Struct","value":"typedef struct IMFDRMNetHelperVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFDRMNetHelper * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFDRMNetHelper * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFDRMNetHelper * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ProcessLicenseRequest )( \\r\\n            __RPC__in IMFDRMNetHelper * This,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbLicenseRequest) BYTE *pLicenseRequest,\\r\\n            \/* [in] *\/ DWORD cbLicenseRequest,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbLicenseResponse) BYTE **ppLicenseResponse,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcbLicenseResponse,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt BSTR *pbstrKID);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetChainedLicenseResponse )( \\r\\n            __RPC__in IMFDRMNetHelper * This,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbLicenseResponse) BYTE **ppLicenseResponse,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcbLicenseResponse);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFDRMNetHelperVtbl;"},"IMFDXGIBufferVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":1733,"type":"Struct","value":"typedef struct IMFDXGIBufferVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFDXGIBuffer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFDXGIBuffer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFDXGIBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetResource )( \\r\\n            IMFDXGIBuffer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPVOID *ppvObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSubresourceIndex )( \\r\\n            IMFDXGIBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *puSubresource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            IMFDXGIBuffer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID guid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPVOID *ppvObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            IMFDXGIBuffer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID guid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pUnkData);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFDXGIBufferVtbl;"},"IMFDXGIDeviceManagerSourceVtbl":{"comment":"","exp":"","file":"mfidl.h","line":3222,"type":"Struct","value":"typedef struct IMFDXGIDeviceManagerSourceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFDXGIDeviceManagerSource * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFDXGIDeviceManagerSource * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFDXGIDeviceManagerSource * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetManager )( \\r\\n            __RPC__in IMFDXGIDeviceManagerSource * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFDXGIDeviceManager **ppManager);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFDXGIDeviceManagerSourceVtbl;"},"IMFDXGIDeviceManagerVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":6020,"type":"Struct","value":"typedef struct IMFDXGIDeviceManagerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFDXGIDeviceManager * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFDXGIDeviceManager * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFDXGIDeviceManager * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CloseDeviceHandle )( \\r\\n            IMFDXGIDeviceManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HANDLE hDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoService )( \\r\\n            IMFDXGIDeviceManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HANDLE hDevice,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _Outptr_  void **ppService);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockDevice )( \\r\\n            IMFDXGIDeviceManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HANDLE hDevice,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation] *\/ \\r\\n            _Outptr_  void **ppUnkDevice,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BOOL fBlock);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OpenDeviceHandle )( \\r\\n            IMFDXGIDeviceManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  HANDLE *phDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResetDevice )( \\r\\n            IMFDXGIDeviceManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  IUnknown *pUnkDevice,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  UINT resetToken);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TestDevice )( \\r\\n            IMFDXGIDeviceManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HANDLE hDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockDevice )( \\r\\n            IMFDXGIDeviceManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HANDLE hDevice,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BOOL fSaveState);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFDXGIDeviceManagerVtbl;"},"IMFDesiredSampleVtbl":{"comment":"","exp":"","file":"evr.h","line":885,"type":"Struct","value":"typedef struct IMFDesiredSampleVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFDesiredSample * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFDesiredSample * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFDesiredSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDesiredSampleTimeAndDuration )( \\r\\n            IMFDesiredSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONGLONG *phnsSampleTime,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONGLONG *phnsSampleDuration);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *SetDesiredSampleTimeAndDuration )( \\r\\n            IMFDesiredSample * This,\\r\\n            \/* [in] *\/ LONGLONG hnsSampleTime,\\r\\n            \/* [in] *\/ LONGLONG hnsSampleDuration);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Clear )( \\r\\n            IMFDesiredSample * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFDesiredSampleVtbl;"},"IMFDeviceTransformCallbackVtbl":{"comment":"","exp":"","file":"mftransform.h","line":1138,"type":"Struct","value":"typedef struct IMFDeviceTransformCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFDeviceTransformCallback * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFDeviceTransformCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFDeviceTransformCallback * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnBufferSent )( \\r\\n            IMFDeviceTransformCallback * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAttributes *pCallbackAttributes,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD pinId);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFDeviceTransformCallbackVtbl;"},"IMFDeviceTransformVtbl":{"comment":"","exp":"","file":"mftransform.h","line":829,"type":"Struct","value":"typedef struct IMFDeviceTransformVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFDeviceTransform * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFDeviceTransform * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitializeTransform )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAttributes *pAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputAvailableType )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwInputStreamID,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwTypeIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFMediaType **pMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputCurrentType )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwInputStreamID,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFMediaType **pMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputStreamAttributes )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwInputStreamID,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFAttributes **ppAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputAvailableType )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwOutputStreamID,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwTypeIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFMediaType **pMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputCurrentType )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwOutputStreamID,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFMediaType **pMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputStreamAttributes )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwOutputStreamID,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFAttributes **ppAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamCount )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcInputStreams,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcOutputStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamIDs )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwInputIDArraySize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwInputStreamIds,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwOutputIDArraySize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwOutputStreamIds);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ProcessEvent )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwInputStreamID,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaEvent *pEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ProcessInput )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwInputStreamID,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFSample *pSample,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ProcessMessage )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MFT_MESSAGE_TYPE eMessage,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG_PTR ulParam);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ProcessOutput )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD cOutputBufferCount,\\r\\n            \/* [size_is][annotation][out][in] *\/ \\r\\n            _Inout_  MFT_OUTPUT_DATA_BUFFER *pOutputSample,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwStatus);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetInputStreamState )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamID,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DeviceStreamState value,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputStreamState )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamID,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DeviceStreamState *value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputStreamState )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamID,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DeviceStreamState value,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputStreamState )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamID,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DeviceStreamState *value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputStreamPreferredState )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamID,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DeviceStreamState *value,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FlushInputStream )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FlushOutputStream )( \\r\\n            IMFDeviceTransform * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFDeviceTransformVtbl;"},"IMFExtendedCameraControlVtbl":{"comment":"","exp":"","file":"mfidl.h","line":21033,"type":"Struct","value":"typedef struct IMFExtendedCameraControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFExtendedCameraControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFExtendedCameraControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFExtendedCameraControl * This);\\r\\n        \\r\\n        ULONGLONG ( STDMETHODCALLTYPE *GetCapabilities )( \\r\\n            IMFExtendedCameraControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFlags )( \\r\\n            IMFExtendedCameraControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONGLONG ulFlags);\\r\\n        \\r\\n        ULONGLONG ( STDMETHODCALLTYPE *GetFlags )( \\r\\n            IMFExtendedCameraControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockPayload )( \\r\\n            IMFExtendedCameraControl * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_buffer_(*pulPayload)  BYTE **ppPayload,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *pulPayload);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockPayload )( \\r\\n            IMFExtendedCameraControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CommitSettings )( \\r\\n            IMFExtendedCameraControl * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFExtendedCameraControlVtbl;"},"IMFExtendedCameraControllerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":21153,"type":"Struct","value":"typedef struct IMFExtendedCameraControllerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFExtendedCameraController * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFExtendedCameraController * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFExtendedCameraController * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetExtendedCameraControl )( \\r\\n            IMFExtendedCameraController * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG ulPropertyId,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFExtendedCameraControl **ppControl);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFExtendedCameraControllerVtbl;"},"IMFExtendedCameraIntrinsicModelVtbl":{"comment":"","exp":"","file":"mfidl.h","line":20559,"type":"Struct","value":"typedef struct IMFExtendedCameraIntrinsicModelVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFExtendedCameraIntrinsicModel * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFExtendedCameraIntrinsicModel * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFExtendedCameraIntrinsicModel * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetModel )( \\r\\n            IMFExtendedCameraIntrinsicModel * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFExtendedCameraIntrinsic_IntrinsicModel *pIntrinsicModel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetModel )( \\r\\n            IMFExtendedCameraIntrinsicModel * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const MFExtendedCameraIntrinsic_IntrinsicModel *pIntrinsicModel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDistortionModelType )( \\r\\n            IMFExtendedCameraIntrinsicModel * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFCameraIntrinsic_DistortionModelType *pDistortionModelType);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFExtendedCameraIntrinsicModelVtbl;"},"IMFExtendedCameraIntrinsicsDistortionModel6KTVtbl":{"comment":"","exp":"","file":"mfidl.h","line":20661,"type":"Struct","value":"typedef struct IMFExtendedCameraIntrinsicsDistortionModel6KTVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFExtendedCameraIntrinsicsDistortionModel6KT * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFExtendedCameraIntrinsicsDistortionModel6KT * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFExtendedCameraIntrinsicsDistortionModel6KT * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDistortionModel )( \\r\\n            IMFExtendedCameraIntrinsicsDistortionModel6KT * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFCameraIntrinsic_DistortionModel6KT *pDistortionModel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDistortionModel )( \\r\\n            IMFExtendedCameraIntrinsicsDistortionModel6KT * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const MFCameraIntrinsic_DistortionModel6KT *pDistortionModel);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFExtendedCameraIntrinsicsDistortionModel6KTVtbl;"},"IMFExtendedCameraIntrinsicsDistortionModelArcTanVtbl":{"comment":"","exp":"","file":"mfidl.h","line":20755,"type":"Struct","value":"typedef struct IMFExtendedCameraIntrinsicsDistortionModelArcTanVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFExtendedCameraIntrinsicsDistortionModelArcTan * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFExtendedCameraIntrinsicsDistortionModelArcTan * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFExtendedCameraIntrinsicsDistortionModelArcTan * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDistortionModel )( \\r\\n            IMFExtendedCameraIntrinsicsDistortionModelArcTan * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFCameraIntrinsic_DistortionModelArcTan *pDistortionModel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDistortionModel )( \\r\\n            IMFExtendedCameraIntrinsicsDistortionModelArcTan * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const MFCameraIntrinsic_DistortionModelArcTan *pDistortionModel);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFExtendedCameraIntrinsicsDistortionModelArcTanVtbl;"},"IMFExtendedCameraIntrinsicsVtbl":{"comment":"","exp":"","file":"mfidl.h","line":20869,"type":"Struct","value":"typedef struct IMFExtendedCameraIntrinsicsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFExtendedCameraIntrinsics * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFExtendedCameraIntrinsics * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFExtendedCameraIntrinsics * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitializeFromBuffer )( \\r\\n            IMFExtendedCameraIntrinsics * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_bytes_(dwBufferSize)  BYTE *pbBuffer,\\r\\n            \/* [in] *\/ DWORD dwBufferSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferSize )( \\r\\n            IMFExtendedCameraIntrinsics * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwBufferSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SerializeToBuffer )( \\r\\n            IMFExtendedCameraIntrinsics * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_writes_bytes_to_(*pdwBufferSize, *pdwBufferSize)  BYTE *pbBuffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Inout_  DWORD *pdwBufferSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIntrinsicModelCount )( \\r\\n            IMFExtendedCameraIntrinsics * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIntrinsicModelByIndex )( \\r\\n            IMFExtendedCameraIntrinsics * This,\\r\\n            \/* [in] *\/ DWORD dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFExtendedCameraIntrinsicModel **ppIntrinsicModel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddIntrinsicModel )( \\r\\n            IMFExtendedCameraIntrinsics * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFExtendedCameraIntrinsicModel *pIntrinsicModel);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFExtendedCameraIntrinsicsVtbl;"},"IMFExtendedDRMTypeSupportVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":5701,"type":"Struct","value":"typedef struct IMFExtendedDRMTypeSupportVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFExtendedDRMTypeSupport * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFExtendedDRMTypeSupport * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFExtendedDRMTypeSupport * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsTypeSupportedEx )( \\r\\n            IMFExtendedDRMTypeSupport * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR type,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BSTR keySystem,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  MF_MEDIA_ENGINE_CANPLAY *pAnswer);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFExtendedDRMTypeSupportVtbl;"},"IMFFieldOfUseMFTUnlockVtbl":{"comment":"","exp":"","file":"mfidl.h","line":16231,"type":"Struct","value":"typedef struct IMFFieldOfUseMFTUnlockVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFFieldOfUseMFTUnlock * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFFieldOfUseMFTUnlock * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFFieldOfUseMFTUnlock * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Unlock )( \\r\\n            __RPC__in IMFFieldOfUseMFTUnlock * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pUnkMFT);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFFieldOfUseMFTUnlockVtbl;"},"IMFFinalizableMediaSinkVtbl":{"comment":"","exp":"","file":"mfidl.h","line":14824,"type":"Struct","value":"typedef struct IMFFinalizableMediaSinkVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFFinalizableMediaSink * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFFinalizableMediaSink * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFFinalizableMediaSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( \\r\\n            IMFFinalizableMediaSink * This,\\r\\n            \/* [out] *\/ DWORD *pdwCharacteristics);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStreamSink )( \\r\\n            IMFFinalizableMediaSink * This,\\r\\n            \/* [in] *\/ DWORD dwStreamSinkIdentifier,\\r\\n            \/* [in] *\/ IMFMediaType *pMediaType,\\r\\n            \/* [out] *\/ IMFStreamSink **ppStreamSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveStreamSink )( \\r\\n            IMFFinalizableMediaSink * This,\\r\\n            \/* [in] *\/ DWORD dwStreamSinkIdentifier);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkCount )( \\r\\n            IMFFinalizableMediaSink * This,\\r\\n            \/* [out] *\/ DWORD *pcStreamSinkCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkByIndex )( \\r\\n            IMFFinalizableMediaSink * This,\\r\\n            \/* [in] *\/ DWORD dwIndex,\\r\\n            \/* [out] *\/ IMFStreamSink **ppStreamSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkById )( \\r\\n            IMFFinalizableMediaSink * This,\\r\\n            \/* [in] *\/ DWORD dwStreamSinkIdentifier,\\r\\n            \/* [out] *\/ IMFStreamSink **ppStreamSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPresentationClock )( \\r\\n            IMFFinalizableMediaSink * This,\\r\\n            \/* [in] *\/ IMFPresentationClock *pPresentationClock);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPresentationClock )( \\r\\n            IMFFinalizableMediaSink * This,\\r\\n            \/* [out] *\/ IMFPresentationClock **ppPresentationClock);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFFinalizableMediaSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginFinalize )( \\r\\n            IMFFinalizableMediaSink * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndFinalize )( \\r\\n            IMFFinalizableMediaSink * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFFinalizableMediaSinkVtbl;"},"IMFGetServiceVtbl":{"comment":"","exp":"","file":"mfidl.h","line":5074,"type":"Struct","value":"typedef struct IMFGetServiceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFGetService * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFGetService * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFGetService * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            __RPC__in IMFGetService * This,\\r\\n            \/* [in] *\/ __RPC__in REFGUID guidService,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt LPVOID *ppvObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFGetServiceVtbl;"},"IMFHDCPStatusVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":5027,"type":"Struct","value":"typedef struct IMFHDCPStatusVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFHDCPStatus * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFHDCPStatus * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFHDCPStatus * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Query )( \\r\\n            IMFHDCPStatus * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _Inout_  MF_HDCP_STATUS *pStatus,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _Inout_  BOOL *pfStatus);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Set )( \\r\\n            IMFHDCPStatus * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_HDCP_STATUS status);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFHDCPStatusVtbl;"},"IMFHttpDownloadRequestVtbl":{"comment":"","exp":"","file":"mfidl.h","line":17881,"type":"Struct","value":"typedef struct IMFHttpDownloadRequestVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFHttpDownloadRequest * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFHttpDownloadRequest * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddHeader )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR szHeader);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginSendRequest )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_opt_(cbPayload)  const BYTE *pbPayload,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG cbPayload,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncCallback *pCallback,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *punkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndSendRequest )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncResult *pResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginReceiveResponse )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncCallback *pCallback,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *punkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndReceiveResponse )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncResult *pResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginReadPayload )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(cb)  BYTE *pb,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG cb,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncCallback *pCallback,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *punkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndReadPayload )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  QWORD *pqwOffset,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *pcbRead);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryHeader )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR szHeaderName,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *ppszHeaderValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetURL )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *ppszURL);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *HasNullSourceOrigin )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfNullSourceOrigin);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTimeSeekResult )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  QWORD *pqwStartTime,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  QWORD *pqwStopTime,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  QWORD *pqwDuration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetHttpStatus )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwHttpStatus);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAtEndOfPayload )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfAtEndOfPayload);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTotalLength )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  QWORD *pqwTotalLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRangeEndOffset )( \\r\\n            IMFHttpDownloadRequest * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  QWORD *pqwRangeEnd);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            IMFHttpDownloadRequest * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFHttpDownloadRequestVtbl;"},"IMFHttpDownloadSessionProviderVtbl":{"comment":"","exp":"","file":"mfidl.h","line":18235,"type":"Struct","value":"typedef struct IMFHttpDownloadSessionProviderVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFHttpDownloadSessionProvider * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFHttpDownloadSessionProvider * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFHttpDownloadSessionProvider * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateHttpDownloadSession )( \\r\\n            IMFHttpDownloadSessionProvider * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR wszScheme,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFHttpDownloadSession **ppDownloadSession);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFHttpDownloadSessionProviderVtbl;"},"IMFHttpDownloadSessionVtbl":{"comment":"","exp":"","file":"mfidl.h","line":18125,"type":"Struct","value":"typedef struct IMFHttpDownloadSessionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFHttpDownloadSession * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFHttpDownloadSession * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFHttpDownloadSession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetServer )( \\r\\n            IMFHttpDownloadSession * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR szServerName,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD nPort);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateRequest )( \\r\\n            IMFHttpDownloadSession * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR szObjectName,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fBypassProxyCache,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fSecure,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCWSTR szVerb,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCWSTR szReferrer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFHttpDownloadRequest **ppRequest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            IMFHttpDownloadSession * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFHttpDownloadSessionVtbl;"},"IMFImageSharingEngineClassFactoryVtbl":{"comment":"","exp":"","file":"mfsharingengine.h","line":872,"type":"Struct","value":"typedef struct IMFImageSharingEngineClassFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFImageSharingEngineClassFactory * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFImageSharingEngineClassFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFImageSharingEngineClassFactory * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateInstanceFromUDN )( \\r\\n            IMFImageSharingEngineClassFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR pUniqueDeviceName,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFImageSharingEngine **ppEngine);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFImageSharingEngineClassFactoryVtbl;"},"IMFImageSharingEngineVtbl":{"comment":"","exp":"","file":"mfsharingengine.h","line":774,"type":"Struct","value":"typedef struct IMFImageSharingEngineVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFImageSharingEngine * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFImageSharingEngine * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFImageSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSource )( \\r\\n            IMFImageSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pStream);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IMFImageSharingEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DEVICE_INFO *pDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFImageSharingEngine * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFImageSharingEngineVtbl;"},"IMFInputTrustAuthorityVtbl":{"comment":"","exp":"","file":"mfidl.h","line":13221,"type":"Struct","value":"typedef struct IMFInputTrustAuthorityVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFInputTrustAuthority * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFInputTrustAuthority * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFInputTrustAuthority * This);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *GetDecrypter )( \\r\\n            IMFInputTrustAuthority * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Outptr_  void **ppv);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *RequestAccess )( \\r\\n            IMFInputTrustAuthority * This,\\r\\n            \/* [in] *\/ MFPOLICYMANAGER_ACTION Action,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFActivate **ppContentEnablerActivate);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *GetPolicy )( \\r\\n            IMFInputTrustAuthority * This,\\r\\n            \/* [in] *\/ MFPOLICYMANAGER_ACTION Action,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFOutputPolicy **ppPolicy);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BindAccess )( \\r\\n            IMFInputTrustAuthority * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS *pParam);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *UpdateAccess )( \\r\\n            IMFInputTrustAuthority * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS *pParam);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            __RPC__in IMFInputTrustAuthority * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFInputTrustAuthorityVtbl;"},"IMFLocalMFTRegistrationVtbl":{"comment":"","exp":"","file":"mfidl.h","line":16333,"type":"Struct","value":"typedef struct IMFLocalMFTRegistrationVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFLocalMFTRegistration * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFLocalMFTRegistration * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFLocalMFTRegistration * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterMFTs )( \\r\\n            __RPC__in IMFLocalMFTRegistration * This,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cMFTs) MFT_REGISTRATION_INFO *pMFTs,\\r\\n            DWORD cMFTs);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFLocalMFTRegistrationVtbl;"},"IMFMediaBufferVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":780,"type":"Struct","value":"typedef struct IMFMediaBufferVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaBuffer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaBuffer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Lock )( \\r\\n            IMFMediaBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_bytebuffer_to_(*pcbMaxLength, *pcbCurrentLength)  BYTE **ppbBuffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pcbMaxLength,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pcbCurrentLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Unlock )( \\r\\n            IMFMediaBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentLength )( \\r\\n            IMFMediaBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbCurrentLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentLength )( \\r\\n            IMFMediaBuffer * This,\\r\\n            \/* [in] *\/ DWORD cbCurrentLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaxLength )( \\r\\n            IMFMediaBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbMaxLength);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaBufferVtbl;"},"IMFMediaEngineAudioEndpointIdVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":2471,"type":"Struct","value":"typedef struct IMFMediaEngineAudioEndpointIdVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineAudioEndpointId * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineAudioEndpointId * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineAudioEndpointId * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAudioEndpointId )( \\r\\n            IMFMediaEngineAudioEndpointId * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCWSTR pszEndpointId);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAudioEndpointId )( \\r\\n            IMFMediaEngineAudioEndpointId * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *ppszEndpointId);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineAudioEndpointIdVtbl;"},"IMFMediaEngineClassFactory2Vtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":5609,"type":"Struct","value":"typedef struct IMFMediaEngineClassFactory2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineClassFactory2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineClassFactory2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineClassFactory2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMediaKeys2 )( \\r\\n            IMFMediaEngineClassFactory2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BSTR keySystem,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BSTR defaultCdmStorePath,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR inprivateCdmStorePath,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFMediaKeys **ppKeys);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineClassFactory2Vtbl;"},"IMFMediaEngineClassFactory3Vtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":8351,"type":"Struct","value":"typedef struct IMFMediaEngineClassFactory3Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineClassFactory3 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineClassFactory3 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineClassFactory3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMediaKeySystemAccess )( \\r\\n            IMFMediaEngineClassFactory3 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BSTR keySystem,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_count_(uSize)  IPropertyStore **ppSupportedConfigurationsArray,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  UINT uSize,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFMediaKeySystemAccess **ppKeyAccess);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineClassFactory3Vtbl;"},"IMFMediaEngineClassFactory4Vtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":8820,"type":"Struct","value":"typedef struct IMFMediaEngineClassFactory4Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineClassFactory4 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineClassFactory4 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineClassFactory4 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateContentDecryptionModuleFactory )( \\r\\n            IMFMediaEngineClassFactory4 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR keySystem,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Outptr_  LPVOID *ppvObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineClassFactory4Vtbl;"},"IMFMediaEngineClassFactoryExVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":5464,"type":"Struct","value":"typedef struct IMFMediaEngineClassFactoryExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineClassFactoryEx * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineClassFactoryEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineClassFactoryEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( \\r\\n            IMFMediaEngineClassFactoryEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAttributes *pAttr,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaEngine **ppPlayer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateTimeRange )( \\r\\n            IMFMediaEngineClassFactoryEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppTimeRange);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateError )( \\r\\n            IMFMediaEngineClassFactoryEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaError **ppError);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMediaSourceExtension )( \\r\\n            IMFMediaEngineClassFactoryEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAttributes *pAttr,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFMediaSourceExtension **ppMSE);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMediaKeys )( \\r\\n            IMFMediaEngineClassFactoryEx * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BSTR keySystem,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR cdmStorePath,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFMediaKeys **ppKeys);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsTypeSupported )( \\r\\n            IMFMediaEngineClassFactoryEx * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR type,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BSTR keySystem,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  BOOL *isSupported);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineClassFactoryExVtbl;"},"IMFMediaEngineClassFactoryVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":5330,"type":"Struct","value":"typedef struct IMFMediaEngineClassFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineClassFactory * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineClassFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineClassFactory * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( \\r\\n            IMFMediaEngineClassFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAttributes *pAttr,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaEngine **ppPlayer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateTimeRange )( \\r\\n            IMFMediaEngineClassFactory * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppTimeRange);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateError )( \\r\\n            IMFMediaEngineClassFactory * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaError **ppError);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineClassFactoryVtbl;"},"IMFMediaEngineEMENotifyVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":7996,"type":"Struct","value":"typedef struct IMFMediaEngineEMENotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineEMENotify * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineEMENotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineEMENotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Encrypted )( \\r\\n            IMFMediaEngineEMENotify * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_opt_(cb)  const BYTE *pbInitData,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cb,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BSTR bstrInitDataType);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *WaitingForKey )( \\r\\n            IMFMediaEngineEMENotify * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineEMENotifyVtbl;"},"IMFMediaEngineEMEVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":4163,"type":"Struct","value":"typedef struct IMFMediaEngineEMEVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineEME * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineEME * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineEME * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *get_Keys )( \\r\\n            IMFMediaEngineEME * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_result_maybenull_  IMFMediaKeys **keys);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMediaKeys )( \\r\\n            IMFMediaEngineEME * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  IMFMediaKeys *keys);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineEMEVtbl;"},"IMFMediaEngineExVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":1776,"type":"Struct","value":"typedef struct IMFMediaEngineExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetError )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaError **ppError);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetErrorCode )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MEDIA_ENGINE_ERR error);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSourceElements )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaEngineSrcElements *pSrcElements);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSource )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR pUrl);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentSource )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BSTR *ppUrl);\\r\\n        \\r\\n        USHORT ( STDMETHODCALLTYPE *GetNetworkState )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        MF_MEDIA_ENGINE_PRELOAD ( STDMETHODCALLTYPE *GetPreload )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPreload )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MEDIA_ENGINE_PRELOAD Preload);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffered )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppBuffered);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Load )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CanPlayType )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR type,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_MEDIA_ENGINE_CANPLAY *pAnswer);\\r\\n        \\r\\n        USHORT ( STDMETHODCALLTYPE *GetReadyState )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsSeeking )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetCurrentTime )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentTime )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double seekTime);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetStartTime )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetDuration )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsPaused )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetDefaultPlaybackRate )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDefaultPlaybackRate )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double Rate);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetPlaybackRate )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPlaybackRate )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double Rate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPlayed )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppPlayed);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSeekable )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppSeekable);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsEnded )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetAutoPlay )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAutoPlay )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL AutoPlay);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetLoop )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetLoop )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL Loop);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Play )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Pause )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetMuted )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMuted )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL Muted);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetVolume )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVolume )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double Volume);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *HasVideo )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *HasAudio )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNativeVideoSize )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cx,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cy);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoAspectRatio )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cx,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cy);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TransferVideoFrame )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDstSurf,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const MFVideoNormalizedRect *pSrc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const RECT *pDst,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const MFARGB *pBorderClr);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnVideoStreamTick )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONGLONG *pPts);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSourceFromByteStream )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFByteStream *pByteStream,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR pURL);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStatistics )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MEDIA_ENGINE_STATISTIC StatisticID,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pStatistic);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UpdateVideoStream )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const MFVideoNormalizedRect *pSrc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const RECT *pDst,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const MFARGB *pBorderClr);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetBalance )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBalance )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double balance);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsPlaybackRateSupported )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double rate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FrameStep )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL Forward);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetResourceCharacteristics )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pCharacteristics);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPresentationAttribute )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidMFAttribute,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNumberOfStreams )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwStreamCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamAttribute )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidMFAttribute,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamSelection )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pEnabled);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamSelection )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL Enabled);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ApplyStreamSelections )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsProtected )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pProtected);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InsertVideoEffect )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pEffect,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fOptional);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InsertAudioEffect )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pEffect,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fOptional);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllEffects )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetTimelineMarkerTimer )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double timeToFire);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTimelineMarkerTimer )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *pTimeToFire);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CancelTimelineMarkerTimer )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsStereo3D )( \\r\\n            IMFMediaEngineEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStereo3DFramePackingMode )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_MEDIA_ENGINE_S3D_PACKING_MODE *packMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStereo3DFramePackingMode )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MEDIA_ENGINE_S3D_PACKING_MODE packMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStereo3DRenderMode )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF3DVideoOutputType *outputType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStereo3DRenderMode )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF3DVideoOutputType outputType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnableWindowlessSwapchainMode )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fEnable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoSwapchainHandle )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HANDLE *phSwapchain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnableHorizontalMirrorMode )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fEnable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAudioStreamCategory )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pCategory);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAudioStreamCategory )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 category);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAudioEndpointRole )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pRole);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAudioEndpointRole )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 role);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRealTimeMode )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfEnabled);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRealTimeMode )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fEnable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentTimeEx )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double seekTime,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MEDIA_ENGINE_SEEK_MODE seekMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnableTimeUpdateTimer )( \\r\\n            IMFMediaEngineEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fEnableTimer);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineExVtbl;"},"IMFMediaEngineExtensionVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":2604,"type":"Struct","value":"typedef struct IMFMediaEngineExtensionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineExtension * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineExtension * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineExtension * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CanPlayType )( \\r\\n            IMFMediaEngineExtension * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL AudioOnly,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR MimeType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_MEDIA_ENGINE_CANPLAY *pAnswer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginCreateObject )( \\r\\n            IMFMediaEngineExtension * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR bstrURL,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFByteStream *pByteStream,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_OBJECT_TYPE type,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IUnknown **ppIUnknownCancelCookie,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncCallback *pCallback,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *punkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CancelObjectCreation )( \\r\\n            IMFMediaEngineExtension * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pIUnknownCancelCookie);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndCreateObject )( \\r\\n            IMFMediaEngineExtension * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IUnknown **ppObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineExtensionVtbl;"},"IMFMediaEngineNeedKeyNotifyVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":4430,"type":"Struct","value":"typedef struct IMFMediaEngineNeedKeyNotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineNeedKeyNotify * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineNeedKeyNotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineNeedKeyNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *NeedKey )( \\r\\n            IMFMediaEngineNeedKeyNotify * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_opt_(cb)  const BYTE *initData,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cb);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineNeedKeyNotifyVtbl;"},"IMFMediaEngineNotifyVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":772,"type":"Struct","value":"typedef struct IMFMediaEngineNotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineNotify * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineNotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineNotify * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EventNotify )( \\r\\n            IMFMediaEngineNotify * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD event,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD_PTR param1,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD param2);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineNotifyVtbl;"},"IMFMediaEngineOPMInfoVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":5140,"type":"Struct","value":"typedef struct IMFMediaEngineOPMInfoVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineOPMInfo * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineOPMInfo * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineOPMInfo * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOPMInfo )( \\r\\n            IMFMediaEngineOPMInfo * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_MEDIA_ENGINE_OPM_STATUS *pStatus,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pConstricted);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineOPMInfoVtbl;"},"IMFMediaEngineProtectedContentVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":2771,"type":"Struct","value":"typedef struct IMFMediaEngineProtectedContentVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineProtectedContent * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineProtectedContent * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineProtectedContent * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ShareResources )( \\r\\n            IMFMediaEngineProtectedContent * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  IUnknown *pUnkDeviceContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRequiredProtections )( \\r\\n            IMFMediaEngineProtectedContent * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pFrameProtectionFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOPMWindow )( \\r\\n            IMFMediaEngineProtectedContent * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HWND hwnd);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TransferVideoFrame )( \\r\\n            IMFMediaEngineProtectedContent * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDstSurf,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const MFVideoNormalizedRect *pSrc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const RECT *pDst,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const MFARGB *pBorderClr,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pFrameProtectionFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetContentProtectionManager )( \\r\\n            IMFMediaEngineProtectedContent * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFContentProtectionManager *pCPM);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetApplicationCertificate )( \\r\\n            IMFMediaEngineProtectedContent * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(cbBlob)  const BYTE *pbBlob,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD cbBlob);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineProtectedContentVtbl;"},"IMFMediaEngineSrcElementsExVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":4265,"type":"Struct","value":"typedef struct IMFMediaEngineSrcElementsExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineSrcElementsEx * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineSrcElementsEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineSrcElementsEx * This);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetLength )( \\r\\n            IMFMediaEngineSrcElementsEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetURL )( \\r\\n            IMFMediaEngineSrcElementsEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BSTR *pURL);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetType )( \\r\\n            IMFMediaEngineSrcElementsEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BSTR *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMedia )( \\r\\n            IMFMediaEngineSrcElementsEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BSTR *pMedia);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddElement )( \\r\\n            IMFMediaEngineSrcElementsEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  BSTR pURL,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  BSTR pType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  BSTR pMedia);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllElements )( \\r\\n            IMFMediaEngineSrcElementsEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddElementEx )( \\r\\n            IMFMediaEngineSrcElementsEx * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR pURL,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR pType,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR pMedia,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR keySystem);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetKeySystem )( \\r\\n            IMFMediaEngineSrcElementsEx * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation] *\/ \\r\\n            _Outptr_result_maybenull_  BSTR *pType);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineSrcElementsExVtbl;"},"IMFMediaEngineSrcElementsVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":884,"type":"Struct","value":"typedef struct IMFMediaEngineSrcElementsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineSrcElements * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineSrcElements * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineSrcElements * This);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetLength )( \\r\\n            IMFMediaEngineSrcElements * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetURL )( \\r\\n            IMFMediaEngineSrcElements * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BSTR *pURL);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetType )( \\r\\n            IMFMediaEngineSrcElements * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BSTR *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMedia )( \\r\\n            IMFMediaEngineSrcElements * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BSTR *pMedia);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddElement )( \\r\\n            IMFMediaEngineSrcElements * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  BSTR pURL,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  BSTR pType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  BSTR pMedia);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllElements )( \\r\\n            IMFMediaEngineSrcElements * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineSrcElementsVtbl;"},"IMFMediaEngineSupportsSourceTransferVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":5803,"type":"Struct","value":"typedef struct IMFMediaEngineSupportsSourceTransferVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineSupportsSourceTransfer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineSupportsSourceTransfer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineSupportsSourceTransfer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ShouldTransferSource )( \\r\\n            IMFMediaEngineSupportsSourceTransfer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfShouldTransfer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DetachMediaSource )( \\r\\n            IMFMediaEngineSupportsSourceTransfer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFByteStream **ppByteStream,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFMediaSource **ppMediaSource,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFMediaSourceExtension **ppMSE);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AttachMediaSource )( \\r\\n            IMFMediaEngineSupportsSourceTransfer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFByteStream *pByteStream,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaSource *pMediaSource,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFMediaSourceExtension *pMSE);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineSupportsSourceTransferVtbl;"},"IMFMediaEngineTransferSourceVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":5918,"type":"Struct","value":"typedef struct IMFMediaEngineTransferSourceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineTransferSource * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineTransferSource * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineTransferSource * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TransferSourceToMediaEngine )( \\r\\n            IMFMediaEngineTransferSource * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaEngine *destination);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineTransferSourceVtbl;"},"IMFMediaEngineVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":1202,"type":"Struct","value":"typedef struct IMFMediaEngineVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetError )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaError **ppError);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetErrorCode )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MEDIA_ENGINE_ERR error);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSourceElements )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaEngineSrcElements *pSrcElements);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSource )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR pUrl);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentSource )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BSTR *ppUrl);\\r\\n        \\r\\n        USHORT ( STDMETHODCALLTYPE *GetNetworkState )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        MF_MEDIA_ENGINE_PRELOAD ( STDMETHODCALLTYPE *GetPreload )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPreload )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MEDIA_ENGINE_PRELOAD Preload);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffered )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppBuffered);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Load )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CanPlayType )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR type,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_MEDIA_ENGINE_CANPLAY *pAnswer);\\r\\n        \\r\\n        USHORT ( STDMETHODCALLTYPE *GetReadyState )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsSeeking )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetCurrentTime )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentTime )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double seekTime);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetStartTime )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetDuration )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsPaused )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetDefaultPlaybackRate )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDefaultPlaybackRate )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double Rate);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetPlaybackRate )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPlaybackRate )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double Rate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPlayed )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppPlayed);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSeekable )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppSeekable);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsEnded )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetAutoPlay )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAutoPlay )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL AutoPlay);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetLoop )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetLoop )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL Loop);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Play )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Pause )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetMuted )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMuted )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL Muted);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetVolume )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVolume )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double Volume);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *HasVideo )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *HasAudio )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNativeVideoSize )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cx,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cy);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoAspectRatio )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cx,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cy);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFMediaEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TransferVideoFrame )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDstSurf,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const MFVideoNormalizedRect *pSrc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const RECT *pDst,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const MFARGB *pBorderClr);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnVideoStreamTick )( \\r\\n            IMFMediaEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONGLONG *pPts);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineVtbl;"},"IMFMediaEngineWebSupportVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":3011,"type":"Struct","value":"typedef struct IMFMediaEngineWebSupportVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEngineWebSupport * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEngineWebSupport * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEngineWebSupport * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *ShouldDelayTheLoadEvent )( \\r\\n            IMFMediaEngineWebSupport * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ConnectWebAudio )( \\r\\n            IMFMediaEngineWebSupport * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSampleRate,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IAudioSourceProvider **ppSourceProvider);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DisconnectWebAudio )( \\r\\n            IMFMediaEngineWebSupport * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEngineWebSupportVtbl;"},"IMFMediaErrorVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":468,"type":"Struct","value":"typedef struct IMFMediaErrorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaError * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaError * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaError * This);\\r\\n        \\r\\n        USHORT ( STDMETHODCALLTYPE *GetErrorCode )( \\r\\n            IMFMediaError * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetExtendedErrorCode )( \\r\\n            IMFMediaError * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetErrorCode )( \\r\\n            IMFMediaError * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MEDIA_ENGINE_ERR error);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetExtendedErrorCode )( \\r\\n            IMFMediaError * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HRESULT error);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaErrorVtbl;"},"IMFMediaEventGeneratorVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":4166,"type":"Struct","value":"typedef struct IMFMediaEventGeneratorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaEventGenerator * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaEventGenerator * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaEventGenerator * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEvent )( \\r\\n            __RPC__in IMFMediaEventGenerator * This,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( \\r\\n            IMFMediaEventGenerator * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( \\r\\n            IMFMediaEventGenerator * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( \\r\\n            __RPC__in IMFMediaEventGenerator * This,\\r\\n            \/* [in] *\/ MediaEventType met,\\r\\n            \/* [in] *\/ __RPC__in REFGUID guidExtendedType,\\r\\n            \/* [in] *\/ HRESULT hrStatus,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const PROPVARIANT *pvValue);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEventGeneratorVtbl;"},"IMFMediaEventQueueVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":5147,"type":"Struct","value":"typedef struct IMFMediaEventQueueVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaEventQueue * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaEventQueue * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaEventQueue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEvent )( \\r\\n            IMFMediaEventQueue * This,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( \\r\\n            IMFMediaEventQueue * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( \\r\\n            IMFMediaEventQueue * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( \\r\\n            IMFMediaEventQueue * This,\\r\\n            \/* [in] *\/ IMFMediaEvent *pEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueueEventParamVar )( \\r\\n            IMFMediaEventQueue * This,\\r\\n            \/* [in] *\/ MediaEventType met,\\r\\n            \/* [in] *\/ REFGUID guidExtendedType,\\r\\n            \/* [in] *\/ HRESULT hrStatus,\\r\\n            \/* [unique][in] *\/ const PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueueEventParamUnk )( \\r\\n            IMFMediaEventQueue * This,\\r\\n            \/* [in] *\/ MediaEventType met,\\r\\n            \/* [in] *\/ REFGUID guidExtendedType,\\r\\n            \/* [in] *\/ HRESULT hrStatus,\\r\\n            \/* [unique][in] *\/ IUnknown *pUnk);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFMediaEventQueue * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEventQueueVtbl;"},"IMFMediaEventVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":3796,"type":"Struct","value":"typedef struct IMFMediaEventVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaEvent * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaEvent * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in_opt IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            __RPC__in IMFMediaEvent * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [string][in] *\/ __RPC__in_string LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            __RPC__in IMFMediaEvent * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            __RPC__in IMFMediaEvent * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetType )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            \/* [out] *\/ __RPC__out MediaEventType *pmet);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetExtendedType )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidExtendedType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStatus )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            \/* [out] *\/ __RPC__out HRESULT *phrStatus);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetValue )( \\r\\n            __RPC__in IMFMediaEvent * This,\\r\\n            \/* [out] *\/ __RPC__out PROPVARIANT *pvValue);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaEventVtbl;"},"IMFMediaKeySession2Vtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":8647,"type":"Struct","value":"typedef struct IMFMediaKeySession2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaKeySession2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaKeySession2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaKeySession2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetError )( \\r\\n            IMFMediaKeySession2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  USHORT *code,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  DWORD *systemCode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *get_KeySystem )( \\r\\n            IMFMediaKeySession2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  BSTR *keySystem);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *get_SessionId )( \\r\\n            IMFMediaKeySession2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  BSTR *sessionId);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Update )( \\r\\n            IMFMediaKeySession2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_(cb)  const BYTE *key,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cb);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            IMFMediaKeySession2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *get_KeyStatuses )( \\r\\n            IMFMediaKeySession2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Outptr_result_buffer_(*puSize)  MFMediaKeyStatus **pKeyStatusesArray,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  UINT *puSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Load )( \\r\\n            IMFMediaKeySession2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BSTR bstrSessionId,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  BOOL *pfLoaded);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GenerateRequest )( \\r\\n            IMFMediaKeySession2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  BSTR initDataType,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_(cb)  const BYTE *pbInitData,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cb);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *get_Expiration )( \\r\\n            IMFMediaKeySession2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  double *dblExpiration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Remove )( \\r\\n            IMFMediaKeySession2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFMediaKeySession2 * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaKeySession2Vtbl;"},"IMFMediaKeySessionNotify2Vtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":8112,"type":"Struct","value":"typedef struct IMFMediaKeySessionNotify2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaKeySessionNotify2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaKeySessionNotify2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaKeySessionNotify2 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *KeyMessage )( \\r\\n            IMFMediaKeySessionNotify2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR destinationURL,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_(cb)  const BYTE *message,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cb);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *KeyAdded )( \\r\\n            IMFMediaKeySessionNotify2 * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *KeyError )( \\r\\n            IMFMediaKeySessionNotify2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  USHORT code,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD systemCode);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *KeyMessage2 )( \\r\\n            IMFMediaKeySessionNotify2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  MF_MEDIAKEYSESSION_MESSAGETYPE eMessageType,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR destinationURL,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_(cbMessage)  const BYTE *pbMessage,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cbMessage);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *KeyStatusChange )( \\r\\n            IMFMediaKeySessionNotify2 * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaKeySessionNotify2Vtbl;"},"IMFMediaKeySessionNotifyVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":4817,"type":"Struct","value":"typedef struct IMFMediaKeySessionNotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaKeySessionNotify * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaKeySessionNotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaKeySessionNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *KeyMessage )( \\r\\n            IMFMediaKeySessionNotify * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR destinationURL,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_(cb)  const BYTE *message,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cb);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *KeyAdded )( \\r\\n            IMFMediaKeySessionNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *KeyError )( \\r\\n            IMFMediaKeySessionNotify * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  USHORT code,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD systemCode);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaKeySessionNotifyVtbl;"},"IMFMediaKeySessionVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":4689,"type":"Struct","value":"typedef struct IMFMediaKeySessionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaKeySession * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaKeySession * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaKeySession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetError )( \\r\\n            IMFMediaKeySession * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  USHORT *code,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  DWORD *systemCode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *get_KeySystem )( \\r\\n            IMFMediaKeySession * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  BSTR *keySystem);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *get_SessionId )( \\r\\n            IMFMediaKeySession * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  BSTR *sessionId);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Update )( \\r\\n            IMFMediaKeySession * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_(cb)  const BYTE *key,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cb);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            IMFMediaKeySession * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaKeySessionVtbl;"},"IMFMediaKeySystemAccessVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":8245,"type":"Struct","value":"typedef struct IMFMediaKeySystemAccessVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaKeySystemAccess * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaKeySystemAccess * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaKeySystemAccess * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMediaKeys )( \\r\\n            IMFMediaKeySystemAccess * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  IPropertyStore *pCdmCustomConfig,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFMediaKeys2 **ppKeys);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *get_SupportedConfiguration )( \\r\\n            IMFMediaKeySystemAccess * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IPropertyStore **ppSupportedConfiguration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *get_KeySystem )( \\r\\n            IMFMediaKeySystemAccess * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  BSTR *pKeySystem);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaKeySystemAccessVtbl;"},"IMFMediaKeys2Vtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":8474,"type":"Struct","value":"typedef struct IMFMediaKeys2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaKeys2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaKeys2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaKeys2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSession )( \\r\\n            IMFMediaKeys2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR mimeType,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_opt_(cb)  const BYTE *initData,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  DWORD cb,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_opt_(cbCustomData)  const BYTE *customData,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cbCustomData,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  IMFMediaKeySessionNotify *notify,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFMediaKeySession **ppSession);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *get_KeySystem )( \\r\\n            IMFMediaKeys2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  BSTR *keySystem);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFMediaKeys2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSuspendNotify )( \\r\\n            IMFMediaKeys2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFCdmSuspendNotify **notify);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSession2 )( \\r\\n            IMFMediaKeys2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  MF_MEDIAKEYSESSION_TYPE eSessionType,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  IMFMediaKeySessionNotify2 *pMFMediaKeySessionNotify2,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFMediaKeySession2 **ppSession);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetServerCertificate )( \\r\\n            IMFMediaKeys2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_opt_(cb)  const BYTE *pbServerCertificate,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cb);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDOMException )( \\r\\n            IMFMediaKeys2 * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  HRESULT systemCode,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  HRESULT *code);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaKeys2Vtbl;"},"IMFMediaKeysVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":4536,"type":"Struct","value":"typedef struct IMFMediaKeysVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaKeys * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaKeys * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaKeys * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateSession )( \\r\\n            IMFMediaKeys * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  BSTR mimeType,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_opt_(cb)  const BYTE *initData,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  DWORD cb,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_opt_(cbCustomData)  const BYTE *customData,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cbCustomData,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  IMFMediaKeySessionNotify *notify,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFMediaKeySession **ppSession);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *get_KeySystem )( \\r\\n            IMFMediaKeys * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  BSTR *keySystem);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFMediaKeys * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSuspendNotify )( \\r\\n            IMFMediaKeys * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFCdmSuspendNotify **notify);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaKeysVtbl;"},"IMFMediaSessionVtbl":{"comment":"","exp":"","file":"mfidl.h","line":1073,"type":"Struct","value":"typedef struct IMFMediaSessionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaSession * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaSession * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaSession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEvent )( \\r\\n            __RPC__in IMFMediaSession * This,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( \\r\\n            IMFMediaSession * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( \\r\\n            IMFMediaSession * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( \\r\\n            __RPC__in IMFMediaSession * This,\\r\\n            \/* [in] *\/ MediaEventType met,\\r\\n            \/* [in] *\/ __RPC__in REFGUID guidExtendedType,\\r\\n            \/* [in] *\/ HRESULT hrStatus,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetTopology )( \\r\\n            __RPC__in IMFMediaSession * This,\\r\\n            \/* [in] *\/ DWORD dwSetTopologyFlags,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFTopology *pTopology);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ClearTopologies )( \\r\\n            __RPC__in IMFMediaSession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            __RPC__in IMFMediaSession * This,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const GUID *pguidTimeFormat,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const PROPVARIANT *pvarStartPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Pause )( \\r\\n            __RPC__in IMFMediaSession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            __RPC__in IMFMediaSession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            __RPC__in IMFMediaSession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            __RPC__in IMFMediaSession * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetClock )( \\r\\n            __RPC__in IMFMediaSession * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFClock **ppClock);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSessionCapabilities )( \\r\\n            __RPC__in IMFMediaSession * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullTopology )( \\r\\n            __RPC__in IMFMediaSession * This,\\r\\n            \/* [in] *\/ DWORD dwGetFullTopologyFlags,\\r\\n            \/* [in] *\/ TOPOID TopoId,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFTopology **ppFullTopology);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSessionVtbl;"},"IMFMediaSharingEngineClassFactoryVtbl":{"comment":"","exp":"","file":"mfsharingengine.h","line":673,"type":"Struct","value":"typedef struct IMFMediaSharingEngineClassFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaSharingEngineClassFactory * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaSharingEngineClassFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaSharingEngineClassFactory * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( \\r\\n            IMFMediaSharingEngineClassFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAttributes *pAttr,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaSharingEngine **ppEngine);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSharingEngineClassFactoryVtbl;"},"IMFMediaSharingEngineVtbl":{"comment":"","exp":"","file":"mfsharingengine.h","line":258,"type":"Struct","value":"typedef struct IMFMediaSharingEngineVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetError )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaError **ppError);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetErrorCode )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MEDIA_ENGINE_ERR error);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSourceElements )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaEngineSrcElements *pSrcElements);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSource )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR pUrl);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentSource )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BSTR *ppUrl);\\r\\n        \\r\\n        USHORT ( STDMETHODCALLTYPE *GetNetworkState )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        MF_MEDIA_ENGINE_PRELOAD ( STDMETHODCALLTYPE *GetPreload )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPreload )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MEDIA_ENGINE_PRELOAD Preload);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffered )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppBuffered);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Load )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CanPlayType )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR type,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_MEDIA_ENGINE_CANPLAY *pAnswer);\\r\\n        \\r\\n        USHORT ( STDMETHODCALLTYPE *GetReadyState )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsSeeking )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetCurrentTime )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentTime )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double seekTime);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetStartTime )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetDuration )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsPaused )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetDefaultPlaybackRate )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDefaultPlaybackRate )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double Rate);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetPlaybackRate )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPlaybackRate )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double Rate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPlayed )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppPlayed);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSeekable )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppSeekable);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsEnded )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetAutoPlay )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAutoPlay )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL AutoPlay);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetLoop )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetLoop )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL Loop);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Play )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Pause )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetMuted )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMuted )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL Muted);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetVolume )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVolume )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double Volume);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *HasVideo )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *HasAudio )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNativeVideoSize )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cx,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cy);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoAspectRatio )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cx,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *cy);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFMediaSharingEngine * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *TransferVideoFrame )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pDstSurf,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const MFVideoNormalizedRect *pSrc,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const RECT *pDst,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const MFARGB *pBorderClr);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnVideoStreamTick )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONGLONG *pPts);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IMFMediaSharingEngine * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DEVICE_INFO *pDevice);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSharingEngineVtbl;"},"IMFMediaSinkPrerollVtbl":{"comment":"","exp":"","file":"mfidl.h","line":14728,"type":"Struct","value":"typedef struct IMFMediaSinkPrerollVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaSinkPreroll * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaSinkPreroll * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaSinkPreroll * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyPreroll )( \\r\\n            __RPC__in IMFMediaSinkPreroll * This,\\r\\n            \/* [in] *\/ MFTIME hnsUpcomingStartTime);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSinkPrerollVtbl;"},"IMFMediaSinkVtbl":{"comment":"","exp":"","file":"mfidl.h","line":2390,"type":"Struct","value":"typedef struct IMFMediaSinkVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaSink * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaSink * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( \\r\\n            __RPC__in IMFMediaSink * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwCharacteristics);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStreamSink )( \\r\\n            __RPC__in IMFMediaSink * This,\\r\\n            \/* [in] *\/ DWORD dwStreamSinkIdentifier,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFMediaType *pMediaType,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFStreamSink **ppStreamSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveStreamSink )( \\r\\n            __RPC__in IMFMediaSink * This,\\r\\n            \/* [in] *\/ DWORD dwStreamSinkIdentifier);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkCount )( \\r\\n            __RPC__in IMFMediaSink * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcStreamSinkCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkByIndex )( \\r\\n            __RPC__in IMFMediaSink * This,\\r\\n            \/* [in] *\/ DWORD dwIndex,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFStreamSink **ppStreamSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkById )( \\r\\n            __RPC__in IMFMediaSink * This,\\r\\n            \/* [in] *\/ DWORD dwStreamSinkIdentifier,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFStreamSink **ppStreamSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPresentationClock )( \\r\\n            __RPC__in IMFMediaSink * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFPresentationClock *pPresentationClock);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPresentationClock )( \\r\\n            __RPC__in IMFMediaSink * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFPresentationClock **ppPresentationClock);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            __RPC__in IMFMediaSink * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSinkVtbl;"},"IMFMediaSource2Vtbl":{"comment":"","exp":"","file":"mfidl.h","line":18353,"type":"Struct","value":"typedef struct IMFMediaSource2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaSource2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaSource2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEvent )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [out] *\/ IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [in] *\/ MediaEventType met,\\r\\n            \/* [in] *\/ REFGUID guidExtendedType,\\r\\n            \/* [in] *\/ HRESULT hrStatus,\\r\\n            \/* [unique][in] *\/ const PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [out] *\/ DWORD *pdwCharacteristics);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *CreatePresentationDescriptor )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFPresentationDescriptor **ppPresentationDescriptor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [in] *\/ IMFPresentationDescriptor *pPresentationDescriptor,\\r\\n            \/* [unique][in] *\/ const GUID *pguidTimeFormat,\\r\\n            \/* [unique][in] *\/ const PROPVARIANT *pvarStartPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            IMFMediaSource2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Pause )( \\r\\n            IMFMediaSource2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFMediaSource2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSourceAttributes )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [out] *\/ IMFAttributes **ppAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamAttributes )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [in] *\/ DWORD dwStreamIdentifier,\\r\\n            \/* [out] *\/ IMFAttributes **ppAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetD3DManager )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [in] *\/ IUnknown *pManager);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMediaType )( \\r\\n            IMFMediaSource2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamID,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSource2Vtbl;"},"IMFMediaSourceExVtbl":{"comment":"","exp":"","file":"mfidl.h","line":1885,"type":"Struct","value":"typedef struct IMFMediaSourceExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaSourceEx * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaSourceEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaSourceEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEvent )( \\r\\n            __RPC__in IMFMediaSourceEx * This,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( \\r\\n            IMFMediaSourceEx * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( \\r\\n            IMFMediaSourceEx * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( \\r\\n            __RPC__in IMFMediaSourceEx * This,\\r\\n            \/* [in] *\/ MediaEventType met,\\r\\n            \/* [in] *\/ __RPC__in REFGUID guidExtendedType,\\r\\n            \/* [in] *\/ HRESULT hrStatus,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( \\r\\n            __RPC__in IMFMediaSourceEx * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwCharacteristics);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *CreatePresentationDescriptor )( \\r\\n            IMFMediaSourceEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFPresentationDescriptor **ppPresentationDescriptor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            __RPC__in IMFMediaSourceEx * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const GUID *pguidTimeFormat,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const PROPVARIANT *pvarStartPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            __RPC__in IMFMediaSourceEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Pause )( \\r\\n            __RPC__in IMFMediaSourceEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            __RPC__in IMFMediaSourceEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSourceAttributes )( \\r\\n            __RPC__in IMFMediaSourceEx * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFAttributes **ppAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamAttributes )( \\r\\n            __RPC__in IMFMediaSourceEx * This,\\r\\n            \/* [in] *\/ DWORD dwStreamIdentifier,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFAttributes **ppAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetD3DManager )( \\r\\n            __RPC__in IMFMediaSourceEx * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pManager);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSourceExVtbl;"},"IMFMediaSourceExtensionLiveSeekableRangeVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":4056,"type":"Struct","value":"typedef struct IMFMediaSourceExtensionLiveSeekableRangeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaSourceExtensionLiveSeekableRange * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaSourceExtensionLiveSeekableRange * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaSourceExtensionLiveSeekableRange * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetLiveSeekableRange )( \\r\\n            IMFMediaSourceExtensionLiveSeekableRange * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double start,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double end);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ClearLiveSeekableRange )( \\r\\n            IMFMediaSourceExtensionLiveSeekableRange * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSourceExtensionLiveSeekableRangeVtbl;"},"IMFMediaSourceExtensionNotifyVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":3142,"type":"Struct","value":"typedef struct IMFMediaSourceExtensionNotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaSourceExtensionNotify * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaSourceExtensionNotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaSourceExtensionNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OnSourceOpen )( \\r\\n            IMFMediaSourceExtensionNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OnSourceEnded )( \\r\\n            IMFMediaSourceExtensionNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OnSourceClose )( \\r\\n            IMFMediaSourceExtensionNotify * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSourceExtensionNotifyVtbl;"},"IMFMediaSourceExtensionVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":3902,"type":"Struct","value":"typedef struct IMFMediaSourceExtensionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaSourceExtension * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaSourceExtension * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaSourceExtension * This);\\r\\n        \\r\\n        IMFSourceBufferList *( STDMETHODCALLTYPE *GetSourceBuffers )( \\r\\n            IMFMediaSourceExtension * This);\\r\\n        \\r\\n        IMFSourceBufferList *( STDMETHODCALLTYPE *GetActiveSourceBuffers )( \\r\\n            IMFMediaSourceExtension * This);\\r\\n        \\r\\n        MF_MSE_READY ( STDMETHODCALLTYPE *GetReadyState )( \\r\\n            IMFMediaSourceExtension * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetDuration )( \\r\\n            IMFMediaSourceExtension * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDuration )( \\r\\n            IMFMediaSourceExtension * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double duration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddSourceBuffer )( \\r\\n            IMFMediaSourceExtension * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR type,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFSourceBufferNotify *pNotify,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFSourceBuffer **ppSourceBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveSourceBuffer )( \\r\\n            IMFMediaSourceExtension * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFSourceBuffer *pSourceBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEndOfStream )( \\r\\n            IMFMediaSourceExtension * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MSE_ERROR error);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsTypeSupported )( \\r\\n            IMFMediaSourceExtension * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BSTR type);\\r\\n        \\r\\n        IMFSourceBuffer *( STDMETHODCALLTYPE *GetSourceBuffer )( \\r\\n            IMFMediaSourceExtension * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSourceExtensionVtbl;"},"IMFMediaSourcePresentationProviderVtbl":{"comment":"","exp":"","file":"mfidl.h","line":10756,"type":"Struct","value":"typedef struct IMFMediaSourcePresentationProviderVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaSourcePresentationProvider * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaSourcePresentationProvider * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaSourcePresentationProvider * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ForceEndOfPresentation )( \\r\\n            __RPC__in IMFMediaSourcePresentationProvider * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSourcePresentationProviderVtbl;"},"IMFMediaSourceTopologyProviderVtbl":{"comment":"","exp":"","file":"mfidl.h","line":10675,"type":"Struct","value":"typedef struct IMFMediaSourceTopologyProviderVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaSourceTopologyProvider * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaSourceTopologyProvider * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaSourceTopologyProvider * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaSourceTopology )( \\r\\n            __RPC__in IMFMediaSourceTopologyProvider * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFTopology **ppTopology);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSourceTopologyProviderVtbl;"},"IMFMediaSourceVtbl":{"comment":"","exp":"","file":"mfidl.h","line":1700,"type":"Struct","value":"typedef struct IMFMediaSourceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaSource * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaSource * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaSource * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEvent )( \\r\\n            __RPC__in IMFMediaSource * This,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( \\r\\n            IMFMediaSource * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( \\r\\n            IMFMediaSource * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( \\r\\n            __RPC__in IMFMediaSource * This,\\r\\n            \/* [in] *\/ MediaEventType met,\\r\\n            \/* [in] *\/ __RPC__in REFGUID guidExtendedType,\\r\\n            \/* [in] *\/ HRESULT hrStatus,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( \\r\\n            __RPC__in IMFMediaSource * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwCharacteristics);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *CreatePresentationDescriptor )( \\r\\n            IMFMediaSource * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFPresentationDescriptor **ppPresentationDescriptor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            __RPC__in IMFMediaSource * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const GUID *pguidTimeFormat,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const PROPVARIANT *pvarStartPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            __RPC__in IMFMediaSource * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Pause )( \\r\\n            __RPC__in IMFMediaSource * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            __RPC__in IMFMediaSource * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaSourceVtbl;"},"IMFMediaStream2Vtbl":{"comment":"","exp":"","file":"mfidl.h","line":18543,"type":"Struct","value":"typedef struct IMFMediaStream2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaStream2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaStream2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaStream2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEvent )( \\r\\n            IMFMediaStream2 * This,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [out] *\/ IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( \\r\\n            IMFMediaStream2 * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( \\r\\n            IMFMediaStream2 * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( \\r\\n            IMFMediaStream2 * This,\\r\\n            \/* [in] *\/ MediaEventType met,\\r\\n            \/* [in] *\/ REFGUID guidExtendedType,\\r\\n            \/* [in] *\/ HRESULT hrStatus,\\r\\n            \/* [unique][in] *\/ const PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaSource )( \\r\\n            IMFMediaStream2 * This,\\r\\n            \/* [out] *\/ IMFMediaSource **ppMediaSource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamDescriptor )( \\r\\n            IMFMediaStream2 * This,\\r\\n            \/* [out] *\/ IMFStreamDescriptor **ppStreamDescriptor);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *RequestSample )( \\r\\n            IMFMediaStream2 * This,\\r\\n            \/* [in] *\/ IUnknown *pToken);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamState )( \\r\\n            IMFMediaStream2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_STREAM_STATE value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamState )( \\r\\n            IMFMediaStream2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_STREAM_STATE *value);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaStream2Vtbl;"},"IMFMediaStreamSourceSampleRequestVtbl":{"comment":"","exp":"","file":"mfidl.h","line":16725,"type":"Struct","value":"typedef struct IMFMediaStreamSourceSampleRequestVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaStreamSourceSampleRequest * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaStreamSourceSampleRequest * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaStreamSourceSampleRequest * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSample )( \\r\\n            __RPC__in IMFMediaStreamSourceSampleRequest * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFSample *value);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaStreamSourceSampleRequestVtbl;"},"IMFMediaStreamVtbl":{"comment":"","exp":"","file":"mfidl.h","line":2184,"type":"Struct","value":"typedef struct IMFMediaStreamVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaStream * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaStream * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEvent )( \\r\\n            __RPC__in IMFMediaStream * This,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( \\r\\n            IMFMediaStream * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( \\r\\n            IMFMediaStream * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( \\r\\n            __RPC__in IMFMediaStream * This,\\r\\n            \/* [in] *\/ MediaEventType met,\\r\\n            \/* [in] *\/ __RPC__in REFGUID guidExtendedType,\\r\\n            \/* [in] *\/ HRESULT hrStatus,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaSource )( \\r\\n            __RPC__in IMFMediaStream * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaSource **ppMediaSource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamDescriptor )( \\r\\n            __RPC__in IMFMediaStream * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFStreamDescriptor **ppStreamDescriptor);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *RequestSample )( \\r\\n            IMFMediaStream * This,\\r\\n            \/* [in] *\/ IUnknown *pToken);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaStreamVtbl;"},"IMFMediaTimeRangeVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":592,"type":"Struct","value":"typedef struct IMFMediaTimeRangeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMediaTimeRange * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMediaTimeRange * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMediaTimeRange * This);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetLength )( \\r\\n            IMFMediaTimeRange * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStart )( \\r\\n            IMFMediaTimeRange * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *pStart);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEnd )( \\r\\n            IMFMediaTimeRange * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *pEnd);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *ContainsTime )( \\r\\n            IMFMediaTimeRange * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double time);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddRange )( \\r\\n            IMFMediaTimeRange * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double startTime,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double endTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Clear )( \\r\\n            IMFMediaTimeRange * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaTimeRangeVtbl;"},"IMFMediaTypeHandlerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":6624,"type":"Struct","value":"typedef struct IMFMediaTypeHandlerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaTypeHandler * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaTypeHandler * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaTypeHandler * This);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *IsMediaTypeSupported )( \\r\\n            IMFMediaTypeHandler * This,\\r\\n            \/* [in] *\/ IMFMediaType *pMediaType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_opt_result_maybenull_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaTypeCount )( \\r\\n            __RPC__in IMFMediaTypeHandler * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwTypeCount);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *GetMediaTypeByIndex )( \\r\\n            IMFMediaTypeHandler * This,\\r\\n            \/* [in] *\/ DWORD dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaType **ppType);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *SetCurrentMediaType )( \\r\\n            IMFMediaTypeHandler * This,\\r\\n            \/* [in] *\/ IMFMediaType *pMediaType);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *GetCurrentMediaType )( \\r\\n            IMFMediaTypeHandler * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMajorType )( \\r\\n            __RPC__in IMFMediaTypeHandler * This,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidMajorType);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaTypeHandlerVtbl;"},"IMFMediaTypeVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":1862,"type":"Struct","value":"typedef struct IMFMediaTypeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMediaType * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in_opt IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            __RPC__in IMFMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [string][in] *\/ __RPC__in_string LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            __RPC__in IMFMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            __RPC__in IMFMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMajorType )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidMajorType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsCompressedFormat )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pfCompressed);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsEqual )( \\r\\n            __RPC__in IMFMediaType * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFMediaType *pIMediaType,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwFlags);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *GetRepresentation )( \\r\\n            IMFMediaType * This,\\r\\n            \/* [in] *\/ GUID guidRepresentation,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LPVOID *ppvRepresentation);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *FreeRepresentation )( \\r\\n            IMFMediaType * This,\\r\\n            \/* [in] *\/ GUID guidRepresentation,\\r\\n            \/* [in] *\/ LPVOID pvRepresentation);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMediaTypeVtbl;"},"IMFMetadataProviderVtbl":{"comment":"","exp":"","file":"mfidl.h","line":7790,"type":"Struct","value":"typedef struct IMFMetadataProviderVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMetadataProvider * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMetadataProvider * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMetadataProvider * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMFMetadata )( \\r\\n            __RPC__in IMFMetadataProvider * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor,\\r\\n            \/* [in] *\/ DWORD dwStreamIdentifier,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMetadata **ppMFMetadata);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMetadataProviderVtbl;"},"IMFMetadataVtbl":{"comment":"","exp":"","file":"mfidl.h","line":7663,"type":"Struct","value":"typedef struct IMFMetadataVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFMetadata * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFMetadata * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFMetadata * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetLanguage )( \\r\\n            __RPC__in IMFMetadata * This,\\r\\n            \/* [in] *\/ __RPC__in LPCWSTR pwszRFC1766);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLanguage )( \\r\\n            __RPC__in IMFMetadata * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt LPWSTR *ppwszRFC1766);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllLanguages )( \\r\\n            __RPC__in IMFMetadata * This,\\r\\n            \/* [out] *\/ __RPC__out PROPVARIANT *ppvLanguages);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetProperty )( \\r\\n            __RPC__in IMFMetadata * This,\\r\\n            \/* [in] *\/ __RPC__in LPCWSTR pwszName,\\r\\n            \/* [in] *\/ __RPC__in const PROPVARIANT *ppvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProperty )( \\r\\n            __RPC__in IMFMetadata * This,\\r\\n            \/* [in] *\/ __RPC__in LPCWSTR pwszName,\\r\\n            \/* [out] *\/ __RPC__out PROPVARIANT *ppvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteProperty )( \\r\\n            __RPC__in IMFMetadata * This,\\r\\n            \/* [in] *\/ __RPC__in LPCWSTR pwszName);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllPropertyNames )( \\r\\n            __RPC__in IMFMetadata * This,\\r\\n            \/* [out] *\/ __RPC__out PROPVARIANT *ppvNames);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMetadataVtbl;"},"IMFMuxStreamAttributesManagerVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":6192,"type":"Struct","value":"typedef struct IMFMuxStreamAttributesManagerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMuxStreamAttributesManager * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMuxStreamAttributesManager * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMuxStreamAttributesManager * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamCount )( \\r\\n            IMFMuxStreamAttributesManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  DWORD *pdwMuxStreamCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAttributes )( \\r\\n            IMFMuxStreamAttributesManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD dwMuxStreamIndex,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFAttributes **ppStreamAttributes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMuxStreamAttributesManagerVtbl;"},"IMFMuxStreamMediaTypeManagerVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":6308,"type":"Struct","value":"typedef struct IMFMuxStreamMediaTypeManagerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMuxStreamMediaTypeManager * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMuxStreamMediaTypeManager * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMuxStreamMediaTypeManager * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamCount )( \\r\\n            IMFMuxStreamMediaTypeManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  DWORD *pdwMuxStreamCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaType )( \\r\\n            IMFMuxStreamMediaTypeManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD dwMuxStreamIndex,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamConfigurationCount )( \\r\\n            IMFMuxStreamMediaTypeManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  DWORD *pdwCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStreamConfiguration )( \\r\\n            IMFMuxStreamMediaTypeManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  ULONGLONG ullStreamMask);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveStreamConfiguration )( \\r\\n            IMFMuxStreamMediaTypeManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  ULONGLONG ullStreamMask);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamConfiguration )( \\r\\n            IMFMuxStreamMediaTypeManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD ulIndex,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  ULONGLONG *pullStreamMask);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMuxStreamMediaTypeManagerVtbl;"},"IMFMuxStreamSampleManagerVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":6442,"type":"Struct","value":"typedef struct IMFMuxStreamSampleManagerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFMuxStreamSampleManager * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFMuxStreamSampleManager * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFMuxStreamSampleManager * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamCount )( \\r\\n            IMFMuxStreamSampleManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  DWORD *pdwMuxStreamCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSample )( \\r\\n            IMFMuxStreamSampleManager * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD dwMuxStreamIndex,\\r\\n            \/* [annotation] *\/ \\r\\n            _COM_Outptr_  IMFSample **ppSample);\\r\\n        \\r\\n        ULONGLONG ( STDMETHODCALLTYPE *GetStreamConfiguration )( \\r\\n            IMFMuxStreamSampleManager * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFMuxStreamSampleManagerVtbl;"},"IMFNetCredentialCacheVtbl":{"comment":"","exp":"","file":"mfidl.h","line":11730,"type":"Struct","value":"typedef struct IMFNetCredentialCacheVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFNetCredentialCache * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFNetCredentialCache * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFNetCredentialCache * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCredential )( \\r\\n            IMFNetCredentialCache * This,\\r\\n            \/* [in] *\/ LPCWSTR pszUrl,\\r\\n            \/* [in] *\/ LPCWSTR pszRealm,\\r\\n            \/* [in] *\/ DWORD dwAuthenticationFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFNetCredential **ppCred,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwRequirementsFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGood )( \\r\\n            IMFNetCredentialCache * This,\\r\\n            \/* [in] *\/ IMFNetCredential *pCred,\\r\\n            \/* [in] *\/ BOOL fGood);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUserOptions )( \\r\\n            IMFNetCredentialCache * This,\\r\\n            \/* [in] *\/ IMFNetCredential *pCred,\\r\\n            \/* [in] *\/ DWORD dwOptionsFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFNetCredentialCacheVtbl;"},"IMFNetCredentialManagerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":11594,"type":"Struct","value":"typedef struct IMFNetCredentialManagerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFNetCredentialManager * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFNetCredentialManager * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFNetCredentialManager * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginGetCredentials )( \\r\\n            IMFNetCredentialManager * This,\\r\\n            \/* [in] *\/ MFNetCredentialManagerGetParam *pParam,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndGetCredentials )( \\r\\n            IMFNetCredentialManager * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFNetCredential **ppCred);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGood )( \\r\\n            IMFNetCredentialManager * This,\\r\\n            \/* [in] *\/ IMFNetCredential *pCred,\\r\\n            \/* [in] *\/ BOOL fGood);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFNetCredentialManagerVtbl;"},"IMFNetCredentialVtbl":{"comment":"","exp":"","file":"mfidl.h","line":11448,"type":"Struct","value":"typedef struct IMFNetCredentialVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFNetCredential * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFNetCredential * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFNetCredential * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUser )( \\r\\n            IMFNetCredential * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_bytes_(cbData)  BYTE *pbData,\\r\\n            \/* [in] *\/ DWORD cbData,\\r\\n            \/* [in] *\/ BOOL fDataIsEncrypted);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPassword )( \\r\\n            IMFNetCredential * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_bytes_(cbData)  BYTE *pbData,\\r\\n            \/* [in] *\/ DWORD cbData,\\r\\n            \/* [in] *\/ BOOL fDataIsEncrypted);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUser )( \\r\\n            IMFNetCredential * This,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_to_opt_(*pcbData,*pcbData)  BYTE *pbData,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  DWORD *pcbData,\\r\\n            \/* [in] *\/ BOOL fEncryptData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPassword )( \\r\\n            IMFNetCredential * This,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_to_opt_(*pcbData,*pcbData)  BYTE *pbData,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  DWORD *pcbData,\\r\\n            \/* [in] *\/ BOOL fEncryptData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LoggedOnUser )( \\r\\n            IMFNetCredential * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfLoggedOnUser);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFNetCredentialVtbl;"},"IMFNetCrossOriginSupportVtbl":{"comment":"","exp":"","file":"mfidl.h","line":17689,"type":"Struct","value":"typedef struct IMFNetCrossOriginSupportVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFNetCrossOriginSupport * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFNetCrossOriginSupport * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFNetCrossOriginSupport * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCrossOriginPolicy )( \\r\\n            IMFNetCrossOriginSupport * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_CROSS_ORIGIN_POLICY *pPolicy);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSourceOrigin )( \\r\\n            IMFNetCrossOriginSupport * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LPWSTR *wszSourceOrigin);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsSameOrigin )( \\r\\n            IMFNetCrossOriginSupport * This,\\r\\n            \/* [in] *\/ LPCWSTR wszURL,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfIsSameOrigin);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFNetCrossOriginSupportVtbl;"},"IMFNetProxyLocatorFactoryVtbl":{"comment":"","exp":"","file":"mfidl.h","line":12341,"type":"Struct","value":"typedef struct IMFNetProxyLocatorFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFNetProxyLocatorFactory * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFNetProxyLocatorFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFNetProxyLocatorFactory * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateProxyLocator )( \\r\\n            IMFNetProxyLocatorFactory * This,\\r\\n            \/* [in] *\/ LPCWSTR pszProtocol,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFNetProxyLocator **ppProxyLocator);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFNetProxyLocatorFactoryVtbl;"},"IMFNetProxyLocatorVtbl":{"comment":"","exp":"","file":"mfidl.h","line":12216,"type":"Struct","value":"typedef struct IMFNetProxyLocatorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFNetProxyLocator * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFNetProxyLocator * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFNetProxyLocator * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindFirstProxy )( \\r\\n            IMFNetProxyLocator * This,\\r\\n            \/* [in] *\/ LPCWSTR pszHost,\\r\\n            \/* [in] *\/ LPCWSTR pszUrl,\\r\\n            \/* [in] *\/ BOOL fReserved);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindNextProxy )( \\r\\n            IMFNetProxyLocator * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterProxyResult )( \\r\\n            IMFNetProxyLocator * This,\\r\\n            \/* [in] *\/ HRESULT hrOp);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentProxy )( \\r\\n            IMFNetProxyLocator * This,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_opt_(*pcchStr)  LPWSTR pszStr,\\r\\n            \/* [out][in] *\/ DWORD *pcchStr);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Clone )( \\r\\n            IMFNetProxyLocator * This,\\r\\n            \/* [out] *\/ IMFNetProxyLocator **ppProxyLocator);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFNetProxyLocatorVtbl;"},"IMFNetResourceFilterVtbl":{"comment":"","exp":"","file":"mfidl.h","line":12016,"type":"Struct","value":"typedef struct IMFNetResourceFilterVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFNetResourceFilter * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFNetResourceFilter * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFNetResourceFilter * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnRedirect )( \\r\\n            IMFNetResourceFilter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pszUrl,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  VARIANT_BOOL *pvbCancel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnSendingRequest )( \\r\\n            IMFNetResourceFilter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pszUrl);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFNetResourceFilterVtbl;"},"IMFNetSchemeHandlerConfigVtbl":{"comment":"","exp":"","file":"mfidl.h","line":12564,"type":"Struct","value":"typedef struct IMFNetSchemeHandlerConfigVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFNetSchemeHandlerConfig * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFNetSchemeHandlerConfig * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFNetSchemeHandlerConfig * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNumberOfSupportedProtocols )( \\r\\n            IMFNetSchemeHandlerConfig * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *pcProtocols);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSupportedProtocolType )( \\r\\n            IMFNetSchemeHandlerConfig * This,\\r\\n            \/* [in] *\/ ULONG nProtocolIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFNETSOURCE_PROTOCOL_TYPE *pnProtocolType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ResetProtocolRolloverSettings )( \\r\\n            IMFNetSchemeHandlerConfig * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFNetSchemeHandlerConfigVtbl;"},"IMFObjectReferenceStreamVtbl":{"comment":"","exp":"","file":"mfidl.h","line":15199,"type":"Struct","value":"typedef struct IMFObjectReferenceStreamVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFObjectReferenceStream * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFObjectReferenceStream * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFObjectReferenceStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SaveReference )( \\r\\n            IMFObjectReferenceStream * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [in] *\/ IUnknown *pUnk);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LoadReference )( \\r\\n            IMFObjectReferenceStream * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [out] *\/ void **ppv);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFObjectReferenceStreamVtbl;"},"IMFOutputPolicyVtbl":{"comment":"","exp":"","file":"mfidl.h","line":13586,"type":"Struct","value":"typedef struct IMFOutputPolicyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFOutputPolicy * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFOutputPolicy * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFOutputPolicy * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            IMFOutputPolicy * This,\\r\\n            IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ UINT8 **ppBuf,\\r\\n            \/* [out] *\/ UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            REFIID riid,\\r\\n            \/* [iid_is][out] *\/ LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            IMFOutputPolicy * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [string][in] *\/ LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            IMFOutputPolicy * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [in] *\/ IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            IMFOutputPolicy * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            IMFOutputPolicy * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IMFOutputPolicy * This,\\r\\n            \/* [out] *\/ UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            IMFOutputPolicy * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            IMFOutputPolicy * This,\\r\\n            \/* [in] *\/ IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GenerateRequiredSchemas )( \\r\\n            IMFOutputPolicy * This,\\r\\n            \/* [in] *\/ DWORD dwAttributes,\\r\\n            \/* [in] *\/ GUID guidOutputSubType,\\r\\n            \/* [in] *\/ GUID *rgGuidProtectionSchemasSupported,\\r\\n            \/* [in] *\/ DWORD cProtectionSchemasSupported,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFCollection **ppRequiredProtectionSchemas);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOriginatorID )( \\r\\n            IMFOutputPolicy * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *pguidOriginatorID);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMinimumGRLVersion )( \\r\\n            IMFOutputPolicy * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwMinimumGRLVersion);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFOutputPolicyVtbl;"},"IMFOutputSchemaVtbl":{"comment":"","exp":"","file":"mfidl.h","line":13983,"type":"Struct","value":"typedef struct IMFOutputSchemaVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFOutputSchema * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFOutputSchema * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFOutputSchema * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            IMFOutputSchema * This,\\r\\n            IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ UINT8 **ppBuf,\\r\\n            \/* [out] *\/ UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            REFIID riid,\\r\\n            \/* [iid_is][out] *\/ LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            IMFOutputSchema * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [string][in] *\/ LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            IMFOutputSchema * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [in] *\/ IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            IMFOutputSchema * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            IMFOutputSchema * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IMFOutputSchema * This,\\r\\n            \/* [out] *\/ UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            IMFOutputSchema * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            IMFOutputSchema * This,\\r\\n            \/* [in] *\/ IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSchemaType )( \\r\\n            IMFOutputSchema * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *pguidSchemaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetConfigurationData )( \\r\\n            IMFOutputSchema * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOriginatorID )( \\r\\n            IMFOutputSchema * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *pguidOriginatorID);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFOutputSchemaVtbl;"},"IMFOutputTrustAuthorityVtbl":{"comment":"","exp":"","file":"mfidl.h","line":13470,"type":"Struct","value":"typedef struct IMFOutputTrustAuthorityVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFOutputTrustAuthority * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFOutputTrustAuthority * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFOutputTrustAuthority * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAction )( \\r\\n            IMFOutputTrustAuthority * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFPOLICYMANAGER_ACTION *pAction);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPolicy )( \\r\\n            IMFOutputTrustAuthority * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_opt_(nPolicy)  IMFOutputPolicy **ppPolicy,\\r\\n            \/* [in] *\/ DWORD nPolicy,\\r\\n            \/* [annotation][size_is][size_is][unique][out] *\/ \\r\\n            _Outptr_opt_result_bytebuffer_(*pcbTicket)  BYTE **ppbTicket,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pcbTicket);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFOutputTrustAuthorityVtbl;"},"IMFPMPClientAppVtbl":{"comment":"","exp":"","file":"mfidl.h","line":16635,"type":"Struct","value":"typedef struct IMFPMPClientAppVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFPMPClientApp * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFPMPClientApp * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFPMPClientApp * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPMPHost )( \\r\\n            IMFPMPClientApp * This,\\r\\n            \/* [in] *\/ IMFPMPHostApp *pPMPHost);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPMPClientAppVtbl;"},"IMFPMPClientVtbl":{"comment":"","exp":"","file":"mfidl.h","line":15426,"type":"Struct","value":"typedef struct IMFPMPClientVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFPMPClient * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFPMPClient * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFPMPClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPMPHost )( \\r\\n            IMFPMPClient * This,\\r\\n            \/* [in] *\/ IMFPMPHost *pPMPHost);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPMPClientVtbl;"},"IMFPMPHostAppVtbl":{"comment":"","exp":"","file":"mfidl.h","line":16540,"type":"Struct","value":"typedef struct IMFPMPHostAppVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFPMPHostApp * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFPMPHostApp * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFPMPHostApp * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockProcess )( \\r\\n            __RPC__in IMFPMPHostApp * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockProcess )( \\r\\n            __RPC__in IMFPMPHostApp * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateClassById )( \\r\\n            __RPC__in IMFPMPHostApp * This,\\r\\n            \/* [in] *\/ __RPC__in LPCWSTR id,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt IStream *pStream,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt void **ppv);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPMPHostAppVtbl;"},"IMFPMPHostVtbl":{"comment":"","exp":"","file":"mfidl.h","line":15304,"type":"Struct","value":"typedef struct IMFPMPHostVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFPMPHost * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFPMPHost * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFPMPHost * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockProcess )( \\r\\n            __RPC__in IMFPMPHost * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockProcess )( \\r\\n            __RPC__in IMFPMPHost * This);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *CreateObjectByCLSID )( \\r\\n            IMFPMPHost * This,\\r\\n            \/* [in] *\/ REFCLSID clsid,\\r\\n            \/* [unique][in] *\/ IStream *pStream,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [iid_is][out] *\/ void **ppv);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPMPHostVtbl;"},"IMFPMPServerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":15512,"type":"Struct","value":"typedef struct IMFPMPServerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFPMPServer * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFPMPServer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFPMPServer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockProcess )( \\r\\n            __RPC__in IMFPMPServer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockProcess )( \\r\\n            __RPC__in IMFPMPServer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateObjectByCLSID )( \\r\\n            __RPC__in IMFPMPServer * This,\\r\\n            \/* [in] *\/ __RPC__in REFCLSID clsid,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt void **ppObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPMPServerVtbl;"},"IMFPMediaItemVtbl":{"comment":"","exp":"","file":"mfplay.h","line":806,"type":"Struct","value":"typedef struct IMFPMediaItemVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFPMediaItem * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFPMediaItem * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaPlayer )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFPMediaPlayer **ppMediaPlayer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetURL )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LPWSTR *ppwszURL);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetObject )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IUnknown **ppIUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUserData )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD_PTR *pdwUserData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUserData )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD_PTR dwUserData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStartStopPosition )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  GUID *pguidStartPositionType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  PROPVARIANT *pvStartValue,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  GUID *pguidStopPositionType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  PROPVARIANT *pvStopValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStartStopPosition )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const GUID *pguidStartPositionType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const PROPVARIANT *pvStartValue,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const GUID *pguidStopPositionType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const PROPVARIANT *pvStopValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *HasVideo )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  BOOL *pfHasVideo,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  BOOL *pfSelected);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *HasAudio )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  BOOL *pfHasAudio,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  BOOL *pfSelected);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsProtected )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfProtected);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDuration )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidPositionType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pvDurationValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNumberOfStreams )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwStreamCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamSelection )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfEnabled);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamSelection )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fEnabled);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamAttribute )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidMFAttribute,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPresentationAttribute )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidMFAttribute,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFP_MEDIAITEM_CHARACTERISTICS *pCharacteristics);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamSink )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pMediaSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( \\r\\n            IMFPMediaItem * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IPropertyStore **ppMetadataStore);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPMediaItemVtbl;"},"IMFPMediaPlayerCallbackVtbl":{"comment":"","exp":"","file":"mfplay.h","line":1203,"type":"Struct","value":"typedef struct IMFPMediaPlayerCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFPMediaPlayerCallback * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFPMediaPlayerCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFPMediaPlayerCallback * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OnMediaPlayerEvent )( \\r\\n            IMFPMediaPlayerCallback * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MFP_EVENT_HEADER *pEventHeader);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPMediaPlayerCallbackVtbl;"},"IMFPMediaPlayerVtbl":{"comment":"","exp":"","file":"mfplay.h","line":321,"type":"Struct","value":"typedef struct IMFPMediaPlayerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFPMediaPlayer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFPMediaPlayer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Play )( \\r\\n            IMFPMediaPlayer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Pause )( \\r\\n            IMFPMediaPlayer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            IMFPMediaPlayer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FrameStep )( \\r\\n            IMFPMediaPlayer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPosition )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidPositionType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const PROPVARIANT *pvPositionValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPosition )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidPositionType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pvPositionValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDuration )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidPositionType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pvDurationValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRate )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float flRate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRate )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflRate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSupportedRates )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fForwardDirection,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflSlowestRate,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflFastestRate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetState )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFP_MEDIAPLAYER_STATE *peState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMediaItemFromURL )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pwszURL,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fSync,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD_PTR dwUserData,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFPMediaItem **ppMediaItem);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMediaItemFromObject )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pIUnknownObj,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fSync,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD_PTR dwUserData,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFPMediaItem **ppMediaItem);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMediaItem )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFPMediaItem *pIMFPMediaItem);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ClearMediaItem )( \\r\\n            IMFPMediaPlayer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaItem )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFPMediaItem **ppIMFPMediaItem);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVolume )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflVolume);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVolume )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float flVolume);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBalance )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflBalance);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBalance )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float flBalance);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMute )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfMute);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMute )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fMute);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNativeVideoSize )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  SIZE *pszVideo,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  SIZE *pszARVideo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIdealVideoSize )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  SIZE *pszMin,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  SIZE *pszMax);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVideoSourceRect )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const MFVideoNormalizedRect *pnrcSource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoSourceRect )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFVideoNormalizedRect *pnrcSource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAspectRatioMode )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwAspectRatioMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAspectRatioMode )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwAspectRatioMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoWindow )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HWND *phwndVideo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UpdateVideo )( \\r\\n            IMFPMediaPlayer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBorderColor )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  COLORREF Clr);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBorderColor )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  COLORREF *pClr);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InsertEffect )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pEffect,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fOptional);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveEffect )( \\r\\n            IMFPMediaPlayer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pEffect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllEffects )( \\r\\n            IMFPMediaPlayer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFPMediaPlayer * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPMediaPlayerVtbl;"},"IMFPluginControl2Vtbl":{"comment":"","exp":"","file":"mfobjects.h","line":5827,"type":"Struct","value":"typedef struct IMFPluginControl2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFPluginControl2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFPluginControl2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFPluginControl2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPreferredClsid )( \\r\\n            IMFPluginControl2 * This,\\r\\n            DWORD pluginType,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  LPCWSTR selector,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  CLSID *clsid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPreferredClsidByIndex )( \\r\\n            IMFPluginControl2 * This,\\r\\n            DWORD pluginType,\\r\\n            DWORD index,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  LPWSTR *selector,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  CLSID *clsid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPreferredClsid )( \\r\\n            IMFPluginControl2 * This,\\r\\n            DWORD pluginType,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  LPCWSTR selector,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  const CLSID *clsid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsDisabled )( \\r\\n            IMFPluginControl2 * This,\\r\\n            DWORD pluginType,\\r\\n            REFCLSID clsid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisabledByIndex )( \\r\\n            IMFPluginControl2 * This,\\r\\n            DWORD pluginType,\\r\\n            DWORD index,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  CLSID *clsid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisabled )( \\r\\n            IMFPluginControl2 * This,\\r\\n            DWORD pluginType,\\r\\n            REFCLSID clsid,\\r\\n            BOOL disabled);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPolicy )( \\r\\n            IMFPluginControl2 * This,\\r\\n            \/* [in] *\/ MF_PLUGIN_CONTROL_POLICY policy);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPluginControl2Vtbl;"},"IMFPluginControlVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":5676,"type":"Struct","value":"typedef struct IMFPluginControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFPluginControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFPluginControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFPluginControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPreferredClsid )( \\r\\n            IMFPluginControl * This,\\r\\n            DWORD pluginType,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  LPCWSTR selector,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  CLSID *clsid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPreferredClsidByIndex )( \\r\\n            IMFPluginControl * This,\\r\\n            DWORD pluginType,\\r\\n            DWORD index,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  LPWSTR *selector,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  CLSID *clsid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPreferredClsid )( \\r\\n            IMFPluginControl * This,\\r\\n            DWORD pluginType,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  LPCWSTR selector,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  const CLSID *clsid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsDisabled )( \\r\\n            IMFPluginControl * This,\\r\\n            DWORD pluginType,\\r\\n            REFCLSID clsid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisabledByIndex )( \\r\\n            IMFPluginControl * This,\\r\\n            DWORD pluginType,\\r\\n            DWORD index,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  CLSID *clsid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisabled )( \\r\\n            IMFPluginControl * This,\\r\\n            DWORD pluginType,\\r\\n            REFCLSID clsid,\\r\\n            BOOL disabled);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPluginControlVtbl;"},"IMFPresentationClockVtbl":{"comment":"","exp":"","file":"mfidl.h","line":5376,"type":"Struct","value":"typedef struct IMFPresentationClockVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFPresentationClock * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFPresentationClock * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetClockCharacteristics )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwCharacteristics);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCorrelatedTime )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [in] *\/ DWORD dwReserved,\\r\\n            \/* [out] *\/ __RPC__out LONGLONG *pllClockTime,\\r\\n            \/* [out] *\/ __RPC__out MFTIME *phnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContinuityKey )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwContinuityKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetState )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [in] *\/ DWORD dwReserved,\\r\\n            \/* [out] *\/ __RPC__out MFCLOCK_STATE *peClockState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProperties )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [out] *\/ __RPC__out MFCLOCK_PROPERTIES *pClockProperties);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetTimeSource )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFPresentationTimeSource *pTimeSource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTimeSource )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFPresentationTimeSource **ppTimeSource);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTime )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [out] *\/ __RPC__out MFTIME *phnsClockTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddClockStateSink )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFClockStateSink *pStateSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveClockStateSink )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFClockStateSink *pStateSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            __RPC__in IMFPresentationClock * This,\\r\\n            \/* [in] *\/ LONGLONG llClockStartOffset);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            __RPC__in IMFPresentationClock * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Pause )( \\r\\n            __RPC__in IMFPresentationClock * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPresentationClockVtbl;"},"IMFPresentationDescriptorVtbl":{"comment":"","exp":"","file":"mfidl.h","line":5863,"type":"Struct","value":"typedef struct IMFPresentationDescriptorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFPresentationDescriptor * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFPresentationDescriptor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in_opt IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            __RPC__in IMFPresentationDescriptor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [string][in] *\/ __RPC__in_string LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            __RPC__in IMFPresentationDescriptor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            __RPC__in IMFPresentationDescriptor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamDescriptorCount )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwDescriptorCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamDescriptorByIndex )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            \/* [in] *\/ DWORD dwIndex,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pfSelected,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFStreamDescriptor **ppDescriptor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SelectStream )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            \/* [in] *\/ DWORD dwDescriptorIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeselectStream )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            \/* [in] *\/ DWORD dwDescriptorIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Clone )( \\r\\n            __RPC__in IMFPresentationDescriptor * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFPresentationDescriptor **ppPresentationDescriptor);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPresentationDescriptorVtbl;"},"IMFPresentationTimeSourceVtbl":{"comment":"","exp":"","file":"mfidl.h","line":5561,"type":"Struct","value":"typedef struct IMFPresentationTimeSourceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFPresentationTimeSource * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFPresentationTimeSource * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFPresentationTimeSource * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetClockCharacteristics )( \\r\\n            __RPC__in IMFPresentationTimeSource * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwCharacteristics);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCorrelatedTime )( \\r\\n            __RPC__in IMFPresentationTimeSource * This,\\r\\n            \/* [in] *\/ DWORD dwReserved,\\r\\n            \/* [out] *\/ __RPC__out LONGLONG *pllClockTime,\\r\\n            \/* [out] *\/ __RPC__out MFTIME *phnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContinuityKey )( \\r\\n            __RPC__in IMFPresentationTimeSource * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwContinuityKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetState )( \\r\\n            __RPC__in IMFPresentationTimeSource * This,\\r\\n            \/* [in] *\/ DWORD dwReserved,\\r\\n            \/* [out] *\/ __RPC__out MFCLOCK_STATE *peClockState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProperties )( \\r\\n            __RPC__in IMFPresentationTimeSource * This,\\r\\n            \/* [out] *\/ __RPC__out MFCLOCK_PROPERTIES *pClockProperties);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnderlyingClock )( \\r\\n            __RPC__in IMFPresentationTimeSource * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFClock **ppClock);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFPresentationTimeSourceVtbl;"},"IMFProtectedEnvironmentAccessVtbl":{"comment":"","exp":"","file":"mfidl.h","line":17024,"type":"Struct","value":"typedef struct IMFProtectedEnvironmentAccessVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFProtectedEnvironmentAccess * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFProtectedEnvironmentAccess * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFProtectedEnvironmentAccess * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Call )( \\r\\n            IMFProtectedEnvironmentAccess * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  UINT32 inputLength,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_(inputLength)  const BYTE *input,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  UINT32 outputLength,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_writes_bytes_(outputLength)  BYTE *output);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReadGRL )( \\r\\n            IMFProtectedEnvironmentAccess * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  UINT32 *outputLength,\\r\\n            \/* [annotation] *\/ \\r\\n            _Outptr_result_bytebuffer_(*outputLength)  BYTE **output);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFProtectedEnvironmentAccessVtbl;"},"IMFQualityAdvise2Vtbl":{"comment":"","exp":"","file":"mfidl.h","line":10034,"type":"Struct","value":"typedef struct IMFQualityAdvise2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFQualityAdvise2 * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFQualityAdvise2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFQualityAdvise2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDropMode )( \\r\\n            __RPC__in IMFQualityAdvise2 * This,\\r\\n            \/* [in] *\/ MF_QUALITY_DROP_MODE eDropMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetQualityLevel )( \\r\\n            __RPC__in IMFQualityAdvise2 * This,\\r\\n            \/* [in] *\/ MF_QUALITY_LEVEL eQualityLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDropMode )( \\r\\n            __RPC__in IMFQualityAdvise2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_QUALITY_DROP_MODE *peDropMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetQualityLevel )( \\r\\n            __RPC__in IMFQualityAdvise2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_QUALITY_LEVEL *peQualityLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DropTime )( \\r\\n            __RPC__in IMFQualityAdvise2 * This,\\r\\n            \/* [in] *\/ LONGLONG hnsAmountToDrop);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyQualityEvent )( \\r\\n            __RPC__in IMFQualityAdvise2 * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFMediaEvent *pEvent,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFQualityAdvise2Vtbl;"},"IMFQualityAdviseLimitsVtbl":{"comment":"","exp":"","file":"mfidl.h","line":10162,"type":"Struct","value":"typedef struct IMFQualityAdviseLimitsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFQualityAdviseLimits * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFQualityAdviseLimits * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFQualityAdviseLimits * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaximumDropMode )( \\r\\n            __RPC__in IMFQualityAdviseLimits * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_QUALITY_DROP_MODE *peDropMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMinimumQualityLevel )( \\r\\n            __RPC__in IMFQualityAdviseLimits * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_QUALITY_LEVEL *peQualityLevel);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFQualityAdviseLimitsVtbl;"},"IMFQualityAdviseVtbl":{"comment":"","exp":"","file":"mfidl.h","line":9910,"type":"Struct","value":"typedef struct IMFQualityAdviseVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFQualityAdvise * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFQualityAdvise * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFQualityAdvise * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDropMode )( \\r\\n            __RPC__in IMFQualityAdvise * This,\\r\\n            \/* [in] *\/ MF_QUALITY_DROP_MODE eDropMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetQualityLevel )( \\r\\n            __RPC__in IMFQualityAdvise * This,\\r\\n            \/* [in] *\/ MF_QUALITY_LEVEL eQualityLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDropMode )( \\r\\n            __RPC__in IMFQualityAdvise * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_QUALITY_DROP_MODE *peDropMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetQualityLevel )( \\r\\n            __RPC__in IMFQualityAdvise * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_QUALITY_LEVEL *peQualityLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DropTime )( \\r\\n            __RPC__in IMFQualityAdvise * This,\\r\\n            \/* [in] *\/ LONGLONG hnsAmountToDrop);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFQualityAdviseVtbl;"},"IMFQualityManagerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":9757,"type":"Struct","value":"typedef struct IMFQualityManagerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFQualityManager * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFQualityManager * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFQualityManager * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyTopology )( \\r\\n            IMFQualityManager * This,\\r\\n            \/* [in] *\/ IMFTopology *pTopology);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyPresentationClock )( \\r\\n            IMFQualityManager * This,\\r\\n            \/* [in] *\/ IMFPresentationClock *pClock);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyProcessInput )( \\r\\n            IMFQualityManager * This,\\r\\n            \/* [in] *\/ IMFTopologyNode *pNode,\\r\\n            \/* [in] *\/ long lInputIndex,\\r\\n            \/* [in] *\/ IMFSample *pSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyProcessOutput )( \\r\\n            IMFQualityManager * This,\\r\\n            \/* [in] *\/ IMFTopologyNode *pNode,\\r\\n            \/* [in] *\/ long lOutputIndex,\\r\\n            \/* [in] *\/ IMFSample *pSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyQualityEvent )( \\r\\n            IMFQualityManager * This,\\r\\n            \/* [in] *\/ IUnknown *pObject,\\r\\n            \/* [in] *\/ IMFMediaEvent *pEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFQualityManager * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFQualityManagerVtbl;"},"IMFRateControlVtbl":{"comment":"","exp":"","file":"mfidl.h","line":8026,"type":"Struct","value":"typedef struct IMFRateControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFRateControl * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFRateControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFRateControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRate )( \\r\\n            __RPC__in IMFRateControl * This,\\r\\n            \/* [in] *\/ BOOL fThin,\\r\\n            \/* [in] *\/ float flRate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRate )( \\r\\n            __RPC__in IMFRateControl * This,\\r\\n            \/* [unique][out][in] *\/ __RPC__inout_opt BOOL *pfThin,\\r\\n            \/* [unique][out][in] *\/ __RPC__inout_opt float *pflRate);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFRateControlVtbl;"},"IMFRateSupportVtbl":{"comment":"","exp":"","file":"mfidl.h","line":7912,"type":"Struct","value":"typedef struct IMFRateSupportVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFRateSupport * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFRateSupport * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFRateSupport * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSlowestRate )( \\r\\n            __RPC__in IMFRateSupport * This,\\r\\n            \/* [in] *\/ MFRATE_DIRECTION eDirection,\\r\\n            \/* [in] *\/ BOOL fThin,\\r\\n            \/* [out] *\/ __RPC__out float *pflRate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFastestRate )( \\r\\n            __RPC__in IMFRateSupport * This,\\r\\n            \/* [in] *\/ MFRATE_DIRECTION eDirection,\\r\\n            \/* [in] *\/ BOOL fThin,\\r\\n            \/* [out] *\/ __RPC__out float *pflRate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( \\r\\n            __RPC__in IMFRateSupport * This,\\r\\n            \/* [in] *\/ BOOL fThin,\\r\\n            \/* [in] *\/ float flRate,\\r\\n            \/* [unique][out][in] *\/ __RPC__inout_opt float *pflNearestSupportedRate);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFRateSupportVtbl;"},"IMFReadWriteClassFactoryVtbl":{"comment":"","exp":"","file":"mfreadwrite.h","line":178,"type":"Struct","value":"typedef struct IMFReadWriteClassFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFReadWriteClassFactory * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFReadWriteClassFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFReadWriteClassFactory * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateInstanceFromURL )( \\r\\n            IMFReadWriteClassFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFCLSID clsid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pwszURL,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Out_  LPVOID *ppvObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateInstanceFromObject )( \\r\\n            IMFReadWriteClassFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFCLSID clsid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *punkObject,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Out_  LPVOID *ppvObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFReadWriteClassFactoryVtbl;"},"IMFRealTimeClientExVtbl":{"comment":"","exp":"","file":"mfidl.h","line":10385,"type":"Struct","value":"typedef struct IMFRealTimeClientExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFRealTimeClientEx * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFRealTimeClientEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFRealTimeClientEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterThreadsEx )( \\r\\n            __RPC__in IMFRealTimeClientEx * This,\\r\\n            \/* [out][in] *\/ __RPC__inout DWORD *pdwTaskIndex,\\r\\n            \/* [in] *\/ __RPC__in LPCWSTR wszClassName,\\r\\n            \/* [in] *\/ LONG lBasePriority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnregisterThreads )( \\r\\n            __RPC__in IMFRealTimeClientEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetWorkQueueEx )( \\r\\n            __RPC__in IMFRealTimeClientEx * This,\\r\\n            \/* [in] *\/ DWORD dwMultithreadedWorkQueueId,\\r\\n            \/* [in] *\/ LONG lWorkItemBasePriority);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFRealTimeClientExVtbl;"},"IMFRealTimeClientVtbl":{"comment":"","exp":"","file":"mfidl.h","line":10270,"type":"Struct","value":"typedef struct IMFRealTimeClientVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFRealTimeClient * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFRealTimeClient * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFRealTimeClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterThreads )( \\r\\n            IMFRealTimeClient * This,\\r\\n            \/* [in] *\/ DWORD dwTaskIndex,\\r\\n            \/* [in] *\/ LPCWSTR wszClass);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnregisterThreads )( \\r\\n            IMFRealTimeClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetWorkQueue )( \\r\\n            IMFRealTimeClient * This,\\r\\n            \/* [in] *\/ DWORD dwWorkQueueId);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFRealTimeClientVtbl;"},"IMFRelativePanelReportVtbl":{"comment":"","exp":"","file":"mfidl.h","line":21239,"type":"Struct","value":"typedef struct IMFRelativePanelReportVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFRelativePanelReport * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFRelativePanelReport * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFRelativePanelReport * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRelativePanel )( \\r\\n            IMFRelativePanelReport * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *panel);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFRelativePanelReportVtbl;"},"IMFRelativePanelWatcherVtbl":{"comment":"","exp":"","file":"mfidl.h","line":21333,"type":"Struct","value":"typedef struct IMFRelativePanelWatcherVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFRelativePanelWatcher * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFRelativePanelWatcher * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFRelativePanelWatcher * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            IMFRelativePanelWatcher * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetShutdownStatus )( \\r\\n            IMFRelativePanelWatcher * This,\\r\\n            \/* [out] *\/ MFSHUTDOWN_STATUS *pStatus);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginGetReport )( \\r\\n            IMFRelativePanelWatcher * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncCallback *pCallback,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IUnknown *pState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndGetReport )( \\r\\n            IMFRelativePanelWatcher * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFRelativePanelReport **ppRelativePanelReport);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetReport )( \\r\\n            IMFRelativePanelWatcher * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFRelativePanelReport **ppRelativePanelReport);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFRelativePanelWatcherVtbl;"},"IMFRemoteAsyncCallbackVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":4313,"type":"Struct","value":"typedef struct IMFRemoteAsyncCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFRemoteAsyncCallback * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFRemoteAsyncCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFRemoteAsyncCallback * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Invoke )( \\r\\n            __RPC__in IMFRemoteAsyncCallback * This,\\r\\n            \/* [in] *\/ HRESULT hr,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pRemoteResult);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFRemoteAsyncCallbackVtbl;"},"IMFRemoteDesktopPluginVtbl":{"comment":"","exp":"","file":"mfidl.h","line":15618,"type":"Struct","value":"typedef struct IMFRemoteDesktopPluginVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFRemoteDesktopPlugin * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFRemoteDesktopPlugin * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFRemoteDesktopPlugin * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UpdateTopology )( \\r\\n            IMFRemoteDesktopPlugin * This,\\r\\n            \/* [out][in] *\/ IMFTopology *pTopology);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFRemoteDesktopPluginVtbl;"},"IMFRemoteProxyVtbl":{"comment":"","exp":"","file":"mfidl.h","line":15094,"type":"Struct","value":"typedef struct IMFRemoteProxyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFRemoteProxy * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFRemoteProxy * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFRemoteProxy * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRemoteObject )( \\r\\n            IMFRemoteProxy * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Outptr_  void **ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRemoteHost )( \\r\\n            IMFRemoteProxy * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Outptr_  void **ppv);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFRemoteProxyVtbl;"},"IMFSAMIStyleVtbl":{"comment":"","exp":"","file":"mfidl.h","line":15725,"type":"Struct","value":"typedef struct IMFSAMIStyleVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSAMIStyle * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSAMIStyle * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSAMIStyle * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStyleCount )( \\r\\n            IMFSAMIStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStyles )( \\r\\n            IMFSAMIStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pPropVarStyleArray);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSelectedStyle )( \\r\\n            IMFSAMIStyle * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pwszStyle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSelectedStyle )( \\r\\n            IMFSAMIStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *ppwszStyle);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSAMIStyleVtbl;"},"IMFSSLCertificateManagerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":11876,"type":"Struct","value":"typedef struct IMFSSLCertificateManagerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSSLCertificateManager * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSSLCertificateManager * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSSLCertificateManager * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetClientCertificate )( \\r\\n            IMFSSLCertificateManager * This,\\r\\n            \/* [in] *\/ LPCWSTR pszURL,\\r\\n            \/* [annotation][size_is][size_is][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*pcbData)  BYTE **ppbData,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginGetClientCertificate )( \\r\\n            IMFSSLCertificateManager * This,\\r\\n            \/* [in] *\/ LPCWSTR pszURL,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndGetClientCertificate )( \\r\\n            IMFSSLCertificateManager * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][size_is][size_is][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*pcbData)  BYTE **ppbData,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCertificatePolicy )( \\r\\n            IMFSSLCertificateManager * This,\\r\\n            \/* [in] *\/ LPCWSTR pszURL,\\r\\n            \/* [out] *\/ BOOL *pfOverrideAutomaticCheck,\\r\\n            \/* [out] *\/ BOOL *pfClientCertificateAvailable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnServerCertificate )( \\r\\n            IMFSSLCertificateManager * This,\\r\\n            \/* [in] *\/ LPCWSTR pszURL,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_bytes_(cbData)  BYTE *pbData,\\r\\n            \/* [in] *\/ DWORD cbData,\\r\\n            \/* [out] *\/ BOOL *pfIsGood);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSSLCertificateManagerVtbl;"},"IMFSampleAllocatorControlVtbl":{"comment":"","exp":"","file":"mfidl.h","line":21623,"type":"Struct","value":"typedef struct IMFSampleAllocatorControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSampleAllocatorControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSampleAllocatorControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSampleAllocatorControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDefaultAllocator )( \\r\\n            IMFSampleAllocatorControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwOutputStreamID,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pAllocator);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatorUsage )( \\r\\n            IMFSampleAllocatorControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwOutputStreamID,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwInputStreamID,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFSampleAllocatorUsage *peUsage);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSampleAllocatorControlVtbl;"},"IMFSampleGrabberSinkCallback2Vtbl":{"comment":"","exp":"","file":"mfidl.h","line":8952,"type":"Struct","value":"typedef struct IMFSampleGrabberSinkCallback2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSampleGrabberSinkCallback2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSampleGrabberSinkCallback2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSampleGrabberSinkCallback2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockStart )( \\r\\n            IMFSampleGrabberSinkCallback2 * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime,\\r\\n            \/* [in] *\/ LONGLONG llClockStartOffset);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockStop )( \\r\\n            IMFSampleGrabberSinkCallback2 * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockPause )( \\r\\n            IMFSampleGrabberSinkCallback2 * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockRestart )( \\r\\n            IMFSampleGrabberSinkCallback2 * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockSetRate )( \\r\\n            IMFSampleGrabberSinkCallback2 * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime,\\r\\n            \/* [in] *\/ float flRate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnSetPresentationClock )( \\r\\n            IMFSampleGrabberSinkCallback2 * This,\\r\\n            \/* [in] *\/ IMFPresentationClock *pPresentationClock);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnProcessSample )( \\r\\n            IMFSampleGrabberSinkCallback2 * This,\\r\\n            \/* [in] *\/ REFGUID guidMajorMediaType,\\r\\n            \/* [in] *\/ DWORD dwSampleFlags,\\r\\n            \/* [in] *\/ LONGLONG llSampleTime,\\r\\n            \/* [in] *\/ LONGLONG llSampleDuration,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(dwSampleSize)  const BYTE *pSampleBuffer,\\r\\n            \/* [in] *\/ DWORD dwSampleSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnShutdown )( \\r\\n            IMFSampleGrabberSinkCallback2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnProcessSampleEx )( \\r\\n            IMFSampleGrabberSinkCallback2 * This,\\r\\n            \/* [in] *\/ REFGUID guidMajorMediaType,\\r\\n            \/* [in] *\/ DWORD dwSampleFlags,\\r\\n            \/* [in] *\/ LONGLONG llSampleTime,\\r\\n            \/* [in] *\/ LONGLONG llSampleDuration,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(dwSampleSize)  const BYTE *pSampleBuffer,\\r\\n            \/* [in] *\/ DWORD dwSampleSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAttributes *pAttributes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSampleGrabberSinkCallback2Vtbl;"},"IMFSampleGrabberSinkCallbackVtbl":{"comment":"","exp":"","file":"mfidl.h","line":8790,"type":"Struct","value":"typedef struct IMFSampleGrabberSinkCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSampleGrabberSinkCallback * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSampleGrabberSinkCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSampleGrabberSinkCallback * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockStart )( \\r\\n            IMFSampleGrabberSinkCallback * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime,\\r\\n            \/* [in] *\/ LONGLONG llClockStartOffset);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockStop )( \\r\\n            IMFSampleGrabberSinkCallback * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockPause )( \\r\\n            IMFSampleGrabberSinkCallback * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockRestart )( \\r\\n            IMFSampleGrabberSinkCallback * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockSetRate )( \\r\\n            IMFSampleGrabberSinkCallback * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime,\\r\\n            \/* [in] *\/ float flRate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnSetPresentationClock )( \\r\\n            IMFSampleGrabberSinkCallback * This,\\r\\n            \/* [in] *\/ IMFPresentationClock *pPresentationClock);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnProcessSample )( \\r\\n            IMFSampleGrabberSinkCallback * This,\\r\\n            \/* [in] *\/ REFGUID guidMajorMediaType,\\r\\n            \/* [in] *\/ DWORD dwSampleFlags,\\r\\n            \/* [in] *\/ LONGLONG llSampleTime,\\r\\n            \/* [in] *\/ LONGLONG llSampleDuration,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(dwSampleSize)  const BYTE *pSampleBuffer,\\r\\n            \/* [in] *\/ DWORD dwSampleSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnShutdown )( \\r\\n            IMFSampleGrabberSinkCallback * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSampleGrabberSinkCallbackVtbl;"},"IMFSampleOutputStreamVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":4890,"type":"Struct","value":"typedef struct IMFSampleOutputStreamVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFSampleOutputStream * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFSampleOutputStream * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFSampleOutputStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginWriteSample )( \\r\\n            __RPC__in IMFSampleOutputStream * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFSample *pSample,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *punkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndWriteSample )( \\r\\n            __RPC__in IMFSampleOutputStream * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAsyncResult *pResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            __RPC__in IMFSampleOutputStream * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSampleOutputStreamVtbl;"},"IMFSampleProtectionVtbl":{"comment":"","exp":"","file":"mfidl.h","line":14606,"type":"Struct","value":"typedef struct IMFSampleProtectionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSampleProtection * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSampleProtection * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSampleProtection * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputProtectionVersion )( \\r\\n            IMFSampleProtection * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwVersion);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputProtectionVersion )( \\r\\n            IMFSampleProtection * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwVersion);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProtectionCertificate )( \\r\\n            IMFSampleProtection * This,\\r\\n            \/* [in] *\/ DWORD dwVersion,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*pcbCert)  BYTE **ppCert,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbCert);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitOutputProtection )( \\r\\n            IMFSampleProtection * This,\\r\\n            \/* [in] *\/ DWORD dwVersion,\\r\\n            \/* [in] *\/ DWORD dwOutputId,\\r\\n            \/* [in] *\/ BYTE *pbCert,\\r\\n            \/* [in] *\/ DWORD cbCert,\\r\\n            \/* [out] *\/ BYTE **ppbSeed,\\r\\n            \/* [out] *\/ DWORD *pcbSeed);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitInputProtection )( \\r\\n            IMFSampleProtection * This,\\r\\n            \/* [in] *\/ DWORD dwVersion,\\r\\n            \/* [in] *\/ DWORD dwInputId,\\r\\n            \/* [in] *\/ BYTE *pbSeed,\\r\\n            \/* [in] *\/ DWORD cbSeed);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSampleProtectionVtbl;"},"IMFSampleVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":940,"type":"Struct","value":"typedef struct IMFSampleVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSample * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSample * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            IMFSample * This,\\r\\n            IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ UINT8 **ppBuf,\\r\\n            \/* [out] *\/ UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            REFIID riid,\\r\\n            \/* [iid_is][out] *\/ LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            IMFSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [string][in] *\/ LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            IMFSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [in] *\/ IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            IMFSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            IMFSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IMFSample * This,\\r\\n            \/* [out] *\/ UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            IMFSample * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            IMFSample * This,\\r\\n            \/* [in] *\/ IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSampleFlags )( \\r\\n            IMFSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwSampleFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSampleFlags )( \\r\\n            IMFSample * This,\\r\\n            \/* [in] *\/ DWORD dwSampleFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSampleTime )( \\r\\n            IMFSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONGLONG *phnsSampleTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSampleTime )( \\r\\n            IMFSample * This,\\r\\n            \/* [in] *\/ LONGLONG hnsSampleTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSampleDuration )( \\r\\n            IMFSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONGLONG *phnsSampleDuration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSampleDuration )( \\r\\n            IMFSample * This,\\r\\n            \/* [in] *\/ LONGLONG hnsSampleDuration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferCount )( \\r\\n            IMFSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwBufferCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferByIndex )( \\r\\n            IMFSample * This,\\r\\n            \/* [in] *\/ DWORD dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaBuffer **ppBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ConvertToContiguousBuffer )( \\r\\n            IMFSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaBuffer **ppBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddBuffer )( \\r\\n            IMFSample * This,\\r\\n            \/* [in] *\/ IMFMediaBuffer *pBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveBufferByIndex )( \\r\\n            IMFSample * This,\\r\\n            \/* [in] *\/ DWORD dwIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllBuffers )( \\r\\n            IMFSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTotalLength )( \\r\\n            IMFSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbTotalLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyToBuffer )( \\r\\n            IMFSample * This,\\r\\n            \/* [in] *\/ IMFMediaBuffer *pBuffer);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSampleVtbl;"},"IMFSaveJobVtbl":{"comment":"","exp":"","file":"mfidl.h","line":12434,"type":"Struct","value":"typedef struct IMFSaveJobVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSaveJob * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSaveJob * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSaveJob * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginSave )( \\r\\n            IMFSaveJob * This,\\r\\n            \/* [in] *\/ IMFByteStream *pStream,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndSave )( \\r\\n            IMFSaveJob * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CancelSave )( \\r\\n            IMFSaveJob * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProgress )( \\r\\n            IMFSaveJob * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwPercentComplete);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSaveJobVtbl;"},"IMFSchemeHandlerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":12814,"type":"Struct","value":"typedef struct IMFSchemeHandlerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSchemeHandler * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSchemeHandler * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSchemeHandler * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginCreateObject )( \\r\\n            IMFSchemeHandler * This,\\r\\n            \/* [in] *\/ LPCWSTR pwszURL,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [in] *\/ IPropertyStore *pProps,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_opt_  IUnknown **ppIUnknownCancelCookie,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndCreateObject )( \\r\\n            IMFSchemeHandler * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_OBJECT_TYPE *pObjectType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IUnknown **ppObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CancelObjectCreation )( \\r\\n            IMFSchemeHandler * This,\\r\\n            \/* [in] *\/ IUnknown *pIUnknownCancelCookie);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSchemeHandlerVtbl;"},"IMFSecureBufferVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":6540,"type":"Struct","value":"typedef struct IMFSecureBufferVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSecureBuffer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSecureBuffer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSecureBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIdentifier )( \\r\\n            IMFSecureBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *pGuidIdentifier);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSecureBufferVtbl;"},"IMFSecureChannelVtbl":{"comment":"","exp":"","file":"mfidl.h","line":14465,"type":"Struct","value":"typedef struct IMFSecureChannelVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSecureChannel * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSecureChannel * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSecureChannel * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCertificate )( \\r\\n            IMFSecureChannel * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*pcbCert)  BYTE **ppCert,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbCert);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetupSession )( \\r\\n            IMFSecureChannel * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(cbSessionKey)  BYTE *pbEncryptedSessionKey,\\r\\n            \/* [in] *\/ DWORD cbSessionKey);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSecureChannelVtbl;"},"IMFSeekInfoVtbl":{"comment":"","exp":"","file":"mfidl.h","line":8272,"type":"Struct","value":"typedef struct IMFSeekInfoVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSeekInfo * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSeekInfo * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSeekInfo * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNearestKeyFrames )( \\r\\n            IMFSeekInfo * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const GUID *pguidTimeFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const PROPVARIANT *pvarStartPosition,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pvarPreviousKeyFrame,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pvarNextKeyFrame);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSeekInfoVtbl;"},"IMFSensorActivitiesReportCallbackVtbl":{"comment":"","exp":"","file":"mfidl.h","line":20322,"type":"Struct","value":"typedef struct IMFSensorActivitiesReportCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSensorActivitiesReportCallback * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSensorActivitiesReportCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSensorActivitiesReportCallback * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnActivitiesReport )( \\r\\n            IMFSensorActivitiesReportCallback * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFSensorActivitiesReport *sensorActivitiesReport);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSensorActivitiesReportCallbackVtbl;"},"IMFSensorActivitiesReportVtbl":{"comment":"","exp":"","file":"mfidl.h","line":20220,"type":"Struct","value":"typedef struct IMFSensorActivitiesReportVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSensorActivitiesReport * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSensorActivitiesReport * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSensorActivitiesReport * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IMFSensorActivitiesReport * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *pcCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetActivityReport )( \\r\\n            IMFSensorActivitiesReport * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG Index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFSensorActivityReport **sensorActivityReport);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetActivityReportByDeviceName )( \\r\\n            IMFSensorActivitiesReport * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_z_  LPCWSTR SymbolicName,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFSensorActivityReport **sensorActivityReport);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSensorActivitiesReportVtbl;"},"IMFSensorActivityMonitorVtbl":{"comment":"","exp":"","file":"mfidl.h","line":20404,"type":"Struct","value":"typedef struct IMFSensorActivityMonitorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSensorActivityMonitor * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSensorActivityMonitor * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSensorActivityMonitor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            IMFSensorActivityMonitor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            IMFSensorActivityMonitor * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSensorActivityMonitorVtbl;"},"IMFSensorActivityReportVtbl":{"comment":"","exp":"","file":"mfidl.h","line":20092,"type":"Struct","value":"typedef struct IMFSensorActivityReportVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSensorActivityReport * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSensorActivityReport * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSensorActivityReport * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFriendlyName )( \\r\\n            IMFSensorActivityReport * This,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_z_(cchFriendlyName)  LPWSTR FriendlyName,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG cchFriendlyName,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *pcchWritten);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSymbolicLink )( \\r\\n            IMFSensorActivityReport * This,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_z_(cchSymbolicLink)  LPWSTR SymbolicLink,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG cchSymbolicLink,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *pcchWritten);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProcessCount )( \\r\\n            IMFSensorActivityReport * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *pcCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProcessActivity )( \\r\\n            IMFSensorActivityReport * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG Index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFSensorProcessActivity **ppProcessActivity);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSensorActivityReportVtbl;"},"IMFSensorDeviceVtbl":{"comment":"","exp":"","file":"mfidl.h","line":18781,"type":"Struct","value":"typedef struct IMFSensorDeviceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSensorDevice * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSensorDevice * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSensorDevice * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceId )( \\r\\n            IMFSensorDevice * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONGLONG *pDeviceId);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceType )( \\r\\n            IMFSensorDevice * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFSensorDeviceType *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFlags )( \\r\\n            IMFSensorDevice * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONGLONG *pFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSymbolicLink )( \\r\\n            IMFSensorDevice * This,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_z_(cchSymbolicLink)  LPWSTR SymbolicLink,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LONG cchSymbolicLink,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONG *pcchWritten);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceAttributes )( \\r\\n            IMFSensorDevice * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_result_maybenull_  IMFAttributes **ppAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamAttributesCount )( \\r\\n            IMFSensorDevice * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MFSensorStreamType eType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamAttributes )( \\r\\n            IMFSensorDevice * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MFSensorStreamType eType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFAttributes **ppAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSensorDeviceMode )( \\r\\n            IMFSensorDevice * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MFSensorDeviceMode eMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSensorDeviceMode )( \\r\\n            IMFSensorDevice * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFSensorDeviceMode *peMode);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSensorDeviceVtbl;"},"IMFSensorGroupVtbl":{"comment":"","exp":"","file":"mfidl.h","line":18971,"type":"Struct","value":"typedef struct IMFSensorGroupVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSensorGroup * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSensorGroup * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSensorGroup * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSymbolicLink )( \\r\\n            IMFSensorGroup * This,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_z_(cchSymbolicLink)  LPWSTR SymbolicLink,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LONG cchSymbolicLink,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONG *pcchWritten);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFlags )( \\r\\n            IMFSensorGroup * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONGLONG *pFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSensorGroupAttributes )( \\r\\n            IMFSensorGroup * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_result_maybenull_  IMFAttributes **ppAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSensorDeviceCount )( \\r\\n            IMFSensorGroup * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSensorDevice )( \\r\\n            IMFSensorGroup * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFSensorDevice **ppDevice);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDefaultSensorDeviceIndex )( \\r\\n            IMFSensorGroup * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDefaultSensorDeviceIndex )( \\r\\n            IMFSensorGroup * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateMediaSource )( \\r\\n            IMFSensorGroup * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFMediaSource **ppSource);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSensorGroupVtbl;"},"IMFSensorProcessActivityVtbl":{"comment":"","exp":"","file":"mfidl.h","line":19964,"type":"Struct","value":"typedef struct IMFSensorProcessActivityVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSensorProcessActivity * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSensorProcessActivity * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSensorProcessActivity * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProcessId )( \\r\\n            IMFSensorProcessActivity * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *pPID);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamingState )( \\r\\n            IMFSensorProcessActivity * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfStreaming);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamingMode )( \\r\\n            IMFSensorProcessActivity * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFSensorDeviceMode *pMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetReportTime )( \\r\\n            IMFSensorProcessActivity * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  FILETIME *pft);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSensorProcessActivityVtbl;"},"IMFSensorProfileCollectionVtbl":{"comment":"","exp":"","file":"mfidl.h","line":19807,"type":"Struct","value":"typedef struct IMFSensorProfileCollectionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSensorProfileCollection * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSensorProfileCollection * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSensorProfileCollection * This);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetProfileCount )( \\r\\n            IMFSensorProfileCollection * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProfile )( \\r\\n            IMFSensorProfileCollection * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD Index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFSensorProfile **ppProfile);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddProfile )( \\r\\n            IMFSensorProfileCollection * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFSensorProfile *pProfile);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FindProfile )( \\r\\n            IMFSensorProfileCollection * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  SENSORPROFILEID *ProfileId,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFSensorProfile **ppProfile);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RemoveProfileByIndex )( \\r\\n            IMFSensorProfileCollection * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD Index);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *RemoveProfile )( \\r\\n            IMFSensorProfileCollection * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  SENSORPROFILEID *ProfileId);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSensorProfileCollectionVtbl;"},"IMFSensorProfileVtbl":{"comment":"","exp":"","file":"mfidl.h","line":19673,"type":"Struct","value":"typedef struct IMFSensorProfileVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSensorProfile * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSensorProfile * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSensorProfile * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProfileId )( \\r\\n            IMFSensorProfile * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  SENSORPROFILEID *pId);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddProfileFilter )( \\r\\n            IMFSensorProfile * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 StreamId,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_z_  LPCWSTR wzFilterSetString);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsMediaTypeSupported )( \\r\\n            IMFSensorProfile * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 StreamId,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfSupported);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddBlockedControl )( \\r\\n            IMFSensorProfile * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_z_  LPCWSTR wzBlockedControl);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSensorProfileVtbl;"},"IMFSensorStreamVtbl":{"comment":"","exp":"","file":"mfidl.h","line":19125,"type":"Struct","value":"typedef struct IMFSensorStreamVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSensorStream * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSensorStream * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSensorStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            IMFSensorStream * This,\\r\\n            IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ UINT8 **ppBuf,\\r\\n            \/* [out] *\/ UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            REFIID riid,\\r\\n            \/* [iid_is][out] *\/ LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            IMFSensorStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [string][in] *\/ LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            IMFSensorStream * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [in] *\/ IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            IMFSensorStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            IMFSensorStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IMFSensorStream * This,\\r\\n            \/* [out] *\/ UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            IMFSensorStream * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            IMFSensorStream * This,\\r\\n            \/* [in] *\/ IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaTypeCount )( \\r\\n            IMFSensorStream * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaType )( \\r\\n            IMFSensorStream * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CloneSensorStream )( \\r\\n            IMFSensorStream * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFSensorStream **ppStream);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSensorStreamVtbl;"},"IMFSensorTransformFactoryVtbl":{"comment":"","exp":"","file":"mfidl.h","line":19498,"type":"Struct","value":"typedef struct IMFSensorTransformFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSensorTransformFactory * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSensorTransformFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSensorTransformFactory * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFactoryAttributes )( \\r\\n            IMFSensorTransformFactory * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFAttributes **ppAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitializeFactory )( \\r\\n            IMFSensorTransformFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwMaxTransformCount,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFCollection *pSensorDevices,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTransformCount )( \\r\\n            IMFSensorTransformFactory * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTransformInformation )( \\r\\n            IMFSensorTransformFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD TransformIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *pguidTransformId,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_result_maybenull_  IMFAttributes **ppAttributes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFCollection **ppStreamInformation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateTransform )( \\r\\n            IMFSensorTransformFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidSensorTransformID,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFDeviceTransform **ppDeviceMFT);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSensorTransformFactoryVtbl;"},"IMFSequencerSourceVtbl":{"comment":"","exp":"","file":"mfidl.h","line":10525,"type":"Struct","value":"typedef struct IMFSequencerSourceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSequencerSource * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSequencerSource * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSequencerSource * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AppendTopology )( \\r\\n            IMFSequencerSource * This,\\r\\n            \/* [in] *\/ IMFTopology *pTopology,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFSequencerElementId *pdwId);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteTopology )( \\r\\n            IMFSequencerSource * This,\\r\\n            \/* [in] *\/ MFSequencerElementId dwId);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPresentationContext )( \\r\\n            IMFSequencerSource * This,\\r\\n            \/* [in] *\/ IMFPresentationDescriptor *pPD,\\r\\n            \/* [annotation][optional][out] *\/ \\r\\n            _Out_opt_  MFSequencerElementId *pId,\\r\\n            \/* [annotation][optional][out] *\/ \\r\\n            _Out_opt_  IMFTopology **ppTopology);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UpdateTopology )( \\r\\n            IMFSequencerSource * This,\\r\\n            \/* [in] *\/ MFSequencerElementId dwId,\\r\\n            \/* [in] *\/ IMFTopology *pTopology);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UpdateTopologyFlags )( \\r\\n            IMFSequencerSource * This,\\r\\n            \/* [in] *\/ MFSequencerElementId dwId,\\r\\n            \/* [in] *\/ DWORD dwFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSequencerSourceVtbl;"},"IMFSharingEngineClassFactoryVtbl":{"comment":"","exp":"","file":"mfsharingengine.h","line":172,"type":"Struct","value":"typedef struct IMFSharingEngineClassFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSharingEngineClassFactory * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSharingEngineClassFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSharingEngineClassFactory * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( \\r\\n            IMFSharingEngineClassFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttr,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IUnknown **ppEngine);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSharingEngineClassFactoryVtbl;"},"IMFShutdownVtbl":{"comment":"","exp":"","file":"mfidl.h","line":6956,"type":"Struct","value":"typedef struct IMFShutdownVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFShutdown * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFShutdown * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFShutdown * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Shutdown )( \\r\\n            __RPC__in IMFShutdown * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetShutdownStatus )( \\r\\n            __RPC__in IMFShutdown * This,\\r\\n            \/* [out] *\/ __RPC__out MFSHUTDOWN_STATUS *pStatus);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFShutdownVtbl;"},"IMFSignedLibraryVtbl":{"comment":"","exp":"","file":"mfidl.h","line":17124,"type":"Struct","value":"typedef struct IMFSignedLibraryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSignedLibrary * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSignedLibrary * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSignedLibrary * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProcedureAddress )( \\r\\n            IMFSignedLibrary * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  LPCSTR name,\\r\\n            \/* [annotation] *\/ \\r\\n            _Outptr_  PVOID *address);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSignedLibraryVtbl;"},"IMFSimpleAudioVolumeVtbl":{"comment":"","exp":"","file":"mfidl.h","line":8384,"type":"Struct","value":"typedef struct IMFSimpleAudioVolumeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFSimpleAudioVolume * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFSimpleAudioVolume * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFSimpleAudioVolume * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMasterVolume )( \\r\\n            __RPC__in IMFSimpleAudioVolume * This,\\r\\n            \/* [in] *\/ float fLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMasterVolume )( \\r\\n            __RPC__in IMFSimpleAudioVolume * This,\\r\\n            \/* [out] *\/ __RPC__out float *pfLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMute )( \\r\\n            __RPC__in IMFSimpleAudioVolume * This,\\r\\n            \/* [in] *\/ const BOOL bMute);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMute )( \\r\\n            __RPC__in IMFSimpleAudioVolume * This,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbMute);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSimpleAudioVolumeVtbl;"},"IMFSinkWriterCallback2Vtbl":{"comment":"","exp":"","file":"mfreadwrite.h","line":1878,"type":"Struct","value":"typedef struct IMFSinkWriterCallback2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSinkWriterCallback2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSinkWriterCallback2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSinkWriterCallback2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnFinalize )( \\r\\n            IMFSinkWriterCallback2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HRESULT hrStatus);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnMarker )( \\r\\n            IMFSinkWriterCallback2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPVOID pvContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnTransformChange )( \\r\\n            IMFSinkWriterCallback2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnStreamError )( \\r\\n            IMFSinkWriterCallback2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HRESULT hrStatus);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSinkWriterCallback2Vtbl;"},"IMFSinkWriterCallbackVtbl":{"comment":"","exp":"","file":"mfreadwrite.h","line":1782,"type":"Struct","value":"typedef struct IMFSinkWriterCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSinkWriterCallback * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSinkWriterCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSinkWriterCallback * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnFinalize )( \\r\\n            IMFSinkWriterCallback * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HRESULT hrStatus);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnMarker )( \\r\\n            IMFSinkWriterCallback * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPVOID pvContext);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSinkWriterCallbackVtbl;"},"IMFSinkWriterEncoderConfigVtbl":{"comment":"","exp":"","file":"mfreadwrite.h","line":1671,"type":"Struct","value":"typedef struct IMFSinkWriterEncoderConfigVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSinkWriterEncoderConfig * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSinkWriterEncoderConfig * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSinkWriterEncoderConfig * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetTargetMediaType )( \\r\\n            IMFSinkWriterEncoderConfig * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pTargetMediaType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pEncodingParameters);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PlaceEncodingParameters )( \\r\\n            IMFSinkWriterEncoderConfig * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAttributes *pEncodingParameters);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSinkWriterEncoderConfigVtbl;"},"IMFSinkWriterExVtbl":{"comment":"","exp":"","file":"mfreadwrite.h","line":1468,"type":"Struct","value":"typedef struct IMFSinkWriterExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSinkWriterEx * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSinkWriterEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSinkWriterEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStream )( \\r\\n            IMFSinkWriterEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pTargetMediaType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetInputMediaType )( \\r\\n            IMFSinkWriterEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pInputMediaType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pEncodingParameters);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginWriting )( \\r\\n            IMFSinkWriterEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WriteSample )( \\r\\n            IMFSinkWriterEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFSample *pSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SendStreamTick )( \\r\\n            IMFSinkWriterEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LONGLONG llTimestamp);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PlaceMarker )( \\r\\n            IMFSinkWriterEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPVOID pvContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyEndOfSegment )( \\r\\n            IMFSinkWriterEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Flush )( \\r\\n            IMFSinkWriterEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Finalize )( \\r\\n            IMFSinkWriterEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetServiceForStream )( \\r\\n            IMFSinkWriterEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidService,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LPVOID *ppvObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStatistics )( \\r\\n            IMFSinkWriterEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_SINK_WRITER_STATISTICS *pStats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTransformForStream )( \\r\\n            IMFSinkWriterEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwTransformIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  GUID *pGuidCategory,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFTransform **ppTransform);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSinkWriterExVtbl;"},"IMFSinkWriterVtbl":{"comment":"","exp":"","file":"mfreadwrite.h","line":1275,"type":"Struct","value":"typedef struct IMFSinkWriterVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSinkWriter * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSinkWriter * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSinkWriter * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddStream )( \\r\\n            IMFSinkWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pTargetMediaType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetInputMediaType )( \\r\\n            IMFSinkWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pInputMediaType,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pEncodingParameters);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginWriting )( \\r\\n            IMFSinkWriter * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WriteSample )( \\r\\n            IMFSinkWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFSample *pSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SendStreamTick )( \\r\\n            IMFSinkWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LONGLONG llTimestamp);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PlaceMarker )( \\r\\n            IMFSinkWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPVOID pvContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyEndOfSegment )( \\r\\n            IMFSinkWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Flush )( \\r\\n            IMFSinkWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Finalize )( \\r\\n            IMFSinkWriter * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetServiceForStream )( \\r\\n            IMFSinkWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidService,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LPVOID *ppvObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStatistics )( \\r\\n            IMFSinkWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_SINK_WRITER_STATISTICS *pStats);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSinkWriterVtbl;"},"IMFSourceBufferAppendModeVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":3658,"type":"Struct","value":"typedef struct IMFSourceBufferAppendModeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSourceBufferAppendMode * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSourceBufferAppendMode * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSourceBufferAppendMode * This);\\r\\n        \\r\\n        MF_MSE_APPEND_MODE ( STDMETHODCALLTYPE *GetAppendMode )( \\r\\n            IMFSourceBufferAppendMode * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAppendMode )( \\r\\n            IMFSourceBufferAppendMode * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_MSE_APPEND_MODE mode);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSourceBufferAppendModeVtbl;"},"IMFSourceBufferListVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":3757,"type":"Struct","value":"typedef struct IMFSourceBufferListVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSourceBufferList * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSourceBufferList * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSourceBufferList * This);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetLength )( \\r\\n            IMFSourceBufferList * This);\\r\\n        \\r\\n        IMFSourceBuffer *( STDMETHODCALLTYPE *GetSourceBuffer )( \\r\\n            IMFSourceBufferList * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSourceBufferListVtbl;"},"IMFSourceBufferNotifyVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":3328,"type":"Struct","value":"typedef struct IMFSourceBufferNotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSourceBufferNotify * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSourceBufferNotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSourceBufferNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OnUpdateStart )( \\r\\n            IMFSourceBufferNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OnAbort )( \\r\\n            IMFSourceBufferNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OnError )( \\r\\n            IMFSourceBufferNotify * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HRESULT hr);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OnUpdate )( \\r\\n            IMFSourceBufferNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *OnUpdateEnd )( \\r\\n            IMFSourceBufferNotify * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSourceBufferNotifyVtbl;"},"IMFSourceBufferVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":3474,"type":"Struct","value":"typedef struct IMFSourceBufferVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSourceBuffer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSourceBuffer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSourceBuffer * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *GetUpdating )( \\r\\n            IMFSourceBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffered )( \\r\\n            IMFSourceBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaTimeRange **ppBuffered);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetTimeStampOffset )( \\r\\n            IMFSourceBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetTimeStampOffset )( \\r\\n            IMFSourceBuffer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double offset);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetAppendWindowStart )( \\r\\n            IMFSourceBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAppendWindowStart )( \\r\\n            IMFSourceBuffer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double time);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetAppendWindowEnd )( \\r\\n            IMFSourceBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAppendWindowEnd )( \\r\\n            IMFSourceBuffer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double time);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Append )( \\r\\n            IMFSourceBuffer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(len)  const BYTE *pData,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD len);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AppendByteStream )( \\r\\n            IMFSourceBuffer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFByteStream *pStream,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  DWORDLONG *pMaxLen);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Abort )( \\r\\n            IMFSourceBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Remove )( \\r\\n            IMFSourceBuffer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double start,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double end);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSourceBufferVtbl;"},"IMFSourceOpenMonitorVtbl":{"comment":"","exp":"","file":"mfidl.h","line":12121,"type":"Struct","value":"typedef struct IMFSourceOpenMonitorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFSourceOpenMonitor * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFSourceOpenMonitor * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFSourceOpenMonitor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnSourceEvent )( \\r\\n            __RPC__in IMFSourceOpenMonitor * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFMediaEvent *pEvent);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSourceOpenMonitorVtbl;"},"IMFSourceReaderCallback2Vtbl":{"comment":"","exp":"","file":"mfreadwrite.h","line":1032,"type":"Struct","value":"typedef struct IMFSourceReaderCallback2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSourceReaderCallback2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSourceReaderCallback2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSourceReaderCallback2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnReadSample )( \\r\\n            IMFSourceReaderCallback2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HRESULT hrStatus,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LONGLONG llTimestamp,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFSample *pSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnFlush )( \\r\\n            IMFSourceReaderCallback2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnEvent )( \\r\\n            IMFSourceReaderCallback2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaEvent *pEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnTransformChange )( \\r\\n            IMFSourceReaderCallback2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnStreamError )( \\r\\n            IMFSourceReaderCallback2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HRESULT hrStatus);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSourceReaderCallback2Vtbl;"},"IMFSourceReaderCallbackVtbl":{"comment":"","exp":"","file":"mfreadwrite.h","line":920,"type":"Struct","value":"typedef struct IMFSourceReaderCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSourceReaderCallback * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSourceReaderCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSourceReaderCallback * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnReadSample )( \\r\\n            IMFSourceReaderCallback * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HRESULT hrStatus,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LONGLONG llTimestamp,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFSample *pSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnFlush )( \\r\\n            IMFSourceReaderCallback * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnEvent )( \\r\\n            IMFSourceReaderCallback * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaEvent *pEvent);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSourceReaderCallbackVtbl;"},"IMFSourceReaderExVtbl":{"comment":"","exp":"","file":"mfreadwrite.h","line":654,"type":"Struct","value":"typedef struct IMFSourceReaderExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSourceReaderEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSourceReaderEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamSelection )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfSelected);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamSelection )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fSelected);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNativeMediaType )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwMediaTypeIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentMediaType )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentMediaType )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Reserved_  DWORD *pdwReserved,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentPosition )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidTimeFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFPROPVARIANT varPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReadSample )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwControlFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pdwActualStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pdwStreamFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  LONGLONG *pllTimestamp,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFSample **ppSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Flush )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetServiceForStream )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidService,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LPVOID *ppvObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPresentationAttribute )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidAttribute,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pvarAttribute);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetNativeMediaType )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFMediaType *pMediaType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwStreamFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddTransformForStream )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pTransformOrActivate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllTransformsForStream )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTransformForStream )( \\r\\n            IMFSourceReaderEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwTransformIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  GUID *pGuidCategory,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFTransform **ppTransform);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSourceReaderExVtbl;"},"IMFSourceReaderVtbl":{"comment":"","exp":"","file":"mfreadwrite.h","line":427,"type":"Struct","value":"typedef struct IMFSourceReaderVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSourceReader * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSourceReader * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSourceReader * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamSelection )( \\r\\n            IMFSourceReader * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfSelected);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamSelection )( \\r\\n            IMFSourceReader * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fSelected);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNativeMediaType )( \\r\\n            IMFSourceReader * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwMediaTypeIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentMediaType )( \\r\\n            IMFSourceReader * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaType **ppMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentMediaType )( \\r\\n            IMFSourceReader * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Reserved_  DWORD *pdwReserved,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentPosition )( \\r\\n            IMFSourceReader * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidTimeFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFPROPVARIANT varPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReadSample )( \\r\\n            IMFSourceReader * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwControlFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pdwActualStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pdwStreamFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  LONGLONG *pllTimestamp,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  IMFSample **ppSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Flush )( \\r\\n            IMFSourceReader * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetServiceForStream )( \\r\\n            IMFSourceReader * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidService,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LPVOID *ppvObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPresentationAttribute )( \\r\\n            IMFSourceReader * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStreamIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID guidAttribute,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PROPVARIANT *pvarAttribute);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSourceReaderVtbl;"},"IMFSourceResolverVtbl":{"comment":"","exp":"","file":"mfidl.h","line":1388,"type":"Struct","value":"typedef struct IMFSourceResolverVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFSourceResolver * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFSourceResolver * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFSourceResolver * This);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *CreateObjectFromURL )( \\r\\n            IMFSourceResolver * This,\\r\\n            \/* [in] *\/ LPCWSTR pwszURL,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [in] *\/ IPropertyStore *pProps,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_OBJECT_TYPE *pObjectType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IUnknown **ppObject);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *CreateObjectFromByteStream )( \\r\\n            IMFSourceResolver * This,\\r\\n            \/* [in] *\/ IMFByteStream *pByteStream,\\r\\n            \/* [in] *\/ LPCWSTR pwszURL,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [in] *\/ IPropertyStore *pProps,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_OBJECT_TYPE *pObjectType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IUnknown **ppObject);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginCreateObjectFromURL )( \\r\\n            IMFSourceResolver * This,\\r\\n            \/* [in] *\/ LPCWSTR pwszURL,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [in] *\/ IPropertyStore *pProps,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_opt_  IUnknown **ppIUnknownCancelCookie,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndCreateObjectFromURL )( \\r\\n            IMFSourceResolver * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_OBJECT_TYPE *pObjectType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IUnknown **ppObject);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginCreateObjectFromByteStream )( \\r\\n            IMFSourceResolver * This,\\r\\n            \/* [in] *\/ IMFByteStream *pByteStream,\\r\\n            \/* [in] *\/ LPCWSTR pwszURL,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [in] *\/ IPropertyStore *pProps,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_opt_  IUnknown **ppIUnknownCancelCookie,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndCreateObjectFromByteStream )( \\r\\n            IMFSourceResolver * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_OBJECT_TYPE *pObjectType,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IUnknown **ppObject);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *CancelObjectCreation )( \\r\\n            IMFSourceResolver * This,\\r\\n            \/* [in] *\/ IUnknown *pIUnknownCancelCookie);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSourceResolverVtbl;"},"IMFSpatialAudioObjectBufferVtbl":{"comment":"","exp":"","file":"mfspatialaudio.h","line":116,"type":"Struct","value":"typedef struct IMFSpatialAudioObjectBufferVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSpatialAudioObjectBuffer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSpatialAudioObjectBuffer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSpatialAudioObjectBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Lock )( \\r\\n            IMFSpatialAudioObjectBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_bytebuffer_to_(*pcbMaxLength, *pcbCurrentLength)  BYTE **ppbBuffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pcbMaxLength,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  DWORD *pcbCurrentLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Unlock )( \\r\\n            IMFSpatialAudioObjectBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentLength )( \\r\\n            IMFSpatialAudioObjectBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbCurrentLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCurrentLength )( \\r\\n            IMFSpatialAudioObjectBuffer * This,\\r\\n            \/* [in] *\/ DWORD cbCurrentLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaxLength )( \\r\\n            IMFSpatialAudioObjectBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbMaxLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetID )( \\r\\n            IMFSpatialAudioObjectBuffer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 u32ID);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetID )( \\r\\n            IMFSpatialAudioObjectBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pu32ID);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetType )( \\r\\n            IMFSpatialAudioObjectBuffer * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AudioObjectType type);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetType )( \\r\\n            IMFSpatialAudioObjectBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  AudioObjectType *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMetadataItems )( \\r\\n            IMFSpatialAudioObjectBuffer * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_nullonfailure_  ISpatialAudioMetadataItems **ppMetadataItems);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSpatialAudioObjectBufferVtbl;"},"IMFSpatialAudioSampleVtbl":{"comment":"","exp":"","file":"mfspatialaudio.h","line":282,"type":"Struct","value":"typedef struct IMFSpatialAudioSampleVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSpatialAudioSample * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSpatialAudioSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ UINT8 **ppBuf,\\r\\n            \/* [out] *\/ UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            REFIID riid,\\r\\n            \/* [iid_is][out] *\/ LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            IMFSpatialAudioSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [string][in] *\/ LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [in] *\/ IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            IMFSpatialAudioSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            IMFSpatialAudioSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [out] *\/ UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [in] *\/ IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSampleFlags )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwSampleFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSampleFlags )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [in] *\/ DWORD dwSampleFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSampleTime )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONGLONG *phnsSampleTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSampleTime )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [in] *\/ LONGLONG hnsSampleTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSampleDuration )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONGLONG *phnsSampleDuration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSampleDuration )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [in] *\/ LONGLONG hnsSampleDuration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferCount )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwBufferCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferByIndex )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [in] *\/ DWORD dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaBuffer **ppBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ConvertToContiguousBuffer )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaBuffer **ppBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddBuffer )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [in] *\/ IMFMediaBuffer *pBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveBufferByIndex )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [in] *\/ DWORD dwIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveAllBuffers )( \\r\\n            IMFSpatialAudioSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTotalLength )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcbTotalLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyToBuffer )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [in] *\/ IMFMediaBuffer *pBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetObjectCount )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwObjectCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddSpatialAudioObject )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFSpatialAudioObjectBuffer *pAudioObjBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSpatialAudioObjectByIndex )( \\r\\n            IMFSpatialAudioSample * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFSpatialAudioObjectBuffer **ppAudioObjBuffer);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSpatialAudioSampleVtbl;"},"IMFStreamDescriptorVtbl":{"comment":"","exp":"","file":"mfidl.h","line":6259,"type":"Struct","value":"typedef struct IMFStreamDescriptorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFStreamDescriptor * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFStreamDescriptor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in_opt IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            __RPC__in IMFStreamDescriptor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [string][in] *\/ __RPC__in_string LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            __RPC__in IMFStreamDescriptor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            __RPC__in IMFStreamDescriptor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamIdentifier )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwStreamIdentifier);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaTypeHandler )( \\r\\n            __RPC__in IMFStreamDescriptor * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaTypeHandler **ppMediaTypeHandler);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFStreamDescriptorVtbl;"},"IMFStreamSinkVtbl":{"comment":"","exp":"","file":"mfidl.h","line":2563,"type":"Struct","value":"typedef struct IMFStreamSinkVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFStreamSink * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFStreamSink * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFStreamSink * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEvent )( \\r\\n            __RPC__in IMFStreamSink * This,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( \\r\\n            IMFStreamSink * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( \\r\\n            IMFStreamSink * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMFMediaEvent **ppEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( \\r\\n            __RPC__in IMFStreamSink * This,\\r\\n            \/* [in] *\/ MediaEventType met,\\r\\n            \/* [in] *\/ __RPC__in REFGUID guidExtendedType,\\r\\n            \/* [in] *\/ HRESULT hrStatus,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const PROPVARIANT *pvValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaSink )( \\r\\n            __RPC__in IMFStreamSink * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaSink **ppMediaSink);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIdentifier )( \\r\\n            __RPC__in IMFStreamSink * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwIdentifier);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMediaTypeHandler )( \\r\\n            __RPC__in IMFStreamSink * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaTypeHandler **ppHandler);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ProcessSample )( \\r\\n            __RPC__in IMFStreamSink * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFSample *pSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *PlaceMarker )( \\r\\n            __RPC__in IMFStreamSink * This,\\r\\n            \/* [in] *\/ MFSTREAMSINK_MARKER_TYPE eMarkerType,\\r\\n            \/* [in] *\/ __RPC__in const PROPVARIANT *pvarMarkerValue,\\r\\n            \/* [in] *\/ __RPC__in const PROPVARIANT *pvarContextValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Flush )( \\r\\n            __RPC__in IMFStreamSink * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFStreamSinkVtbl;"},"IMFStreamingSinkConfigVtbl":{"comment":"","exp":"","file":"mfidl.h","line":14993,"type":"Struct","value":"typedef struct IMFStreamingSinkConfigVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFStreamingSinkConfig * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFStreamingSinkConfig * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFStreamingSinkConfig * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *StartStreaming )( \\r\\n            __RPC__in IMFStreamingSinkConfig * This,\\r\\n            \/* [in] *\/ BOOL fSeekOffsetIsByteOffset,\\r\\n            \/* [in] *\/ QWORD qwSeekOffset);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFStreamingSinkConfigVtbl;"},"IMFSystemIdVtbl":{"comment":"","exp":"","file":"mfidl.h","line":17220,"type":"Struct","value":"typedef struct IMFSystemIdVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFSystemId * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFSystemId * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFSystemId * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetData )( \\r\\n            IMFSystemId * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  UINT32 *size,\\r\\n            \/* [annotation] *\/ \\r\\n            _Outptr_result_bytebuffer_(*size)  BYTE **data);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Setup )( \\r\\n            IMFSystemId * This,\\r\\n            UINT32 stage,\\r\\n            UINT32 cbIn,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_reads_bytes_(cbIn)  const BYTE *pbIn,\\r\\n            \/* [annotation] *\/ \\r\\n            _Out_  UINT32 *pcbOut,\\r\\n            \/* [annotation] *\/ \\r\\n            _Outptr_result_bytebuffer_(*pcbOut)  BYTE **ppbOut);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFSystemIdVtbl;"},"IMFTimecodeTranslateVtbl":{"comment":"","exp":"","file":"mfidl.h","line":8143,"type":"Struct","value":"typedef struct IMFTimecodeTranslateVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimecodeTranslate * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimecodeTranslate * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimecodeTranslate * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginConvertTimecodeToHNS )( \\r\\n            IMFTimecodeTranslate * This,\\r\\n            \/* [in] *\/ const PROPVARIANT *pPropVarTimecode,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndConvertTimecodeToHNS )( \\r\\n            IMFTimecodeTranslate * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [out] *\/ MFTIME *phnsTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginConvertHNSToTimecode )( \\r\\n            IMFTimecodeTranslate * This,\\r\\n            \/* [in] *\/ MFTIME hnsTime,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndConvertHNSToTimecode )( \\r\\n            IMFTimecodeTranslate * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [out] *\/ PROPVARIANT *pPropVarTimecode);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimecodeTranslateVtbl;"},"IMFTimedTextBinaryVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":7681,"type":"Struct","value":"typedef struct IMFTimedTextBinaryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimedTextBinary * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimedTextBinary * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimedTextBinary * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetData )( \\r\\n            IMFTimedTextBinary * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*length)  const BYTE **data,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *length);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimedTextBinaryVtbl;"},"IMFTimedTextCueListVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":7807,"type":"Struct","value":"typedef struct IMFTimedTextCueListVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimedTextCueList * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimedTextCueList * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimedTextCueList * This);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetLength )( \\r\\n            IMFTimedTextCueList * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCueByIndex )( \\r\\n            IMFTimedTextCueList * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextCue **cue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCueById )( \\r\\n            IMFTimedTextCueList * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD id,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextCue **cue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCueByOriginalId )( \\r\\n            IMFTimedTextCueList * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR originalId,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextCue **cue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddTextCue )( \\r\\n            IMFTimedTextCueList * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double start,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double duration,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR text,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_opt_  IMFTimedTextCue **cue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddDataCue )( \\r\\n            IMFTimedTextCueList * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double start,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double duration,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_(dataSize)  const BYTE *data,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dataSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_opt_  IMFTimedTextCue **cue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveCue )( \\r\\n            IMFTimedTextCueList * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFTimedTextCue *cue);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimedTextCueListVtbl;"},"IMFTimedTextCueVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":6925,"type":"Struct","value":"typedef struct IMFTimedTextCueVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimedTextCue * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimedTextCue * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimedTextCue * This);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetId )( \\r\\n            IMFTimedTextCue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOriginalId )( \\r\\n            IMFTimedTextCue * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *originalId);\\r\\n        \\r\\n        MF_TIMED_TEXT_TRACK_KIND ( STDMETHODCALLTYPE *GetCueKind )( \\r\\n            IMFTimedTextCue * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetStartTime )( \\r\\n            IMFTimedTextCue * This);\\r\\n        \\r\\n        double ( STDMETHODCALLTYPE *GetDuration )( \\r\\n            IMFTimedTextCue * This);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetTrackId )( \\r\\n            IMFTimedTextCue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetData )( \\r\\n            IMFTimedTextCue * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_result_maybenull_  IMFTimedTextBinary **data);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRegion )( \\r\\n            IMFTimedTextCue * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_result_maybenull_  IMFTimedTextRegion **region);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStyle )( \\r\\n            IMFTimedTextCue * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_result_maybenull_  IMFTimedTextStyle **style);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetLineCount )( \\r\\n            IMFTimedTextCue * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLine )( \\r\\n            IMFTimedTextCue * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextFormattedText **line);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimedTextCueVtbl;"},"IMFTimedTextFormattedTextVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":7089,"type":"Struct","value":"typedef struct IMFTimedTextFormattedTextVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimedTextFormattedText * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimedTextFormattedText * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimedTextFormattedText * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetText )( \\r\\n            IMFTimedTextFormattedText * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_maybenull_  LPWSTR *text);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetSubformattingCount )( \\r\\n            IMFTimedTextFormattedText * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSubformatting )( \\r\\n            IMFTimedTextFormattedText * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *firstChar,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *charLength,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_result_maybenull_  IMFTimedTextStyle **style);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimedTextFormattedTextVtbl;"},"IMFTimedTextNotifyVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":6449,"type":"Struct","value":"typedef struct IMFTimedTextNotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimedTextNotify * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimedTextNotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimedTextNotify * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *TrackAdded )( \\r\\n            IMFTimedTextNotify * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD trackId);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *TrackRemoved )( \\r\\n            IMFTimedTextNotify * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD trackId);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *TrackSelected )( \\r\\n            IMFTimedTextNotify * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD trackId,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL selected);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *TrackReadyStateChanged )( \\r\\n            IMFTimedTextNotify * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD trackId);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Error )( \\r\\n            IMFTimedTextNotify * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_TIMED_TEXT_ERROR_CODE errorCode,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HRESULT extendedErrorCode,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD sourceTrackId);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Cue )( \\r\\n            IMFTimedTextNotify * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_TIMED_TEXT_CUE_EVENT cueEvent,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double currentTime,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFTimedTextCue *cue);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *Reset )( \\r\\n            IMFTimedTextNotify * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimedTextNotifyVtbl;"},"IMFTimedTextRegionVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":7491,"type":"Struct","value":"typedef struct IMFTimedTextRegionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimedTextRegion * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimedTextRegion * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetName )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *name);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPosition )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *pX,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *pY,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TIMED_TEXT_UNIT_TYPE *unitType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetExtent )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *pWidth,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *pHeight,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TIMED_TEXT_UNIT_TYPE *unitType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBackgroundColor )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFARGB *bgColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetWritingMode )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TIMED_TEXT_WRITING_MODE *writingMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayAlignment )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TIMED_TEXT_DISPLAY_ALIGNMENT *displayAlign);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLineHeight )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *pLineHeight,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TIMED_TEXT_UNIT_TYPE *unitType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetClipOverflow )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *clipOverflow);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPadding )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *before,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *start,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *after,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *end,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TIMED_TEXT_UNIT_TYPE *unitType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetWrap )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *wrap);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetZIndex )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  INT32 *zIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetScrollMode )( \\r\\n            IMFTimedTextRegion * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TIMED_TEXT_SCROLL_MODE *scrollMode);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimedTextRegionVtbl;"},"IMFTimedTextStyleVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":7245,"type":"Struct","value":"typedef struct IMFTimedTextStyleVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimedTextStyle * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimedTextStyle * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetName )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *name);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsExternal )( \\r\\n            IMFTimedTextStyle * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFontFamily )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *fontFamily);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFontSize )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *fontSize,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TIMED_TEXT_UNIT_TYPE *unitType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetColor )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFARGB *color);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBackgroundColor )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFARGB *bgColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetShowBackgroundAlways )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *showBackgroundAlways);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFontStyle )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TIMED_TEXT_FONT_STYLE *fontStyle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBold )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *bold);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRightToLeft )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *rightToLeft);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTextAlignment )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TIMED_TEXT_ALIGNMENT *textAlign);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTextDecoration )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *textDecoration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTextOutline )( \\r\\n            IMFTimedTextStyle * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFARGB *color,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *thickness,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *blurRadius,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TIMED_TEXT_UNIT_TYPE *unitType);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimedTextStyleVtbl;"},"IMFTimedTextTrackListVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":6795,"type":"Struct","value":"typedef struct IMFTimedTextTrackListVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimedTextTrackList * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimedTextTrackList * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimedTextTrackList * This);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetLength )( \\r\\n            IMFTimedTextTrackList * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTrack )( \\r\\n            IMFTimedTextTrackList * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextTrack **track);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTrackById )( \\r\\n            IMFTimedTextTrackList * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD trackId,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextTrack **track);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimedTextTrackListVtbl;"},"IMFTimedTextTrackVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":6621,"type":"Struct","value":"typedef struct IMFTimedTextTrackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimedTextTrack * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimedTextTrack * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimedTextTrack * This);\\r\\n        \\r\\n        DWORD ( STDMETHODCALLTYPE *GetId )( \\r\\n            IMFTimedTextTrack * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLabel )( \\r\\n            IMFTimedTextTrack * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *label);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetLabel )( \\r\\n            IMFTimedTextTrack * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR label);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLanguage )( \\r\\n            IMFTimedTextTrack * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *language);\\r\\n        \\r\\n        MF_TIMED_TEXT_TRACK_KIND ( STDMETHODCALLTYPE *GetTrackKind )( \\r\\n            IMFTimedTextTrack * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsInBand )( \\r\\n            IMFTimedTextTrack * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInBandMetadataTrackDispatchType )( \\r\\n            IMFTimedTextTrack * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *dispatchType);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsActive )( \\r\\n            IMFTimedTextTrack * This);\\r\\n        \\r\\n        MF_TIMED_TEXT_ERROR_CODE ( STDMETHODCALLTYPE *GetErrorCode )( \\r\\n            IMFTimedTextTrack * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetExtendedErrorCode )( \\r\\n            IMFTimedTextTrack * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDataFormat )( \\r\\n            IMFTimedTextTrack * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *format);\\r\\n        \\r\\n        MF_TIMED_TEXT_TRACK_READY_STATE ( STDMETHODCALLTYPE *GetReadyState )( \\r\\n            IMFTimedTextTrack * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCueList )( \\r\\n            IMFTimedTextTrack * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextCueList **cues);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimedTextTrackVtbl;"},"IMFTimedTextVtbl":{"comment":"","exp":"","file":"mfmediaengine.h","line":6205,"type":"Struct","value":"typedef struct IMFTimedTextVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimedText * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimedText * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterNotifications )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFTimedTextNotify *notify);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SelectTrack )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD trackId,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL selected);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddDataSource )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFByteStream *byteStream,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCWSTR label,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCWSTR language,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_TIMED_TEXT_TRACK_KIND kind,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL isDefault,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _Out_  DWORD *trackId);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddDataSourceFromUrl )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR url,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCWSTR label,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCWSTR language,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_TIMED_TEXT_TRACK_KIND kind,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL isDefault,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _Out_  DWORD *trackId);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddTrack )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCWSTR label,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCWSTR language,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_TIMED_TEXT_TRACK_KIND kind,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextTrack **track);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveTrack )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFTimedTextTrack *track);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCueTimeOffset )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  double *offset);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCueTimeOffset )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  double offset);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTracks )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextTrackList **tracks);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetActiveTracks )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextTrackList **activeTracks);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTextTracks )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextTrackList **textTracks);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMetadataTracks )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IMFTimedTextTrackList **metadataTracks);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetInBandEnabled )( \\r\\n            IMFTimedText * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL enabled);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsInBandEnabled )( \\r\\n            IMFTimedText * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimedTextVtbl;"},"IMFTimerVtbl":{"comment":"","exp":"","file":"mfidl.h","line":6826,"type":"Struct","value":"typedef struct IMFTimerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTimer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTimer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTimer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetTimer )( \\r\\n            IMFTimer * This,\\r\\n            \/* [in] *\/ DWORD dwFlags,\\r\\n            \/* [in] *\/ LONGLONG llClockTime,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *punkState,\\r\\n            \/* [out] *\/ IUnknown **ppunkKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CancelTimer )( \\r\\n            IMFTimer * This,\\r\\n            \/* [in] *\/ IUnknown *punkKey);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTimerVtbl;"},"IMFTopoLoaderVtbl":{"comment":"","exp":"","file":"mfidl.h","line":7158,"type":"Struct","value":"typedef struct IMFTopoLoaderVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTopoLoader * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTopoLoader * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTopoLoader * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Load )( \\r\\n            IMFTopoLoader * This,\\r\\n            \/* [in] *\/ IMFTopology *pInputTopo,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFTopology **ppOutputTopo,\\r\\n            \/* [in] *\/ IMFTopology *pCurrentTopo);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTopoLoaderVtbl;"},"IMFTopologyNodeAttributeEditorVtbl":{"comment":"","exp":"","file":"mfidl.h","line":10868,"type":"Struct","value":"typedef struct IMFTopologyNodeAttributeEditorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFTopologyNodeAttributeEditor * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFTopologyNodeAttributeEditor * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFTopologyNodeAttributeEditor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UpdateNodeAttributes )( \\r\\n            __RPC__in IMFTopologyNodeAttributeEditor * This,\\r\\n            \/* [in] *\/ TOPOID TopoId,\\r\\n            \/* [in] *\/ DWORD cUpdates,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cUpdates) MFTOPONODE_ATTRIBUTE_UPDATE *pUpdates);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTopologyNodeAttributeEditorVtbl;"},"IMFTopologyNodeVtbl":{"comment":"","exp":"","file":"mfidl.h","line":4527,"type":"Struct","value":"typedef struct IMFTopologyNodeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFTopologyNode * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFTopologyNode * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in_opt IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            __RPC__in IMFTopologyNode * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [string][in] *\/ __RPC__in_string LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            __RPC__in IMFTopologyNode * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            __RPC__in IMFTopologyNode * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetObject )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetObject )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IUnknown **ppObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNodeType )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [out] *\/ __RPC__out MF_TOPOLOGY_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTopoNodeID )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [out] *\/ __RPC__out TOPOID *pID);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetTopoNodeID )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [in] *\/ TOPOID ullTopoID);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputCount )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcInputs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputCount )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcOutputs);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *ConnectOutput )( \\r\\n            IMFTopologyNode * This,\\r\\n            \/* [in] *\/ DWORD dwOutputIndex,\\r\\n            \/* [in] *\/ IMFTopologyNode *pDownstreamNode,\\r\\n            \/* [in] *\/ DWORD dwInputIndexOnDownstreamNode);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *DisconnectOutput )( \\r\\n            IMFTopologyNode * This,\\r\\n            \/* [in] *\/ DWORD dwOutputIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInput )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [in] *\/ DWORD dwInputIndex,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFTopologyNode **ppUpstreamNode,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwOutputIndexOnUpstreamNode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutput )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [in] *\/ DWORD dwOutputIndex,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFTopologyNode **ppDownstreamNode,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwInputIndexOnDownstreamNode);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *SetOutputPrefType )( \\r\\n            IMFTopologyNode * This,\\r\\n            \/* [in] *\/ DWORD dwOutputIndex,\\r\\n            \/* [in] *\/ IMFMediaType *pType);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *GetOutputPrefType )( \\r\\n            IMFTopologyNode * This,\\r\\n            \/* [in] *\/ DWORD dwOutputIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaType **ppType);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *SetInputPrefType )( \\r\\n            IMFTopologyNode * This,\\r\\n            \/* [in] *\/ DWORD dwInputIndex,\\r\\n            \/* [in] *\/ IMFMediaType *pType);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *GetInputPrefType )( \\r\\n            IMFTopologyNode * This,\\r\\n            \/* [in] *\/ DWORD dwInputIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaType **ppType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CloneFrom )( \\r\\n            __RPC__in IMFTopologyNode * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFTopologyNode *pNode);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTopologyNodeVtbl;"},"IMFTopologyServiceLookupClientVtbl":{"comment":"","exp":"","file":"evr.h","line":1657,"type":"Struct","value":"typedef struct IMFTopologyServiceLookupClientVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTopologyServiceLookupClient * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTopologyServiceLookupClient * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTopologyServiceLookupClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitServicePointers )( \\r\\n            IMFTopologyServiceLookupClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFTopologyServiceLookup *pLookup);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReleaseServicePointers )( \\r\\n            IMFTopologyServiceLookupClient * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTopologyServiceLookupClientVtbl;"},"IMFTopologyServiceLookupVtbl":{"comment":"","exp":"","file":"evr.h","line":1567,"type":"Struct","value":"typedef struct IMFTopologyServiceLookupVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTopologyServiceLookup * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTopologyServiceLookup * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTopologyServiceLookup * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LookupService )( \\r\\n            IMFTopologyServiceLookup * This,\\r\\n            \/* [in] *\/ MF_SERVICE_LOOKUP_TYPE Type,\\r\\n            \/* [in] *\/ DWORD dwIndex,\\r\\n            \/* [in] *\/ REFGUID guidService,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Out_writes_to_(1,*pnObjects)  LPVOID *ppvObjects,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  DWORD *pnObjects);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTopologyServiceLookupVtbl;"},"IMFTopologyVtbl":{"comment":"","exp":"","file":"mfidl.h","line":4013,"type":"Struct","value":"typedef struct IMFTopologyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFTopology * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFTopology * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in_opt IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            __RPC__in IMFTopology * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            __RPC__in REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [string][in] *\/ __RPC__in_string LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            __RPC__in REFGUID guidKey,\\r\\n            \/* [in] *\/ __RPC__in_opt IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            __RPC__in IMFTopology * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            __RPC__in IMFTopology * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ __RPC__out GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ __RPC__inout_opt PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTopologyID )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            \/* [out] *\/ __RPC__out TOPOID *pID);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *AddNode )( \\r\\n            IMFTopology * This,\\r\\n            \/* [in] *\/ IMFTopologyNode *pNode);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *RemoveNode )( \\r\\n            IMFTopology * This,\\r\\n            \/* [in] *\/ IMFTopologyNode *pNode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNodeCount )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            \/* [out] *\/ __RPC__out WORD *pwNodes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNode )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            \/* [in] *\/ WORD wIndex,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFTopologyNode **ppNode);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *Clear )( \\r\\n            IMFTopology * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CloneFrom )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFTopology *pTopology);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNodeByID )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            \/* [in] *\/ TOPOID qwTopoNodeID,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFTopologyNode **ppNode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSourceNodeCollection )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFCollection **ppCollection);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputNodeCollection )( \\r\\n            __RPC__in IMFTopology * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFCollection **ppCollection);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTopologyVtbl;"},"IMFTrackedSampleVtbl":{"comment":"","exp":"","file":"mfidl.h","line":16816,"type":"Struct","value":"typedef struct IMFTrackedSampleVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTrackedSample * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTrackedSample * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTrackedSample * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAllocator )( \\r\\n            IMFTrackedSample * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFAsyncCallback *pSampleAllocator,\\r\\n            \/* [unique][in] *\/ IUnknown *pUnkState);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTrackedSampleVtbl;"},"IMFTranscodeProfileVtbl":{"comment":"","exp":"","file":"mfidl.h","line":15868,"type":"Struct","value":"typedef struct IMFTranscodeProfileVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTranscodeProfile * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTranscodeProfile * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTranscodeProfile * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAudioAttributes )( \\r\\n            IMFTranscodeProfile * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttrs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAudioAttributes )( \\r\\n            IMFTranscodeProfile * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_maybenull_  IMFAttributes **ppAttrs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVideoAttributes )( \\r\\n            IMFTranscodeProfile * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttrs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoAttributes )( \\r\\n            IMFTranscodeProfile * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_maybenull_  IMFAttributes **ppAttrs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetContainerAttributes )( \\r\\n            IMFTranscodeProfile * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttrs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContainerAttributes )( \\r\\n            IMFTranscodeProfile * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_maybenull_  IMFAttributes **ppAttrs);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTranscodeProfileVtbl;"},"IMFTranscodeSinkInfoProviderVtbl":{"comment":"","exp":"","file":"mfidl.h","line":16116,"type":"Struct","value":"typedef struct IMFTranscodeSinkInfoProviderVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTranscodeSinkInfoProvider * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTranscodeSinkInfoProvider * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTranscodeSinkInfoProvider * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputFile )( \\r\\n            IMFTranscodeSinkInfoProvider * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pwszFileName);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputByteStream )( \\r\\n            IMFTranscodeSinkInfoProvider * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFActivate *pByteStreamActivate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetProfile )( \\r\\n            IMFTranscodeSinkInfoProvider * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFTranscodeProfile *pProfile);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSinkInfo )( \\r\\n            IMFTranscodeSinkInfoProvider * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MF_TRANSCODE_SINK_INFO *pSinkInfo);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTranscodeSinkInfoProviderVtbl;"},"IMFTransformVtbl":{"comment":"","exp":"","file":"mftransform.h","line":350,"type":"Struct","value":"typedef struct IMFTransformVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFTransform * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFTransform * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamLimits )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwInputMinimum,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwInputMaximum,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwOutputMinimum,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwOutputMaximum);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamCount )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcInputStreams,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcOutputStreams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamIDs )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwInputIDArraySize,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(dwInputIDArraySize) DWORD *pdwInputIDs,\\r\\n            DWORD dwOutputIDArraySize,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(dwOutputIDArraySize) DWORD *pdwOutputIDs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputStreamInfo )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwInputStreamID,\\r\\n            \/* [out] *\/ __RPC__out MFT_INPUT_STREAM_INFO *pStreamInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputStreamInfo )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwOutputStreamID,\\r\\n            \/* [out] *\/ __RPC__out MFT_OUTPUT_STREAM_INFO *pStreamInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAttributes )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFAttributes **pAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputStreamAttributes )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwInputStreamID,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFAttributes **pAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputStreamAttributes )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwOutputStreamID,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFAttributes **pAttributes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteInputStream )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwStreamID);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddInputStreams )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD cStreams,\\r\\n            \/* [in] *\/ __RPC__in DWORD *adwStreamIDs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputAvailableType )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwInputStreamID,\\r\\n            DWORD dwTypeIndex,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaType **ppType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputAvailableType )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwOutputStreamID,\\r\\n            DWORD dwTypeIndex,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaType **ppType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetInputType )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwInputStreamID,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFMediaType *pType,\\r\\n            DWORD dwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputType )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwOutputStreamID,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFMediaType *pType,\\r\\n            DWORD dwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputCurrentType )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwInputStreamID,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaType **ppType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputCurrentType )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwOutputStreamID,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IMFMediaType **ppType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputStatus )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwInputStreamID,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputStatus )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputBounds )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            LONGLONG hnsLowerBound,\\r\\n            LONGLONG hnsUpperBound);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ProcessEvent )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            DWORD dwInputStreamID,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFMediaEvent *pEvent);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ProcessMessage )( \\r\\n            __RPC__in IMFTransform * This,\\r\\n            MFT_MESSAGE_TYPE eMessage,\\r\\n            ULONG_PTR ulParam);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *ProcessInput )( \\r\\n            IMFTransform * This,\\r\\n            DWORD dwInputStreamID,\\r\\n            IMFSample *pSample,\\r\\n            DWORD dwFlags);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *ProcessOutput )( \\r\\n            IMFTransform * This,\\r\\n            DWORD dwFlags,\\r\\n            DWORD cOutputBufferCount,\\r\\n            \/* [size_is][out][in] *\/ MFT_OUTPUT_DATA_BUFFER *pOutputSamples,\\r\\n            \/* [out] *\/ DWORD *pdwStatus);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTransformVtbl;"},"IMFTrustedInputVtbl":{"comment":"","exp":"","file":"mfidl.h","line":13074,"type":"Struct","value":"typedef struct IMFTrustedInputVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFTrustedInput * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFTrustedInput * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFTrustedInput * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputTrustAuthority )( \\r\\n            __RPC__in IMFTrustedInput * This,\\r\\n            \/* [in] *\/ DWORD dwStreamID,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [iid_is][out] *\/ __RPC__deref_out_opt IUnknown **ppunkObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTrustedInputVtbl;"},"IMFTrustedOutputVtbl":{"comment":"","exp":"","file":"mfidl.h","line":13362,"type":"Struct","value":"typedef struct IMFTrustedOutputVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFTrustedOutput * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFTrustedOutput * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFTrustedOutput * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputTrustAuthorityCount )( \\r\\n            IMFTrustedOutput * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pcOutputTrustAuthorities);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetOutputTrustAuthorityByIndex )( \\r\\n            IMFTrustedOutput * This,\\r\\n            \/* [in] *\/ DWORD dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFOutputTrustAuthority **ppauthority);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsFinal )( \\r\\n            IMFTrustedOutput * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pfIsFinal);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFTrustedOutputVtbl;"},"IMFVideoCaptureSampleAllocatorVtbl":{"comment":"","exp":"","file":"mfidl.h","line":21476,"type":"Struct","value":"typedef struct IMFVideoCaptureSampleAllocatorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoCaptureSampleAllocator * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoCaptureSampleAllocator * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoCaptureSampleAllocator * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDirectXManager )( \\r\\n            IMFVideoCaptureSampleAllocator * This,\\r\\n            \/* [unique][in] *\/ IUnknown *pManager);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UninitializeSampleAllocator )( \\r\\n            IMFVideoCaptureSampleAllocator * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitializeSampleAllocator )( \\r\\n            IMFVideoCaptureSampleAllocator * This,\\r\\n            \/* [in] *\/ DWORD cRequestedFrames,\\r\\n            \/* [in] *\/ IMFMediaType *pMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AllocateSample )( \\r\\n            IMFVideoCaptureSampleAllocator * This,\\r\\n            \/* [out] *\/ IMFSample **ppSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitializeCaptureSampleAllocator )( \\r\\n            IMFVideoCaptureSampleAllocator * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD cbSampleSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD cbCaptureMetadataSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD cbAlignment,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD cMinimumSamples,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMFMediaType *pMediaType);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoCaptureSampleAllocatorVtbl;"},"IMFVideoDeviceIDVtbl":{"comment":"","exp":"","file":"evr.h","line":356,"type":"Struct","value":"typedef struct IMFVideoDeviceIDVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoDeviceID * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoDeviceID * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoDeviceID * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDeviceID )( \\r\\n            IMFVideoDeviceID * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IID *pDeviceID);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoDeviceIDVtbl;"},"IMFVideoDisplayControlVtbl":{"comment":"","exp":"","file":"evr.h","line":532,"type":"Struct","value":"typedef struct IMFVideoDisplayControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFVideoDisplayControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFVideoDisplayControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNativeVideoSize )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [unique][out][in] *\/ __RPC__inout_opt SIZE *pszVideo,\\r\\n            \/* [unique][out][in] *\/ __RPC__inout_opt SIZE *pszARVideo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIdealVideoSize )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [unique][out][in] *\/ __RPC__inout_opt SIZE *pszMin,\\r\\n            \/* [unique][out][in] *\/ __RPC__inout_opt SIZE *pszMax);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVideoPosition )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const MFVideoNormalizedRect *pnrcSource,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt const LPRECT prcDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoPosition )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [out] *\/ __RPC__out MFVideoNormalizedRect *pnrcSource,\\r\\n            \/* [out] *\/ __RPC__out LPRECT prcDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAspectRatioMode )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [in] *\/ DWORD dwAspectRatioMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAspectRatioMode )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwAspectRatioMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVideoWindow )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [in] *\/ __RPC__in HWND hwndVideo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoWindow )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt HWND *phwndVideo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RepaintVideo )( \\r\\n            __RPC__in IMFVideoDisplayControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentImage )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [out][in] *\/ __RPC__inout BITMAPINFOHEADER *pBih,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbDib) BYTE **pDib,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcbDib,\\r\\n            \/* [unique][out][in] *\/ __RPC__inout_opt LONGLONG *pTimeStamp);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBorderColor )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [in] *\/ COLORREF Clr);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBorderColor )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [out] *\/ __RPC__out COLORREF *pClr);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRenderingPrefs )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [in] *\/ DWORD dwRenderFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRenderingPrefs )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwRenderFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFullscreen )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [in] *\/ BOOL fFullscreen);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullscreen )( \\r\\n            __RPC__in IMFVideoDisplayControl * This,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pfFullscreen);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoDisplayControlVtbl;"},"IMFVideoMediaTypeVtbl":{"comment":"","exp":"","file":"mfobjects.h","line":2929,"type":"Struct","value":"typedef struct IMFVideoMediaTypeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoMediaType * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoMediaType * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItem )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemType )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ MF_ATTRIBUTE_TYPE *pType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CompareItem )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Compare )( \\r\\n            IMFVideoMediaType * This,\\r\\n            IMFAttributes *pTheirs,\\r\\n            MF_ATTRIBUTES_MATCH_TYPE MatchType,\\r\\n            \/* [out] *\/ BOOL *pbResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT64 *punValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDouble )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ double *pfValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGUID )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ GUID *pguidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetString )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ LPWSTR pwszValue,\\r\\n            UINT32 cchBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ LPWSTR *ppwszValue,\\r\\n            \/* [out] *\/ UINT32 *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [out] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBlob )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][out] *\/ UINT8 *pBuf,\\r\\n            UINT32 cbBufSize,\\r\\n            \/* [full][out][in] *\/ UINT32 *pcbBlobSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][size_is][out] *\/ UINT8 **ppBuf,\\r\\n            \/* [out] *\/ UINT32 *pcbSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            REFIID riid,\\r\\n            \/* [iid_is][out] *\/ LPVOID *ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetItem )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            REFPROPVARIANT Value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( \\r\\n            IMFVideoMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT32 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            UINT64 unValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDouble )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            double fValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGUID )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            REFGUID guidValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetString )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [string][in] *\/ LPCWSTR wszValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBlob )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [size_is][in] *\/ const UINT8 *pBuf,\\r\\n            UINT32 cbBufSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( \\r\\n            IMFVideoMediaType * This,\\r\\n            REFGUID guidKey,\\r\\n            \/* [in] *\/ IUnknown *pUnknown);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockStore )( \\r\\n            IMFVideoMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( \\r\\n            IMFVideoMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IMFVideoMediaType * This,\\r\\n            \/* [out] *\/ UINT32 *pcItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( \\r\\n            IMFVideoMediaType * This,\\r\\n            UINT32 unIndex,\\r\\n            \/* [out] *\/ GUID *pguidKey,\\r\\n            \/* [full][out][in] *\/ PROPVARIANT *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( \\r\\n            IMFVideoMediaType * This,\\r\\n            \/* [in] *\/ IMFAttributes *pDest);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMajorType )( \\r\\n            IMFVideoMediaType * This,\\r\\n            \/* [out] *\/ GUID *pguidMajorType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsCompressedFormat )( \\r\\n            IMFVideoMediaType * This,\\r\\n            \/* [out] *\/ BOOL *pfCompressed);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsEqual )( \\r\\n            IMFVideoMediaType * This,\\r\\n            \/* [in] *\/ IMFMediaType *pIMediaType,\\r\\n            \/* [out] *\/ DWORD *pdwFlags);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *GetRepresentation )( \\r\\n            IMFVideoMediaType * This,\\r\\n            \/* [in] *\/ GUID guidRepresentation,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LPVOID *ppvRepresentation);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *FreeRepresentation )( \\r\\n            IMFVideoMediaType * This,\\r\\n            \/* [in] *\/ GUID guidRepresentation,\\r\\n            \/* [in] *\/ LPVOID pvRepresentation);\\r\\n        \\r\\n        const MFVIDEOFORMAT *( STDMETHODCALLTYPE *GetVideoFormat )( \\r\\n            IMFVideoMediaType * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoRepresentation )( \\r\\n            IMFVideoMediaType * This,\\r\\n            \/* [in] *\/ GUID guidRepresentation,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LPVOID *ppvRepresentation,\\r\\n            \/* [in] *\/ LONG lStride);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoMediaTypeVtbl;"},"IMFVideoMixerBitmapVtbl":{"comment":"","exp":"","file":"evr9.h","line":459,"type":"Struct","value":"typedef struct IMFVideoMixerBitmapVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoMixerBitmap * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoMixerBitmap * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoMixerBitmap * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAlphaBitmap )( \\r\\n            IMFVideoMixerBitmap * This,\\r\\n            \/* [in] *\/ const MFVideoAlphaBitmap *pBmpParms);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ClearAlphaBitmap )( \\r\\n            IMFVideoMixerBitmap * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UpdateAlphaBitmapParameters )( \\r\\n            IMFVideoMixerBitmap * This,\\r\\n            \/* [in] *\/ const MFVideoAlphaBitmapParams *pBmpParms);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAlphaBitmapParameters )( \\r\\n            IMFVideoMixerBitmap * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  MFVideoAlphaBitmapParams *pBmpParms);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoMixerBitmapVtbl;"},"IMFVideoMixerControl2Vtbl":{"comment":"","exp":"","file":"evr.h","line":1122,"type":"Struct","value":"typedef struct IMFVideoMixerControl2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFVideoMixerControl2 * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFVideoMixerControl2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFVideoMixerControl2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamZOrder )( \\r\\n            __RPC__in IMFVideoMixerControl2 * This,\\r\\n            \/* [in] *\/ DWORD dwStreamID,\\r\\n            \/* [in] *\/ DWORD dwZ);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamZOrder )( \\r\\n            __RPC__in IMFVideoMixerControl2 * This,\\r\\n            \/* [in] *\/ DWORD dwStreamID,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwZ);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamOutputRect )( \\r\\n            __RPC__in IMFVideoMixerControl2 * This,\\r\\n            \/* [in] *\/ DWORD dwStreamID,\\r\\n            \/* [in] *\/ __RPC__in const MFVideoNormalizedRect *pnrcOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamOutputRect )( \\r\\n            __RPC__in IMFVideoMixerControl2 * This,\\r\\n            \/* [in] *\/ DWORD dwStreamID,\\r\\n            \/* [out] *\/ __RPC__out MFVideoNormalizedRect *pnrcOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMixingPrefs )( \\r\\n            __RPC__in IMFVideoMixerControl2 * This,\\r\\n            \/* [in] *\/ DWORD dwMixFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMixingPrefs )( \\r\\n            __RPC__in IMFVideoMixerControl2 * This,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwMixFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoMixerControl2Vtbl;"},"IMFVideoMixerControlVtbl":{"comment":"","exp":"","file":"evr.h","line":995,"type":"Struct","value":"typedef struct IMFVideoMixerControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFVideoMixerControl * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFVideoMixerControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFVideoMixerControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamZOrder )( \\r\\n            __RPC__in IMFVideoMixerControl * This,\\r\\n            \/* [in] *\/ DWORD dwStreamID,\\r\\n            \/* [in] *\/ DWORD dwZ);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamZOrder )( \\r\\n            __RPC__in IMFVideoMixerControl * This,\\r\\n            \/* [in] *\/ DWORD dwStreamID,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwZ);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamOutputRect )( \\r\\n            __RPC__in IMFVideoMixerControl * This,\\r\\n            \/* [in] *\/ DWORD dwStreamID,\\r\\n            \/* [in] *\/ __RPC__in const MFVideoNormalizedRect *pnrcOutput);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamOutputRect )( \\r\\n            __RPC__in IMFVideoMixerControl * This,\\r\\n            \/* [in] *\/ DWORD dwStreamID,\\r\\n            \/* [out] *\/ __RPC__out MFVideoNormalizedRect *pnrcOutput);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoMixerControlVtbl;"},"IMFVideoPositionMapperVtbl":{"comment":"","exp":"","file":"evr.h","line":268,"type":"Struct","value":"typedef struct IMFVideoPositionMapperVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoPositionMapper * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoPositionMapper * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoPositionMapper * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *MapOutputCoordinateToInputStream )( \\r\\n            IMFVideoPositionMapper * This,\\r\\n            \/* [in] *\/ float xOut,\\r\\n            \/* [in] *\/ float yOut,\\r\\n            \/* [in] *\/ DWORD dwOutputStreamIndex,\\r\\n            \/* [in] *\/ DWORD dwInputStreamIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pxIn,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pyIn);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoPositionMapperVtbl;"},"IMFVideoPresenterVtbl":{"comment":"","exp":"","file":"evr.h","line":749,"type":"Struct","value":"typedef struct IMFVideoPresenterVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoPresenter * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoPresenter * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoPresenter * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockStart )( \\r\\n            IMFVideoPresenter * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime,\\r\\n            \/* [in] *\/ LONGLONG llClockStartOffset);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockStop )( \\r\\n            IMFVideoPresenter * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockPause )( \\r\\n            IMFVideoPresenter * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockRestart )( \\r\\n            IMFVideoPresenter * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnClockSetRate )( \\r\\n            IMFVideoPresenter * This,\\r\\n            \/* [in] *\/ MFTIME hnsSystemTime,\\r\\n            \/* [in] *\/ float flRate);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ProcessMessage )( \\r\\n            IMFVideoPresenter * This,\\r\\n            MFVP_MESSAGE_TYPE eMessage,\\r\\n            ULONG_PTR ulParam);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentMediaType )( \\r\\n            IMFVideoPresenter * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFVideoMediaType **ppMediaType);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoPresenterVtbl;"},"IMFVideoProcessorControl2Vtbl":{"comment":"","exp":"","file":"mfidl.h","line":3487,"type":"Struct","value":"typedef struct IMFVideoProcessorControl2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoProcessorControl2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoProcessorControl2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoProcessorControl2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBorderColor )( \\r\\n            IMFVideoProcessorControl2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  MFARGB *pBorderColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSourceRectangle )( \\r\\n            IMFVideoProcessorControl2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  RECT *pSrcRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDestinationRectangle )( \\r\\n            IMFVideoProcessorControl2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  RECT *pDstRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMirror )( \\r\\n            IMFVideoProcessorControl2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_VIDEO_PROCESSOR_MIRROR eMirror);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotation )( \\r\\n            IMFVideoProcessorControl2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_VIDEO_PROCESSOR_ROTATION eRotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetConstrictionSize )( \\r\\n            IMFVideoProcessorControl2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  SIZE *pConstrictionSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotationOverride )( \\r\\n            IMFVideoProcessorControl2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT uiRotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnableHardwareEffects )( \\r\\n            IMFVideoProcessorControl2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fEnabled);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSupportedHardwareEffects )( \\r\\n            IMFVideoProcessorControl2 * This,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _Out_  UINT *puiSupport);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoProcessorControl2Vtbl;"},"IMFVideoProcessorControl3Vtbl":{"comment":"","exp":"","file":"mfidl.h","line":3686,"type":"Struct","value":"typedef struct IMFVideoProcessorControl3Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoProcessorControl3 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoProcessorControl3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBorderColor )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  MFARGB *pBorderColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSourceRectangle )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  RECT *pSrcRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDestinationRectangle )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  RECT *pDstRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMirror )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_VIDEO_PROCESSOR_MIRROR eMirror);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotation )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_VIDEO_PROCESSOR_ROTATION eRotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetConstrictionSize )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  SIZE *pConstrictionSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotationOverride )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT uiRotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnableHardwareEffects )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fEnabled);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSupportedHardwareEffects )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][retval][out] *\/ \\r\\n            _Out_  UINT *puiSupport);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNaturalOutputType )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IMFMediaType **ppType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EnableSphericalVideoProcessing )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL fEnable,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MFVideoSphericalFormat eFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MFVideoSphericalProjectionMode eProjectionMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSphericalVideoProperties )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float X,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float Y,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float Z,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float W,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fieldOfView);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOutputDevice )( \\r\\n            IMFVideoProcessorControl3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pOutputDevice);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoProcessorControl3Vtbl;"},"IMFVideoProcessorControlVtbl":{"comment":"","exp":"","file":"mfidl.h","line":3348,"type":"Struct","value":"typedef struct IMFVideoProcessorControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoProcessorControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoProcessorControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoProcessorControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBorderColor )( \\r\\n            IMFVideoProcessorControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  MFARGB *pBorderColor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSourceRectangle )( \\r\\n            IMFVideoProcessorControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  RECT *pSrcRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDestinationRectangle )( \\r\\n            IMFVideoProcessorControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  RECT *pDstRect);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMirror )( \\r\\n            IMFVideoProcessorControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_VIDEO_PROCESSOR_MIRROR eMirror);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotation )( \\r\\n            IMFVideoProcessorControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  MF_VIDEO_PROCESSOR_ROTATION eRotation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetConstrictionSize )( \\r\\n            IMFVideoProcessorControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  SIZE *pConstrictionSize);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoProcessorControlVtbl;"},"IMFVideoProcessorVtbl":{"comment":"","exp":"","file":"evr9.h","line":244,"type":"Struct","value":"typedef struct IMFVideoProcessorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFVideoProcessor * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFVideoProcessor * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAvailableVideoProcessorModes )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            \/* [out][in] *\/ __RPC__inout UINT *lpdwNumProcessingModes,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*lpdwNumProcessingModes) GUID **ppVideoProcessingModes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorCaps )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            \/* [in] *\/ __RPC__in LPGUID lpVideoProcessorMode,\\r\\n            \/* [out] *\/ __RPC__out DXVA2_VideoProcessorCaps *lpVideoProcessorCaps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVideoProcessorMode )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            \/* [out] *\/ __RPC__out LPGUID lpMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVideoProcessorMode )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            \/* [in] *\/ __RPC__in LPGUID lpMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProcAmpRange )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            DWORD dwProperty,\\r\\n            \/* [out] *\/ __RPC__out DXVA2_ValueRange *pPropRange);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProcAmpValues )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            DWORD dwFlags,\\r\\n            \/* [out] *\/ __RPC__out DXVA2_ProcAmpValues *Values);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetProcAmpValues )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            DWORD dwFlags,\\r\\n            \/* [in] *\/ __RPC__in DXVA2_ProcAmpValues *pValues);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFilteringRange )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            DWORD dwProperty,\\r\\n            \/* [out] *\/ __RPC__out DXVA2_ValueRange *pPropRange);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFilteringValue )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            DWORD dwProperty,\\r\\n            \/* [out] *\/ __RPC__out DXVA2_Fixed32 *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFilteringValue )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            DWORD dwProperty,\\r\\n            \/* [in] *\/ __RPC__in DXVA2_Fixed32 *pValue);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBackgroundColor )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            \/* [out] *\/ __RPC__out COLORREF *lpClrBkg);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBackgroundColor )( \\r\\n            __RPC__in IMFVideoProcessor * This,\\r\\n            COLORREF ClrBkg);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoProcessorVtbl;"},"IMFVideoRendererEffectControlVtbl":{"comment":"","exp":"","file":"mfidl.h","line":3889,"type":"Struct","value":"typedef struct IMFVideoRendererEffectControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoRendererEffectControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoRendererEffectControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoRendererEffectControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnAppServiceConnectionEstablished )( \\r\\n            IMFVideoRendererEffectControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pAppServiceConnection);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoRendererEffectControlVtbl;"},"IMFVideoRendererVtbl":{"comment":"","exp":"","file":"evr.h","line":1245,"type":"Struct","value":"typedef struct IMFVideoRendererVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoRenderer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoRenderer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoRenderer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitializeRenderer )( \\r\\n            IMFVideoRenderer * This,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  IMFTransform *pVideoMixer,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  IMFVideoPresenter *pVideoPresenter);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoRendererVtbl;"},"IMFVideoSampleAllocatorCallbackVtbl":{"comment":"","exp":"","file":"mfidl.h","line":3002,"type":"Struct","value":"typedef struct IMFVideoSampleAllocatorCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoSampleAllocatorCallback * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoSampleAllocatorCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoSampleAllocatorCallback * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetCallback )( \\r\\n            IMFVideoSampleAllocatorCallback * This,\\r\\n            \/* [unique][in] *\/ IMFVideoSampleAllocatorNotify *pNotify);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFreeSampleCount )( \\r\\n            IMFVideoSampleAllocatorCallback * This,\\r\\n            \/* [out] *\/ LONG *plSamples);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoSampleAllocatorCallbackVtbl;"},"IMFVideoSampleAllocatorExVtbl":{"comment":"","exp":"","file":"mfidl.h","line":3096,"type":"Struct","value":"typedef struct IMFVideoSampleAllocatorExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoSampleAllocatorEx * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoSampleAllocatorEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoSampleAllocatorEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDirectXManager )( \\r\\n            IMFVideoSampleAllocatorEx * This,\\r\\n            \/* [unique][in] *\/ IUnknown *pManager);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UninitializeSampleAllocator )( \\r\\n            IMFVideoSampleAllocatorEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitializeSampleAllocator )( \\r\\n            IMFVideoSampleAllocatorEx * This,\\r\\n            \/* [in] *\/ DWORD cRequestedFrames,\\r\\n            \/* [in] *\/ IMFMediaType *pMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AllocateSample )( \\r\\n            IMFVideoSampleAllocatorEx * This,\\r\\n            \/* [out] *\/ IMFSample **ppSample);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitializeSampleAllocatorEx )( \\r\\n            IMFVideoSampleAllocatorEx * This,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cInitialSamples,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  DWORD cMaximumSamples,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_opt_  IMFAttributes *pAttributes,\\r\\n            \/* [annotation] *\/ \\r\\n            _In_  IMFMediaType *pMediaType);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoSampleAllocatorExVtbl;"},"IMFVideoSampleAllocatorNotifyExVtbl":{"comment":"","exp":"","file":"mfidl.h","line":2912,"type":"Struct","value":"typedef struct IMFVideoSampleAllocatorNotifyExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoSampleAllocatorNotifyEx * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoSampleAllocatorNotifyEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoSampleAllocatorNotifyEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyRelease )( \\r\\n            IMFVideoSampleAllocatorNotifyEx * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyPrune )( \\r\\n            IMFVideoSampleAllocatorNotifyEx * This,\\r\\n            IMFSample *__MIDL__IMFVideoSampleAllocatorNotifyEx0000);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoSampleAllocatorNotifyExVtbl;"},"IMFVideoSampleAllocatorNotifyVtbl":{"comment":"","exp":"","file":"mfidl.h","line":2833,"type":"Struct","value":"typedef struct IMFVideoSampleAllocatorNotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoSampleAllocatorNotify * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoSampleAllocatorNotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoSampleAllocatorNotify * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *NotifyRelease )( \\r\\n            IMFVideoSampleAllocatorNotify * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoSampleAllocatorNotifyVtbl;"},"IMFVideoSampleAllocatorVtbl":{"comment":"","exp":"","file":"mfidl.h","line":2724,"type":"Struct","value":"typedef struct IMFVideoSampleAllocatorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMFVideoSampleAllocator * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMFVideoSampleAllocator * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMFVideoSampleAllocator * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDirectXManager )( \\r\\n            IMFVideoSampleAllocator * This,\\r\\n            \/* [unique][in] *\/ IUnknown *pManager);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UninitializeSampleAllocator )( \\r\\n            IMFVideoSampleAllocator * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitializeSampleAllocator )( \\r\\n            IMFVideoSampleAllocator * This,\\r\\n            \/* [in] *\/ DWORD cRequestedFrames,\\r\\n            \/* [in] *\/ IMFMediaType *pMediaType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AllocateSample )( \\r\\n            IMFVideoSampleAllocator * This,\\r\\n            \/* [out] *\/ IMFSample **ppSample);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFVideoSampleAllocatorVtbl;"},"IMFWorkQueueServicesExVtbl":{"comment":"","exp":"","file":"mfidl.h","line":9468,"type":"Struct","value":"typedef struct IMFWorkQueueServicesExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFWorkQueueServicesEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFWorkQueueServicesEx * This);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginRegisterTopologyWorkQueuesWithMMCSS )( \\r\\n            IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndRegisterTopologyWorkQueuesWithMMCSS )( \\r\\n            IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginUnregisterTopologyWorkQueuesWithMMCSS )( \\r\\n            IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndUnregisterTopologyWorkQueuesWithMMCSS )( \\r\\n            IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTopologyWorkQueueMMCSSClass )( \\r\\n            __RPC__in IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ DWORD dwTopologyWorkQueueId,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(*pcchClass) LPWSTR pwszClass,\\r\\n            \/* [out][in] *\/ __RPC__inout DWORD *pcchClass);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTopologyWorkQueueMMCSSTaskId )( \\r\\n            __RPC__in IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ DWORD dwTopologyWorkQueueId,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwTaskId);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginRegisterPlatformWorkQueueWithMMCSS )( \\r\\n            IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ DWORD dwPlatformWorkQueue,\\r\\n            \/* [in] *\/ LPCWSTR wszClass,\\r\\n            \/* [in] *\/ DWORD dwTaskId,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndRegisterPlatformWorkQueueWithMMCSS )( \\r\\n            IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwTaskId);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginUnregisterPlatformWorkQueueWithMMCSS )( \\r\\n            IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ DWORD dwPlatformWorkQueue,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndUnregisterPlatformWorkQueueWithMMCSS )( \\r\\n            IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPlaftormWorkQueueMMCSSClass )( \\r\\n            __RPC__in IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ DWORD dwPlatformWorkQueueId,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(*pcchClass) LPWSTR pwszClass,\\r\\n            \/* [out][in] *\/ __RPC__inout DWORD *pcchClass);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPlatformWorkQueueMMCSSTaskId )( \\r\\n            __RPC__in IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ DWORD dwPlatformWorkQueueId,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwTaskId);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTopologyWorkQueueMMCSSPriority )( \\r\\n            __RPC__in IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ DWORD dwTopologyWorkQueueId,\\r\\n            \/* [out] *\/ __RPC__out LONG *plPriority);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginRegisterPlatformWorkQueueWithMMCSSEx )( \\r\\n            IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ DWORD dwPlatformWorkQueue,\\r\\n            \/* [in] *\/ LPCWSTR wszClass,\\r\\n            \/* [in] *\/ DWORD dwTaskId,\\r\\n            \/* [in] *\/ LONG lPriority,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPlatformWorkQueueMMCSSPriority )( \\r\\n            __RPC__in IMFWorkQueueServicesEx * This,\\r\\n            \/* [in] *\/ DWORD dwPlatformWorkQueueId,\\r\\n            \/* [out] *\/ __RPC__out LONG *plPriority);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFWorkQueueServicesExVtbl;"},"IMFWorkQueueServicesVtbl":{"comment":"","exp":"","file":"mfidl.h","line":9172,"type":"Struct","value":"typedef struct IMFWorkQueueServicesVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IMFWorkQueueServices * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IMFWorkQueueServices * This);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginRegisterTopologyWorkQueuesWithMMCSS )( \\r\\n            IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndRegisterTopologyWorkQueuesWithMMCSS )( \\r\\n            IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginUnregisterTopologyWorkQueuesWithMMCSS )( \\r\\n            IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndUnregisterTopologyWorkQueuesWithMMCSS )( \\r\\n            IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTopologyWorkQueueMMCSSClass )( \\r\\n            __RPC__in IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ DWORD dwTopologyWorkQueueId,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(*pcchClass) LPWSTR pwszClass,\\r\\n            \/* [out][in] *\/ __RPC__inout DWORD *pcchClass);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTopologyWorkQueueMMCSSTaskId )( \\r\\n            __RPC__in IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ DWORD dwTopologyWorkQueueId,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwTaskId);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginRegisterPlatformWorkQueueWithMMCSS )( \\r\\n            IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ DWORD dwPlatformWorkQueue,\\r\\n            \/* [in] *\/ LPCWSTR wszClass,\\r\\n            \/* [in] *\/ DWORD dwTaskId,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndRegisterPlatformWorkQueueWithMMCSS )( \\r\\n            IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwTaskId);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *BeginUnregisterPlatformWorkQueueWithMMCSS )( \\r\\n            IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ DWORD dwPlatformWorkQueue,\\r\\n            \/* [in] *\/ IMFAsyncCallback *pCallback,\\r\\n            \/* [in] *\/ IUnknown *pState);\\r\\n        \\r\\n        \/* [local] *\/ HRESULT ( STDMETHODCALLTYPE *EndUnregisterPlatformWorkQueueWithMMCSS )( \\r\\n            IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ IMFAsyncResult *pResult);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPlaftormWorkQueueMMCSSClass )( \\r\\n            __RPC__in IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ DWORD dwPlatformWorkQueueId,\\r\\n            \/* [size_is][out] *\/ __RPC__out_ecount_full(*pcchClass) LPWSTR pwszClass,\\r\\n            \/* [out][in] *\/ __RPC__inout DWORD *pcchClass);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPlatformWorkQueueMMCSSTaskId )( \\r\\n            __RPC__in IMFWorkQueueServices * This,\\r\\n            \/* [in] *\/ DWORD dwPlatformWorkQueueId,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pdwTaskId);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMFWorkQueueServicesVtbl;"},"INVERTED_SUB_KEY_GUID":{"comment":"","exp":"(MFPKEY_BASSMGMT_INVERT_SUB.fmtid)","file":"wmcodecdsp.h","line":3078,"type":"Unknown","value":"(MFPKEY_BASSMGMT_INVERT_SUB.fmtid)"},"IOPMVideoOutputVtbl":{"comment":"","exp":"","file":"opmapi.h","line":477,"type":"Struct","value":"typedef struct IOPMVideoOutputVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IOPMVideoOutput * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IOPMVideoOutput * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IOPMVideoOutput * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *StartInitialization )( \\r\\n            IOPMVideoOutput * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  OPM_RANDOM_NUMBER *prnRandomNumber,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*pulCertificateLength)  BYTE **ppbCertificate,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ULONG *pulCertificateLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *FinishInitialization )( \\r\\n            IOPMVideoOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const OPM_ENCRYPTED_INITIALIZATION_PARAMETERS *pParameters);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInformation )( \\r\\n            IOPMVideoOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const OPM_GET_INFO_PARAMETERS *pParameters,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  OPM_REQUESTED_INFORMATION *pRequestedInformation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *COPPCompatibleGetInformation )( \\r\\n            IOPMVideoOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS *pParameters,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  OPM_REQUESTED_INFORMATION *pRequestedInformation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Configure )( \\r\\n            IOPMVideoOutput * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const OPM_CONFIGURE_PARAMETERS *pParameters,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG ulAdditionalParametersSize,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_reads_bytes_opt_(ulAdditionalParametersSize)  const BYTE *pbAdditionalParameters);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IOPMVideoOutputVtbl;"},"IPlayToControlVtbl":{"comment":"","exp":"","file":"mfsharingengine.h","line":977,"type":"Struct","value":"typedef struct IPlayToControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IPlayToControl * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IPlayToControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IPlayToControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Connect )( \\r\\n            __RPC__in IPlayToControl * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFSharingEngineClassFactory *pFactory);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Disconnect )( \\r\\n            __RPC__in IPlayToControl * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IPlayToControlVtbl;"},"IPlayToControlWithCapabilitiesVtbl":{"comment":"","exp":"","file":"mfsharingengine.h","line":1063,"type":"Struct","value":"typedef struct IPlayToControlWithCapabilitiesVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IPlayToControlWithCapabilities * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IPlayToControlWithCapabilities * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IPlayToControlWithCapabilities * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Connect )( \\r\\n            __RPC__in IPlayToControlWithCapabilities * This,\\r\\n            \/* [in] *\/ __RPC__in_opt IMFSharingEngineClassFactory *pFactory);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Disconnect )( \\r\\n            __RPC__in IPlayToControlWithCapabilities * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCapabilities )( \\r\\n            __RPC__in IPlayToControlWithCapabilities * This,\\r\\n            \/* [out] *\/ __RPC__out PLAYTO_SOURCE_CREATEFLAGS *pCapabilities);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IPlayToControlWithCapabilitiesVtbl;"},"IPlayToSourceClassFactoryVtbl":{"comment":"","exp":"","file":"mfsharingengine.h","line":1162,"type":"Struct","value":"typedef struct IPlayToSourceClassFactoryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IPlayToSourceClassFactory * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IPlayToSourceClassFactory * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IPlayToSourceClassFactory * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( \\r\\n            IPlayToSourceClassFactory * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IPlayToControl *pControl,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IInspectable **ppSource);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IPlayToSourceClassFactoryVtbl;"},"ITocCollectionVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":4388,"type":"Struct","value":"typedef struct ITocCollectionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ITocCollection * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ITocCollection * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ITocCollection * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEntryCount )( \\r\\n            ITocCollection * This,\\r\\n            \/* [out] *\/ DWORD *pdwEntryCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEntryByIndex )( \\r\\n            ITocCollection * This,\\r\\n            \/* [in] *\/ DWORD dwEntryIndex,\\r\\n            \/* [out] *\/ IToc **ppToc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddEntry )( \\r\\n            ITocCollection * This,\\r\\n            \/* [in] *\/ IToc *pToc,\\r\\n            \/* [out] *\/ DWORD *pdwEntryIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddEntryByIndex )( \\r\\n            ITocCollection * This,\\r\\n            \/* [in] *\/ DWORD dwEntryIndex,\\r\\n            \/* [in] *\/ IToc *pToc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveEntryByIndex )( \\r\\n            ITocCollection * This,\\r\\n            \/* [in] *\/ DWORD dwEntryIndex);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ITocCollectionVtbl;"},"ITocEntryListVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":4068,"type":"Struct","value":"typedef struct ITocEntryListVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ITocEntryList * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ITocEntryList * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ITocEntryList * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEntryCount )( \\r\\n            ITocEntryList * This,\\r\\n            \/* [out] *\/ DWORD *pdwEntryCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEntryByIndex )( \\r\\n            ITocEntryList * This,\\r\\n            \/* [in] *\/ DWORD dwEntryIndex,\\r\\n            \/* [out] *\/ ITocEntry **ppEntry);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddEntry )( \\r\\n            ITocEntryList * This,\\r\\n            \/* [in] *\/ ITocEntry *pEntry,\\r\\n            \/* [out] *\/ DWORD *pdwEntryIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddEntryByIndex )( \\r\\n            ITocEntryList * This,\\r\\n            \/* [in] *\/ DWORD dwEntryIndex,\\r\\n            \/* [in] *\/ ITocEntry *pEntry);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveEntryByIndex )( \\r\\n            ITocEntryList * This,\\r\\n            \/* [in] *\/ DWORD dwEntryIndex);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ITocEntryListVtbl;"},"ITocEntryVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3916,"type":"Struct","value":"typedef struct ITocEntryVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ITocEntry * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ITocEntry * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ITocEntry * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetTitle )( \\r\\n            ITocEntry * This,\\r\\n            \/* [in] *\/ LPCWSTR pwszTitle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTitle )( \\r\\n            ITocEntry * This,\\r\\n            \/* [out][in] *\/ WORD *pwTitleSize,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_opt_(*pwTitleSize)  LPWSTR pwszTitle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDescriptor )( \\r\\n            ITocEntry * This,\\r\\n            \/* [in] *\/ TOC_ENTRY_DESCRIPTOR *pDescriptor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDescriptor )( \\r\\n            ITocEntry * This,\\r\\n            \/* [out] *\/ TOC_ENTRY_DESCRIPTOR *pDescriptor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSubEntries )( \\r\\n            ITocEntry * This,\\r\\n            \/* [in] *\/ DWORD dwNumSubEntries,\\r\\n            \/* [in] *\/ WORD *pwSubEntryIndices);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSubEntries )( \\r\\n            ITocEntry * This,\\r\\n            \/* [out][in] *\/ DWORD *pdwNumSubEntries,\\r\\n            \/* [out] *\/ WORD *pwSubEntryIndices);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDescriptionData )( \\r\\n            ITocEntry * This,\\r\\n            \/* [in] *\/ DWORD dwDescriptionDataSize,\\r\\n            \/* [in] *\/ BYTE *pbtDescriptionData,\\r\\n            \/* [in] *\/ GUID *pguidType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDescriptionData )( \\r\\n            ITocEntry * This,\\r\\n            \/* [out][in] *\/ DWORD *pdwDescriptionDataSize,\\r\\n            \/* [out] *\/ BYTE *pbtDescriptionData,\\r\\n            \/* [out] *\/ GUID *pGuidType);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ITocEntryVtbl;"},"ITocParserVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":4528,"type":"Struct","value":"typedef struct ITocParserVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ITocParser * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ITocParser * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ITocParser * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Init )( \\r\\n            ITocParser * This,\\r\\n            \/* [in] *\/ LPCWSTR pwszFileName);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTocCount )( \\r\\n            ITocParser * This,\\r\\n            \/* [in] *\/ enum TOC_POS_TYPE enumTocPosType,\\r\\n            \/* [out] *\/ DWORD *pdwTocCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTocByIndex )( \\r\\n            ITocParser * This,\\r\\n            \/* [in] *\/ enum TOC_POS_TYPE enumTocPosType,\\r\\n            \/* [in] *\/ DWORD dwTocIndex,\\r\\n            \/* [out] *\/ IToc **ppToc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetTocByType )( \\r\\n            ITocParser * This,\\r\\n            \/* [in] *\/ enum TOC_POS_TYPE enumTocPosType,\\r\\n            \/* [in] *\/ GUID guidTocType,\\r\\n            \/* [out] *\/ ITocCollection **ppTocs);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddToc )( \\r\\n            ITocParser * This,\\r\\n            \/* [in] *\/ enum TOC_POS_TYPE enumTocPosType,\\r\\n            \/* [in] *\/ IToc *pToc,\\r\\n            \/* [out] *\/ DWORD *pdwTocIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveTocByIndex )( \\r\\n            ITocParser * This,\\r\\n            \/* [in] *\/ enum TOC_POS_TYPE enumTocPosType,\\r\\n            \/* [in] *\/ DWORD dwTocIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveTocByType )( \\r\\n            ITocParser * This,\\r\\n            \/* [in] *\/ enum TOC_POS_TYPE enumTocPosType,\\r\\n            \/* [in] *\/ GUID guidTocType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Commit )( \\r\\n            ITocParser * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ITocParserVtbl;"},"ITocVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":4216,"type":"Struct","value":"typedef struct ITocVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IToc * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IToc * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IToc * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDescriptor )( \\r\\n            IToc * This,\\r\\n            \/* [in] *\/ TOC_DESCRIPTOR *pDescriptor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDescriptor )( \\r\\n            IToc * This,\\r\\n            \/* [out] *\/ TOC_DESCRIPTOR *pDescriptor);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDescription )( \\r\\n            IToc * This,\\r\\n            \/* [in] *\/ LPCWSTR pwszDescription);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDescription )( \\r\\n            IToc * This,\\r\\n            \/* [out][in] *\/ WORD *pwDescriptionSize,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_opt_(*pwDescriptionSize)  LPWSTR pwszDescription);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetContext )( \\r\\n            IToc * This,\\r\\n            \/* [in] *\/ DWORD dwContextSize,\\r\\n            \/* [in] *\/ BYTE *pbtContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetContext )( \\r\\n            IToc * This,\\r\\n            \/* [out][in] *\/ DWORD *pdwContextSize,\\r\\n            \/* [out] *\/ BYTE *pbtContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEntryListCount )( \\r\\n            IToc * This,\\r\\n            \/* [out] *\/ WORD *pwCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEntryListByIndex )( \\r\\n            IToc * This,\\r\\n            \/* [in] *\/ WORD wEntryListIndex,\\r\\n            \/* [out] *\/ ITocEntryList **ppEntryList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddEntryList )( \\r\\n            IToc * This,\\r\\n            \/* [in] *\/ ITocEntryList *pEntryList,\\r\\n            \/* [out] *\/ WORD *pwEntryListIndex);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AddEntryListByIndex )( \\r\\n            IToc * This,\\r\\n            \/* [in] *\/ WORD wEntryListIndex,\\r\\n            \/* [in] *\/ ITocEntryList *pEntryList);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RemoveEntryListByIndex )( \\r\\n            IToc * This,\\r\\n            \/* [in] *\/ WORD wEntryListIndex);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ITocVtbl;"},"IValidateBindingVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":1493,"type":"Struct","value":"typedef struct IValidateBindingVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IValidateBinding * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IValidateBinding * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IValidateBinding * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIdentifier )( \\r\\n            __RPC__in IValidateBinding * This,\\r\\n            \/* [in] *\/ GUID guidLicensorID,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbEphemeron) BYTE *pbEphemeron,\\r\\n            \/* [in] *\/ DWORD cbEphemeron,\\r\\n            \/* [size_is][size_is][out] *\/ __RPC__deref_out_ecount_full_opt(*pcbBlobSize) BYTE **ppbBlobValidationID,\\r\\n            \/* [out] *\/ __RPC__out DWORD *pcbBlobSize);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IValidateBindingVtbl;"},"IWMCodecLeakyBucketVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":1990,"type":"Struct","value":"typedef struct IWMCodecLeakyBucketVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMCodecLeakyBucket * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMCodecLeakyBucket * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMCodecLeakyBucket * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBufferSizeBits )( \\r\\n            IWMCodecLeakyBucket * This,\\r\\n            \/* [in] *\/ ULONG ulBufferSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferSizeBits )( \\r\\n            IWMCodecLeakyBucket * This,\\r\\n            \/* [out] *\/ ULONG *pulBufferSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBufferFullnessBits )( \\r\\n            IWMCodecLeakyBucket * This,\\r\\n            \/* [in] *\/ ULONG ulBufferFullness);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferFullnessBits )( \\r\\n            IWMCodecLeakyBucket * This,\\r\\n            \/* [out] *\/ ULONG *pulBufferFullness);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMCodecLeakyBucketVtbl;"},"IWMCodecOutputTimestampVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":2091,"type":"Struct","value":"typedef struct IWMCodecOutputTimestampVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMCodecOutputTimestamp * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMCodecOutputTimestamp * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMCodecOutputTimestamp * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNextOutputTime )( \\r\\n            IWMCodecOutputTimestamp * This,\\r\\n            \/* [out] *\/ REFERENCE_TIME *prtTime);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMCodecOutputTimestampVtbl;"},"IWMCodecPrivateDataVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":2275,"type":"Struct","value":"typedef struct IWMCodecPrivateDataVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMCodecPrivateData * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMCodecPrivateData * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMCodecPrivateData * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPartialOutputType )( \\r\\n            IWMCodecPrivateData * This,\\r\\n            \/* [in] *\/ DMO_MEDIA_TYPE *pmt);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( \\r\\n            IWMCodecPrivateData * This,\\r\\n            \/* [size_is][unique][out][in] *\/ BYTE *pbData,\\r\\n            \/* [out][in] *\/ ULONG *pcbData);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMCodecPrivateDataVtbl;"},"IWMCodecPropsVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":1886,"type":"Struct","value":"typedef struct IWMCodecPropsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMCodecProps * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMCodecProps * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMCodecProps * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFormatProp )( \\r\\n            IWMCodecProps * This,\\r\\n            \/* [in] *\/ DMO_MEDIA_TYPE *pmt,\\r\\n            \/* [in] *\/ LPCWSTR pszName,\\r\\n            \/* [out] *\/ WMT_PROP_DATATYPE *pType,\\r\\n            \/* [size_is][unique][out][in] *\/ BYTE *pValue,\\r\\n            \/* [out][in] *\/ DWORD *pdwSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCodecProp )( \\r\\n            IWMCodecProps * This,\\r\\n            \/* [in] *\/ DWORD dwFormat,\\r\\n            \/* [in] *\/ LPCWSTR pszName,\\r\\n            \/* [out] *\/ WMT_PROP_DATATYPE *pType,\\r\\n            \/* [size_is][unique][out][in] *\/ BYTE *pValue,\\r\\n            \/* [out][in] *\/ DWORD *pdwSize);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMCodecPropsVtbl;"},"IWMCodecStringsVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":1780,"type":"Struct","value":"typedef struct IWMCodecStringsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMCodecStrings * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMCodecStrings * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMCodecStrings * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetName )( \\r\\n            IWMCodecStrings * This,\\r\\n            \/* [in] *\/ DMO_MEDIA_TYPE *pmt,\\r\\n            \/* [in] *\/ ULONG cchLength,\\r\\n            \/* [annotation][size_is][unique][out][in] *\/ \\r\\n            _Out_writes_to_opt_(cchLength, *pcchLength)  LPWSTR szName,\\r\\n            \/* [out] *\/ ULONG *pcchLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDescription )( \\r\\n            IWMCodecStrings * This,\\r\\n            \/* [in] *\/ DMO_MEDIA_TYPE *pmt,\\r\\n            \/* [in] *\/ ULONG cchLength,\\r\\n            \/* [annotation][size_is][unique][out][in] *\/ \\r\\n            _Out_writes_to_opt_(cchLength, *pcchLength)  LPWSTR szDescription,\\r\\n            \/* [out] *\/ ULONG *pcchLength);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMCodecStringsVtbl;"},"IWMColorConvPropsVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":2989,"type":"Struct","value":"typedef struct IWMColorConvPropsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMColorConvProps * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMColorConvProps * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMColorConvProps * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMode )( \\r\\n            IWMColorConvProps * This,\\r\\n            \/* [in] *\/ LONG lMode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFullCroppingParam )( \\r\\n            IWMColorConvProps * This,\\r\\n            \/* [in] *\/ LONG lSrcCropLeft,\\r\\n            \/* [in] *\/ LONG lSrcCropTop,\\r\\n            \/* [in] *\/ LONG lDstCropLeft,\\r\\n            \/* [in] *\/ LONG lDstCropTop,\\r\\n            \/* [in] *\/ LONG lCropWidth,\\r\\n            \/* [in] *\/ LONG lCropHeight);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMColorConvPropsVtbl;"},"IWMColorLegalizerPropsVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":2689,"type":"Struct","value":"typedef struct IWMColorLegalizerPropsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMColorLegalizerProps * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMColorLegalizerProps * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMColorLegalizerProps * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetColorLegalizerQuality )( \\r\\n            IWMColorLegalizerProps * This,\\r\\n            \/* [in] *\/ LONG lquality);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMColorLegalizerPropsVtbl;"},"IWMFrameInterpPropsVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":2878,"type":"Struct","value":"typedef struct IWMFrameInterpPropsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMFrameInterpProps * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMFrameInterpProps * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMFrameInterpProps * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFrameRateIn )( \\r\\n            IWMFrameInterpProps * This,\\r\\n            \/* [in] *\/ LONG lFrameRate,\\r\\n            \/* [in] *\/ LONG lScale);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFrameRateOut )( \\r\\n            IWMFrameInterpProps * This,\\r\\n            \/* [in] *\/ LONG lFrameRate,\\r\\n            \/* [in] *\/ LONG lScale);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFrameInterpEnabled )( \\r\\n            IWMFrameInterpProps * This,\\r\\n            \/* [in] *\/ BOOL bFIEnabled);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetComplexityLevel )( \\r\\n            IWMFrameInterpProps * This,\\r\\n            \/* [in] *\/ int iComplexity);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMFrameInterpPropsVtbl;"},"IWMInterlacePropsVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":2774,"type":"Struct","value":"typedef struct IWMInterlacePropsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMInterlaceProps * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMInterlaceProps * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMInterlaceProps * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetProcessType )( \\r\\n            IWMInterlaceProps * This,\\r\\n            \/* [in] *\/ int iProcessType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetInitInverseTeleCinePattern )( \\r\\n            IWMInterlaceProps * This,\\r\\n            \/* [in] *\/ int iInitPattern);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetLastFrame )( \\r\\n            IWMInterlaceProps * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMInterlacePropsVtbl;"},"IWMResamplerPropsVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":2448,"type":"Struct","value":"typedef struct IWMResamplerPropsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMResamplerProps * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMResamplerProps * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMResamplerProps * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetHalfFilterLength )( \\r\\n            IWMResamplerProps * This,\\r\\n            \/* [in] *\/ LONG lhalfFilterLen);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUserChannelMtx )( \\r\\n            IWMResamplerProps * This,\\r\\n            \/* [in] *\/ ChMtxType *userChannelMtx);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMResamplerPropsVtbl;"},"IWMResizerPropsVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":2564,"type":"Struct","value":"typedef struct IWMResizerPropsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMResizerProps * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMResizerProps * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMResizerProps * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetResizerQuality )( \\r\\n            IWMResizerProps * This,\\r\\n            \/* [in] *\/ LONG lquality);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetInterlaceMode )( \\r\\n            IWMResizerProps * This,\\r\\n            \/* [in] *\/ LONG lmode);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetClipRegion )( \\r\\n            IWMResizerProps * This,\\r\\n            \/* [in] *\/ LONG lClipOriXSrc,\\r\\n            \/* [in] *\/ LONG lClipOriYSrc,\\r\\n            \/* [in] *\/ LONG lClipWidthSrc,\\r\\n            \/* [in] *\/ LONG lClipHeightSrc);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetFullCropRegion )( \\r\\n            IWMResizerProps * This,\\r\\n            \/* [in] *\/ LONG lClipOriXSrc,\\r\\n            \/* [in] *\/ LONG lClipOriYSrc,\\r\\n            \/* [in] *\/ LONG lClipWidthSrc,\\r\\n            \/* [in] *\/ LONG lClipHeightSrc,\\r\\n            \/* [in] *\/ LONG lClipOriXDst,\\r\\n            \/* [in] *\/ LONG lClipOriYDst,\\r\\n            \/* [in] *\/ LONG lClipWidthDst,\\r\\n            \/* [in] *\/ LONG lClipHeightDst);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFullCropRegion )( \\r\\n            IWMResizerProps * This,\\r\\n            \/* [out] *\/ LONG *lClipOriXSrc,\\r\\n            \/* [out] *\/ LONG *lClipOriYSrc,\\r\\n            \/* [out] *\/ LONG *lClipWidthSrc,\\r\\n            \/* [out] *\/ LONG *lClipHeightSrc,\\r\\n            \/* [out] *\/ LONG *lClipOriXDst,\\r\\n            \/* [out] *\/ LONG *lClipOriYDst,\\r\\n            \/* [out] *\/ LONG *lClipWidthDst,\\r\\n            \/* [out] *\/ LONG *lClipHeightDst);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMResizerPropsVtbl;"},"IWMSampleExtensionSupportVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":2363,"type":"Struct","value":"typedef struct IWMSampleExtensionSupportVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMSampleExtensionSupport * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMSampleExtensionSupport * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMSampleExtensionSupport * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetUseSampleExtensions )( \\r\\n            IWMSampleExtensionSupport * This,\\r\\n            BOOL fUseExtensions);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMSampleExtensionSupportVtbl;"},"IWMValidateVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":1409,"type":"Struct","value":"typedef struct IWMValidateVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IWMValidate * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IWMValidate * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IWMValidate * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetIdentifier )( \\r\\n            __RPC__in IWMValidate * This,\\r\\n            \/* [in] *\/ GUID guidValidationID);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMValidateVtbl;"},"IWMVideoDecoderHurryupVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":1604,"type":"Struct","value":"typedef struct IWMVideoDecoderHurryupVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMVideoDecoderHurryup * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMVideoDecoderHurryup * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMVideoDecoderHurryup * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetHurryup )( \\r\\n            IWMVideoDecoderHurryup * This,\\r\\n            \/* [in] *\/ LONG lHurryup);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetHurryup )( \\r\\n            IWMVideoDecoderHurryup * This,\\r\\n            \/* [out] *\/ LONG *plHurryup);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMVideoDecoderHurryupVtbl;"},"IWMVideoDecoderReconBufferVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":2177,"type":"Struct","value":"typedef struct IWMVideoDecoderReconBufferVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMVideoDecoderReconBuffer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMVideoDecoderReconBuffer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMVideoDecoderReconBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetReconstructedVideoFrameSize )( \\r\\n            IWMVideoDecoderReconBuffer * This,\\r\\n            \/* [out] *\/ DWORD *pdwSize);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetReconstructedVideoFrame )( \\r\\n            IWMVideoDecoderReconBuffer * This,\\r\\n            \/* [out] *\/ IMediaBuffer *pBuf);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetReconstructedVideoFrame )( \\r\\n            IWMVideoDecoderReconBuffer * This,\\r\\n            \/* [in] *\/ IMediaBuffer *pBuf);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMVideoDecoderReconBufferVtbl;"},"IWMVideoForceKeyFrameVtbl":{"comment":"","exp":"","file":"wmcodecdsp.h","line":1690,"type":"Struct","value":"typedef struct IWMVideoForceKeyFrameVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IWMVideoForceKeyFrame * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IWMVideoForceKeyFrame * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IWMVideoForceKeyFrame * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetKeyFrame )( \\r\\n            IWMVideoForceKeyFrame * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IWMVideoForceKeyFrameVtbl;"},"KSPROPSETID_OPMVideoOutput":{"comment":"","exp":"DEFINE_GUIDNAMED(KSPROPSETID_OPMVideoOutput)","file":"ksopmapi.h","line":34,"type":"Other","value":"DEFINE_GUIDNAMED(KSPROPSETID_OPMVideoOutput)"},"LEQ_ENABLED_KEY_GUID":{"comment":"","exp":"(MFPKEY_CORR_LOUDNESS_EQUALIZATION_ON.fmtid)","file":"wmcodecdsp.h","line":3085,"type":"Unknown","value":"(MFPKEY_CORR_LOUDNESS_EQUALIZATION_ON.fmtid)"},"LEQ_RELEASE_KEY_GUID":{"comment":"","exp":"(MFPKEY_LOUDNESS_EQUALIZATION_RELEASE.fmtid)","file":"wmcodecdsp.h","line":3093,"type":"Unknown","value":"(MFPKEY_LOUDNESS_EQUALIZATION_RELEASE.fmtid)"},"LOCAL_D3DFMT_DEFINES":{"comment":"","exp":"1","file":"mfapi.h","line":2124,"type":"Integer","value":1},"MACROBLOCK_FLAG_DIRTY":{"comment":"","exp":"0x00000002","file":"mfapi.h","line":1366,"type":"Integer","value":2},"MACROBLOCK_FLAG_HAS_MOTION_VECTOR":{"comment":"","exp":"0x00000010","file":"mfapi.h","line":1373,"type":"Integer","value":16},"MACROBLOCK_FLAG_HAS_QP":{"comment":"","exp":"0x00000020","file":"mfapi.h","line":1376,"type":"Integer","value":32},"MACROBLOCK_FLAG_MOTION":{"comment":"","exp":"0x00000004","file":"mfapi.h","line":1368,"type":"Integer","value":4},"MACROBLOCK_FLAG_SKIP":{"comment":"","exp":"0x00000001","file":"mfapi.h","line":1364,"type":"Integer","value":1},"MACROBLOCK_FLAG_VIDEO":{"comment":"","exp":"0x00000008","file":"mfapi.h","line":1370,"type":"Integer","value":8},"MAX_DEINTERLACE_DEVICE_GUIDS":{"comment":"","exp":"32","file":"dxva9typ.h","line":615,"type":"Integer","value":32},"MAX_DEINTERLACE_SURFACES":{"comment":"","exp":"32","file":"dxva2api.h","line":188,"type":"Integer","value":32},"MAX_SUBSTREAMS":{"comment":"","exp":"15","file":"dxva2api.h","line":191,"type":"Integer","value":15},"MEDIASINK_CANNOT_MATCH_CLOCK":{"comment":"","exp":"0x00000002","file":"mfidl.h","line":2310,"type":"Integer","value":2},"MEDIASINK_CAN_PREROLL":{"comment":"","exp":"0x00000010","file":"mfidl.h","line":2313,"type":"Integer","value":16},"MEDIASINK_CLOCK_REQUIRED":{"comment":"","exp":"0x00000008","file":"mfidl.h","line":2312,"type":"Integer","value":8},"MEDIASINK_FIXED_STREAMS":{"comment":"","exp":"0x00000001","file":"mfidl.h","line":2309,"type":"Integer","value":1},"MEDIASINK_RATELESS":{"comment":"","exp":"0x00000004","file":"mfidl.h","line":2311,"type":"Integer","value":4},"MEDIASINK_REQUIRE_REFERENCE_MEDIATYPE":{"comment":"","exp":"0x00000020","file":"mfidl.h","line":2314,"type":"Integer","value":32},"MFASFINDEXER_APPROX_SEEK_TIME_UNKNOWN":{"comment":"","exp":"0xffffffffffffffff","file":"wmcontainer.h","line":2211,"type":"Integer","value":-1},"MFASFINDEXER_NO_FIXED_INTERVAL":{"comment":"","exp":"0xffffffff","file":"wmcontainer.h","line":2209,"type":"Integer","value":4294967295},"MFASFINDEXER_PER_ENTRY_BYTES_DYNAMIC":{"comment":"","exp":"0xffff","file":"wmcontainer.h","line":2208,"type":"Integer","value":65535},"MFASFINDEXER_READ_FOR_REVERSEPLAYBACK_OUTOFDATASEGMENT":{"comment":"","exp":"0xffffffffffffffff","file":"wmcontainer.h","line":2210,"type":"Integer","value":-1},"MFASF_DEFAULT_BUFFER_WINDOW_MS":{"comment":"","exp":"3000","file":"wmcontainer.h","line":2529,"type":"Integer","value":3000},"MFASF_INDEXERFLAGS":{"comment":"","exp":"","file":"wmcontainer.h","line":1494,"type":"Enum","value":"typedef\\r\\nenum MFASF_INDEXERFLAGS\\r\\n    {\\r\\n        MFASF_INDEXER_WRITE_NEW_INDEX\\t= 0x1,\\r\\n        MFASF_INDEXER_READ_FOR_REVERSEPLAYBACK\\t= 0x2,\\r\\n        MFASF_INDEXER_WRITE_FOR_LIVEREAD\\t= 0x4\\r\\n    } \\tMFASF_INDEXER_FLAGS;"},"MFASF_INVALID_STREAM_NUMBER":{"comment":"","exp":"( MFASF_MAX_STREAM_NUMBER + 1 )","file":"wmcontainer.h","line":2526,"type":"Integer","value":128},"MFASF_MAX_STREAM_NUMBER":{"comment":"","exp":"127","file":"wmcontainer.h","line":2525,"type":"Integer","value":127},"MFASF_MIN_HEADER_BYTES":{"comment":"","exp":"( sizeof( GUID ) + sizeof( QWORD ) )","file":"wmcontainer.h","line":1938,"type":"Unknown","value":"( sizeof( GUID ) + sizeof( QWORD ) )"},"MFASF_MULTIPLEXERFLAGS":{"comment":"","exp":"","file":"wmcontainer.h","line":2017,"type":"Enum","value":"typedef\\r\\nenum MFASF_MULTIPLEXERFLAGS\\r\\n    {\\r\\n        MFASF_MULTIPLEXER_AUTOADJUST_BITRATE\\t= 0x1\\r\\n    } \\tMFASF_MULTIPLEXERFLAGS;"},"MFASF_PAYLOADEXTENSION_MAX_SIZE":{"comment":"","exp":"0xff","file":"wmcontainer.h","line":2527,"type":"Integer","value":255},"MFASF_PAYLOADEXTENSION_VARIABLE_SIZE":{"comment":"","exp":"0xffff","file":"wmcontainer.h","line":2528,"type":"Integer","value":65535},"MFASF_SPLITTERFLAGS":{"comment":"","exp":"","file":"wmcontainer.h","line":2002,"type":"Enum","value":"typedef\\r\\nenum MFASF_SPLITTERFLAGS\\r\\n    {\\r\\n        MFASF_SPLITTER_REVERSE\\t= 0x1,\\r\\n        MFASF_SPLITTER_WMDRM\\t= 0x2\\r\\n    } \\tMFASF_SPLITTERFLAGS;"},"MFASF_STREAMSELECTORFLAGS":{"comment":"","exp":"","file":"wmcontainer.h","line":2212,"type":"Enum","value":"typedef\\r\\nenum MFASF_STREAMSELECTORFLAGS\\r\\n    {\\r\\n        MFASF_STREAMSELECTOR_DISABLE_THINNING\\t= 0x1,\\r\\n        MFASF_STREAMSELECTOR_USE_AVERAGE_BITRATE\\t= 0x2\\r\\n    } \\tMFASF_STREAMSELECTOR_FLAGS;"},"MFASYNC_BLOCKING_CALLBACK":{"comment":"","exp":"0x00000004","file":"mfobjects.h","line":3621,"type":"Integer","value":4},"MFASYNC_CALLBACK_QUEUE_ALL":{"comment":"","exp":"0xFFFFFFFF","file":"mfobjects.h","line":3632,"type":"Integer","value":4294967295},"MFASYNC_CALLBACK_QUEUE_IO":{"comment":"","exp":"0x00000003","file":"mfobjects.h","line":3627,"type":"Integer","value":3},"MFASYNC_CALLBACK_QUEUE_LONG_FUNCTION":{"comment":"","exp":"0x00000007","file":"mfobjects.h","line":3630,"type":"Integer","value":7},"MFASYNC_CALLBACK_QUEUE_MULTITHREADED":{"comment":"","exp":"0x00000005","file":"mfobjects.h","line":3629,"type":"Integer","value":5},"MFASYNC_CALLBACK_QUEUE_PRIVATE_MASK":{"comment":"","exp":"0xFFFF0000","file":"mfobjects.h","line":3631,"type":"Integer","value":4294901760},"MFASYNC_CALLBACK_QUEUE_RT":{"comment":"","exp":"0x00000002","file":"mfobjects.h","line":3626,"type":"Integer","value":2},"MFASYNC_CALLBACK_QUEUE_STANDARD":{"comment":"","exp":"0x00000001","file":"mfobjects.h","line":3625,"type":"Integer","value":1},"MFASYNC_CALLBACK_QUEUE_TIMER":{"comment":"","exp":"0x00000004","file":"mfobjects.h","line":3628,"type":"Integer","value":4},"MFASYNC_CALLBACK_QUEUE_UNDEFINED":{"comment":"","exp":"0x00000000","file":"mfobjects.h","line":3624,"type":"Integer","value":0},"MFASYNC_FAST_IO_PROCESSING_CALLBACK":{"comment":"","exp":"0x00000001","file":"mfobjects.h","line":3619,"type":"Integer","value":1},"MFASYNC_LOCALIZE_REMOTE_CALLBACK":{"comment":"","exp":"0x00000010","file":"mfobjects.h","line":3623,"type":"Integer","value":16},"MFASYNC_REPLY_CALLBACK":{"comment":"","exp":"0x00000008","file":"mfobjects.h","line":3622,"type":"Integer","value":8},"MFASYNC_SIGNAL_CALLBACK":{"comment":"","exp":"0x00000002","file":"mfobjects.h","line":3620,"type":"Integer","value":2},"MFAudioDecoderDegradationInfo":{"comment":"","exp":"","file":"mftransform.h","line":1286,"type":"Struct","value":"typedef struct MFAudioDecoderDegradationInfo\\r\\n    {\\r\\n    MFT_AUDIO_DECODER_DEGRADATION_REASON eDegradationReason;\\r\\n    MFT_AUDIO_DECODER_DEGRADATION_TYPE eType;\\r\\n    } \\tMFAudioDecoderDegradationInfo;"},"MFBYTESTREAM_DOES_NOT_USE_NETWORK":{"comment":"","exp":"0x00000800","file":"mfobjects.h","line":4713,"type":"Integer","value":2048},"MFBYTESTREAM_HAS_SLOW_SEEK":{"comment":"","exp":"0x00000100","file":"mfobjects.h","line":4707,"type":"Integer","value":256},"MFBYTESTREAM_IS_DIRECTORY":{"comment":"","exp":"0x00000080","file":"mfobjects.h","line":4706,"type":"Integer","value":128},"MFBYTESTREAM_IS_PARTIALLY_DOWNLOADED":{"comment":"","exp":"0x00000200","file":"mfobjects.h","line":4708,"type":"Integer","value":512},"MFBYTESTREAM_IS_READABLE":{"comment":"","exp":"0x00000001","file":"mfobjects.h","line":4702,"type":"Integer","value":1},"MFBYTESTREAM_IS_REMOTE":{"comment":"","exp":"0x00000008","file":"mfobjects.h","line":4705,"type":"Integer","value":8},"MFBYTESTREAM_IS_SEEKABLE":{"comment":"","exp":"0x00000004","file":"mfobjects.h","line":4704,"type":"Integer","value":4},"MFBYTESTREAM_IS_WRITABLE":{"comment":"","exp":"0x00000002","file":"mfobjects.h","line":4703,"type":"Integer","value":2},"MFBYTESTREAM_SEEK_FLAG_CANCEL_PENDING_IO":{"comment":"","exp":"0x00000001","file":"mfobjects.h","line":4715,"type":"Integer","value":1},"MFBYTESTREAM_SHARE_WRITE":{"comment":"","exp":"0x00000400","file":"mfobjects.h","line":4710,"type":"Integer","value":1024},"MFCAPTURE_METADATA_SCANLINE_VERTICAL":{"comment":"","exp":"0x00000004","file":"mfapi.h","line":1604,"type":"Integer","value":4},"MFCAPTURE_METADATA_SCAN_BOTTOM_TOP":{"comment":"","exp":"0x00000002","file":"mfapi.h","line":1603,"type":"Integer","value":2},"MFCAPTURE_METADATA_SCAN_RIGHT_LEFT":{"comment":"","exp":"0x00000001","file":"mfapi.h","line":1602,"type":"Integer","value":1},"MFCLOCK_FREQUENCY_HNS":{"comment":"","exp":"10000000","file":"mfidl.h","line":5184,"type":"Integer","value":10000000},"MFCLOCK_JITTER_DPC":{"comment":"","exp":"4000","file":"mfidl.h","line":5187,"type":"Integer","value":4000},"MFCLOCK_JITTER_ISR":{"comment":"","exp":"1000","file":"mfidl.h","line":5186,"type":"Integer","value":1000},"MFCLOCK_JITTER_PASSIVE":{"comment":"","exp":"10000","file":"mfidl.h","line":5188,"type":"Integer","value":10000},"MFCLOCK_TOLERANCE_UNKNOWN":{"comment":"","exp":"50000","file":"mfidl.h","line":5185,"type":"Integer","value":50000},"MFCONTENTPROTECTIONDEVICE_FUNCTIONID_START":{"comment":"","exp":"0x04000000","file":"mfidl.h","line":17339,"type":"Integer","value":67108864},"MFCONTENTPROTECTIONDEVICE_REALTIMECLIENT_DATA_FUNCTIONID":{"comment":"","exp":"MFCONTENTPROTECTIONDEVICE_FUNCTIONID_START","file":"mfidl.h","line":17340,"type":"Integer","value":67108864},"MFEVRDLL":{"comment":"","exp":"0","file":"evr.h","line":1835,"type":"Integer","value":0},"MFMediaKeyStatus":{"comment":"","exp":"","file":"mfidl.h","line":17627,"type":"Struct","value":"typedef struct MFMediaKeyStatus\\r\\n    {\\r\\n    BYTE *pbKeyId;\\r\\n    UINT cbKeyId;\\r\\n    MF_MEDIAKEY_STATUS eMediaKeyStatus;\\r\\n    } \\tMFMediaKeyStatus;"},"MFOUTPUTATTRIBUTE_BUS":{"comment":"","exp":"((DWORD) 0x00000020)","file":"mfidl.h","line":13915,"type":"Integer","value":32},"MFOUTPUTATTRIBUTE_BUSIMPLEMENTATION":{"comment":"","exp":"((DWORD) 0x0000FF00)","file":"mfidl.h","line":13916,"type":"Integer","value":65280},"MFOUTPUTATTRIBUTE_COMPRESSED":{"comment":"","exp":"((DWORD) 0x00000008)","file":"mfidl.h","line":13913,"type":"Integer","value":8},"MFOUTPUTATTRIBUTE_DIGITAL":{"comment":"","exp":"((DWORD) 0x00000001)","file":"mfidl.h","line":13910,"type":"Integer","value":1},"MFOUTPUTATTRIBUTE_NONSTANDARDIMPLEMENTATION":{"comment":"","exp":"((DWORD) 0x00000002)","file":"mfidl.h","line":13911,"type":"Integer","value":2},"MFOUTPUTATTRIBUTE_SOFTWARE":{"comment":"","exp":"((DWORD) 0x00000010)","file":"mfidl.h","line":13914,"type":"Integer","value":16},"MFOUTPUTATTRIBUTE_VIDEO":{"comment":"","exp":"((DWORD) 0x00000004)","file":"mfidl.h","line":13912,"type":"Integer","value":4},"MFPMPSESSION_CREATION_FLAGS":{"comment":"","exp":"","file":"mfidl.h","line":989,"type":"Enum","value":"typedef\\r\\nenum MFPMPSESSION_CREATION_FLAGS\\r\\n    {\\r\\n        MFPMPSESSION_UNPROTECTED_PROCESS\\t= 0x1,\\r\\n        MFPMPSESSION_IN_PROCESS\\t= 0x2\\r\\n    } \\tMFPMPSESSION_CREATION_FLAGS;"},"MFP_ACQUIRE_USER_CREDENTIAL_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1143,"type":"Struct","value":"typedef struct MFP_ACQUIRE_USER_CREDENTIAL_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    DWORD_PTR dwUserData;\\r\\n    BOOL fProceedWithAuthentication;\\r\\n    HRESULT hrAuthenticationStatus;\\r\\n    LPCWSTR pwszURL;\\r\\n    LPCWSTR pwszSite;\\r\\n    LPCWSTR pwszRealm;\\r\\n    LPCWSTR pwszPackage;\\r\\n    LONG nRetries;\\r\\n    MFP_CREDENTIAL_FLAGS flags;\\r\\n    IMFNetCredential *pCredential;\\r\\n    } \\tMFP_ACQUIRE_USER_CREDENTIAL_EVENT;"},"MFP_ERROR_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1132,"type":"Struct","value":"typedef struct MFP_ERROR_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    } \\tMFP_ERROR_EVENT;"},"MFP_EVENT_HEADER":{"comment":"","exp":"","file":"mfplay.h","line":1059,"type":"Struct","value":"typedef struct MFP_EVENT_HEADER\\r\\n    {\\r\\n    MFP_EVENT_TYPE eEventType;\\r\\n    HRESULT hrEvent;\\r\\n    IMFPMediaPlayer *pMediaPlayer;\\r\\n    MFP_MEDIAPLAYER_STATE eState;\\r\\n    IPropertyStore *pPropertyStore;\\r\\n    } \\tMFP_EVENT_HEADER;"},"MFP_EVENT_TYPE":{"comment":"","exp":"","file":"mfplay.h","line":1041,"type":"Enum","value":"typedef\\r\\nenum MFP_EVENT_TYPE\\r\\n    {\\r\\n        MFP_EVENT_TYPE_PLAY\\t= 0,\\r\\n        MFP_EVENT_TYPE_PAUSE\\t= 1,\\r\\n        MFP_EVENT_TYPE_STOP\\t= 2,\\r\\n        MFP_EVENT_TYPE_POSITION_SET\\t= 3,\\r\\n        MFP_EVENT_TYPE_RATE_SET\\t= 4,\\r\\n        MFP_EVENT_TYPE_MEDIAITEM_CREATED\\t= 5,\\r\\n        MFP_EVENT_TYPE_MEDIAITEM_SET\\t= 6,\\r\\n        MFP_EVENT_TYPE_FRAME_STEP\\t= 7,\\r\\n        MFP_EVENT_TYPE_MEDIAITEM_CLEARED\\t= 8,\\r\\n        MFP_EVENT_TYPE_MF\\t= 9,\\r\\n        MFP_EVENT_TYPE_ERROR\\t= 10,\\r\\n        MFP_EVENT_TYPE_PLAYBACK_ENDED\\t= 11,\\r\\n        MFP_EVENT_TYPE_ACQUIRE_USER_CREDENTIAL\\t= 12\\r\\n    } \\tMFP_EVENT_TYPE;"},"MFP_FRAME_STEP_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1112,"type":"Struct","value":"typedef struct MFP_FRAME_STEP_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    IMFPMediaItem *pMediaItem;\\r\\n    } \\tMFP_FRAME_STEP_EVENT;"},"MFP_MEDIAITEM_CLEARED_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1118,"type":"Struct","value":"typedef struct MFP_MEDIAITEM_CLEARED_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    IMFPMediaItem *pMediaItem;\\r\\n    } \\tMFP_MEDIAITEM_CLEARED_EVENT;"},"MFP_MEDIAITEM_CREATED_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1099,"type":"Struct","value":"typedef struct MFP_MEDIAITEM_CREATED_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    IMFPMediaItem *pMediaItem;\\r\\n    DWORD_PTR dwUserData;\\r\\n    } \\tMFP_MEDIAITEM_CREATED_EVENT;"},"MFP_MEDIAITEM_SET_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1106,"type":"Struct","value":"typedef struct MFP_MEDIAITEM_SET_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    IMFPMediaItem *pMediaItem;\\r\\n    } \\tMFP_MEDIAITEM_SET_EVENT;"},"MFP_MEDIAPLAYER_STATE":{"comment":"","exp":"","file":"mfplay.h","line":99,"type":"Enum","value":"typedef\\r\\nenum MFP_MEDIAPLAYER_STATE\\r\\n    {\\r\\n        MFP_MEDIAPLAYER_STATE_EMPTY\\t= 0,\\r\\n        MFP_MEDIAPLAYER_STATE_STOPPED\\t= 0x1,\\r\\n        MFP_MEDIAPLAYER_STATE_PLAYING\\t= 0x2,\\r\\n        MFP_MEDIAPLAYER_STATE_PAUSED\\t= 0x3,\\r\\n        MFP_MEDIAPLAYER_STATE_SHUTDOWN\\t= 0x4\\r\\n    } \\tMFP_MEDIAPLAYER_STATE;"},"MFP_MF_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1124,"type":"Struct","value":"typedef struct MFP_MF_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    MediaEventType MFEventType;\\r\\n    IMFMediaEvent *pMFMediaEvent;\\r\\n    IMFPMediaItem *pMediaItem;\\r\\n    } \\tMFP_MF_EVENT;"},"MFP_PAUSE_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1074,"type":"Struct","value":"typedef struct MFP_PAUSE_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    IMFPMediaItem *pMediaItem;\\r\\n    } \\tMFP_PAUSE_EVENT;"},"MFP_PLAYBACK_ENDED_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1137,"type":"Struct","value":"typedef struct MFP_PLAYBACK_ENDED_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    IMFPMediaItem *pMediaItem;\\r\\n    } \\tMFP_PLAYBACK_ENDED_EVENT;"},"MFP_PLAY_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1068,"type":"Struct","value":"typedef struct MFP_PLAY_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    IMFPMediaItem *pMediaItem;\\r\\n    } \\tMFP_PLAY_EVENT;"},"MFP_POSITION_SET_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1086,"type":"Struct","value":"typedef struct MFP_POSITION_SET_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    IMFPMediaItem *pMediaItem;\\r\\n    } \\tMFP_POSITION_SET_EVENT;"},"MFP_RATE_SET_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1092,"type":"Struct","value":"typedef struct MFP_RATE_SET_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    IMFPMediaItem *pMediaItem;\\r\\n    float flRate;\\r\\n    } \\tMFP_RATE_SET_EVENT;"},"MFP_STOP_EVENT":{"comment":"","exp":"","file":"mfplay.h","line":1080,"type":"Struct","value":"typedef struct MFP_STOP_EVENT\\r\\n    {\\r\\n    MFP_EVENT_HEADER header;\\r\\n    IMFPMediaItem *pMediaItem;\\r\\n    } \\tMFP_STOP_EVENT;"},"MFRR_INFO_VERSION":{"comment":"","exp":"0","file":"mfidl.h","line":7527,"type":"Integer","value":0},"MFSEQUENCER_INVALID_ELEMENT_ID":{"comment":"","exp":"( 0xffffffff )","file":"mfidl.h","line":10468,"type":"Integer","value":4294967295},"MFSESSIONCAP_DOES_NOT_USE_NETWORK":{"comment":"","exp":"0x00000040","file":"mfapi.h","line":666,"type":"Integer","value":64},"MFSESSIONCAP_PAUSE":{"comment":"","exp":"0x00000004","file":"mfapi.h","line":663,"type":"Integer","value":4},"MFSESSIONCAP_RATE_FORWARD":{"comment":"","exp":"0x00000010","file":"mfapi.h","line":664,"type":"Integer","value":16},"MFSESSIONCAP_RATE_REVERSE":{"comment":"","exp":"0x00000020","file":"mfapi.h","line":665,"type":"Integer","value":32},"MFSESSIONCAP_SEEK":{"comment":"","exp":"0x00000002","file":"mfapi.h","line":662,"type":"Integer","value":2},"MFSESSIONCAP_START":{"comment":"","exp":"0x00000001","file":"mfapi.h","line":661,"type":"Integer","value":1},"MFSESSION_GETFULLTOPOLOGY_FLAGS":{"comment":"","exp":"","file":"mfidl.h","line":983,"type":"Enum","value":"typedef\\r\\nenum MFSESSION_GETFULLTOPOLOGY_FLAGS\\r\\n    {\\r\\n        MFSESSION_GETFULLTOPOLOGY_CURRENT\\t= 0x1\\r\\n    } \\tMFSESSION_GETFULLTOPOLOGY_FLAGS;"},"MFSESSION_SETTOPOLOGY_FLAGS":{"comment":"","exp":"","file":"mfidl.h","line":975,"type":"Enum","value":"typedef\\r\\nenum MFSESSION_SETTOPOLOGY_FLAGS\\r\\n    {\\r\\n        MFSESSION_SETTOPOLOGY_IMMEDIATE\\t= 0x1,\\r\\n        MFSESSION_SETTOPOLOGY_NORESOLUTION\\t= 0x2,\\r\\n        MFSESSION_SETTOPOLOGY_CLEAR_CURRENT\\t= 0x4\\r\\n    } \\tMFSESSION_SETTOPOLOGY_FLAGS;"},"MFSTARTUP_FULL":{"comment":"","exp":"0","file":"mfapi.h","line":53,"type":"Integer","value":0},"MFSTARTUP_LITE":{"comment":"","exp":"(MFSTARTUP_NOSOCKET)","file":"mfapi.h","line":52,"type":"Integer","value":1},"MFSTARTUP_NOSOCKET":{"comment":"","exp":"0x1","file":"mfapi.h","line":51,"type":"Integer","value":1},"MFSampleAllocatorUsage":{"comment":"","exp":"","file":"mfidl.h","line":21576,"type":"Enum","value":"typedef\\r\\nenum MFSampleAllocatorUsage\\r\\n    {\\r\\n        MFSampleAllocatorUsage_UsesProvidedAllocator\\t= 0,\\r\\n        MFSampleAllocatorUsage_UsesCustomAllocator\\t= ( MFSampleAllocatorUsage_UsesProvidedAllocator + 1 ) ,\\r\\n        MFSampleAllocatorUsage_DoesNotAllocate\\t= ( MFSampleAllocatorUsage_UsesCustomAllocator + 1 ) \\r\\n    } \\tMFSampleAllocatorUsage;"},"MFSampleExtension_ClosedCaption_CEA708_MAX_SIZE":{"comment":"","exp":"256","file":"mfapi.h","line":1139,"type":"Integer","value":256},"MFTIMER_FLAGS":{"comment":"","exp":"","file":"mfidl.h","line":6785,"type":"Enum","value":"typedef\\r\\nenum MFTIMER_FLAGS\\r\\n    {\\r\\n        MFTIMER_RELATIVE\\t= 0x1\\r\\n    } \\tMFTIMER_FLAGS;"},"MFTOPOLOGY_DXVA_MODE":{"comment":"","exp":"","file":"mfidl.h","line":4388,"type":"Enum","value":"typedef\\r\\nenum MFTOPOLOGY_DXVA_MODE\\r\\n    {\\r\\n        MFTOPOLOGY_DXVA_DEFAULT\\t= 0,\\r\\n        MFTOPOLOGY_DXVA_NONE\\t= 1,\\r\\n        MFTOPOLOGY_DXVA_FULL\\t= 2\\r\\n    } \\tMFTOPOLOGY_DXVA_MODE;"},"MFTOPOLOGY_HARDWARE_MODE":{"comment":"","exp":"","file":"mfidl.h","line":4404,"type":"Enum","value":"typedef\\r\\nenum MFTOPOLOGY_HARDWARE_MODE\\r\\n    {\\r\\n        MFTOPOLOGY_HWMODE_SOFTWARE_ONLY\\t= 0,\\r\\n        MFTOPOLOGY_HWMODE_USE_HARDWARE\\t= 1,\\r\\n        MFTOPOLOGY_HWMODE_USE_ONLY_HARDWARE\\t= 2\\r\\n    } \\tMFTOPOLOGY_HARDWARE_MODE;"},"MFT_AUDIO_DECODER_DEGRADATION_REASON":{"comment":"","exp":"","file":"mftransform.h","line":1270,"type":"Enum","value":"typedef\\r\\nenum MFT_AUDIO_DECODER_DEGRADATION_REASON\\r\\n    {\\r\\n        MFT_AUDIO_DECODER_DEGRADATION_REASON_NONE\\t= 0,\\r\\n        MFT_AUDIO_DECODER_DEGRADATION_REASON_LICENSING_REQUIREMENT\\t= 1\\r\\n    } \\tMFT_AUDIO_DECODER_DEGRADATION_REASON;"},"MFT_AUDIO_DECODER_DEGRADATION_TYPE":{"comment":"","exp":"","file":"mftransform.h","line":1277,"type":"Enum","value":"typedef\\r\\nenum MFT_AUDIO_DECODER_DEGRADATION_TYPE\\r\\n    {\\r\\n        MFT_AUDIO_DECODER_DEGRADATION_TYPE_NONE\\t= 0,\\r\\n        MFT_AUDIO_DECODER_DEGRADATION_TYPE_DOWNMIX2CHANNEL\\t= 1,\\r\\n        MFT_AUDIO_DECODER_DEGRADATION_TYPE_DOWNMIX6CHANNEL\\t= 2,\\r\\n        MFT_AUDIO_DECODER_DEGRADATION_TYPE_DOWNMIX8CHANNEL\\t= 3\\r\\n    } \\tMFT_AUDIO_DECODER_DEGRADATION_TYPE;"},"MFT_OUTPUT_BOUND_LOWER_UNBOUNDED":{"comment":"","exp":"MINLONGLONG","file":"mftransform.h","line":152,"type":"Unknown","value":"MINLONGLONG"},"MFT_OUTPUT_BOUND_UPPER_UNBOUNDED":{"comment":"","exp":"MAXLONGLONG","file":"mftransform.h","line":153,"type":"Unknown","value":"MAXLONGLONG"},"MFT_STREAMS_UNLIMITED":{"comment":"","exp":"0xFFFFFFFF","file":"mftransform.h","line":151,"type":"Integer","value":4294967295},"MFVP_MESSAGE_TYPE":{"comment":"","exp":"","file":"evr.h","line":703,"type":"Enum","value":"typedef\\r\\nenum MFVP_MESSAGE_TYPE\\r\\n    {\\r\\n        MFVP_MESSAGE_FLUSH\\t= 0,\\r\\n        MFVP_MESSAGE_INVALIDATEMEDIATYPE\\t= 0x1,\\r\\n        MFVP_MESSAGE_PROCESSINPUTNOTIFY\\t= 0x2,\\r\\n        MFVP_MESSAGE_BEGINSTREAMING\\t= 0x3,\\r\\n        MFVP_MESSAGE_ENDSTREAMING\\t= 0x4,\\r\\n        MFVP_MESSAGE_ENDOFSTREAM\\t= 0x5,\\r\\n        MFVP_MESSAGE_STEP\\t= 0x6,\\r\\n        MFVP_MESSAGE_CANCELSTEP\\t= 0x7\\r\\n    } \\tMFVP_MESSAGE_TYPE;"},"MFVideoAlphaBitmap":{"comment":"","exp":"","file":"evr9.h","line":399,"type":"Struct","value":"typedef struct MFVideoAlphaBitmap\\r\\n    {\\r\\n    BOOL GetBitmapFromDC;\\r\\n    union \\r\\n        {\\r\\n        HDC hdc;\\r\\n        IDirect3DSurface9 *pDDS;\\r\\n        } \\tbitmap;\\r\\n    MFVideoAlphaBitmapParams params;\\r\\n    } \\tMFVideoAlphaBitmap;"},"MFVideoAlphaBitmapParams":{"comment":"","exp":"","file":"evr9.h","line":389,"type":"Struct","value":"typedef struct MFVideoAlphaBitmapParams\\r\\n    {\\r\\n    DWORD dwFlags;\\r\\n    COLORREF clrSrcKey;\\r\\n    RECT rcSrc;\\r\\n    MFVideoNormalizedRect nrcDest;\\r\\n    FLOAT fAlpha;\\r\\n    DWORD dwFilterMode;\\r\\n    } \\tMFVideoAlphaBitmapParams;"},"MFVideoAspectRatioMode":{"comment":"","exp":"","file":"evr.h","line":417,"type":"Enum","value":"typedef\\r\\nenum MFVideoAspectRatioMode\\r\\n    {\\r\\n        MFVideoARMode_None\\t= 0,\\r\\n        MFVideoARMode_PreservePicture\\t= 0x1,\\r\\n        MFVideoARMode_PreservePixel\\t= 0x2,\\r\\n        MFVideoARMode_NonLinearStretch\\t= 0x4,\\r\\n        MFVideoARMode_Mask\\t= 0x7\\r\\n    } \\tMFVideoAspectRatioMode;"},"MFVideoFormat_MPG2":{"comment":"","exp":"MFVideoFormat_MPEG2","file":"mfapi.h","line":2255,"type":"Unknown","value":"MFVideoFormat_MPEG2"},"MFVideoInterlace_FieldSingleLowerFirst":{"comment":"","exp":"MFVideoInterlace_FieldSingleLower","file":"mfobjects.h","line":2632,"type":"Unknown","value":"MFVideoInterlace_FieldSingleLower"},"MFVideoInterlace_FieldSingleUpperFirst":{"comment":"","exp":"MFVideoInterlace_FieldSingleUpper","file":"mfobjects.h","line":2631,"type":"Unknown","value":"MFVideoInterlace_FieldSingleUpper"},"MFVideoNormalizedRect":{"comment":"","exp":"","file":"evr.h","line":444,"type":"Struct","value":"typedef struct MFVideoNormalizedRect\\r\\n    {\\r\\n    float left;\\r\\n    float top;\\r\\n    float right;\\r\\n    float bottom;\\r\\n    } \\tMFVideoNormalizedRect;"},"MFVideoRenderPrefs":{"comment":"","exp":"","file":"evr.h","line":427,"type":"Enum","value":"typedef\\r\\nenum MFVideoRenderPrefs\\r\\n    {\\r\\n        MFVideoRenderPrefs_DoNotRenderBorder\\t= 0x1,\\r\\n        MFVideoRenderPrefs_DoNotClipToDevice\\t= 0x2,\\r\\n        MFVideoRenderPrefs_AllowOutputThrottling\\t= 0x4,\\r\\n        MFVideoRenderPrefs_ForceOutputThrottling\\t= 0x8,\\r\\n        MFVideoRenderPrefs_ForceBatching\\t= 0x10,\\r\\n        MFVideoRenderPrefs_AllowBatching\\t= 0x20,\\r\\n        MFVideoRenderPrefs_ForceScaling\\t= 0x40,\\r\\n        MFVideoRenderPrefs_AllowScaling\\t= 0x80,\\r\\n        MFVideoRenderPrefs_DoNotRepaintOnStop\\t= 0x100,\\r\\n        MFVideoRenderPrefs_Mask\\t= 0x1ff\\r\\n    } \\tMFVideoRenderPrefs;"},"MFVideoSphericalProjectionMode":{"comment":"","exp":"","file":"mfidl.h","line":3626,"type":"Enum","value":"typedef\\r\\nenum MFVideoSphericalProjectionMode\\r\\n    {\\r\\n        MFVideoSphericalProjectionMode_Spherical\\t= 0,\\r\\n        MFVideoSphericalProjectionMode_Flat\\t= ( MFVideoSphericalProjectionMode_Spherical + 1 ) \\r\\n    } \\tMFVideoSphericalProjectionMode;"},"MF_1024_BYTE_ALIGNMENT":{"comment":"","exp":"0x000003ff","file":"mfapi.h","line":579,"type":"Integer","value":1023},"MF_128_BYTE_ALIGNMENT":{"comment":"","exp":"0x0000007f","file":"mfapi.h","line":576,"type":"Integer","value":127},"MF_16_BYTE_ALIGNMENT":{"comment":"","exp":"0x0000000f","file":"mfapi.h","line":573,"type":"Integer","value":15},"MF_1_BYTE_ALIGNMENT":{"comment":"","exp":"0x00000000","file":"mfapi.h","line":569,"type":"Integer","value":0},"MF_2048_BYTE_ALIGNMENT":{"comment":"","exp":"0x000007ff","file":"mfapi.h","line":580,"type":"Integer","value":2047},"MF_256_BYTE_ALIGNMENT":{"comment":"","exp":"0x000000ff","file":"mfapi.h","line":577,"type":"Integer","value":255},"MF_2_BYTE_ALIGNMENT":{"comment":"","exp":"0x00000001","file":"mfapi.h","line":570,"type":"Integer","value":1},"MF_32_BYTE_ALIGNMENT":{"comment":"","exp":"0x0000001f","file":"mfapi.h","line":574,"type":"Integer","value":31},"MF_4096_BYTE_ALIGNMENT":{"comment":"","exp":"0x00000fff","file":"mfapi.h","line":581,"type":"Integer","value":4095},"MF_4_BYTE_ALIGNMENT":{"comment":"","exp":"0x00000003","file":"mfapi.h","line":571,"type":"Integer","value":3},"MF_512_BYTE_ALIGNMENT":{"comment":"","exp":"0x000001ff","file":"mfapi.h","line":578,"type":"Integer","value":511},"MF_64_BYTE_ALIGNMENT":{"comment":"","exp":"0x0000003f","file":"mfapi.h","line":575,"type":"Integer","value":63},"MF_8192_BYTE_ALIGNMENT":{"comment":"","exp":"0x00001fff","file":"mfapi.h","line":582,"type":"Integer","value":8191},"MF_8_BYTE_ALIGNMENT":{"comment":"","exp":"0x00000007","file":"mfapi.h","line":572,"type":"Integer","value":7},"MF_API_VERSION":{"comment":"\/\/ This value is unused in the Win7 release and left at its Vista release value","exp":"0x0070","file":"mfapi.h","line":45,"type":"Integer","value":112},"MF_ATTRIBUTE_SERIALIZE_OPTIONS":{"comment":"","exp":"","file":"mfobjects.h","line":722,"type":"Enum","value":"enum MF_ATTRIBUTE_SERIALIZE_OPTIONS\\r\\n    {\\r\\n        MF_ATTRIBUTE_SERIALIZE_UNKNOWN_BYREF\\t= 0x1\\r\\n    } ;"},"MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_CROSSPROCESS":{"comment":"","exp":"0x00000001","file":"mfidl.h","line":7047,"type":"Integer","value":1},"MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_DONT_ALLOW_FORMAT_CHANGES":{"comment":"","exp":"0x00000004","file":"mfidl.h","line":7050,"type":"Integer","value":4},"MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_NOPERSIST":{"comment":"","exp":"0x00000002","file":"mfidl.h","line":7048,"type":"Integer","value":2},"MF_AUVRHP_ROOMMODEL":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3663,"type":"Enum","value":"typedef\\r\\nenum MF_AUVRHP_ROOMMODEL\\r\\n    {\\r\\n        VRHP_SMALLROOM\\t= 0,\\r\\n        VRHP_MEDIUMROOM\\t= ( VRHP_SMALLROOM + 1 ) ,\\r\\n        VRHP_BIGROOM\\t= ( VRHP_MEDIUMROOM + 1 ) ,\\r\\n        VRHP_CUSTUMIZEDROOM\\t= ( VRHP_BIGROOM + 1 ) \\r\\n    } \\tMF_AUVRHP_ROOMMODEL;"},"MF_BOOT_DRIVER_VERIFICATION_FAILED":{"comment":"","exp":"0x00100000","file":"mfidl.h","line":7543,"type":"Integer","value":1048576},"MF_CAPTURE_ENGINE_AUDIO_PROCESSING_MODE":{"comment":"","exp":"","file":"mfcaptureengine.h","line":191,"type":"Enum","value":"typedef\\r\\nenum MF_CAPTURE_ENGINE_AUDIO_PROCESSING_MODE\\r\\n    {\\r\\n        MF_CAPTURE_ENGINE_AUDIO_PROCESSING_DEFAULT\\t= 0,\\r\\n        MF_CAPTURE_ENGINE_AUDIO_PROCESSING_RAW\\t= 1\\r\\n    } \\tMF_CAPTURE_ENGINE_AUDIO_PROCESSING_MODE;"},"MF_CAPTURE_ENGINE_DEVICE_TYPE":{"comment":"","exp":"","file":"mfcaptureengine.h","line":146,"type":"Enum","value":"typedef\\r\\nenum MF_CAPTURE_ENGINE_DEVICE_TYPE\\r\\n    {\\r\\n        MF_CAPTURE_ENGINE_DEVICE_TYPE_AUDIO\\t= 0,\\r\\n        MF_CAPTURE_ENGINE_DEVICE_TYPE_VIDEO\\t= 0x1\\r\\n    } \\tMF_CAPTURE_ENGINE_DEVICE_TYPE;"},"MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE":{"comment":"","exp":"","file":"mfcaptureengine.h","line":181,"type":"Enum","value":"typedef\\r\\nenum MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE\\r\\n    {\\r\\n        MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_OTHER\\t= 0,\\r\\n        MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_COMMUNICATIONS\\t= 1,\\r\\n        MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_MEDIA\\t= 2,\\r\\n        MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_GAMECHAT\\t= 3,\\r\\n        MF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE_SPEECH\\t= 4\\r\\n    } \\tMF_CAPTURE_ENGINE_MEDIA_CATEGORY_TYPE;"},"MF_CAPTURE_ENGINE_SINK_TYPE":{"comment":"","exp":"","file":"mfcaptureengine.h","line":153,"type":"Enum","value":"typedef\\r\\nenum MF_CAPTURE_ENGINE_SINK_TYPE\\r\\n    {\\r\\n        MF_CAPTURE_ENGINE_SINK_TYPE_RECORD\\t= 0,\\r\\n        MF_CAPTURE_ENGINE_SINK_TYPE_PREVIEW\\t= 0x1,\\r\\n        MF_CAPTURE_ENGINE_SINK_TYPE_PHOTO\\t= 0x2\\r\\n    } \\tMF_CAPTURE_ENGINE_SINK_TYPE;"},"MF_CAPTURE_ENGINE_STREAM_CATEGORY":{"comment":"","exp":"","file":"mfcaptureengine.h","line":170,"type":"Enum","value":"typedef\\r\\nenum MF_CAPTURE_ENGINE_STREAM_CATEGORY\\r\\n    {\\r\\n        MF_CAPTURE_ENGINE_STREAM_CATEGORY_VIDEO_PREVIEW\\t= 0,\\r\\n        MF_CAPTURE_ENGINE_STREAM_CATEGORY_VIDEO_CAPTURE\\t= 0x1,\\r\\n        MF_CAPTURE_ENGINE_STREAM_CATEGORY_PHOTO_INDEPENDENT\\t= 0x2,\\r\\n        MF_CAPTURE_ENGINE_STREAM_CATEGORY_PHOTO_DEPENDENT\\t= 0x3,\\r\\n        MF_CAPTURE_ENGINE_STREAM_CATEGORY_AUDIO\\t= 0x4,\\r\\n        MF_CAPTURE_ENGINE_STREAM_CATEGORY_UNSUPPORTED\\t= 0x5\\r\\n    } \\tMF_CAPTURE_ENGINE_STREAM_CATEGORY;"},"MF_COMPONENT_CERT_REVOKED":{"comment":"","exp":"0x00008000","file":"mfidl.h","line":7539,"type":"Integer","value":32768},"MF_COMPONENT_HS_CERT_REVOKED":{"comment":"","exp":"0x00020000","file":"mfidl.h","line":7541,"type":"Integer","value":131072},"MF_COMPONENT_INVALID_EKU":{"comment":"","exp":"0x00004000","file":"mfidl.h","line":7538,"type":"Integer","value":16384},"MF_COMPONENT_INVALID_ROOT":{"comment":"","exp":"0x00010000","file":"mfidl.h","line":7540,"type":"Integer","value":65536},"MF_COMPONENT_LS_CERT_REVOKED":{"comment":"","exp":"0x00040000","file":"mfidl.h","line":7542,"type":"Integer","value":262144},"MF_COMPONENT_REVOKED":{"comment":"","exp":"0x00002000","file":"mfidl.h","line":7537,"type":"Integer","value":8192},"MF_EVENT_FLAG_NO_WAIT":{"comment":"","exp":"0x00000001","file":"mfobjects.h","line":4120,"type":"Integer","value":1},"MF_E_DXGI_DEVICE_NOT_INITIALIZED":{"comment":"\/\/ DXVA2_E_NOT_INITIALIZED","exp":"((HRESULT)0x80041000L)","file":"mfapi.h","line":560,"type":"Integer","value":2147749888},"MF_E_DXGI_NEW_VIDEO_DEVICE":{"comment":"\/\/ DXVA2_E_NEW_VIDEO_DEVICE","exp":"((HRESULT)0x80041001L)","file":"mfapi.h","line":561,"type":"Integer","value":2147749889},"MF_E_DXGI_VIDEO_DEVICE_LOCKED":{"comment":"\/\/ DXVA2_E_VIDEO_DEVICE_LOCKED","exp":"((HRESULT)0x80041002L)","file":"mfapi.h","line":562,"type":"Integer","value":2147749890},"MF_GRL_ABSENT":{"comment":"","exp":"0x00001000","file":"mfidl.h","line":7536,"type":"Integer","value":4096},"MF_GRL_LOAD_FAILED":{"comment":"","exp":"0x00000010","file":"mfidl.h","line":7534,"type":"Integer","value":16},"MF_HISTOGRAM_CHANNEL_B":{"comment":"","exp":"0x00000008","file":"mfapi.h","line":1699,"type":"Integer","value":8},"MF_HISTOGRAM_CHANNEL_Cb":{"comment":"","exp":"0x00000010","file":"mfapi.h","line":1700,"type":"Integer","value":16},"MF_HISTOGRAM_CHANNEL_Cr":{"comment":"","exp":"0x00000020","file":"mfapi.h","line":1701,"type":"Integer","value":32},"MF_HISTOGRAM_CHANNEL_G":{"comment":"","exp":"0x00000004","file":"mfapi.h","line":1698,"type":"Integer","value":4},"MF_HISTOGRAM_CHANNEL_R":{"comment":"","exp":"0x00000002","file":"mfapi.h","line":1697,"type":"Integer","value":2},"MF_HISTOGRAM_CHANNEL_Y":{"comment":"","exp":"0x00000001","file":"mfapi.h","line":1696,"type":"Integer","value":1},"MF_INVALID_GRL_SIGNATURE":{"comment":"","exp":"0x00000020","file":"mfidl.h","line":7535,"type":"Integer","value":32},"MF_INVALID_PRESENTATION_TIME":{"comment":"","exp":"0x8000000000000000","file":"mfmediaengine.h","line":419,"type":"Integer","value":-9223372036854775808},"MF_KERNEL_MODE_COMPONENT_LOAD":{"comment":"","exp":"0x00000002","file":"mfidl.h","line":7533,"type":"Integer","value":2},"MF_MEDIAKEYSESSION_MESSAGETYPE":{"comment":"","exp":"","file":"mfidl.h","line":17634,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIAKEYSESSION_MESSAGETYPE\\r\\n    {\\r\\n        MF_MEDIAKEYSESSION_MESSAGETYPE_LICENSE_REQUEST\\t= 0,\\r\\n        MF_MEDIAKEYSESSION_MESSAGETYPE_LICENSE_RENEWAL\\t= 1,\\r\\n        MF_MEDIAKEYSESSION_MESSAGETYPE_LICENSE_RELEASE\\t= 2,\\r\\n        MF_MEDIAKEYSESSION_MESSAGETYPE_INDIVIDUALIZATION_REQUEST\\t= 3\\r\\n    } \\tMF_MEDIAKEYSESSION_MESSAGETYPE;"},"MF_MEDIAKEYSESSION_TYPE":{"comment":"","exp":"","file":"mfidl.h","line":17605,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIAKEYSESSION_TYPE\\r\\n    {\\r\\n        MF_MEDIAKEYSESSION_TYPE_TEMPORARY\\t= 0,\\r\\n        MF_MEDIAKEYSESSION_TYPE_PERSISTENT_LICENSE\\t= ( MF_MEDIAKEYSESSION_TYPE_TEMPORARY + 1 ) ,\\r\\n        MF_MEDIAKEYSESSION_TYPE_PERSISTENT_RELEASE_MESSAGE\\t= ( MF_MEDIAKEYSESSION_TYPE_PERSISTENT_LICENSE + 1 ) ,\\r\\n        MF_MEDIAKEYSESSION_TYPE_PERSISTENT_USAGE_RECORD\\t= ( MF_MEDIAKEYSESSION_TYPE_PERSISTENT_RELEASE_MESSAGE + 1 ) \\r\\n    } \\tMF_MEDIAKEYSESSION_TYPE;"},"MF_MEDIAKEYS_REQUIREMENT":{"comment":"","exp":"","file":"mfmediaengine.h","line":8067,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIAKEYS_REQUIREMENT\\r\\n    {\\r\\n        MF_MEDIAKEYS_REQUIREMENT_REQUIRED\\t= 1,\\r\\n        MF_MEDIAKEYS_REQUIREMENT_OPTIONAL\\t= 2,\\r\\n        MF_MEDIAKEYS_REQUIREMENT_NOT_ALLOWED\\t= 3\\r\\n    } \\tMF_MEDIAKEYS_REQUIREMENT;"},"MF_MEDIAKEY_STATUS":{"comment":"","exp":"","file":"mfidl.h","line":17614,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIAKEY_STATUS\\r\\n    {\\r\\n        MF_MEDIAKEY_STATUS_USABLE\\t= 0,\\r\\n        MF_MEDIAKEY_STATUS_EXPIRED\\t= ( MF_MEDIAKEY_STATUS_USABLE + 1 ) ,\\r\\n        MF_MEDIAKEY_STATUS_OUTPUT_DOWNSCALED\\t= ( MF_MEDIAKEY_STATUS_EXPIRED + 1 ) ,\\r\\n        MF_MEDIAKEY_STATUS_OUTPUT_NOT_ALLOWED\\t= ( MF_MEDIAKEY_STATUS_OUTPUT_DOWNSCALED + 1 ) ,\\r\\n        MF_MEDIAKEY_STATUS_STATUS_PENDING\\t= ( MF_MEDIAKEY_STATUS_OUTPUT_NOT_ALLOWED + 1 ) ,\\r\\n        MF_MEDIAKEY_STATUS_INTERNAL_ERROR\\t= ( MF_MEDIAKEY_STATUS_STATUS_PENDING + 1 ) ,\\r\\n        MF_MEDIAKEY_STATUS_RELEASED\\t= ( MF_MEDIAKEY_STATUS_INTERNAL_ERROR + 1 ) ,\\r\\n        MF_MEDIAKEY_STATUS_OUTPUT_RESTRICTED\\t= ( MF_MEDIAKEY_STATUS_RELEASED + 1 ) \\r\\n    } \\tMF_MEDIAKEY_STATUS;"},"MF_MEDIASOURCE_STATUS_INFO":{"comment":"","exp":"","file":"mfidl.h","line":18302,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIASOURCE_STATUS_INFO\\r\\n    {\\r\\n        MF_MEDIASOURCE_STATUS_INFO_FULLYSUPPORTED\\t= 0,\\r\\n        MF_MEDIASOURCE_STATUS_INFO_UNKNOWN\\t= 1\\r\\n    } \\tMF_MEDIASOURCE_STATUS_INFO;"},"MF_MEDIATYPE_EQUAL_FORMAT_DATA":{"comment":"","exp":"0x00000004","file":"mfobjects.h","line":2199,"type":"Integer","value":4},"MF_MEDIATYPE_EQUAL_FORMAT_TYPES":{"comment":"","exp":"0x00000002","file":"mfobjects.h","line":2198,"type":"Integer","value":2},"MF_MEDIATYPE_EQUAL_FORMAT_USER_DATA":{"comment":"","exp":"0x00000008","file":"mfobjects.h","line":2200,"type":"Integer","value":8},"MF_MEDIATYPE_EQUAL_MAJOR_TYPES":{"comment":"","exp":"0x00000001","file":"mfobjects.h","line":2197,"type":"Integer","value":1},"MF_MEDIA_ENGINE_CANPLAY":{"comment":"","exp":"","file":"mfmediaengine.h","line":1010,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_CANPLAY\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_CANPLAY_NOT_SUPPORTED\\t= 0,\\r\\n        MF_MEDIA_ENGINE_CANPLAY_MAYBE\\t= 1,\\r\\n        MF_MEDIA_ENGINE_CANPLAY_PROBABLY\\t= 2\\r\\n    } \\tMF_MEDIA_ENGINE_CANPLAY;"},"MF_MEDIA_ENGINE_CREATEFLAGS":{"comment":"","exp":"","file":"mfmediaengine.h","line":5270,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_CREATEFLAGS\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_AUDIOONLY\\t= 0x1,\\r\\n        MF_MEDIA_ENGINE_WAITFORSTABLE_STATE\\t= 0x2,\\r\\n        MF_MEDIA_ENGINE_FORCEMUTE\\t= 0x4,\\r\\n        MF_MEDIA_ENGINE_REAL_TIME_MODE\\t= 0x8,\\r\\n        MF_MEDIA_ENGINE_DISABLE_LOCAL_PLUGINS\\t= 0x10,\\r\\n        MF_MEDIA_ENGINE_CREATEFLAGS_MASK\\t= 0x1f\\r\\n    } \\tMF_MEDIA_ENGINE_CREATEFLAGS;"},"MF_MEDIA_ENGINE_ERR":{"comment":"","exp":"","file":"mfmediaengine.h","line":420,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_ERR\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_ERR_NOERROR\\t= 0,\\r\\n        MF_MEDIA_ENGINE_ERR_ABORTED\\t= 1,\\r\\n        MF_MEDIA_ENGINE_ERR_NETWORK\\t= 2,\\r\\n        MF_MEDIA_ENGINE_ERR_DECODE\\t= 3,\\r\\n        MF_MEDIA_ENGINE_ERR_SRC_NOT_SUPPORTED\\t= 4,\\r\\n        MF_MEDIA_ENGINE_ERR_ENCRYPTED\\t= 5\\r\\n    } \\tMF_MEDIA_ENGINE_ERR;"},"MF_MEDIA_ENGINE_EVENT":{"comment":"","exp":"","file":"mfmediaengine.h","line":695,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_EVENT\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_EVENT_LOADSTART\\t= 1,\\r\\n        MF_MEDIA_ENGINE_EVENT_PROGRESS\\t= 2,\\r\\n        MF_MEDIA_ENGINE_EVENT_SUSPEND\\t= 3,\\r\\n        MF_MEDIA_ENGINE_EVENT_ABORT\\t= 4,\\r\\n        MF_MEDIA_ENGINE_EVENT_ERROR\\t= 5,\\r\\n        MF_MEDIA_ENGINE_EVENT_EMPTIED\\t= 6,\\r\\n        MF_MEDIA_ENGINE_EVENT_STALLED\\t= 7,\\r\\n        MF_MEDIA_ENGINE_EVENT_PLAY\\t= 8,\\r\\n        MF_MEDIA_ENGINE_EVENT_PAUSE\\t= 9,\\r\\n        MF_MEDIA_ENGINE_EVENT_LOADEDMETADATA\\t= 10,\\r\\n        MF_MEDIA_ENGINE_EVENT_LOADEDDATA\\t= 11,\\r\\n        MF_MEDIA_ENGINE_EVENT_WAITING\\t= 12,\\r\\n        MF_MEDIA_ENGINE_EVENT_PLAYING\\t= 13,\\r\\n        MF_MEDIA_ENGINE_EVENT_CANPLAY\\t= 14,\\r\\n        MF_MEDIA_ENGINE_EVENT_CANPLAYTHROUGH\\t= 15,\\r\\n        MF_MEDIA_ENGINE_EVENT_SEEKING\\t= 16,\\r\\n        MF_MEDIA_ENGINE_EVENT_SEEKED\\t= 17,\\r\\n        MF_MEDIA_ENGINE_EVENT_TIMEUPDATE\\t= 18,\\r\\n        MF_MEDIA_ENGINE_EVENT_ENDED\\t= 19,\\r\\n        MF_MEDIA_ENGINE_EVENT_RATECHANGE\\t= 20,\\r\\n        MF_MEDIA_ENGINE_EVENT_DURATIONCHANGE\\t= 21,\\r\\n        MF_MEDIA_ENGINE_EVENT_VOLUMECHANGE\\t= 22,\\r\\n        MF_MEDIA_ENGINE_EVENT_FORMATCHANGE\\t= 1000,\\r\\n        MF_MEDIA_ENGINE_EVENT_PURGEQUEUEDEVENTS\\t= 1001,\\r\\n        MF_MEDIA_ENGINE_EVENT_TIMELINE_MARKER\\t= 1002,\\r\\n        MF_MEDIA_ENGINE_EVENT_BALANCECHANGE\\t= 1003,\\r\\n        MF_MEDIA_ENGINE_EVENT_DOWNLOADCOMPLETE\\t= 1004,\\r\\n        MF_MEDIA_ENGINE_EVENT_BUFFERINGSTARTED\\t= 1005,\\r\\n        MF_MEDIA_ENGINE_EVENT_BUFFERINGENDED\\t= 1006,\\r\\n        MF_MEDIA_ENGINE_EVENT_FRAMESTEPCOMPLETED\\t= 1007,\\r\\n        MF_MEDIA_ENGINE_EVENT_NOTIFYSTABLESTATE\\t= 1008,\\r\\n        MF_MEDIA_ENGINE_EVENT_FIRSTFRAMEREADY\\t= 1009,\\r\\n        MF_MEDIA_ENGINE_EVENT_TRACKSCHANGE\\t= 1010,\\r\\n        MF_MEDIA_ENGINE_EVENT_OPMINFO\\t= 1011,\\r\\n        MF_MEDIA_ENGINE_EVENT_RESOURCELOST\\t= 1012,\\r\\n        MF_MEDIA_ENGINE_EVENT_DELAYLOADEVENT_CHANGED\\t= 1013,\\r\\n        MF_MEDIA_ENGINE_EVENT_STREAMRENDERINGERROR\\t= 1014,\\r\\n        MF_MEDIA_ENGINE_EVENT_SUPPORTEDRATES_CHANGED\\t= 1015,\\r\\n        MF_MEDIA_ENGINE_EVENT_AUDIOENDPOINTCHANGE\\t= 1016\\r\\n    } \\tMF_MEDIA_ENGINE_EVENT;"},"MF_MEDIA_ENGINE_EXTENSION_TYPE":{"comment":"","exp":"","file":"mfmediaengine.h","line":2540,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_EXTENSION_TYPE\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_EXTENSION_TYPE_MEDIASOURCE\\t= 0,\\r\\n        MF_MEDIA_ENGINE_EXTENSION_TYPE_BYTESTREAM\\t= 1\\r\\n    } \\tMF_MEDIA_ENGINE_EXTENSION_TYPE;"},"MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAGS":{"comment":"","exp":"","file":"mfmediaengine.h","line":2706,"type":"Enum","value":"enum MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAGS\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAG_PROTECTED\\t= 0x1,\\r\\n        MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAG_REQUIRES_SURFACE_PROTECTION\\t= 0x2,\\r\\n        MF_MEDIA_ENGINE_FRAME_PROTECTION_FLAG_REQUIRES_ANTI_SCREEN_SCRAPE_PROTECTION\\t= 0x4\\r\\n    } ;"},"MF_MEDIA_ENGINE_NETWORK":{"comment":"","exp":"","file":"mfmediaengine.h","line":991,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_NETWORK\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_NETWORK_EMPTY\\t= 0,\\r\\n        MF_MEDIA_ENGINE_NETWORK_IDLE\\t= 1,\\r\\n        MF_MEDIA_ENGINE_NETWORK_LOADING\\t= 2,\\r\\n        MF_MEDIA_ENGINE_NETWORK_NO_SOURCE\\t= 3\\r\\n    } \\tMF_MEDIA_ENGINE_NETWORK;"},"MF_MEDIA_ENGINE_OPM_STATUS":{"comment":"","exp":"","file":"mfmediaengine.h","line":5098,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_OPM_STATUS\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_OPM_NOT_REQUESTED\\t= 0,\\r\\n        MF_MEDIA_ENGINE_OPM_ESTABLISHED\\t= 1,\\r\\n        MF_MEDIA_ENGINE_OPM_FAILED_VM\\t= 2,\\r\\n        MF_MEDIA_ENGINE_OPM_FAILED_BDA\\t= 3,\\r\\n        MF_MEDIA_ENGINE_OPM_FAILED_UNSIGNED_DRIVER\\t= 4,\\r\\n        MF_MEDIA_ENGINE_OPM_FAILED\\t= 5\\r\\n    } \\tMF_MEDIA_ENGINE_OPM_STATUS;"},"MF_MEDIA_ENGINE_PRELOAD":{"comment":"","exp":"","file":"mfmediaengine.h","line":1018,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_PRELOAD\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_PRELOAD_MISSING\\t= 0,\\r\\n        MF_MEDIA_ENGINE_PRELOAD_EMPTY\\t= 1,\\r\\n        MF_MEDIA_ENGINE_PRELOAD_NONE\\t= 2,\\r\\n        MF_MEDIA_ENGINE_PRELOAD_METADATA\\t= 3,\\r\\n        MF_MEDIA_ENGINE_PRELOAD_AUTOMATIC\\t= 4\\r\\n    } \\tMF_MEDIA_ENGINE_PRELOAD;"},"MF_MEDIA_ENGINE_PROTECTION_FLAGS":{"comment":"","exp":"","file":"mfmediaengine.h","line":5281,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_PROTECTION_FLAGS\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_ENABLE_PROTECTED_CONTENT\\t= 1,\\r\\n        MF_MEDIA_ENGINE_USE_PMP_FOR_ALL_CONTENT\\t= 2,\\r\\n        MF_MEDIA_ENGINE_USE_UNPROTECTED_PMP\\t= 4\\r\\n    } \\tMF_MEDIA_ENGINE_PROTECTION_FLAGS;"},"MF_MEDIA_ENGINE_READY":{"comment":"","exp":"","file":"mfmediaengine.h","line":1000,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_READY\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_READY_HAVE_NOTHING\\t= 0,\\r\\n        MF_MEDIA_ENGINE_READY_HAVE_METADATA\\t= 1,\\r\\n        MF_MEDIA_ENGINE_READY_HAVE_CURRENT_DATA\\t= 2,\\r\\n        MF_MEDIA_ENGINE_READY_HAVE_FUTURE_DATA\\t= 3,\\r\\n        MF_MEDIA_ENGINE_READY_HAVE_ENOUGH_DATA\\t= 4\\r\\n    } \\tMF_MEDIA_ENGINE_READY;"},"MF_MEDIA_ENGINE_S3D_PACKING_MODE":{"comment":"","exp":"","file":"mfmediaengine.h","line":1561,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_S3D_PACKING_MODE\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_S3D_PACKING_MODE_NONE\\t= 0,\\r\\n        MF_MEDIA_ENGINE_S3D_PACKING_MODE_SIDE_BY_SIDE\\t= 1,\\r\\n        MF_MEDIA_ENGINE_S3D_PACKING_MODE_TOP_BOTTOM\\t= 2\\r\\n    } \\tMF_MEDIA_ENGINE_S3D_PACKING_MODE;"},"MF_MEDIA_ENGINE_SEEK_MODE":{"comment":"","exp":"","file":"mfmediaengine.h","line":1582,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_SEEK_MODE\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_SEEK_MODE_NORMAL\\t= 0,\\r\\n        MF_MEDIA_ENGINE_SEEK_MODE_APPROXIMATE\\t= 1\\r\\n    } \\tMF_MEDIA_ENGINE_SEEK_MODE;"},"MF_MEDIA_ENGINE_STATISTIC":{"comment":"","exp":"","file":"mfmediaengine.h","line":1569,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_STATISTIC\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_STATISTIC_FRAMES_RENDERED\\t= 0,\\r\\n        MF_MEDIA_ENGINE_STATISTIC_FRAMES_DROPPED\\t= 1,\\r\\n        MF_MEDIA_ENGINE_STATISTIC_BYTES_DOWNLOADED\\t= 2,\\r\\n        MF_MEDIA_ENGINE_STATISTIC_BUFFER_PROGRESS\\t= 3,\\r\\n        MF_MEDIA_ENGINE_STATISTIC_FRAMES_PER_SECOND\\t= 4,\\r\\n        MF_MEDIA_ENGINE_STATISTIC_PLAYBACK_JITTER\\t= 5,\\r\\n        MF_MEDIA_ENGINE_STATISTIC_FRAMES_CORRUPTED\\t= 6,\\r\\n        MF_MEDIA_ENGINE_STATISTIC_TOTAL_FRAME_DELAY\\t= 7\\r\\n    } \\tMF_MEDIA_ENGINE_STATISTIC;"},"MF_MEDIA_ENGINE_STREAMTYPE_FAILED":{"comment":"","exp":"","file":"mfmediaengine.h","line":7941,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_ENGINE_STREAMTYPE_FAILED\\r\\n    {\\r\\n        MF_MEDIA_ENGINE_STREAMTYPE_FAILED_UNKNOWN\\t= 0,\\r\\n        MF_MEDIA_ENGINE_STREAMTYPE_FAILED_AUDIO\\t= 1,\\r\\n        MF_MEDIA_ENGINE_STREAMTYPE_FAILED_VIDEO\\t= 2\\r\\n    } \\tMF_MEDIA_ENGINE_STREAMTYPE_FAILED;"},"MF_MEDIA_SHARING_ENGINE_EVENT":{"comment":"","exp":"","file":"mfsharingengine.h","line":133,"type":"Enum","value":"typedef\\r\\nenum MF_MEDIA_SHARING_ENGINE_EVENT\\r\\n    {\\r\\n        MF_MEDIA_SHARING_ENGINE_EVENT_DISCONNECT\\t= 2000\\r\\n    } \\tMF_MEDIA_SHARING_ENGINE_EVENT;"},"MF_METADATAFACIALEXPRESSION_SMILE":{"comment":"","exp":"0x00000001","file":"mfapi.h","line":1634,"type":"Integer","value":1},"MF_METADATATIMESTAMPS_DEVICE":{"comment":"","exp":"0x00000001","file":"mfapi.h","line":1663,"type":"Integer","value":1},"MF_METADATATIMESTAMPS_PRESENTATION":{"comment":"","exp":"0x00000002","file":"mfapi.h","line":1664,"type":"Integer","value":2},"MF_MINCRYPT_FAILURE":{"comment":"","exp":"0x10000000","file":"mfidl.h","line":7545,"type":"Integer","value":268435456},"MF_MSE_APPEND_MODE":{"comment":"","exp":"","file":"mfmediaengine.h","line":3620,"type":"Enum","value":"typedef\\r\\nenum MF_MSE_APPEND_MODE\\r\\n    {\\r\\n        MF_MSE_APPEND_MODE_SEGMENTS\\t= 0,\\r\\n        MF_MSE_APPEND_MODE_SEQUENCE\\t= 1\\r\\n    } \\tMF_MSE_APPEND_MODE;"},"MF_MSE_ERROR":{"comment":"","exp":"","file":"mfmediaengine.h","line":3832,"type":"Enum","value":"typedef\\r\\nenum MF_MSE_ERROR\\r\\n    {\\r\\n        MF_MSE_ERROR_NOERROR\\t= 0,\\r\\n        MF_MSE_ERROR_NETWORK\\t= 1,\\r\\n        MF_MSE_ERROR_DECODE\\t= 2,\\r\\n        MF_MSE_ERROR_UNKNOWN_ERROR\\t= 3\\r\\n    } \\tMF_MSE_ERROR;"},"MF_MSE_OPUS_SUPPORT_TYPE":{"comment":"","exp":"","file":"mfmediaengine.h","line":3104,"type":"Enum","value":"typedef\\r\\nenum MF_MSE_OPUS_SUPPORT_TYPE\\r\\n    {\\r\\n        MF_MSE_OPUS_SUPPORT_ON\\t= 0,\\r\\n        MF_MSE_OPUS_SUPPORT_OFF\\t= 1\\r\\n    } \\tMF_MSE_OPUS_SUPPORT_TYPE;"},"MF_MSE_READY":{"comment":"","exp":"","file":"mfmediaengine.h","line":3824,"type":"Enum","value":"typedef\\r\\nenum MF_MSE_READY\\r\\n    {\\r\\n        MF_MSE_READY_CLOSED\\t= 1,\\r\\n        MF_MSE_READY_OPEN\\t= 2,\\r\\n        MF_MSE_READY_ENDED\\t= 3\\r\\n    } \\tMF_MSE_READY;"},"MF_MSE_VP9_SUPPORT_TYPE":{"comment":"","exp":"","file":"mfmediaengine.h","line":3096,"type":"Enum","value":"typedef\\r\\nenum MF_MSE_VP9_SUPPORT_TYPE\\r\\n    {\\r\\n        MF_MSE_VP9_SUPPORT_DEFAULT\\t= 0,\\r\\n        MF_MSE_VP9_SUPPORT_ON\\t= 1,\\r\\n        MF_MSE_VP9_SUPPORT_OFF\\t= 2\\r\\n    } \\tMF_MSE_VP9_SUPPORT_TYPE;"},"MF_OBJECT_TYPE":{"comment":"","exp":"","file":"mfidl.h","line":1257,"type":"Enum","value":"typedef\\r\\nenum MF_OBJECT_TYPE\\r\\n    {\\r\\n        MF_OBJECT_MEDIASOURCE\\t= 0,\\r\\n        MF_OBJECT_BYTESTREAM\\t= ( MF_OBJECT_MEDIASOURCE + 1 ) ,\\r\\n        MF_OBJECT_INVALID\\t= ( MF_OBJECT_BYTESTREAM + 1 ) \\r\\n    } \\tMF_OBJECT_TYPE;"},"MF_PLUGIN_CONTROL_POLICY":{"comment":"","exp":"","file":"mfobjects.h","line":5790,"type":"Enum","value":"typedef\\r\\nenum MF_PLUGIN_CONTROL_POLICY\\r\\n    {\\r\\n        MF_PLUGIN_CONTROL_POLICY_USE_ALL_PLUGINS\\t= 0,\\r\\n        MF_PLUGIN_CONTROL_POLICY_USE_APPROVED_PLUGINS\\t= 1,\\r\\n        MF_PLUGIN_CONTROL_POLICY_USE_WEB_PLUGINS\\t= 2,\\r\\n        MF_PLUGIN_CONTROL_POLICY_USE_WEB_PLUGINS_EDGEMODE\\t= 3\\r\\n    } \\tMF_PLUGIN_CONTROL_POLICY;"},"MF_SDK_VERSION":{"comment":"","dupe":[{"comment":"","exp":"0x0001","file":"mfapi.h","line":41,"type":"Unknown","value":"0x0001"}],"exp":"0x0002","file":"mfapi.h","line":37,"type":"Integer","value":2},"MF_SHARING_ENGINE_EVENT":{"comment":"","exp":"","file":"mfsharingengine.h","line":123,"type":"Enum","value":"typedef\\r\\nenum MF_SHARING_ENGINE_EVENT\\r\\n    {\\r\\n        MF_SHARING_ENGINE_EVENT_DISCONNECT\\t= 2000,\\r\\n        MF_SHARING_ENGINE_EVENT_LOCALRENDERINGSTARTED\\t= 2001,\\r\\n        MF_SHARING_ENGINE_EVENT_LOCALRENDERINGENDED\\t= 2002,\\r\\n        MF_SHARING_ENGINE_EVENT_STOPPED\\t= 2003,\\r\\n        MF_SHARING_ENGINE_EVENT_ERROR\\t= 2501\\r\\n    } \\tMF_SHARING_ENGINE_EVENT;"},"MF_SOURCE_READER_CONTROL_FLAG":{"comment":"","exp":"","file":"mfreadwrite.h","line":302,"type":"Enum","value":"typedef\\r\\nenum MF_SOURCE_READER_CONTROL_FLAG\\r\\n    {\\r\\n        MF_SOURCE_READER_CONTROLF_DRAIN\\t= 0x1\\r\\n    } \\tMF_SOURCE_READER_CONTROL_FLAG;"},"MF_SOURCE_READER_FLAG":{"comment":"","exp":"","file":"mfreadwrite.h","line":289,"type":"Enum","value":"typedef\\r\\nenum MF_SOURCE_READER_FLAG\\r\\n    {\\r\\n        MF_SOURCE_READERF_ERROR\\t= 0x1,\\r\\n        MF_SOURCE_READERF_ENDOFSTREAM\\t= 0x2,\\r\\n        MF_SOURCE_READERF_NEWSTREAM\\t= 0x4,\\r\\n        MF_SOURCE_READERF_NATIVEMEDIATYPECHANGED\\t= 0x10,\\r\\n        MF_SOURCE_READERF_CURRENTMEDIATYPECHANGED\\t= 0x20,\\r\\n        MF_SOURCE_READERF_STREAMTICK\\t= 0x100,\\r\\n        MF_SOURCE_READERF_ALLEFFECTSREMOVED\\t= 0x200\\r\\n    } \\tMF_SOURCE_READER_FLAG;"},"MF_TEST_SIGNED_COMPONENT_LOADING":{"comment":"","exp":"0x01000000","file":"mfidl.h","line":7544,"type":"Integer","value":16777216},"MF_TIMED_TEXT_ALIGNMENT":{"comment":"","exp":"","file":"mfmediaengine.h","line":6017,"type":"Enum","value":"typedef\\r\\nenum MF_TIMED_TEXT_ALIGNMENT\\r\\n    {\\r\\n        MF_TIMED_TEXT_ALIGNMENT_START\\t= 0,\\r\\n        MF_TIMED_TEXT_ALIGNMENT_END\\t= 1,\\r\\n        MF_TIMED_TEXT_ALIGNMENT_CENTER\\t= 2\\r\\n    } \\tMF_TIMED_TEXT_ALIGNMENT;"},"MF_TIMED_TEXT_CUE_EVENT":{"comment":"","exp":"","file":"mfmediaengine.h","line":6071,"type":"Enum","value":"typedef\\r\\nenum MF_TIMED_TEXT_CUE_EVENT\\r\\n    {\\r\\n        MF_TIMED_TEXT_CUE_EVENT_ACTIVE\\t= 0,\\r\\n        MF_TIMED_TEXT_CUE_EVENT_INACTIVE\\t= ( MF_TIMED_TEXT_CUE_EVENT_ACTIVE + 1 ) ,\\r\\n        MF_TIMED_TEXT_CUE_EVENT_CLEAR\\t= ( MF_TIMED_TEXT_CUE_EVENT_INACTIVE + 1 ) \\r\\n    } \\tMF_TIMED_TEXT_CUE_EVENT;"},"MF_TIMED_TEXT_DECORATION":{"comment":"","exp":"","file":"mfmediaengine.h","line":6033,"type":"Enum","value":"typedef\\r\\nenum MF_TIMED_TEXT_DECORATION\\r\\n    {\\r\\n        MF_TIMED_TEXT_DECORATION_NONE\\t= 0,\\r\\n        MF_TIMED_TEXT_DECORATION_UNDERLINE\\t= 1,\\r\\n        MF_TIMED_TEXT_DECORATION_LINE_THROUGH\\t= 2,\\r\\n        MF_TIMED_TEXT_DECORATION_OVERLINE\\t= 4\\r\\n    } \\tMF_TIMED_TEXT_DECORATION;"},"MF_TIMED_TEXT_DISPLAY_ALIGNMENT":{"comment":"","exp":"","file":"mfmediaengine.h","line":6025,"type":"Enum","value":"typedef\\r\\nenum MF_TIMED_TEXT_DISPLAY_ALIGNMENT\\r\\n    {\\r\\n        MF_TIMED_TEXT_DISPLAY_ALIGNMENT_BEFORE\\t= 0,\\r\\n        MF_TIMED_TEXT_DISPLAY_ALIGNMENT_AFTER\\t= 1,\\r\\n        MF_TIMED_TEXT_DISPLAY_ALIGNMENT_CENTER\\t= 2\\r\\n    } \\tMF_TIMED_TEXT_DISPLAY_ALIGNMENT;"},"MF_TIMED_TEXT_ERROR_CODE":{"comment":"","exp":"","file":"mfmediaengine.h","line":6061,"type":"Enum","value":"typedef\\r\\nenum MF_TIMED_TEXT_ERROR_CODE\\r\\n    {\\r\\n        MF_TIMED_TEXT_ERROR_CODE_NOERROR\\t= 0,\\r\\n        MF_TIMED_TEXT_ERROR_CODE_FATAL\\t= 1,\\r\\n        MF_TIMED_TEXT_ERROR_CODE_DATA_FORMAT\\t= 2,\\r\\n        MF_TIMED_TEXT_ERROR_CODE_NETWORK\\t= 3,\\r\\n        MF_TIMED_TEXT_ERROR_CODE_INTERNAL\\t= 4\\r\\n    } \\tMF_TIMED_TEXT_ERROR_CODE;"},"MF_TIMED_TEXT_FONT_STYLE":{"comment":"","exp":"","file":"mfmediaengine.h","line":6009,"type":"Enum","value":"typedef\\r\\nenum MF_TIMED_TEXT_FONT_STYLE\\r\\n    {\\r\\n        MF_TIMED_TEXT_FONT_STYLE_NORMAL\\t= 0,\\r\\n        MF_TIMED_TEXT_FONT_STYLE_OBLIQUE\\t= 1,\\r\\n        MF_TIMED_TEXT_FONT_STYLE_ITALIC\\t= 2\\r\\n    } \\tMF_TIMED_TEXT_FONT_STYLE;"},"MF_TIMED_TEXT_SCROLL_MODE":{"comment":"","exp":"","file":"mfmediaengine.h","line":6054,"type":"Enum","value":"typedef\\r\\nenum MF_TIMED_TEXT_SCROLL_MODE\\r\\n    {\\r\\n        MF_TIMED_TEXT_SCROLL_MODE_POP_ON\\t= 0,\\r\\n        MF_TIMED_TEXT_SCROLL_MODE_ROLL_UP\\t= 1\\r\\n    } \\tMF_TIMED_TEXT_SCROLL_MODE;"},"MF_TIMED_TEXT_TRACK_KIND":{"comment":"","exp":"","file":"mfmediaengine.h","line":5993,"type":"Enum","value":"typedef\\r\\nenum MF_TIMED_TEXT_TRACK_KIND\\r\\n    {\\r\\n        MF_TIMED_TEXT_TRACK_KIND_UNKNOWN\\t= 0,\\r\\n        MF_TIMED_TEXT_TRACK_KIND_SUBTITLES\\t= 1,\\r\\n        MF_TIMED_TEXT_TRACK_KIND_CAPTIONS\\t= 2,\\r\\n        MF_TIMED_TEXT_TRACK_KIND_METADATA\\t= 3\\r\\n    } \\tMF_TIMED_TEXT_TRACK_KIND;"},"MF_TIMED_TEXT_TRACK_READY_STATE":{"comment":"","exp":"","file":"mfmediaengine.h","line":6079,"type":"Enum","value":"typedef\\r\\nenum MF_TIMED_TEXT_TRACK_READY_STATE\\r\\n    {\\r\\n        MF_TIMED_TEXT_TRACK_READY_STATE_NONE\\t= 0,\\r\\n        MF_TIMED_TEXT_TRACK_READY_STATE_LOADING\\t= ( MF_TIMED_TEXT_TRACK_READY_STATE_NONE + 1 ) ,\\r\\n        MF_TIMED_TEXT_TRACK_READY_STATE_LOADED\\t= ( MF_TIMED_TEXT_TRACK_READY_STATE_LOADING + 1 ) ,\\r\\n        MF_TIMED_TEXT_TRACK_READY_STATE_ERROR\\t= ( MF_TIMED_TEXT_TRACK_READY_STATE_LOADED + 1 ) \\r\\n    } \\tMF_TIMED_TEXT_TRACK_READY_STATE;"},"MF_TIMED_TEXT_UNIT_TYPE":{"comment":"","exp":"","file":"mfmediaengine.h","line":6002,"type":"Enum","value":"typedef\\r\\nenum MF_TIMED_TEXT_UNIT_TYPE\\r\\n    {\\r\\n        MF_TIMED_TEXT_UNIT_TYPE_PIXELS\\t= 0,\\r\\n        MF_TIMED_TEXT_UNIT_TYPE_PERCENTAGE\\t= 1\\r\\n    } \\tMF_TIMED_TEXT_UNIT_TYPE;"},"MF_TIMED_TEXT_WRITING_MODE":{"comment":"","exp":"","file":"mfmediaengine.h","line":6042,"type":"Enum","value":"typedef\\r\\nenum MF_TIMED_TEXT_WRITING_MODE\\r\\n    {\\r\\n        MF_TIMED_TEXT_WRITING_MODE_LRTB\\t= 0,\\r\\n        MF_TIMED_TEXT_WRITING_MODE_RLTB\\t= 1,\\r\\n        MF_TIMED_TEXT_WRITING_MODE_TBRL\\t= 2,\\r\\n        MF_TIMED_TEXT_WRITING_MODE_TBLR\\t= 3,\\r\\n        MF_TIMED_TEXT_WRITING_MODE_LR\\t= 4,\\r\\n        MF_TIMED_TEXT_WRITING_MODE_RL\\t= 5,\\r\\n        MF_TIMED_TEXT_WRITING_MODE_TB\\t= 6\\r\\n    } \\tMF_TIMED_TEXT_WRITING_MODE;"},"MF_TOPOLOGY_TYPE":{"comment":"","exp":"","file":"mfidl.h","line":4428,"type":"Enum","value":"typedef\\r\\nenum MF_TOPOLOGY_TYPE\\r\\n    {\\r\\n        MF_TOPOLOGY_OUTPUT_NODE\\t= 0,\\r\\n        MF_TOPOLOGY_SOURCESTREAM_NODE\\t= ( MF_TOPOLOGY_OUTPUT_NODE + 1 ) ,\\r\\n        MF_TOPOLOGY_TRANSFORM_NODE\\t= ( MF_TOPOLOGY_SOURCESTREAM_NODE + 1 ) ,\\r\\n        MF_TOPOLOGY_TEE_NODE\\t= ( MF_TOPOLOGY_TRANSFORM_NODE + 1 ) ,\\r\\n        MF_TOPOLOGY_MAX\\t= 0xffffffff\\r\\n    } \\tMF_TOPOLOGY_TYPE;"},"MF_TRANSFER_VIDEO_FRAME_FLAGS":{"comment":"","exp":"","file":"mfidl.h","line":2315,"type":"Enum","value":"typedef\\r\\nenum MF_TRANSFER_VIDEO_FRAME_FLAGS\\r\\n    {\\r\\n        MF_TRANSFER_VIDEO_FRAME_DEFAULT\\t= 0,\\r\\n        MF_TRANSFER_VIDEO_FRAME_STRETCH\\t= 1,\\r\\n        MF_TRANSFER_VIDEO_FRAME_IGNORE_PAR\\t= 2\\r\\n    } \\tMF_TRANSFER_VIDEO_FRAME_FLAGS;"},"MF_UNKNOWN_DURATION":{"comment":"","exp":"0","file":"mfidl.h","line":18317,"type":"Integer","value":0},"MF_USER_MODE_COMPONENT_LOAD":{"comment":"","exp":"0x00000001","file":"mfidl.h","line":7532,"type":"Integer","value":1},"MF_VERSION":{"comment":"","critical":{"MF_SDK_VERSION":{"comment":"","exp":"0x0001","file":"mfapi.h","line":41,"type":"Unknown","value":"0x0001"}},"exp":"(MF_SDK_VERSION << 16 | MF_API_VERSION)","file":"mfapi.h","line":46,"type":"Integer","value":131184},"MIC_ARRAY_MODE":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3724,"type":"Enum","value":"typedef\\r\\nenum MIC_ARRAY_MODE\\r\\n    {\\r\\n        MICARRAY_SINGLE_CHAN\\t= 0,\\r\\n        MICARRAY_SIMPLE_SUM\\t= 0x100,\\r\\n        MICARRAY_SINGLE_BEAM\\t= 0x200,\\r\\n        MICARRAY_FIXED_BEAM\\t= 0x400,\\r\\n        MICARRAY_EXTERN_BEAM\\t= 0x800\\r\\n    } \\tMIC_ARRAY_MODE;"},"MULTICHANNEL_MODE_KEY_GUID":{"comment":"","exp":"(MFPKEY_CORR_MULTICHANNEL_MODE.fmtid)","file":"wmcodecdsp.h","line":3083,"type":"Unknown","value":"(MFPKEY_CORR_MULTICHANNEL_MODE.fmtid)"},"NO_SUB_KEY_GUID":{"comment":"","exp":"(MFPKEY_BASSMGMT_NO_SUB.fmtid)","file":"wmcodecdsp.h","line":3076,"type":"Unknown","value":"(MFPKEY_BASSMGMT_NO_SUB.fmtid)"},"PHANTOMING_ENABLED_KEY_GUID":{"comment":"","exp":"(MFPKEY_PHANTOMING_ON.fmtid)","file":"wmcodecdsp.h","line":3066,"type":"Unknown","value":"(MFPKEY_PHANTOMING_ON.fmtid)"},"PLAYTO_SOURCE_CREATEFLAGS":{"comment":"","exp":"","file":"mfsharingengine.h","line":936,"type":"Enum","value":"typedef\\r\\nenum PLAYTO_SOURCE_CREATEFLAGS\\r\\n    {\\r\\n        PLAYTO_SOURCE_NONE\\t= 0,\\r\\n        PLAYTO_SOURCE_IMAGE\\t= 0x1,\\r\\n        PLAYTO_SOURCE_AUDIO\\t= 0x2,\\r\\n        PLAYTO_SOURCE_VIDEO\\t= 0x4,\\r\\n        PLAYTO_SOURCE_PROTECTED\\t= 0x8\\r\\n    } \\tPLAYTO_SOURCE_CREATEFLAGS;"},"PRESENTATION_CURRENT_POSITION":{"comment":"","exp":"0x7fffffffffffffff","file":"mfidl.h","line":5326,"type":"Integer","value":9223372036854775807},"ProcessEvent":{"comment":"","exp":"MFTProcessEvent","file":"mftransform.h","line":220,"type":"Unknown","value":"MFTProcessEvent"},"ProcessInput":{"comment":"","exp":"MFTProcessInput","file":"mftransform.h","line":222,"type":"Unknown","value":"MFTProcessInput"},"ProcessMessage":{"comment":"","exp":"MFTProcessMessage","file":"mftransform.h","line":221,"type":"Unknown","value":"MFTProcessMessage"},"ProcessOutput":{"comment":"","exp":"MFTProcessOutput","file":"mftransform.h","line":223,"type":"Unknown","value":"MFTProcessOutput"},"ROOM_CORRECTION_ENABLED_KEY_GUID":{"comment":"","exp":"(MFPKEY_CORR_ROOM_CORRECTION_ON.fmtid)","file":"wmcodecdsp.h","line":3087,"type":"Unknown","value":"(MFPKEY_CORR_ROOM_CORRECTION_ON.fmtid)"},"ROOM_PROFILE_KEY_GUID":{"comment":"","exp":"(MFPKEY_ROOMCORR_PROFILE.fmtid)","file":"wmcodecdsp.h","line":3068,"type":"Unknown","value":"(MFPKEY_ROOMCORR_PROFILE.fmtid)"},"SAMPLE_PROTECTION_VERSION":{"comment":"","exp":"","file":"mfidl.h","line":14541,"type":"Enum","value":"typedef\\r\\nenum SAMPLE_PROTECTION_VERSION\\r\\n    {\\r\\n        SAMPLE_PROTECTION_VERSION_NO\\t= 0,\\r\\n        SAMPLE_PROTECTION_VERSION_BASIC_LOKI\\t= 1,\\r\\n        SAMPLE_PROTECTION_VERSION_SCATTER\\t= 2,\\r\\n        SAMPLE_PROTECTION_VERSION_RC4\\t= 3,\\r\\n        SAMPLE_PROTECTION_VERSION_AES128CTR\\t= 4\\r\\n    } \\tSAMPLE_PROTECTION_VERSION;"},"SEEK_ORIGIN":{"comment":"","exp":"","file":"wmcodecdsp.h","line":4655,"type":"Enum","value":"enum SEEK_ORIGIN\\r\\n    {\\r\\n        _msoBegin\\t= 0,\\r\\n        _msoCurrent\\t= 1\\r\\n    } ;"},"SHA_HASH_LEN":{"comment":"","exp":"20","file":"mfidl.h","line":7556,"type":"Integer","value":20},"STATIC_KSPROPSETID_OPMVideoOutput":{"comment":"","exp":"0x6f414bb, 0xf43a, 0x4fe2, 0xa5, 0x66, 0x77, 0x4b, 0x4c, 0x81, 0xf0, 0xdb","file":"ksopmapi.h","line":31,"type":"Other","value":"0x6f414bb, 0xf43a, 0x4fe2, 0xa5, 0x66, 0x77, 0x4b, 0x4c, 0x81, 0xf0, 0xdb"},"STR_HASH_LEN":{"comment":"","exp":"(SHA_HASH_LEN*2 + 3)","file":"mfidl.h","line":7557,"type":"Integer","value":43},"SYSFXUI_DONOTSHOW_BASSBOOST":{"comment":"","exp":"0x08","file":"wmcodecdsp.h","line":3098,"type":"Integer","value":8},"SYSFXUI_DONOTSHOW_BASSMANAGEMENT":{"comment":"","exp":"0x04","file":"wmcodecdsp.h","line":3097,"type":"Integer","value":4},"SYSFXUI_DONOTSHOW_CHANNELPHANTOMING":{"comment":"","exp":"0x80","file":"wmcodecdsp.h","line":3102,"type":"Integer","value":128},"SYSFXUI_DONOTSHOW_HEADPHONEVIRTUALIZATION":{"comment":"","exp":"0x10","file":"wmcodecdsp.h","line":3099,"type":"Integer","value":16},"SYSFXUI_DONOTSHOW_LOUDNESSEQUALIZATION":{"comment":"","exp":"0x01","file":"wmcodecdsp.h","line":3095,"type":"Integer","value":1},"SYSFXUI_DONOTSHOW_ROOMCORRECTION":{"comment":"","exp":"0x02","file":"wmcodecdsp.h","line":3096,"type":"Integer","value":2},"SYSFXUI_DONOTSHOW_SPEAKERFILLING":{"comment":"","exp":"0x40","file":"wmcodecdsp.h","line":3101,"type":"Integer","value":64},"SYSFXUI_DONOTSHOW_VIRTUALSURROUND":{"comment":"","exp":"0x20","file":"wmcodecdsp.h","line":3100,"type":"Integer","value":32},"SetInputType":{"comment":"","exp":"MFTSetInputType","file":"mftransform.h","line":213,"type":"Unknown","value":"MFTSetInputType"},"SetOutputBounds":{"comment":"","exp":"MFTSetOutputBounds","file":"mftransform.h","line":219,"type":"Unknown","value":"MFTSetOutputBounds"},"SetOutputType":{"comment":"","exp":"MFTSetOutputType","file":"mftransform.h","line":214,"type":"Unknown","value":"MFTSetOutputType"},"SliceHeaderSet_tag":{"comment":"","exp":"","file":"mfapi.h","line":989,"type":"Struct","value":"typedef struct SliceHeaderSet_tag {\\r\\nWORD dNumHeaders;                       \/\/ indicate the number of slice headers in the input sample\\r\\nSliceHeader rgstSliceheader[0];         \/\/ cNumHeaders slice header data\\r\\n} SliceHeaderSet;"},"SliceHeader_tag":{"comment":"","exp":"","file":"mfapi.h","line":981,"type":"Struct","value":"typedef struct SliceHeader_tag {\\r\\nWORD dSliceHeaderLen;                   \/\/ indicate the length of the following slice header in byte, it shall not be more than 1024\\r\\nBYTE SliceHeaderBytes[0];               \/\/ slice header data, the last byte might contain some bits not used, leave them random\\r\\n} SliceHeader;"},"TOC_ENTRY_MAX_TITLE_SIZE":{"comment":"","exp":"65535","file":"wmcodecdsp.h","line":3834,"type":"Integer","value":65535},"TOC_MAX_DESCRIPTION_SIZE":{"comment":"","exp":"65535","file":"wmcodecdsp.h","line":3831,"type":"Integer","value":65535},"TOC_POS_TYPE":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3854,"type":"Enum","value":"enum TOC_POS_TYPE\\r\\n    {\\r\\n        TOC_POS_INHEADER\\t= 0,\\r\\n        TOC_POS_TOPLEVELOBJECT\\t= ( TOC_POS_INHEADER + 1 ) \\r\\n    } ;"},"VIRTUALIZATION_MODE_KEY_GUID":{"comment":"","exp":"(MFPKEY_AUVRHP_ROOMMODEL.fmtid)","file":"wmcodecdsp.h","line":3106,"type":"Unknown","value":"(MFPKEY_AUVRHP_ROOMMODEL.fmtid)"},"WMAAECMA_E_NO_ACTIVE_RENDER_STREAM":{"comment":"","exp":"0x87CC000A","file":"wmcodecdsp.h","line":3734,"type":"Integer","value":2278293514},"WMT_PROP_DATATYPE":{"comment":"","exp":"","file":"wmcodecdsp.h","line":1369,"type":"Enum","value":"typedef\\r\\nenum WMT_PROP_DATATYPE\\r\\n    {\\r\\n        WMT_PROP_TYPE_DWORD\\t= 0,\\r\\n        WMT_PROP_TYPE_STRING\\t= 1,\\r\\n        WMT_PROP_TYPE_BINARY\\t= 2,\\r\\n        WMT_PROP_TYPE_BOOL\\t= 3,\\r\\n        WMT_PROP_TYPE_QWORD\\t= 4,\\r\\n        WMT_PROP_TYPE_WORD\\t= 5,\\r\\n        WMT_PROP_TYPE_GUID\\t= 6\\r\\n    } \\tWMT_PROP_DATATYPE;"},"WMV_DYNAMIC_FLAGS":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3655,"type":"Enum","value":"typedef\\r\\nenum WMV_DYNAMIC_FLAGS\\r\\n    {\\r\\n        WMV_DYNAMIC_BITRATE\\t= 0x1,\\r\\n        WMV_DYNAMIC_RESOLUTION\\t= 0x2,\\r\\n        WMV_DYNAMIC_COMPLEXITY\\t= 0x4\\r\\n    } \\tWMV_DYNAMIC_FLAGS;"},"WM_CODEC_ONEPASS_CBR":{"comment":"","exp":"1","file":"wmcodecdsp.h","line":1564,"type":"Integer","value":1},"WM_CODEC_ONEPASS_VBR":{"comment":"","exp":"2","file":"wmcodecdsp.h","line":1565,"type":"Integer","value":2},"WM_CODEC_TWOPASS_CBR":{"comment":"","exp":"4","file":"wmcodecdsp.h","line":1566,"type":"Integer","value":4},"WM_CODEC_TWOPASS_VBR_PEAKCONSTRAINED":{"comment":"","exp":"16","file":"wmcodecdsp.h","line":1568,"type":"Integer","value":16},"WM_CODEC_TWOPASS_VBR_UNCONSTRAINED":{"comment":"","exp":"8","file":"wmcodecdsp.h","line":1567,"type":"Integer","value":8},"_ASFFlatPicture":{"comment":"","exp":"","file":"mfidl.h","line":7590,"type":"Struct","value":"typedef struct _ASFFlatPicture\\r\\n{ \\r\\n    \/\/ \\r\\n    \/\/ Direct mapped fields \\r\\n    \/\/ \\r\\n    BYTE bPictureType; \\r\\n    DWORD dwDataLen; \\r\\n}   ASF_FLAT_PICTURE;"},"_ASFFlatSynchronisedLyrics":{"comment":"","exp":"","file":"mfidl.h","line":7601,"type":"Struct","value":"typedef struct _ASFFlatSynchronisedLyrics\\r\\n{ \\r\\n    \/\/ \\r\\n    \/\/ Direct mapped fields \\r\\n    \/\/ \\r\\n    BYTE bTimeStampFormat; \\r\\n    BYTE bContentType; \\r\\n    DWORD dwLyricsLen; \\r\\n}   ASF_FLAT_SYNCHRONISED_LYRICS;"},"_ASF_INDEX_DESCRIPTOR":{"comment":"","exp":"","file":"wmcontainer.h","line":1508,"type":"Struct","value":"typedef struct _ASF_INDEX_DESCRIPTOR\\r\\n    {\\r\\n    ASF_INDEX_IDENTIFIER Identifier;\\r\\n    WORD cPerEntryBytes;\\r\\n    WCHAR szDescription[ 32 ];\\r\\n    DWORD dwInterval;\\r\\n    } \\tASF_INDEX_DESCRIPTOR;"},"_ASF_INDEX_IDENTIFIER":{"comment":"","exp":"","file":"wmcontainer.h","line":1502,"type":"Struct","value":"typedef struct _ASF_INDEX_IDENTIFIER\\r\\n    {\\r\\n    GUID guidIndexType;\\r\\n    WORD wStreamNumber;\\r\\n    } \\tASF_INDEX_IDENTIFIER;"},"_COPP_ACP_Protection_Level":{"comment":"","exp":"","file":"dxva9typ.h","line":792,"type":"Enum","value":"typedef enum _COPP_ACP_Protection_Level {\\r\\n    COPP_ACP_Level0     = 0,\\r\\n    COPP_ACP_LevelMin   = COPP_ACP_Level0,\\r\\n    COPP_ACP_Level1     = 1,\\r\\n    COPP_ACP_Level2     = 2,\\r\\n    COPP_ACP_Level3     = 3,\\r\\n    COPP_ACP_LevelMax   = COPP_ACP_Level3,\\r\\n    COPP_ACP_ForceDWORD = 0x7fffffff\\r\\n} COPP_ACP_Protection_Level;"},"_COPP_BusType":{"comment":"","exp":"","file":"dxva9typ.h","line":972,"type":"Enum","value":"typedef enum _COPP_BusType {\\r\\n    COPP_BusType_Unknown    = 0,\\r\\n    COPP_BusType_PCI        = 1,\\r\\n    COPP_BusType_PCIX       = 2,\\r\\n    COPP_BusType_PCIExpress = 3,\\r\\n    COPP_BusType_AGP        = 4,\\r\\n    COPP_BusType_Integrated = 0x80000000, \/\/ can be combined with the other bus types\\r\\n    COPP_BusType_ForceDWORD = 0x7fffffff  \/* force 32-bit size enum *\/\\r\\n} COPP_BusType;"},"_COPP_CGMSA_Protection_Level":{"comment":"","exp":"","file":"dxva9typ.h","line":780,"type":"Enum","value":"typedef enum _COPP_CGMSA_Protection_Level {\\r\\n    COPP_CGMSA_Disabled = 0,\\r\\n    COPP_CGMSA_LevelMin = COPP_CGMSA_Disabled,\\r\\n    COPP_CGMSA_CopyFreely = 1,\\r\\n    COPP_CGMSA_CopyNoMore = 2,\\r\\n    COPP_CGMSA_CopyOneGeneration   = 3,\\r\\n    COPP_CGMSA_CopyNever = 4,\\r\\n    COPP_CGMSA_RedistributionControlRequired = 0x08,\\r\\n    COPP_CGMSA_LevelMax = (COPP_CGMSA_RedistributionControlRequired + COPP_CGMSA_CopyNever),\\r\\n    COPP_CGMSA_ForceDWORD = 0x7fffffff\\r\\n} COPP_CGMSA_Protection_Level;"},"_COPP_ConnectorType":{"comment":"","exp":"","file":"dxva9typ.h","line":939,"type":"Enum","value":"typedef enum _COPP_ConnectorType {\\r\\n    COPP_ConnectorType_Unknown = -1,\\r\\n    COPP_ConnectorType_VGA = 0,\\r\\n    COPP_ConnectorType_SVideo = 1,\\r\\n    COPP_ConnectorType_CompositeVideo = 2,\\r\\n    COPP_ConnectorType_ComponentVideo = 3,\\r\\n    COPP_ConnectorType_DVI = 4,\\r\\n    COPP_ConnectorType_HDMI = 5,\\r\\n    COPP_ConnectorType_LVDS = 6,\\r\\n    COPP_ConnectorType_TMDS = 7,\\r\\n    COPP_ConnectorType_D_JPN = 8,\\r\\n    COPP_ConnectorType_Internal = 0x80000000,   \/\/ can be combined with the other connector types\\r\\n    COPP_ConnectorType_ForceDWORD = 0x7fffffff  \/* force 32-bit size enum *\/\\r\\n} COPP_ConnectorType;"},"_COPP_HDCP_Protection_Level":{"comment":"","exp":"","file":"dxva9typ.h","line":772,"type":"Enum","value":"typedef enum _COPP_HDCP_Protection_Level {\\r\\n    COPP_HDCP_Level0    = 0,\\r\\n    COPP_HDCP_LevelMin  = COPP_HDCP_Level0,\\r\\n    COPP_HDCP_Level1    = 1,\\r\\n    COPP_HDCP_LevelMax  = COPP_HDCP_Level1,\\r\\n    COPP_HDCP_ForceDWORD = 0x7fffffff\\r\\n} COPP_HDCP_Protection_Level;"},"_COPP_ImageAspectRatio_EN300294":{"comment":"","exp":"","file":"dxva9typ.h","line":860,"type":"Enum","value":"typedef enum _COPP_ImageAspectRatio_EN300294 {\\r\\n    COPP_AspectRatio_EN300294_FullFormat4by3                = 0,\\r\\n    COPP_AspectRatio_EN300294_Box14by9Center                = 1,\\r\\n    COPP_AspectRatio_EN300294_Box14by9Top                   = 2,\\r\\n    COPP_AspectRatio_EN300294_Box16by9Center                = 3,\\r\\n    COPP_AspectRatio_EN300294_Box16by9Top                   = 4,\\r\\n    COPP_AspectRatio_EN300294_BoxGT16by9Center              = 5,\\r\\n    COPP_AspectRatio_EN300294_FullFormat4by3ProtectedCenter = 6,\\r\\n    COPP_AspectRatio_EN300294_FullFormat16by9Anamorphic     = 7,\\r\\n    COPP_AspectRatio_ForceDWORD                             = 0x7fffffff\\r\\n} COPP_ImageAspectRatio_EN300294;"},"_COPP_StatusFlags":{"comment":"","exp":"","file":"dxva9typ.h","line":889,"type":"Enum","value":"typedef enum _COPP_StatusFlags {\\r\\n    COPP_StatusNormal           = 0x00,\\r\\n    COPP_LinkLost               = 0x01,\\r\\n    COPP_RenegotiationRequired  = 0x02,\\r\\n    COPP_StatusFlagsReserved    = 0xFFFFFFFC\\r\\n} COPP_StatusFlags;"},"_COPP_StatusHDCPFlags":{"comment":"","exp":"","file":"dxva9typ.h","line":915,"type":"Enum","value":"typedef enum _COPP_StatusHDCPFlags {\\r\\n    COPP_HDCPRepeater       = 0x01,\\r\\n    COPP_HDCPFlagsReserved  = 0xFFFFFFFE\\r\\n} COPP_StatusHDCPFlags;"},"_COPP_TVProtectionStandard":{"comment":"","exp":"","file":"dxva9typ.h","line":836,"type":"Enum","value":"typedef enum _COPP_TVProtectionStandard {\\r\\n    COPP_ProtectionStandard_Unknown                         = 0x80000000,\\r\\n    COPP_ProtectionStandard_None                            = 0x00000000,\\r\\n    COPP_ProtectionStandard_IEC61880_525i                   = 0x00000001,\\r\\n    COPP_ProtectionStandard_IEC61880_2_525i                 = 0x00000002,\\r\\n    COPP_ProtectionStandard_IEC62375_625p                   = 0x00000004,\\r\\n    COPP_ProtectionStandard_EIA608B_525                     = 0x00000008,\\r\\n    COPP_ProtectionStandard_EN300294_625i                   = 0x00000010,\\r\\n    COPP_ProtectionStandard_CEA805A_TypeA_525p              = 0x00000020,\\r\\n    COPP_ProtectionStandard_CEA805A_TypeA_750p              = 0x00000040,\\r\\n    COPP_ProtectionStandard_CEA805A_TypeA_1125i             = 0x00000080,\\r\\n    COPP_ProtectionStandard_CEA805A_TypeB_525p              = 0x00000100,\\r\\n    COPP_ProtectionStandard_CEA805A_TypeB_750p              = 0x00000200,\\r\\n    COPP_ProtectionStandard_CEA805A_TypeB_1125i             = 0x00000400,\\r\\n    COPP_ProtectionStandard_ARIBTRB15_525i                  = 0x00000800,\\r\\n    COPP_ProtectionStandard_ARIBTRB15_525p                  = 0x00001000,\\r\\n    COPP_ProtectionStandard_ARIBTRB15_750p                  = 0x00002000,\\r\\n    COPP_ProtectionStandard_ARIBTRB15_1125i                 = 0x00004000,\\r\\n    COPP_ProtectionStandard_Mask                            = 0x80007FFF,\\r\\n    COPP_ProtectionStandard_Reserved                        = 0x7FFF8000\\r\\n} COPP_TVProtectionStandard;"},"_D3DFORMAT":{"comment":"","exp":"","file":"evr.h","line":151,"type":"Enum","value":"typedef\\r\\nenum _D3DFORMAT\\r\\n    {\\r\\n        D3DFMT_UNKNOWN\\t= 0,\\r\\n        D3DFMT_R8G8B8\\t= 20,\\r\\n        D3DFMT_A8R8G8B8\\t= 21,\\r\\n        D3DFMT_X8R8G8B8\\t= 22,\\r\\n        D3DFMT_R5G6B5\\t= 23,\\r\\n        D3DFMT_X1R5G5B5\\t= 24,\\r\\n        D3DFMT_A1R5G5B5\\t= 25,\\r\\n        D3DFMT_A4R4G4B4\\t= 26,\\r\\n        D3DFMT_R3G3B2\\t= 27,\\r\\n        D3DFMT_A8\\t= 28,\\r\\n        D3DFMT_A8R3G3B2\\t= 29,\\r\\n        D3DFMT_X4R4G4B4\\t= 30,\\r\\n        D3DFMT_A2B10G10R10\\t= 31,\\r\\n        D3DFMT_G16R16\\t= 34,\\r\\n        D3DFMT_A8P8\\t= 40,\\r\\n        D3DFMT_P8\\t= 41,\\r\\n        D3DFMT_L8\\t= 50,\\r\\n        D3DFMT_A8L8\\t= 51,\\r\\n        D3DFMT_A4L4\\t= 52,\\r\\n        D3DFMT_V8U8\\t= 60,\\r\\n        D3DFMT_L6V5U5\\t= 61,\\r\\n        D3DFMT_X8L8V8U8\\t= 62,\\r\\n        D3DFMT_Q8W8V8U8\\t= 63,\\r\\n        D3DFMT_V16U16\\t= 64,\\r\\n        D3DFMT_W11V11U10\\t= 65,\\r\\n        D3DFMT_A2W10V10U10\\t= 67,\\r\\n        D3DFMT_D16_LOCKABLE\\t= 70,\\r\\n        D3DFMT_D32\\t= 71,\\r\\n        D3DFMT_D15S1\\t= 73,\\r\\n        D3DFMT_D24S8\\t= 75,\\r\\n        D3DFMT_D16\\t= 80,\\r\\n        D3DFMT_D24X8\\t= 77,\\r\\n        D3DFMT_D24X4S4\\t= 79,\\r\\n        D3DFMT_VERTEXDATA\\t= 100,\\r\\n        D3DFMT_INDEX16\\t= 101,\\r\\n        D3DFMT_INDEX32\\t= 102,\\r\\n        D3DFMT_FORCE_DWORD\\t= 0x7fffffff\\r\\n    } \\tD3DFORMAT;"},"_DIRTYRECT_INFO":{"comment":"","exp":"","file":"mfapi.h","line":1191,"type":"Struct","value":"typedef struct _DIRTYRECT_INFO\\r\\n{\\r\\n    UINT        FrameNumber;\\r\\n    UINT        NumDirtyRects;\\r\\n    RECT        DirtyRects[1];\\r\\n} DIRTYRECT_INFO;"},"_DXVA2_AES_CTR_IV":{"comment":"","exp":"","file":"dxva2api.h","line":600,"type":"Struct","value":"typedef struct _DXVA2_AES_CTR_IV\\r\\n    {\\r\\n    UINT64 IV;\\r\\n    UINT64 Count;\\r\\n    } \\tDXVA2_AES_CTR_IV;"},"_DXVA2_AYUVSample16":{"comment":"","exp":"","file":"dxva2api.h","line":476,"type":"Struct","value":"typedef struct _DXVA2_AYUVSample16\\r\\n    {\\r\\n    USHORT Cr;\\r\\n    USHORT Cb;\\r\\n    USHORT Y;\\r\\n    USHORT Alpha;\\r\\n    } \\tDXVA2_AYUVSample16;"},"_DXVA2_AYUVSample8":{"comment":"","exp":"","file":"dxva2api.h","line":468,"type":"Struct","value":"typedef struct _DXVA2_AYUVSample8\\r\\n    {\\r\\n    UCHAR Cr;\\r\\n    UCHAR Cb;\\r\\n    UCHAR Y;\\r\\n    UCHAR Alpha;\\r\\n    } \\tDXVA2_AYUVSample8;"},"_DXVA2_ConfigPictureDecode":{"comment":"","exp":"","file":"dxva2api.h","line":561,"type":"Struct","value":"typedef struct _DXVA2_ConfigPictureDecode\\r\\n    {\\r\\n    GUID guidConfigBitstreamEncryption;\\r\\n    GUID guidConfigMBcontrolEncryption;\\r\\n    GUID guidConfigResidDiffEncryption;\\r\\n    UINT ConfigBitstreamRaw;\\r\\n    UINT ConfigMBcontrolRasterOrder;\\r\\n    UINT ConfigResidDiffHost;\\r\\n    UINT ConfigSpatialResid8;\\r\\n    UINT ConfigResid8Subtraction;\\r\\n    UINT ConfigSpatialHost8or9Clipping;\\r\\n    UINT ConfigSpatialResidInterleaved;\\r\\n    UINT ConfigIntraResidUnsigned;\\r\\n    UINT ConfigResidDiffAccelerator;\\r\\n    UINT ConfigHostInverseScan;\\r\\n    UINT ConfigSpecificIDCT;\\r\\n    UINT Config4GroupedCoefs;\\r\\n    USHORT ConfigMinRenderTargetBuffCount;\\r\\n    USHORT ConfigDecoderSpecific;\\r\\n    } \\tDXVA2_ConfigPictureDecode;"},"_DXVA2_DecodeBufferDesc":{"comment":"","exp":"","file":"dxva2api.h","line":582,"type":"Struct","value":"typedef struct _DXVA2_DecodeBufferDesc\\r\\n    {\\r\\n    DWORD CompressedBufferType;\\r\\n    UINT BufferIndex;\\r\\n    UINT DataOffset;\\r\\n    UINT DataSize;\\r\\n    UINT FirstMBaddress;\\r\\n    UINT NumMBsInBuffer;\\r\\n    UINT Width;\\r\\n    UINT Height;\\r\\n    UINT Stride;\\r\\n    UINT ReservedBits;\\r\\n    PVOID pvPVPState;\\r\\n    } \\tDXVA2_DecodeBufferDesc;"},"_DXVA2_DecodeExecuteParams":{"comment":"","exp":"","file":"dxva2api.h","line":635,"type":"Struct","value":"typedef struct _DXVA2_DecodeExecuteParams\\r\\n    {\\r\\n    UINT NumCompBuffers;\\r\\n    DXVA2_DecodeBufferDesc *pCompressedBuffers;\\r\\n    DXVA2_DecodeExtensionData *pExtensionData;\\r\\n    } \\tDXVA2_DecodeExecuteParams;"},"_DXVA2_DecodeExtensionData":{"comment":"","exp":"","file":"dxva2api.h","line":606,"type":"Struct","value":"typedef struct _DXVA2_DecodeExtensionData\\r\\n    {\\r\\n    UINT Function;\\r\\n    PVOID pPrivateInputData;\\r\\n    UINT PrivateInputDataSize;\\r\\n    PVOID pPrivateOutputData;\\r\\n    UINT PrivateOutputDataSize;\\r\\n    } \\tDXVA2_DecodeExtensionData;"},"_DXVA2_ExtendedFormat":{"comment":"","exp":"","file":"dxva2api.h","line":195,"type":"Struct","value":"typedef struct _DXVA2_ExtendedFormat\\r\\n    {\\r\\n    union \\r\\n        {\\r\\n        struct \\r\\n            {\\r\\n            UINT SampleFormat\\t: 8;\\r\\n            UINT VideoChromaSubsampling\\t: 4;\\r\\n            UINT NominalRange\\t: 3;\\r\\n            UINT VideoTransferMatrix\\t: 3;\\r\\n            UINT VideoLighting\\t: 4;\\r\\n            UINT VideoPrimaries\\t: 5;\\r\\n            UINT VideoTransferFunction\\t: 5;\\r\\n            } \\t;\\r\\n        UINT value;\\r\\n        } \\t;\\r\\n    } \\tDXVA2_ExtendedFormat;"},"_DXVA2_FilterValues":{"comment":"","exp":"","file":"dxva2api.h","line":517,"type":"Struct","value":"typedef struct _DXVA2_FilterValues\\r\\n    {\\r\\n    DXVA2_Fixed32 Level;\\r\\n    DXVA2_Fixed32 Threshold;\\r\\n    DXVA2_Fixed32 Radius;\\r\\n    } \\tDXVA2_FilterValues;"},"_DXVA2_Fixed32":{"comment":"","exp":"","file":"dxva2api.h","line":456,"type":"Struct","value":"typedef struct _DXVA2_Fixed32\\r\\n{\\r\\n    union {\\r\\n        struct {\\r\\n            USHORT  Fraction;\\r\\n            SHORT   Value;\\r\\n        };\\r\\n        LONG ll;\\r\\n    };\\r\\n} DXVA2_Fixed32;"},"_DXVA2_Frequency":{"comment":"","exp":"","file":"dxva2api.h","line":311,"type":"Struct","value":"typedef struct _DXVA2_Frequency\\r\\n    {\\r\\n    UINT Numerator;\\r\\n    UINT Denominator;\\r\\n    } \\tDXVA2_Frequency;"},"_DXVA2_NominalRange":{"comment":"","exp":"","file":"dxva2api.h","line":242,"type":"Enum","value":"typedef\\r\\nenum _DXVA2_NominalRange\\r\\n    {\\r\\n        DXVA2_NominalRangeMask\\t= 0x7,\\r\\n        DXVA2_NominalRange_Unknown\\t= 0,\\r\\n        DXVA2_NominalRange_Normal\\t= 1,\\r\\n        DXVA2_NominalRange_Wide\\t= 2,\\r\\n        DXVA2_NominalRange_0_255\\t= 1,\\r\\n        DXVA2_NominalRange_16_235\\t= 2,\\r\\n        DXVA2_NominalRange_48_208\\t= 3\\r\\n    } \\tDXVA2_NominalRange;"},"_DXVA2_ProcAmpValues":{"comment":"","exp":"","file":"dxva2api.h","line":509,"type":"Struct","value":"typedef struct _DXVA2_ProcAmpValues\\r\\n    {\\r\\n    DXVA2_Fixed32 Brightness;\\r\\n    DXVA2_Fixed32 Contrast;\\r\\n    DXVA2_Fixed32 Hue;\\r\\n    DXVA2_Fixed32 Saturation;\\r\\n    } \\tDXVA2_ProcAmpValues;"},"_DXVA2_SampleFormat":{"comment":"","exp":"","file":"dxva2api.h","line":214,"type":"Enum","value":"typedef\\r\\nenum _DXVA2_SampleFormat\\r\\n    {\\r\\n        DXVA2_SampleFormatMask\\t= 0xff,\\r\\n        DXVA2_SampleUnknown\\t= 0,\\r\\n        DXVA2_SampleProgressiveFrame\\t= 2,\\r\\n        DXVA2_SampleFieldInterleavedEvenFirst\\t= 3,\\r\\n        DXVA2_SampleFieldInterleavedOddFirst\\t= 4,\\r\\n        DXVA2_SampleFieldSingleEven\\t= 5,\\r\\n        DXVA2_SampleFieldSingleOdd\\t= 6,\\r\\n        DXVA2_SampleSubStream\\t= 7\\r\\n    } \\tDXVA2_SampleFormat;"},"_DXVA2_ValueRange":{"comment":"","exp":"","file":"dxva2api.h","line":501,"type":"Struct","value":"typedef struct _DXVA2_ValueRange\\r\\n    {\\r\\n    DXVA2_Fixed32 MinValue;\\r\\n    DXVA2_Fixed32 MaxValue;\\r\\n    DXVA2_Fixed32 DefaultValue;\\r\\n    DXVA2_Fixed32 StepSize;\\r\\n    } \\tDXVA2_ValueRange;"},"_DXVA2_VideoChromaSubSampling":{"comment":"","exp":"","file":"dxva2api.h","line":227,"type":"Enum","value":"typedef\\r\\nenum _DXVA2_VideoChromaSubSampling\\r\\n    {\\r\\n        DXVA2_VideoChromaSubsamplingMask\\t= 0xf,\\r\\n        DXVA2_VideoChromaSubsampling_Unknown\\t= 0,\\r\\n        DXVA2_VideoChromaSubsampling_ProgressiveChroma\\t= 0x8,\\r\\n        DXVA2_VideoChromaSubsampling_Horizontally_Cosited\\t= 0x4,\\r\\n        DXVA2_VideoChromaSubsampling_Vertically_Cosited\\t= 0x2,\\r\\n        DXVA2_VideoChromaSubsampling_Vertically_AlignedChromaPlanes\\t= 0x1,\\r\\n        DXVA2_VideoChromaSubsampling_MPEG2\\t= ( DXVA2_VideoChromaSubsampling_Horizontally_Cosited | DXVA2_VideoChromaSubsampling_Vertically_AlignedChromaPlanes ) ,\\r\\n        DXVA2_VideoChromaSubsampling_MPEG1\\t= DXVA2_VideoChromaSubsampling_Vertically_AlignedChromaPlanes,\\r\\n        DXVA2_VideoChromaSubsampling_DV_PAL\\t= ( DXVA2_VideoChromaSubsampling_Horizontally_Cosited | DXVA2_VideoChromaSubsampling_Vertically_Cosited ) ,\\r\\n        DXVA2_VideoChromaSubsampling_Cosited\\t= ( ( DXVA2_VideoChromaSubsampling_Horizontally_Cosited | DXVA2_VideoChromaSubsampling_Vertically_Cosited )  | DXVA2_VideoChromaSubsampling_Vertically_AlignedChromaPlanes ) \\r\\n    } \\tDXVA2_VideoChromaSubSampling;"},"_DXVA2_VideoDesc":{"comment":"","exp":"","file":"dxva2api.h","line":317,"type":"Struct","value":"typedef struct _DXVA2_VideoDesc\\r\\n    {\\r\\n    UINT SampleWidth;\\r\\n    UINT SampleHeight;\\r\\n    DXVA2_ExtendedFormat SampleFormat;\\r\\n    D3DFORMAT Format;\\r\\n    DXVA2_Frequency InputSampleFreq;\\r\\n    DXVA2_Frequency OutputFrameFreq;\\r\\n    UINT UABProtectionLevel;\\r\\n    UINT Reserved;\\r\\n    } \\tDXVA2_VideoDesc;"},"_DXVA2_VideoLighting":{"comment":"","exp":"","file":"dxva2api.h","line":264,"type":"Enum","value":"typedef\\r\\nenum _DXVA2_VideoLighting\\r\\n    {\\r\\n        DXVA2_VideoLightingMask\\t= 0xf,\\r\\n        DXVA2_VideoLighting_Unknown\\t= 0,\\r\\n        DXVA2_VideoLighting_bright\\t= 1,\\r\\n        DXVA2_VideoLighting_office\\t= 2,\\r\\n        DXVA2_VideoLighting_dim\\t= 3,\\r\\n        DXVA2_VideoLighting_dark\\t= 4\\r\\n    } \\tDXVA2_VideoLighting;"},"_DXVA2_VideoPrimaries":{"comment":"","exp":"","file":"dxva2api.h","line":275,"type":"Enum","value":"typedef\\r\\nenum _DXVA2_VideoPrimaries\\r\\n    {\\r\\n        DXVA2_VideoPrimariesMask\\t= 0x1f,\\r\\n        DXVA2_VideoPrimaries_Unknown\\t= 0,\\r\\n        DXVA2_VideoPrimaries_reserved\\t= 1,\\r\\n        DXVA2_VideoPrimaries_BT709\\t= 2,\\r\\n        DXVA2_VideoPrimaries_BT470_2_SysM\\t= 3,\\r\\n        DXVA2_VideoPrimaries_BT470_2_SysBG\\t= 4,\\r\\n        DXVA2_VideoPrimaries_SMPTE170M\\t= 5,\\r\\n        DXVA2_VideoPrimaries_SMPTE240M\\t= 6,\\r\\n        DXVA2_VideoPrimaries_EBU3213\\t= 7,\\r\\n        DXVA2_VideoPrimaries_SMPTE_C\\t= 8\\r\\n    } \\tDXVA2_VideoPrimaries;"},"_DXVA2_VideoProcessBltParams":{"comment":"","exp":"","file":"dxva2api.h","line":524,"type":"Struct","value":"typedef struct _DXVA2_VideoProcessBltParams\\r\\n    {\\r\\n    REFERENCE_TIME TargetFrame;\\r\\n    RECT TargetRect;\\r\\n    SIZE ConstrictionSize;\\r\\n    UINT StreamingFlags;\\r\\n    DXVA2_AYUVSample16 BackgroundColor;\\r\\n    DXVA2_ExtendedFormat DestFormat;\\r\\n    DXVA2_ProcAmpValues ProcAmpValues;\\r\\n    DXVA2_Fixed32 Alpha;\\r\\n    DXVA2_FilterValues NoiseFilterLuma;\\r\\n    DXVA2_FilterValues NoiseFilterChroma;\\r\\n    DXVA2_FilterValues DetailFilterLuma;\\r\\n    DXVA2_FilterValues DetailFilterChroma;\\r\\n    DWORD DestData;\\r\\n    } \\tDXVA2_VideoProcessBltParams;"},"_DXVA2_VideoProcessorCaps":{"comment":"","exp":"","file":"dxva2api.h","line":436,"type":"Struct","value":"typedef struct _DXVA2_VideoProcessorCaps\\r\\n    {\\r\\n    UINT DeviceCaps;\\r\\n    D3DPOOL InputPool;\\r\\n    UINT NumForwardRefSamples;\\r\\n    UINT NumBackwardRefSamples;\\r\\n    UINT Reserved;\\r\\n    UINT DeinterlaceTechnology;\\r\\n    UINT ProcAmpControlCaps;\\r\\n    UINT VideoProcessorOperations;\\r\\n    UINT NoiseFilterTechnology;\\r\\n    UINT DetailFilterTechnology;\\r\\n    } \\tDXVA2_VideoProcessorCaps;"},"_DXVA2_VideoSample":{"comment":"","exp":"","file":"dxva2api.h","line":487,"type":"Struct","value":"typedef struct _DXVA2_VideoSample\\r\\n    {\\r\\n    REFERENCE_TIME Start;\\r\\n    REFERENCE_TIME End;\\r\\n    DXVA2_ExtendedFormat SampleFormat;\\r\\n    IDirect3DSurface9 *SrcSurface;\\r\\n    RECT SrcRect;\\r\\n    RECT DstRect;\\r\\n    DXVA2_AYUVSample8 Pal[ 16 ];\\r\\n    DXVA2_Fixed32 PlanarAlpha;\\r\\n    DWORD SampleData;\\r\\n    } \\tDXVA2_VideoSample;"},"_DXVA2_VideoTransferFunction":{"comment":"","exp":"","file":"dxva2api.h","line":290,"type":"Enum","value":"typedef\\r\\nenum _DXVA2_VideoTransferFunction\\r\\n    {\\r\\n        DXVA2_VideoTransFuncMask\\t= 0x1f,\\r\\n        DXVA2_VideoTransFunc_Unknown\\t= 0,\\r\\n        DXVA2_VideoTransFunc_10\\t= 1,\\r\\n        DXVA2_VideoTransFunc_18\\t= 2,\\r\\n        DXVA2_VideoTransFunc_20\\t= 3,\\r\\n        DXVA2_VideoTransFunc_22\\t= 4,\\r\\n        DXVA2_VideoTransFunc_709\\t= 5,\\r\\n        DXVA2_VideoTransFunc_240M\\t= 6,\\r\\n        DXVA2_VideoTransFunc_sRGB\\t= 7,\\r\\n        DXVA2_VideoTransFunc_28\\t= 8\\r\\n    } \\tDXVA2_VideoTransferFunction;"},"_DXVA2_VideoTransferMatrix":{"comment":"","exp":"","file":"dxva2api.h","line":254,"type":"Enum","value":"typedef\\r\\nenum _DXVA2_VideoTransferMatrix\\r\\n    {\\r\\n        DXVA2_VideoTransferMatrixMask\\t= 0x7,\\r\\n        DXVA2_VideoTransferMatrix_Unknown\\t= 0,\\r\\n        DXVA2_VideoTransferMatrix_BT709\\t= 1,\\r\\n        DXVA2_VideoTransferMatrix_BT601\\t= 2,\\r\\n        DXVA2_VideoTransferMatrix_SMPTE240M\\t= 3\\r\\n    } \\tDXVA2_VideoTransferMatrix;"},"_DXVABufferInfo":{"comment":"","exp":"","file":"dxva9typ.h","line":226,"type":"Struct","value":"typedef struct _DXVABufferInfo\\r\\n{\\r\\n    VOID*               pCompSurface;   \/* Pointer to buffer containing compressed data *\/\\r\\n    DWORD               DataOffset;     \/* Offset of relevant data from the beginning of buffer *\/\\r\\n    DWORD               DataSize;       \/* Size of relevant data *\/\\r\\n} DXVABufferInfo;"},"_DXVACompBufferInfo":{"comment":"","exp":"","file":"dxva9typ.h","line":215,"type":"Struct","value":"typedef struct _DXVACompBufferInfo\\r\\n{\\r\\n    DWORD       NumCompBuffers;     \/* Number of buffers reqd for compressed data *\/\\r\\n    DWORD       WidthToCreate;      \/* Width of surface to create *\/\\r\\n    DWORD       HeightToCreate;     \/* Height of surface to create *\/\\r\\n    DWORD       BytesToAllocate;    \/* Total number of bytes used by each surface *\/\\r\\n    DWORD       Usage;              \/* Usage used to create the compressed buffer *\/\\r\\n    D3DPOOL     Pool;               \/* Pool where the compressed buffer belongs *\/\\r\\n    D3DFORMAT   Format;             \/* Format used to create the compressed buffer *\/\\r\\n} DXVACompBufferInfo;"},"_DXVAHDETW_CREATEVIDEOPROCESSOR":{"comment":"","exp":"","file":"dxvahd.h","line":1047,"type":"Struct","value":"typedef struct _DXVAHDETW_CREATEVIDEOPROCESSOR\\r\\n    {\\r\\n    ULONGLONG pObject;\\r\\n    ULONGLONG pD3D9Ex;\\r\\n    GUID VPGuid;\\r\\n    } \\tDXVAHDETW_CREATEVIDEOPROCESSOR;"},"_DXVAHDETW_DESTROYVIDEOPROCESSOR":{"comment":"","exp":"","file":"dxvahd.h","line":1099,"type":"Struct","value":"typedef struct _DXVAHDETW_DESTROYVIDEOPROCESSOR\\r\\n    {\\r\\n    ULONGLONG pObject;\\r\\n    } \\tDXVAHDETW_DESTROYVIDEOPROCESSOR;"},"_DXVAHDETW_VIDEOPROCESSBLTHD":{"comment":"","exp":"","file":"dxvahd.h","line":1071,"type":"Struct","value":"typedef struct _DXVAHDETW_VIDEOPROCESSBLTHD\\r\\n    {\\r\\n    ULONGLONG pObject;\\r\\n    ULONGLONG pOutputSurface;\\r\\n    RECT TargetRect;\\r\\n    D3DFORMAT OutputFormat;\\r\\n    UINT ColorSpace;\\r\\n    UINT OutputFrame;\\r\\n    UINT StreamCount;\\r\\n    BOOL Enter;\\r\\n    } \\tDXVAHDETW_VIDEOPROCESSBLTHD;"},"_DXVAHDETW_VIDEOPROCESSBLTHD_STREAM":{"comment":"","exp":"","file":"dxvahd.h","line":1083,"type":"Struct","value":"typedef struct _DXVAHDETW_VIDEOPROCESSBLTHD_STREAM\\r\\n    {\\r\\n    ULONGLONG pObject;\\r\\n    ULONGLONG pInputSurface;\\r\\n    RECT SourceRect;\\r\\n    RECT DestinationRect;\\r\\n    D3DFORMAT InputFormat;\\r\\n    DXVAHD_FRAME_FORMAT FrameFormat;\\r\\n    UINT ColorSpace;\\r\\n    UINT StreamNumber;\\r\\n    UINT OutputIndex;\\r\\n    UINT InputFrameOrField;\\r\\n    UINT PastFrames;\\r\\n    UINT FutureFrames;\\r\\n    } \\tDXVAHDETW_VIDEOPROCESSBLTHD_STREAM;"},"_DXVAHDETW_VIDEOPROCESSBLTSTATE":{"comment":"","exp":"","file":"dxvahd.h","line":1054,"type":"Struct","value":"typedef struct _DXVAHDETW_VIDEOPROCESSBLTSTATE\\r\\n    {\\r\\n    ULONGLONG pObject;\\r\\n    DXVAHD_BLT_STATE State;\\r\\n    UINT DataSize;\\r\\n    BOOL SetState;\\r\\n    } \\tDXVAHDETW_VIDEOPROCESSBLTSTATE;"},"_DXVAHDETW_VIDEOPROCESSSTREAMSTATE":{"comment":"","exp":"","file":"dxvahd.h","line":1062,"type":"Struct","value":"typedef struct _DXVAHDETW_VIDEOPROCESSSTREAMSTATE\\r\\n    {\\r\\n    ULONGLONG pObject;\\r\\n    UINT StreamNumber;\\r\\n    DXVAHD_STREAM_STATE State;\\r\\n    UINT DataSize;\\r\\n    BOOL SetState;\\r\\n    } \\tDXVAHDETW_VIDEOPROCESSSTREAMSTATE;"},"_DXVAHDSW_CALLBACKS":{"comment":"","exp":"","file":"dxvahd.h","line":1009,"type":"Struct","value":"typedef struct _DXVAHDSW_CALLBACKS\\r\\n{\\r\\n    PDXVAHDSW_CreateDevice                      CreateDevice;\\r\\n    PDXVAHDSW_ProposeVideoPrivateFormat         ProposeVideoPrivateFormat;\\r\\n    PDXVAHDSW_GetVideoProcessorDeviceCaps       GetVideoProcessorDeviceCaps;\\r\\n    PDXVAHDSW_GetVideoProcessorOutputFormats    GetVideoProcessorOutputFormats;\\r\\n    PDXVAHDSW_GetVideoProcessorInputFormats     GetVideoProcessorInputFormats;\\r\\n    PDXVAHDSW_GetVideoProcessorCaps             GetVideoProcessorCaps;\\r\\n    PDXVAHDSW_GetVideoProcessorCustomRates      GetVideoProcessorCustomRates;\\r\\n    PDXVAHDSW_GetVideoProcessorFilterRange      GetVideoProcessorFilterRange;\\r\\n    PDXVAHDSW_DestroyDevice                     DestroyDevice;\\r\\n    PDXVAHDSW_CreateVideoProcessor              CreateVideoProcessor;\\r\\n    PDXVAHDSW_SetVideoProcessBltState           SetVideoProcessBltState;\\r\\n    PDXVAHDSW_GetVideoProcessBltStatePrivate    GetVideoProcessBltStatePrivate;\\r\\n    PDXVAHDSW_SetVideoProcessStreamState        SetVideoProcessStreamState;\\r\\n    PDXVAHDSW_GetVideoProcessStreamStatePrivate GetVideoProcessStreamStatePrivate;\\r\\n    PDXVAHDSW_VideoProcessBltHD                 VideoProcessBltHD;\\r\\n    PDXVAHDSW_DestroyVideoProcessor             DestroyVideoProcessor;\\r\\n} DXVAHDSW_CALLBACKS;"},"_DXVAHD_ALPHA_FILL_MODE":{"comment":"","exp":"","file":"dxvahd.h","line":213,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_ALPHA_FILL_MODE\\r\\n    {\\r\\n        DXVAHD_ALPHA_FILL_MODE_OPAQUE\\t= 0,\\r\\n        DXVAHD_ALPHA_FILL_MODE_BACKGROUND\\t= 1,\\r\\n        DXVAHD_ALPHA_FILL_MODE_DESTINATION\\t= 2,\\r\\n        DXVAHD_ALPHA_FILL_MODE_SOURCE_STREAM\\t= 3\\r\\n    } \\tDXVAHD_ALPHA_FILL_MODE;"},"_DXVAHD_BLT_STATE":{"comment":"","exp":"","file":"dxvahd.h","line":202,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_BLT_STATE\\r\\n    {\\r\\n        DXVAHD_BLT_STATE_TARGET_RECT\\t= 0,\\r\\n        DXVAHD_BLT_STATE_BACKGROUND_COLOR\\t= 1,\\r\\n        DXVAHD_BLT_STATE_OUTPUT_COLOR_SPACE\\t= 2,\\r\\n        DXVAHD_BLT_STATE_ALPHA_FILL\\t= 3,\\r\\n        DXVAHD_BLT_STATE_CONSTRICTION\\t= 4,\\r\\n        DXVAHD_BLT_STATE_PRIVATE\\t= 1000\\r\\n    } \\tDXVAHD_BLT_STATE;"},"_DXVAHD_BLT_STATE_ALPHA_FILL_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":361,"type":"Struct","value":"typedef struct _DXVAHD_BLT_STATE_ALPHA_FILL_DATA\\r\\n    {\\r\\n    DXVAHD_ALPHA_FILL_MODE Mode;\\r\\n    UINT StreamNumber;\\r\\n    } \\tDXVAHD_BLT_STATE_ALPHA_FILL_DATA;"},"_DXVAHD_BLT_STATE_BACKGROUND_COLOR_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":339,"type":"Struct","value":"typedef struct _DXVAHD_BLT_STATE_BACKGROUND_COLOR_DATA\\r\\n    {\\r\\n    BOOL YCbCr;\\r\\n    DXVAHD_COLOR BackgroundColor;\\r\\n    } \\tDXVAHD_BLT_STATE_BACKGROUND_COLOR_DATA;"},"_DXVAHD_BLT_STATE_CONSTRICTION_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":367,"type":"Struct","value":"typedef struct _DXVAHD_BLT_STATE_CONSTRICTION_DATA\\r\\n    {\\r\\n    BOOL Enable;\\r\\n    SIZE Size;\\r\\n    } \\tDXVAHD_BLT_STATE_CONSTRICTION_DATA;"},"_DXVAHD_BLT_STATE_OUTPUT_COLOR_SPACE_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":345,"type":"Struct","value":"typedef struct _DXVAHD_BLT_STATE_OUTPUT_COLOR_SPACE_DATA\\r\\n    {\\r\\n    union \\r\\n        {\\r\\n        struct \\r\\n            {\\r\\n            UINT Usage\\t: 1;\\r\\n            UINT RGB_Range\\t: 1;\\r\\n            UINT YCbCr_Matrix\\t: 1;\\r\\n            UINT YCbCr_xvYCC\\t: 1;\\r\\n            UINT Reserved\\t: 28;\\r\\n            } \\t;\\r\\n        UINT Value;\\r\\n        } \\t;\\r\\n    } \\tDXVAHD_BLT_STATE_OUTPUT_COLOR_SPACE_DATA;"},"_DXVAHD_BLT_STATE_PRIVATE_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":373,"type":"Struct","value":"typedef struct _DXVAHD_BLT_STATE_PRIVATE_DATA\\r\\n    {\\r\\n    GUID Guid;\\r\\n    UINT DataSize;\\r\\n    void *pData;\\r\\n    } \\tDXVAHD_BLT_STATE_PRIVATE_DATA;"},"_DXVAHD_BLT_STATE_TARGET_RECT_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":333,"type":"Struct","value":"typedef struct _DXVAHD_BLT_STATE_TARGET_RECT_DATA\\r\\n    {\\r\\n    BOOL Enable;\\r\\n    RECT TargetRect;\\r\\n    } \\tDXVAHD_BLT_STATE_TARGET_RECT_DATA;"},"_DXVAHD_COLOR_RGBA":{"comment":"","exp":"","file":"dxvahd.h","line":259,"type":"Struct","value":"typedef struct _DXVAHD_COLOR_RGBA\\r\\n    {\\r\\n    FLOAT R;\\r\\n    FLOAT G;\\r\\n    FLOAT B;\\r\\n    FLOAT A;\\r\\n    } \\tDXVAHD_COLOR_RGBA;"},"_DXVAHD_COLOR_YCbCrA":{"comment":"","exp":"","file":"dxvahd.h","line":267,"type":"Struct","value":"typedef struct _DXVAHD_COLOR_YCbCrA\\r\\n    {\\r\\n    FLOAT Y;\\r\\n    FLOAT Cb;\\r\\n    FLOAT Cr;\\r\\n    FLOAT A;\\r\\n    } \\tDXVAHD_COLOR_YCbCrA;"},"_DXVAHD_CONTENT_DESC":{"comment":"","exp":"","file":"dxvahd.h","line":281,"type":"Struct","value":"typedef struct _DXVAHD_CONTENT_DESC\\r\\n    {\\r\\n    DXVAHD_FRAME_FORMAT InputFrameFormat;\\r\\n    DXVAHD_RATIONAL InputFrameRate;\\r\\n    UINT InputWidth;\\r\\n    UINT InputHeight;\\r\\n    DXVAHD_RATIONAL OutputFrameRate;\\r\\n    UINT OutputWidth;\\r\\n    UINT OutputHeight;\\r\\n    } \\tDXVAHD_CONTENT_DESC;"},"_DXVAHD_CUSTOM_RATE_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":317,"type":"Struct","value":"typedef struct _DXVAHD_CUSTOM_RATE_DATA\\r\\n    {\\r\\n    DXVAHD_RATIONAL CustomRate;\\r\\n    UINT OutputFrames;\\r\\n    BOOL InputInterlaced;\\r\\n    UINT InputFramesOrFields;\\r\\n    } \\tDXVAHD_CUSTOM_RATE_DATA;"},"_DXVAHD_DEVICE_CAPS":{"comment":"","exp":"","file":"dxvahd.h","line":125,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_DEVICE_CAPS\\r\\n    {\\r\\n        DXVAHD_DEVICE_CAPS_LINEAR_SPACE\\t= 0x1,\\r\\n        DXVAHD_DEVICE_CAPS_xvYCC\\t= 0x2,\\r\\n        DXVAHD_DEVICE_CAPS_RGB_RANGE_CONVERSION\\t= 0x4,\\r\\n        DXVAHD_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION\\t= 0x8\\r\\n    } \\tDXVAHD_DEVICE_CAPS;"},"_DXVAHD_DEVICE_TYPE":{"comment":"","exp":"","file":"dxvahd.h","line":116,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_DEVICE_TYPE\\r\\n    {\\r\\n        DXVAHD_DEVICE_TYPE_HARDWARE\\t= 0,\\r\\n        DXVAHD_DEVICE_TYPE_SOFTWARE\\t= 1,\\r\\n        DXVAHD_DEVICE_TYPE_REFERENCE\\t= 2,\\r\\n        DXVAHD_DEVICE_TYPE_OTHER\\t= 3\\r\\n    } \\tDXVAHD_DEVICE_TYPE;"},"_DXVAHD_DEVICE_USAGE":{"comment":"","exp":"","file":"dxvahd.h","line":100,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_DEVICE_USAGE\\r\\n    {\\r\\n        DXVAHD_DEVICE_USAGE_PLAYBACK_NORMAL\\t= 0,\\r\\n        DXVAHD_DEVICE_USAGE_OPTIMAL_SPEED\\t= 1,\\r\\n        DXVAHD_DEVICE_USAGE_OPTIMAL_QUALITY\\t= 2\\r\\n    } \\tDXVAHD_DEVICE_USAGE;"},"_DXVAHD_FEATURE_CAPS":{"comment":"","exp":"","file":"dxvahd.h","line":134,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_FEATURE_CAPS\\r\\n    {\\r\\n        DXVAHD_FEATURE_CAPS_ALPHA_FILL\\t= 0x1,\\r\\n        DXVAHD_FEATURE_CAPS_CONSTRICTION\\t= 0x2,\\r\\n        DXVAHD_FEATURE_CAPS_LUMA_KEY\\t= 0x4,\\r\\n        DXVAHD_FEATURE_CAPS_ALPHA_PALETTE\\t= 0x8\\r\\n    } \\tDXVAHD_FEATURE_CAPS;"},"_DXVAHD_FILTER":{"comment":"","exp":"","file":"dxvahd.h","line":190,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_FILTER\\r\\n    {\\r\\n        DXVAHD_FILTER_BRIGHTNESS\\t= 0,\\r\\n        DXVAHD_FILTER_CONTRAST\\t= 1,\\r\\n        DXVAHD_FILTER_HUE\\t= 2,\\r\\n        DXVAHD_FILTER_SATURATION\\t= 3,\\r\\n        DXVAHD_FILTER_NOISE_REDUCTION\\t= 4,\\r\\n        DXVAHD_FILTER_EDGE_ENHANCEMENT\\t= 5,\\r\\n        DXVAHD_FILTER_ANAMORPHIC_SCALING\\t= 6\\r\\n    } \\tDXVAHD_FILTER;"},"_DXVAHD_FILTER_CAPS":{"comment":"","exp":"","file":"dxvahd.h","line":143,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_FILTER_CAPS\\r\\n    {\\r\\n        DXVAHD_FILTER_CAPS_BRIGHTNESS\\t= 0x1,\\r\\n        DXVAHD_FILTER_CAPS_CONTRAST\\t= 0x2,\\r\\n        DXVAHD_FILTER_CAPS_HUE\\t= 0x4,\\r\\n        DXVAHD_FILTER_CAPS_SATURATION\\t= 0x8,\\r\\n        DXVAHD_FILTER_CAPS_NOISE_REDUCTION\\t= 0x10,\\r\\n        DXVAHD_FILTER_CAPS_EDGE_ENHANCEMENT\\t= 0x20,\\r\\n        DXVAHD_FILTER_CAPS_ANAMORPHIC_SCALING\\t= 0x40\\r\\n    } \\tDXVAHD_FILTER_CAPS;"},"_DXVAHD_FILTER_RANGE_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":325,"type":"Struct","value":"typedef struct _DXVAHD_FILTER_RANGE_DATA\\r\\n    {\\r\\n    INT Minimum;\\r\\n    INT Maximum;\\r\\n    INT Default;\\r\\n    FLOAT Multiplier;\\r\\n    } \\tDXVAHD_FILTER_RANGE_DATA;"},"_DXVAHD_FRAME_FORMAT":{"comment":"","exp":"","file":"dxvahd.h","line":92,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_FRAME_FORMAT\\r\\n    {\\r\\n        DXVAHD_FRAME_FORMAT_PROGRESSIVE\\t= 0,\\r\\n        DXVAHD_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST\\t= 1,\\r\\n        DXVAHD_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST\\t= 2\\r\\n    } \\tDXVAHD_FRAME_FORMAT;"},"_DXVAHD_INPUT_FORMAT_CAPS":{"comment":"","exp":"","file":"dxvahd.h","line":155,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_INPUT_FORMAT_CAPS\\r\\n    {\\r\\n        DXVAHD_INPUT_FORMAT_CAPS_RGB_INTERLACED\\t= 0x1,\\r\\n        DXVAHD_INPUT_FORMAT_CAPS_RGB_PROCAMP\\t= 0x2,\\r\\n        DXVAHD_INPUT_FORMAT_CAPS_RGB_LUMA_KEY\\t= 0x4,\\r\\n        DXVAHD_INPUT_FORMAT_CAPS_PALETTE_INTERLACED\\t= 0x8\\r\\n    } \\tDXVAHD_INPUT_FORMAT_CAPS;"},"_DXVAHD_ITELECINE_CAPS":{"comment":"","exp":"","file":"dxvahd.h","line":175,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_ITELECINE_CAPS\\r\\n    {\\r\\n        DXVAHD_ITELECINE_CAPS_32\\t= 0x1,\\r\\n        DXVAHD_ITELECINE_CAPS_22\\t= 0x2,\\r\\n        DXVAHD_ITELECINE_CAPS_2224\\t= 0x4,\\r\\n        DXVAHD_ITELECINE_CAPS_2332\\t= 0x8,\\r\\n        DXVAHD_ITELECINE_CAPS_32322\\t= 0x10,\\r\\n        DXVAHD_ITELECINE_CAPS_55\\t= 0x20,\\r\\n        DXVAHD_ITELECINE_CAPS_64\\t= 0x40,\\r\\n        DXVAHD_ITELECINE_CAPS_87\\t= 0x80,\\r\\n        DXVAHD_ITELECINE_CAPS_222222222223\\t= 0x100,\\r\\n        DXVAHD_ITELECINE_CAPS_OTHER\\t= 0x80000000\\r\\n    } \\tDXVAHD_ITELECINE_CAPS;"},"_DXVAHD_OUTPUT_RATE":{"comment":"","exp":"","file":"dxvahd.h","line":245,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_OUTPUT_RATE\\r\\n    {\\r\\n        DXVAHD_OUTPUT_RATE_NORMAL\\t= 0,\\r\\n        DXVAHD_OUTPUT_RATE_HALF\\t= 1,\\r\\n        DXVAHD_OUTPUT_RATE_CUSTOM\\t= 2\\r\\n    } \\tDXVAHD_OUTPUT_RATE;"},"_DXVAHD_PROCESSOR_CAPS":{"comment":"","exp":"","file":"dxvahd.h","line":164,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_PROCESSOR_CAPS\\r\\n    {\\r\\n        DXVAHD_PROCESSOR_CAPS_DEINTERLACE_BLEND\\t= 0x1,\\r\\n        DXVAHD_PROCESSOR_CAPS_DEINTERLACE_BOB\\t= 0x2,\\r\\n        DXVAHD_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE\\t= 0x4,\\r\\n        DXVAHD_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION\\t= 0x8,\\r\\n        DXVAHD_PROCESSOR_CAPS_INVERSE_TELECINE\\t= 0x10,\\r\\n        DXVAHD_PROCESSOR_CAPS_FRAME_RATE_CONVERSION\\t= 0x20\\r\\n    } \\tDXVAHD_PROCESSOR_CAPS;"},"_DXVAHD_RATIONAL":{"comment":"","exp":"","file":"dxvahd.h","line":253,"type":"Struct","value":"typedef struct _DXVAHD_RATIONAL\\r\\n    {\\r\\n    UINT Numerator;\\r\\n    UINT Denominator;\\r\\n    } \\tDXVAHD_RATIONAL;"},"_DXVAHD_STREAM_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":464,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_DATA\\r\\n    {\\r\\n    BOOL Enable;\\r\\n    UINT OutputIndex;\\r\\n    UINT InputFrameOrField;\\r\\n    UINT PastFrames;\\r\\n    UINT FutureFrames;\\r\\n    IDirect3DSurface9 **ppPastSurfaces;\\r\\n    IDirect3DSurface9 *pInputSurface;\\r\\n    IDirect3DSurface9 **ppFutureSurfaces;\\r\\n    } \\tDXVAHD_STREAM_DATA;"},"_DXVAHD_STREAM_STATE":{"comment":"","exp":"","file":"dxvahd.h","line":222,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_STREAM_STATE\\r\\n    {\\r\\n        DXVAHD_STREAM_STATE_D3DFORMAT\\t= 0,\\r\\n        DXVAHD_STREAM_STATE_FRAME_FORMAT\\t= 1,\\r\\n        DXVAHD_STREAM_STATE_INPUT_COLOR_SPACE\\t= 2,\\r\\n        DXVAHD_STREAM_STATE_OUTPUT_RATE\\t= 3,\\r\\n        DXVAHD_STREAM_STATE_SOURCE_RECT\\t= 4,\\r\\n        DXVAHD_STREAM_STATE_DESTINATION_RECT\\t= 5,\\r\\n        DXVAHD_STREAM_STATE_ALPHA\\t= 6,\\r\\n        DXVAHD_STREAM_STATE_PALETTE\\t= 7,\\r\\n        DXVAHD_STREAM_STATE_LUMA_KEY\\t= 8,\\r\\n        DXVAHD_STREAM_STATE_ASPECT_RATIO\\t= 9,\\r\\n        DXVAHD_STREAM_STATE_FILTER_BRIGHTNESS\\t= 100,\\r\\n        DXVAHD_STREAM_STATE_FILTER_CONTRAST\\t= 101,\\r\\n        DXVAHD_STREAM_STATE_FILTER_HUE\\t= 102,\\r\\n        DXVAHD_STREAM_STATE_FILTER_SATURATION\\t= 103,\\r\\n        DXVAHD_STREAM_STATE_FILTER_NOISE_REDUCTION\\t= 104,\\r\\n        DXVAHD_STREAM_STATE_FILTER_EDGE_ENHANCEMENT\\t= 105,\\r\\n        DXVAHD_STREAM_STATE_FILTER_ANAMORPHIC_SCALING\\t= 106,\\r\\n        DXVAHD_STREAM_STATE_PRIVATE\\t= 1000\\r\\n    } \\tDXVAHD_STREAM_STATE;"},"_DXVAHD_STREAM_STATE_ALPHA_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":425,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_ALPHA_DATA\\r\\n    {\\r\\n    BOOL Enable;\\r\\n    FLOAT Alpha;\\r\\n    } \\tDXVAHD_STREAM_STATE_ALPHA_DATA;"},"_DXVAHD_STREAM_STATE_ASPECT_RATIO_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":444,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_ASPECT_RATIO_DATA\\r\\n    {\\r\\n    BOOL Enable;\\r\\n    DXVAHD_RATIONAL SourceAspectRatio;\\r\\n    DXVAHD_RATIONAL DestinationAspectRatio;\\r\\n    } \\tDXVAHD_STREAM_STATE_ASPECT_RATIO_DATA;"},"_DXVAHD_STREAM_STATE_D3DFORMAT_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":380,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_D3DFORMAT_DATA\\r\\n    {\\r\\n    D3DFORMAT Format;\\r\\n    } \\tDXVAHD_STREAM_STATE_D3DFORMAT_DATA;"},"_DXVAHD_STREAM_STATE_DESTINATION_RECT_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":419,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_DESTINATION_RECT_DATA\\r\\n    {\\r\\n    BOOL Enable;\\r\\n    RECT DestinationRect;\\r\\n    } \\tDXVAHD_STREAM_STATE_DESTINATION_RECT_DATA;"},"_DXVAHD_STREAM_STATE_FILTER_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":451,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_FILTER_DATA\\r\\n    {\\r\\n    BOOL Enable;\\r\\n    INT Level;\\r\\n    } \\tDXVAHD_STREAM_STATE_FILTER_DATA;"},"_DXVAHD_STREAM_STATE_FRAME_FORMAT_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":385,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_FRAME_FORMAT_DATA\\r\\n    {\\r\\n    DXVAHD_FRAME_FORMAT FrameFormat;\\r\\n    } \\tDXVAHD_STREAM_STATE_FRAME_FORMAT_DATA;"},"_DXVAHD_STREAM_STATE_INPUT_COLOR_SPACE_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":390,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_INPUT_COLOR_SPACE_DATA\\r\\n    {\\r\\n    union \\r\\n        {\\r\\n        struct \\r\\n            {\\r\\n            UINT Type\\t: 1;\\r\\n            UINT RGB_Range\\t: 1;\\r\\n            UINT YCbCr_Matrix\\t: 1;\\r\\n            UINT YCbCr_xvYCC\\t: 1;\\r\\n            UINT Reserved\\t: 28;\\r\\n            } \\t;\\r\\n        UINT Value;\\r\\n        } \\t;\\r\\n    } \\tDXVAHD_STREAM_STATE_INPUT_COLOR_SPACE_DATA;"},"_DXVAHD_STREAM_STATE_LUMA_KEY_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":437,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_LUMA_KEY_DATA\\r\\n    {\\r\\n    BOOL Enable;\\r\\n    FLOAT Lower;\\r\\n    FLOAT Upper;\\r\\n    } \\tDXVAHD_STREAM_STATE_LUMA_KEY_DATA;"},"_DXVAHD_STREAM_STATE_OUTPUT_RATE_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":406,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_OUTPUT_RATE_DATA\\r\\n    {\\r\\n    BOOL RepeatFrame;\\r\\n    DXVAHD_OUTPUT_RATE OutputRate;\\r\\n    DXVAHD_RATIONAL CustomRate;\\r\\n    } \\tDXVAHD_STREAM_STATE_OUTPUT_RATE_DATA;"},"_DXVAHD_STREAM_STATE_PALETTE_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":431,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_PALETTE_DATA\\r\\n    {\\r\\n    UINT Count;\\r\\n    D3DCOLOR *pEntries;\\r\\n    } \\tDXVAHD_STREAM_STATE_PALETTE_DATA;"},"_DXVAHD_STREAM_STATE_PRIVATE_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":457,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_PRIVATE_DATA\\r\\n    {\\r\\n    GUID Guid;\\r\\n    UINT DataSize;\\r\\n    void *pData;\\r\\n    } \\tDXVAHD_STREAM_STATE_PRIVATE_DATA;"},"_DXVAHD_STREAM_STATE_PRIVATE_IVTC_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":481,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_PRIVATE_IVTC_DATA\\r\\n    {\\r\\n    BOOL Enable;\\r\\n    UINT ITelecineFlags;\\r\\n    UINT Frames;\\r\\n    UINT InputField;\\r\\n    } \\tDXVAHD_STREAM_STATE_PRIVATE_IVTC_DATA;"},"_DXVAHD_STREAM_STATE_SOURCE_RECT_DATA":{"comment":"","exp":"","file":"dxvahd.h","line":413,"type":"Struct","value":"typedef struct _DXVAHD_STREAM_STATE_SOURCE_RECT_DATA\\r\\n    {\\r\\n    BOOL Enable;\\r\\n    RECT SourceRect;\\r\\n    } \\tDXVAHD_STREAM_STATE_SOURCE_RECT_DATA;"},"_DXVAHD_SURFACE_TYPE":{"comment":"","exp":"","file":"dxvahd.h","line":108,"type":"Enum","value":"typedef\\r\\nenum _DXVAHD_SURFACE_TYPE\\r\\n    {\\r\\n        DXVAHD_SURFACE_TYPE_VIDEO_INPUT\\t= 0,\\r\\n        DXVAHD_SURFACE_TYPE_VIDEO_INPUT_PRIVATE\\t= 1,\\r\\n        DXVAHD_SURFACE_TYPE_VIDEO_OUTPUT\\t= 2\\r\\n    } \\tDXVAHD_SURFACE_TYPE;"},"_DXVAHD_VPCAPS":{"comment":"","exp":"","file":"dxvahd.h","line":307,"type":"Struct","value":"typedef struct _DXVAHD_VPCAPS\\r\\n    {\\r\\n    GUID VPGuid;\\r\\n    UINT PastFrames;\\r\\n    UINT FutureFrames;\\r\\n    UINT ProcessorCaps;\\r\\n    UINT ITelecineCaps;\\r\\n    UINT CustomRateCount;\\r\\n    } \\tDXVAHD_VPCAPS;"},"_DXVAHD_VPDEVCAPS":{"comment":"","exp":"","file":"dxvahd.h","line":292,"type":"Struct","value":"typedef struct _DXVAHD_VPDEVCAPS\\r\\n    {\\r\\n    DXVAHD_DEVICE_TYPE DeviceType;\\r\\n    UINT DeviceCaps;\\r\\n    UINT FeatureCaps;\\r\\n    UINT FilterCaps;\\r\\n    UINT InputFormatCaps;\\r\\n    D3DPOOL InputPool;\\r\\n    UINT OutputFormatCount;\\r\\n    UINT InputFormatCount;\\r\\n    UINT VideoProcessorCount;\\r\\n    UINT MaxInputStreams;\\r\\n    UINT MaxStreamStates;\\r\\n    } \\tDXVAHD_VPDEVCAPS;"},"_DXVAUncompDataInfo":{"comment":"","exp":"","file":"dxva9typ.h","line":208,"type":"Struct","value":"typedef struct _DXVAUncompDataInfo\\r\\n{\\r\\n    DWORD       UncompWidth;    \/* Width of uncompressed data *\/\\r\\n    DWORD       UncompHeight;   \/* Height of uncompressed data *\/\\r\\n    D3DFORMAT   UncompFormat;   \/* Format of uncompressed data *\/\\r\\n} DXVAUncompDataInfo;"},"_DXVA_AYUVsample2":{"comment":"","exp":"","file":"dxva9typ.h","line":57,"type":"Struct","value":"typedef struct _DXVA_AYUVsample2 {\\r\\n    BYTE bCrValue;\\r\\n    BYTE bCbValue;\\r\\n    BYTE bY_Value;\\r\\n    BYTE bSampleAlpha8;\\r\\n} DXVA_AYUVsample2, *LPDXVA_AYUVsample2;"},"_DXVA_BufferDescription":{"comment":"","exp":"","file":"dxva9typ.h","line":70,"type":"Struct","value":"typedef struct _DXVA_BufferDescription {\\r\\n  DWORD dwTypeIndex;\\r\\n  DWORD dwBufferIndex;\\r\\n  DWORD dwDataOffset;\\r\\n  DWORD dwDataSize;\\r\\n  DWORD dwFirstMBaddress;\\r\\n  DWORD dwNumMBsInBuffer;\\r\\n  DWORD dwWidth;\\r\\n  DWORD dwHeight;\\r\\n  DWORD dwStride;\\r\\n  DWORD dwReservedBits;\\r\\n} DXVA_BufferDescription, *LPDXVA_BufferDescription;"},"_DXVA_COPPCommand":{"comment":"","exp":"","file":"dxva9typ.h","line":748,"type":"Struct","value":"typedef struct _DXVA_COPPCommand {\\r\\n    GUID    macKDI;             \/\/   16 bytes\\r\\n    GUID    guidCommandID;      \/\/   16 bytes\\r\\n    ULONG   dwSequence;         \/\/    4 bytes\\r\\n    ULONG   cbSizeData;         \/\/    4 bytes\\r\\n    UCHAR   CommandData[4056];  \/\/ 4056 bytes (4056+4+4+16+16 = 4096)\\r\\n}  DXVA_COPPCommand, *LPDXVA_COPPCommand;"},"_DXVA_COPPSetProtectionLevelCmdData":{"comment":"","exp":"","file":"dxva9typ.h","line":763,"type":"Struct","value":"typedef struct _DXVA_COPPSetProtectionLevelCmdData {\\r\\n    ULONG   ProtType;\\r\\n    ULONG   ProtLevel;\\r\\n    ULONG   ExtendedInfoChangeMask;\\r\\n    ULONG   ExtendedInfoData;\\r\\n} DXVA_COPPSetProtectionLevelCmdData;"},"_DXVA_COPPSetSignalingCmdData":{"comment":"","exp":"","file":"dxva9typ.h","line":822,"type":"Struct","value":"typedef struct _DXVA_COPPSetSignalingCmdData {\\r\\n    ULONG   ActiveTVProtectionStandard;           \/\/ See COPP_TVProtectionStandard\\r\\n    ULONG   AspectRatioChangeMask1;\\r\\n    ULONG   AspectRatioData1;                     \/\/ See COPP_ImageAspectRatio_EN300294 for ETSI EN 300 294 values\\r\\n    ULONG   AspectRatioChangeMask2;\\r\\n    ULONG   AspectRatioData2;\\r\\n    ULONG   AspectRatioChangeMask3;\\r\\n    ULONG   AspectRatioData3;\\r\\n    ULONG   ExtendedInfoChangeMask[4];\\r\\n    ULONG   ExtendedInfoData[4];\\r\\n    ULONG   Reserved;\\r\\n} DXVA_COPPSetSignalingCmdData;"},"_DXVA_COPPSignature":{"comment":"","exp":"","file":"dxva9typ.h","line":737,"type":"Struct","value":"typedef struct _DXVA_COPPSignature {\\r\\n    UCHAR   Signature[256];\\r\\n} DXVA_COPPSignature, *LPDXVA_COPPSignature;"},"_DXVA_COPPStatusData":{"comment":"","exp":"","file":"dxva9typ.h","line":896,"type":"Struct","value":"typedef struct _DXVA_COPPStatusData {\\r\\n    GUID    rApp;\\r\\n    ULONG   dwFlags;    \/\/ See COPP_StatusFlags above\\r\\n    ULONG   dwData;\\r\\n    ULONG   ExtendedInfoValidMask;\\r\\n    ULONG   ExtendedInfoData;\\r\\n} DXVA_COPPStatusData;"},"_DXVA_COPPStatusDisplayData":{"comment":"","exp":"","file":"dxva9typ.h","line":904,"type":"Struct","value":"typedef struct _DXVA_COPPStatusDisplayData {\\r\\n    GUID    rApp;\\r\\n    ULONG   dwFlags;    \/\/ See COPP_StatusFlags above\\r\\n    ULONG   DisplayWidth;\\r\\n    ULONG   DisplayHeight;\\r\\n    ULONG   Format;     \/\/ also contains extended color data\\r\\n    ULONG   d3dFormat;\\r\\n    ULONG   FreqNumerator;\\r\\n    ULONG   FreqDenominator;\\r\\n} DXVA_COPPStatusDisplayData;"},"_DXVA_COPPStatusHDCPKeyData":{"comment":"","exp":"","file":"dxva9typ.h","line":920,"type":"Struct","value":"typedef struct _DXVA_COPPStatusHDCPKeyData {\\r\\n    GUID    rApp;\\r\\n    ULONG   dwFlags;        \/\/ See COPP_StatusFlags above\\r\\n    ULONG   dwHDCPFlags;    \/\/ See COPP_StatusHDCPFlags above\\r\\n    GUID    BKey;           \/\/ Lower 40 bits\\r\\n    GUID    Reserved1;\\r\\n    GUID    Reserved2;\\r\\n} DXVA_COPPStatusHDCPKeyData;"},"_DXVA_COPPStatusInput":{"comment":"","exp":"","file":"dxva9typ.h","line":875,"type":"Struct","value":"typedef struct _DXVA_COPPStatusInput {\\r\\n    GUID    rApp;               \/\/   16 bytes\\r\\n    GUID    guidStatusRequestID;\/\/   16 bytes\\r\\n    ULONG   dwSequence;         \/\/    4 bytes\\r\\n    ULONG   cbSizeData;         \/\/    4 bytes\\r\\n    UCHAR   StatusData[4056];   \/\/ 4056 bytes (4056+4+4+16+16 = 4096)\\r\\n} DXVA_COPPStatusInput, *LPDXVA_COPPStatusInput;"},"_DXVA_COPPStatusOutput":{"comment":"","exp":"","file":"dxva9typ.h","line":883,"type":"Struct","value":"typedef struct _DXVA_COPPStatusOutput {\\r\\n    GUID    macKDI;             \/\/   16 bytes\\r\\n    ULONG   cbSizeData;         \/\/    4 bytes\\r\\n    UCHAR   COPPStatus[4076];   \/\/ 4076 bytes (4076+16+4 = 4096)\\r\\n} DXVA_COPPStatusOutput, *LPDXVA_COPPStatusOutput;"},"_DXVA_COPPStatusSignalingCmdData":{"comment":"","exp":"","file":"dxva9typ.h","line":985,"type":"Struct","value":"typedef struct _DXVA_COPPStatusSignalingCmdData {\\r\\n    GUID    rApp;\\r\\n    ULONG   dwFlags;                                \/\/ See COPP_StatusFlags above\\r\\n    ULONG   AvailableTVProtectionStandards;         \/\/ See COPP_TVProtectionStandard\\r\\n    ULONG   ActiveTVProtectionStandard;             \/\/ See COPP_TVProtectionStandard\\r\\n    ULONG   TVType;\\r\\n    ULONG   AspectRatioValidMask1;\\r\\n    ULONG   AspectRatioData1;                       \/\/ See COPP_AspectRatio_EN300294 for ETSI EN 300 294 values\\r\\n    ULONG   AspectRatioValidMask2;\\r\\n    ULONG   AspectRatioData2;\\r\\n    ULONG   AspectRatioValidMask3;\\r\\n    ULONG   AspectRatioData3;\\r\\n    ULONG   ExtendedInfoValidMask[4];\\r\\n    ULONG   ExtendedInfoData[4];\\r\\n} DXVA_COPPStatusSignalingCmdData;"},"_DXVA_ConfigPictureDecode":{"comment":"","exp":"","file":"dxva9typ.h","line":109,"type":"Struct","value":"typedef struct _DXVA_ConfigPictureDecode {\\r\\n  \/\/ Operation Indicated\\r\\n  DXVA_ConfigQueryOrReplyFunc dwFunction;\\r\\n  \/\/ Alignment\\r\\n  DWORD dwReservedBits[3];\\r\\n  \/\/ Encryption GUIDs\\r\\n  GUID guidConfigBitstreamEncryption;\\r\\n  GUID guidConfigMBcontrolEncryption;\\r\\n  GUID guidConfigResidDiffEncryption;\\r\\n  \/\/ Bitstream Processing Indicator\\r\\n  BYTE bConfigBitstreamRaw;\\r\\n  \/\/ Macroblock Control Config\\r\\n  BYTE bConfigMBcontrolRasterOrder;\\r\\n  \/\/ Host Resid Diff Config\\r\\n  BYTE bConfigResidDiffHost;\\r\\n  BYTE bConfigSpatialResid8;\\r\\n  BYTE bConfigResid8Subtraction;\\r\\n  BYTE bConfigSpatialHost8or9Clipping;\\r\\n  BYTE bConfigSpatialResidInterleaved;\\r\\n  BYTE bConfigIntraResidUnsigned;\\r\\n  \/\/ Accelerator Resid Diff Config\\r\\n  BYTE bConfigResidDiffAccelerator;\\r\\n  BYTE bConfigHostInverseScan;\\r\\n  BYTE bConfigSpecificIDCT;\\r\\n  BYTE bConfig4GroupedCoefs;\\r\\n} DXVA_ConfigPictureDecode, *LPDXVA_ConfigPictureDecode;"},"_DXVA_DeinterlaceBlt":{"comment":"","exp":"","file":"dxva9typ.h","line":584,"type":"Struct","value":"typedef struct _DXVA_DeinterlaceBlt {\\r\\n    DWORD               Size;\\r\\n    DWORD               Reserved;\\r\\n    REFERENCE_TIME      rtTarget;\\r\\n    RECT                DstRect;\\r\\n    RECT                SrcRect;\\r\\n    DWORD               NumSourceSurfaces;\\r\\n    FLOAT               Alpha;\\r\\n    DXVA_VideoSample    Source[MAX_DEINTERLACE_SURFACES];\\r\\n} DXVA_DeinterlaceBlt;"},"_DXVA_DeinterlaceBltEx":{"comment":"","exp":"","file":"dxva9typ.h","line":599,"type":"Struct","value":"typedef struct _DXVA_DeinterlaceBltEx {\\r\\n    DWORD               Size;\\r\\n    DXVA_AYUVsample2    BackgroundColor;\\r\\n    RECT                rcTarget;\\r\\n    REFERENCE_TIME      rtTarget;\\r\\n    DWORD               NumSourceSurfaces;\\r\\n    FLOAT               Alpha;\\r\\n    DXVA_VideoSample2   Source[MAX_DEINTERLACE_SURFACES];\\r\\n    DWORD               DestinationFormat;\\r\\n    DWORD               DestinationFlags;\\r\\n} DXVA_DeinterlaceBltEx;"},"_DXVA_DeinterlaceBltEx32":{"comment":"","exp":"","file":"dxva9typ.h","line":571,"type":"Struct","value":"typedef struct _DXVA_DeinterlaceBltEx32 {\\r\\n    DWORD               Size;\\r\\n    DXVA_AYUVsample2    BackgroundColor;\\r\\n    RECT                rcTarget;\\r\\n    REFERENCE_TIME      rtTarget;\\r\\n    DWORD               NumSourceSurfaces;\\r\\n    FLOAT               Alpha;\\r\\n    DXVA_VideoSample32  Source[MAX_DEINTERLACE_SURFACES];\\r\\n    DWORD               DestinationFormat;\\r\\n    DWORD               DestinationFlags;\\r\\n} DXVA_DeinterlaceBltEx32;"},"_DXVA_DeinterlaceCaps":{"comment":"","exp":"","file":"dxva9typ.h","line":533,"type":"Struct","value":"typedef struct _DXVA_DeinterlaceCaps {\\r\\n    DWORD                   Size;\\r\\n    DWORD                   NumPreviousOutputFrames;\\r\\n    DWORD                   InputPool;\\r\\n    DWORD                   NumForwardRefSamples;\\r\\n    DWORD                   NumBackwardRefSamples;\\r\\n    D3DFORMAT               d3dOutputFormat;\\r\\n    DXVA_VideoProcessCaps   VideoProcessingCaps;\\r\\n    DXVA_DeinterlaceTech    DeinterlaceTechnology;\\r\\n} DXVA_DeinterlaceCaps, *LPDXVA_DeinterlaceCaps;"},"_DXVA_DeinterlaceQueryAvailableModes":{"comment":"","exp":"","file":"dxva9typ.h","line":616,"type":"Struct","value":"typedef struct _DXVA_DeinterlaceQueryAvailableModes {\\r\\n    DWORD               Size;\\r\\n    DWORD               NumGuids;\\r\\n    GUID                Guids[MAX_DEINTERLACE_DEVICE_GUIDS];\\r\\n} DXVA_DeinterlaceQueryAvailableModes;"},"_DXVA_DeinterlaceQueryModeCaps":{"comment":"","exp":"","file":"dxva9typ.h","line":626,"type":"Struct","value":"typedef struct _DXVA_DeinterlaceQueryModeCaps {\\r\\n    DWORD               Size;\\r\\n    GUID                Guid;\\r\\n    DXVA_VideoDesc      VideoDesc;\\r\\n} DXVA_DeinterlaceQueryModeCaps;"},"_DXVA_DeinterlaceTech":{"comment":"","exp":"","file":"dxva9typ.h","line":443,"type":"Enum","value":"typedef enum _DXVA_DeinterlaceTech {\\r\\n    \/\/ the algorithm is unknown or proprietary\\r\\n    DXVA_DeinterlaceTech_Unknown                = 0x0000,\\r\\n    \/\/ the algorithm creates the missing lines by repeating\\r\\n    \/\/ the line either above or below it - this method will look very jaggy and\\r\\n    \/\/ isn't recommended\\r\\n    DXVA_DeinterlaceTech_BOBLineReplicate       = 0x0001,\\r\\n    \/\/ The algorithm creates the missing lines by vertically stretching each\\r\\n    \/\/ video field by a factor of two by averaging two lines\\r\\n    DXVA_DeinterlaceTech_BOBVerticalStretch     = 0x0002,\\r\\n    \/\/ or using a [-1, 9, 9, -1]\/16 filter across four lines.\\r\\n    DXVA_DeinterlaceTech_BOBVerticalStretch4Tap = 0x0100,\\r\\n    \/\/ the pixels in the missing line are recreated by a median filtering operation\\r\\n    DXVA_DeinterlaceTech_MedianFiltering        = 0x0004,\\r\\n    \/\/ the pixels in the missing line are recreated by an edge filter.\\r\\n    \/\/ In this process, spatial directional filters are applied to determine\\r\\n    \/\/ the orientation of edges in the picture content, and missing\\r\\n    \/\/ pixels are created by filtering along (rather than across) the\\r\\n    \/\/ detected edges.\\r\\n    DXVA_DeinterlaceTech_EdgeFiltering          = 0x0010,\\r\\n    \/\/ the pixels in the missing line are recreated by switching on a field by\\r\\n    \/\/ field basis between using either spatial or temporal interpolation\\r\\n    \/\/ depending on the amount of motion.\\r\\n    DXVA_DeinterlaceTech_FieldAdaptive          = 0x0020,\\r\\n    \/\/ the pixels in the missing line are recreated by switching on a pixel by pixel\\r\\n    \/\/ basis between using either spatial or temporal interpolation depending on\\r\\n    \/\/ the amount of motion..\\r\\n    DXVA_DeinterlaceTech_PixelAdaptive          = 0x0040,\\r\\n    \/\/ Motion Vector Steering  identifies objects within a sequence of video\\r\\n    \/\/ fields.  The missing pixels are recreated after first aligning the\\r\\n    \/\/ movement axes of the individual objects in the scene to make them\\r\\n    \/\/ parallel with the time axis.\\r\\n    DXVA_DeinterlaceTech_MotionVectorSteered      = 0x0080\\r\\n} DXVA_DeinterlaceTech;"},"_DXVA_DestinationFlags":{"comment":"","exp":"","file":"dxva9typ.h","line":509,"type":"Enum","value":"typedef enum _DXVA_DestinationFlags {\\r\\n    DXVA_DestinationFlagMask = DXVABit(3)|DXVABit(2)|DXVABit(1)|DXVABit(0),\\r\\n    DXVA_DestinationFlag_Background_Changed = 0x0001,\\r\\n    DXVA_DestinationFlag_TargetRect_Changed = 0x0002,\\r\\n    DXVA_DestinationFlag_ColorData_Changed  = 0x0004,\\r\\n    DXVA_DestinationFlag_Alpha_Changed      = 0x0008\\r\\n} DXVA_DestinationFlags;"},"_DXVA_ExtendedFormat":{"comment":"","exp":"","file":"dxva9typ.h","line":362,"type":"Struct","value":"typedef struct _DXVA_ExtendedFormat\\r\\n{\\r\\n    UINT                        SampleFormat : 8;           \/\/ See DXVA_SampleFormat\\r\\n    UINT                        VideoChromaSubsampling : 4; \/\/ See DXVA_VideoChromaSubSampling\\r\\n    DXVA_NominalRange           NominalRange : 3;           \/\/ See DXVA_NominalRange\\r\\n    DXVA_VideoTransferMatrix    VideoTransferMatrix : 3;    \/\/ See DXVA_VideoTransferMatrix\\r\\n    DXVA_VideoLighting          VideoLighting : 4;          \/\/ See DXVA_VideoLighting\\r\\n    DXVA_VideoPrimaries         VideoPrimaries : 5;         \/\/ See DXVA_VideoPrimaries\\r\\n    DXVA_VideoTransferFunction  VideoTransferFunction : 5;  \/\/ See DXVA_VideoTransferFunction\\r\\n} DXVA_ExtendedFormat;"},"_DXVA_Frequency":{"comment":"","exp":"","file":"dxva9typ.h","line":415,"type":"Struct","value":"typedef struct _DXVA_Frequency {\\r\\n    DWORD Numerator;\\r\\n    DWORD Denominator;\\r\\n} DXVA_Frequency;"},"_DXVA_NominalRange":{"comment":"","exp":"","file":"dxva9typ.h","line":323,"type":"Enum","value":"typedef enum _DXVA_NominalRange\\r\\n{\\r\\n    DXVA_NominalRangeShift = (DXVA_ExtColorData_ShiftBase + 4),\\r\\n    DXVA_NominalRangeMask = DXVAColorMask(3, DXVA_NominalRangeShift),\\r\\n    DXVA_NominalRange_Unknown = 0,\\r\\n    DXVA_NominalRange_Normal = 1,\\r\\n    DXVA_NominalRange_Wide = 2,\\r\\n    DXVA_NominalRange_0_255 = 1,\\r\\n    DXVA_NominalRange_16_235 = 2,\\r\\n    DXVA_NominalRange_48_208 = 3\\r\\n} DXVA_NominalRange;"},"_DXVA_PictureParameters":{"comment":"","exp":"","file":"dxva9typ.h","line":143,"type":"Struct","value":"typedef struct _DXVA_PictureParameters {\\r\\n  WORD wDecodedPictureIndex;\\r\\n  WORD wDeblockedPictureIndex;\\r\\n  WORD wForwardRefPictureIndex;\\r\\n  WORD wBackwardRefPictureIndex;\\r\\n  WORD wPicWidthInMBminus1;\\r\\n  WORD wPicHeightInMBminus1;\\r\\n  BYTE bMacroblockWidthMinus1;\\r\\n  BYTE bMacroblockHeightMinus1;\\r\\n  BYTE bBlockWidthMinus1;\\r\\n  BYTE bBlockHeightMinus1;\\r\\n  BYTE bBPPminus1;\\r\\n  BYTE bPicStructure;\\r\\n  BYTE bSecondField;\\r\\n  BYTE bPicIntra;\\r\\n  BYTE bPicBackwardPrediction;\\r\\n  BYTE bBidirectionalAveragingMode;\\r\\n  BYTE bMVprecisionAndChromaRelation;\\r\\n  BYTE bChromaFormat;\\r\\n  BYTE bPicScanFixed;\\r\\n  BYTE bPicScanMethod;\\r\\n  BYTE bPicReadbackRequests;\\r\\n  BYTE bRcontrol;\\r\\n  BYTE bPicSpatialResid8;\\r\\n  BYTE bPicOverflowBlocks;\\r\\n  BYTE bPicExtrapolation;\\r\\n  BYTE bPicDeblocked;\\r\\n  BYTE bPicDeblockConfined;\\r\\n  BYTE bPic4MVallowed;\\r\\n  BYTE bPicOBMC;\\r\\n  BYTE bPicBinPB;\\r\\n  BYTE bMV_RPS;\\r\\n  BYTE bReservedBits;\\r\\n  WORD wBitstreamFcodes;\\r\\n  WORD wBitstreamPCEelements;\\r\\n  BYTE bBitstreamConcealmentNeed;\\r\\n  BYTE bBitstreamConcealmentMethod;\\r\\n} DXVA_PictureParameters, *LPDXVA_PictureParameters;"},"_DXVA_ProcAmpControlBlt":{"comment":"","exp":"","file":"dxva9typ.h","line":689,"type":"Struct","value":"typedef struct _DXVA_ProcAmpControlBlt {\\r\\n    DWORD               Size;\\r\\n    RECT                DstRect;\\r\\n    RECT                SrcRect;\\r\\n    FLOAT               Alpha;\\r\\n    FLOAT               Brightness;\\r\\n    FLOAT               Contrast;\\r\\n    FLOAT               Hue;\\r\\n    FLOAT               Saturation;\\r\\n} DXVA_ProcAmpControlBlt;"},"_DXVA_ProcAmpControlCaps":{"comment":"","exp":"","file":"dxva9typ.h","line":660,"type":"Struct","value":"typedef struct _DXVA_ProcAmpControlCaps {\\r\\n    DWORD                   Size;\\r\\n    DWORD                   InputPool;\\r\\n    D3DFORMAT               d3dOutputFormat;\\r\\n    DWORD                   ProcAmpControlProps;\/\/ see DXVA_ProcAmpControlProp\\r\\n    DWORD                   VideoProcessingCaps;\/\/ see DXVA_VideoProcessCaps\\r\\n} DXVA_ProcAmpControlCaps, *LPDXVA_ProcAmpControlCaps;"},"_DXVA_ProcAmpControlProp":{"comment":"","exp":"","file":"dxva9typ.h","line":652,"type":"Enum","value":"typedef enum _DXVA_ProcAmpControlProp {\\r\\n    DXVA_ProcAmp_None       = 0x0000,\\r\\n    DXVA_ProcAmp_Brightness = 0x0001,\\r\\n    DXVA_ProcAmp_Contrast   = 0x0002,\\r\\n    DXVA_ProcAmp_Hue        = 0x0004,\\r\\n    DXVA_ProcAmp_Saturation = 0x0008\\r\\n} DXVA_ProcAmpControlProp;"},"_DXVA_ProcAmpControlQueryRange":{"comment":"","exp":"","file":"dxva9typ.h","line":672,"type":"Struct","value":"typedef struct _DXVA_ProcAmpControlQueryRange {\\r\\n    DWORD                   Size;\\r\\n    DXVA_ProcAmpControlProp ProcAmpControlProp;\\r\\n    DXVA_VideoDesc          VideoDesc;\\r\\n} DXVA_ProcAmpControlQueryRange, *LPDXVA_ProcAmpControlQueryRange;"},"_DXVA_SampleFlags":{"comment":"","exp":"","file":"dxva9typ.h","line":500,"type":"Enum","value":"typedef enum _DXVA_SampleFlags {\\r\\n    DXVA_SampleFlagsMask = DXVABit(3)|DXVABit(2)|DXVABit(1)|DXVABit(0),\\r\\n    DXVA_SampleFlag_Palette_Changed         = 0x0001,\\r\\n    DXVA_SampleFlag_SrcRect_Changed         = 0x0002,\\r\\n    DXVA_SampleFlag_DstRect_Changed         = 0x0004,\\r\\n    DXVA_SampleFlag_ColorData_Changed       = 0x0008,\\r\\n} DXVA_SampleFlags;"},"_DXVA_SampleFormat":{"comment":"","exp":"","file":"dxva9typ.h","line":247,"type":"Enum","value":"typedef enum _DXVA_SampleFormat {\\r\\n    DXVA_SampleFormatMask = 0xFF,   \/\/ 8 bits used for DXVA Sample format\\r\\n    DXVA_SampleUnknown = 0,\\r\\n    DXVA_SamplePreviousFrame = 1,\\r\\n    DXVA_SampleProgressiveFrame = 2,\\r\\n    DXVA_SampleFieldInterleavedEvenFirst = 3,\\r\\n    DXVA_SampleFieldInterleavedOddFirst = 4,\\r\\n    DXVA_SampleFieldSingleEven = 5,\\r\\n    DXVA_SampleFieldSingleOdd = 6,\\r\\n    DXVA_SampleSubStream = 7\\r\\n} DXVA_SampleFormat;"},"_DXVA_VideoChromaSubsampling":{"comment":"","exp":"","file":"dxva9typ.h","line":337,"type":"Enum","value":"typedef enum _DXVA_VideoChromaSubsampling\\r\\n{\\r\\n    DXVA_VideoChromaSubsamplingShift = (DXVA_ExtColorData_ShiftBase + 0),\\r\\n    DXVA_VideoChromaSubsamplingMask = DXVAColorMask(4, DXVA_VideoChromaSubsamplingShift),\\r\\n    DXVA_VideoChromaSubsampling_Unknown = 0,\\r\\n    DXVA_VideoChromaSubsampling_ProgressiveChroma = 0x8,\\r\\n    DXVA_VideoChromaSubsampling_Horizontally_Cosited = 0x4,\\r\\n    DXVA_VideoChromaSubsampling_Vertically_Cosited = 0x2,\\r\\n    DXVA_VideoChromaSubsampling_Vertically_AlignedChromaPlanes = 0x1,\\r\\n    \/\/ 4:2:0 variations\\r\\n    DXVA_VideoChromaSubsampling_MPEG2  =   DXVA_VideoChromaSubsampling_Horizontally_Cosited |\\r\\n                                           DXVA_VideoChromaSubsampling_Vertically_AlignedChromaPlanes, \\r\\n    DXVA_VideoChromaSubsampling_MPEG1  =   DXVA_VideoChromaSubsampling_Vertically_AlignedChromaPlanes, \\r\\n    DXVA_VideoChromaSubsampling_DV_PAL  =  DXVA_VideoChromaSubsampling_Horizontally_Cosited |\\r\\n                                           DXVA_VideoChromaSubsampling_Vertically_Cosited,\\r\\n    \/\/ 4:4:4, 4:2:2, 4:1:1\\r\\n    DXVA_VideoChromaSubsampling_Cosited =  DXVA_VideoChromaSubsampling_Horizontally_Cosited |\\r\\n                                           DXVA_VideoChromaSubsampling_Vertically_Cosited |\\r\\n                                           DXVA_VideoChromaSubsampling_Vertically_AlignedChromaPlanes,\\r\\n} DXVA_VideoChromaSubsampling;"},"_DXVA_VideoDesc":{"comment":"","exp":"","file":"dxva9typ.h","line":420,"type":"Struct","value":"typedef struct _DXVA_VideoDesc {\\r\\n    DWORD               Size;\\r\\n    DWORD               SampleWidth;\\r\\n    DWORD               SampleHeight;\\r\\n    DWORD               SampleFormat; \/\/ also contains extend color data\\r\\n    D3DFORMAT           d3dFormat;\\r\\n    DXVA_Frequency      InputSampleFreq;\\r\\n    DXVA_Frequency      OutputFrameFreq;\\r\\n} DXVA_VideoDesc, *LPDXVA_VideoDesc;"},"_DXVA_VideoLighting":{"comment":"","exp":"","file":"dxva9typ.h","line":300,"type":"Enum","value":"typedef enum _DXVA_VideoLighting\\r\\n{\\r\\n    DXVA_VideoLightingShift = (DXVA_ExtColorData_ShiftBase + 10),\\r\\n    DXVA_VideoLightingMask = DXVAColorMask(4, DXVA_VideoLightingShift),\\r\\n    DXVA_VideoLighting_Unknown = 0,\\r\\n    DXVA_VideoLighting_bright = 1,\\r\\n    DXVA_VideoLighting_office = 2,\\r\\n    DXVA_VideoLighting_dim = 3,\\r\\n    DXVA_VideoLighting_dark = 4\\r\\n} DXVA_VideoLighting;"},"_DXVA_VideoPrimaries":{"comment":"","exp":"","file":"dxva9typ.h","line":284,"type":"Enum","value":"typedef enum _DXVA_VideoPrimaries\\r\\n{\\r\\n    DXVA_VideoPrimariesShift = (DXVA_ExtColorData_ShiftBase + 14),\\r\\n    DXVA_VideoPrimariesMask = DXVAColorMask(5, DXVA_VideoPrimariesShift),\\r\\n    DXVA_VideoPrimaries_Unknown = 0,\\r\\n    DXVA_VideoPrimaries_reserved = 1,\\r\\n    DXVA_VideoPrimaries_BT709 = 2,\\r\\n    DXVA_VideoPrimaries_BT470_2_SysM = 3,\\r\\n    DXVA_VideoPrimaries_BT470_2_SysBG = 4,\\r\\n    DXVA_VideoPrimaries_SMPTE170M = 5,\\r\\n    DXVA_VideoPrimaries_SMPTE240M = 6,\\r\\n    DXVA_VideoPrimaries_EBU3213 = 7,\\r\\n    DXVA_VideoPrimaries_SMPTE_C = 8\\r\\n} DXVA_VideoPrimaries;"},"_DXVA_VideoProcessCaps":{"comment":"","exp":"","file":"dxva9typ.h","line":430,"type":"Enum","value":"typedef enum _DXVA_VideoProcessCaps {\\r\\n    DXVA_VideoProcess_None                  = 0x0000,\\r\\n    DXVA_VideoProcess_YUV2RGB               = 0x0001,\\r\\n    DXVA_VideoProcess_StretchX              = 0x0002,\\r\\n    DXVA_VideoProcess_StretchY              = 0x0004,\\r\\n    DXVA_VideoProcess_AlphaBlend            = 0x0008,\\r\\n    DXVA_VideoProcess_SubRects              = 0x0010,\\r\\n    DXVA_VideoProcess_SubStreams            = 0x0020,\\r\\n    DXVA_VideoProcess_SubStreamsExtended    = 0x0040,\\r\\n    DXVA_VideoProcess_YUV2RGBExtended       = 0x0080,\\r\\n    DXVA_VideoProcess_AlphaBlendExtended    = 0x0100\\r\\n} DXVA_VideoProcessCaps;"},"_DXVA_VideoPropertyRange":{"comment":"","exp":"","file":"dxva9typ.h","line":678,"type":"Struct","value":"typedef struct _DXVA_VideoPropertyRange {\\r\\n    FLOAT   MinValue;\\r\\n    FLOAT   MaxValue;\\r\\n    FLOAT   DefaultValue;\\r\\n    FLOAT   StepSize;\\r\\n} DXVA_VideoPropertyRange, *LPDXVA_VideoPropertyRange;"},"_DXVA_VideoSample":{"comment":"","exp":"","file":"dxva9typ.h","line":488,"type":"Struct","value":"typedef struct _DXVA_VideoSample {\\r\\n    REFERENCE_TIME      rtStart;\\r\\n    REFERENCE_TIME      rtEnd;\\r\\n    DXVA_SampleFormat   SampleFormat;   \/\/ only lower 8 bits used\\r\\n    VOID*               lpDDSSrcSurface;\\r\\n} DXVA_VideoSample, *LPDXVA_VideoSample;"},"_DXVA_VideoSample2":{"comment":"","exp":"","file":"dxva9typ.h","line":518,"type":"Struct","value":"typedef struct _DXVA_VideoSample2 {\\r\\n#ifdef _WIN64\\r\\n    DWORD               Size;\\r\\n    DWORD               Reserved;\\r\\n#endif\\r\\n    REFERENCE_TIME      rtStart;\\r\\n    REFERENCE_TIME      rtEnd;\\r\\n    DWORD               SampleFormat;   \/\/ cast to DXVA_ExtendedFormat, or use Extract macros\\r\\n    DWORD               SampleFlags;\\r\\n    VOID*               lpDDSSrcSurface;\\r\\n    RECT                rcSrc;\\r\\n    RECT                rcDst;\\r\\n    DXVA_AYUVsample2    Palette[16];\\r\\n} DXVA_VideoSample2, *LPDXVA_VideoSample2;"},"_DXVA_VideoSample32":{"comment":"","exp":"","file":"dxva9typ.h","line":558,"type":"Struct","value":"typedef struct _DXVA_VideoSample32 {\\r\\n    REFERENCE_TIME      rtStart;\\r\\n    REFERENCE_TIME      rtEnd;\\r\\n    DWORD               SampleFormat;\\r\\n    DWORD               SampleFlags;\\r\\n    DWORD               lpDDSSrcSurface;  \/\/ 32 bit pointer size\\r\\n    RECT                rcSrc;\\r\\n    RECT                rcDst;\\r\\n    DXVA_AYUVsample2    Palette[16];\\r\\n    \/\/ DWORD Pad;\\r\\n    \/\/ 4 bytes of padding added by the compiler to align the struct to 8 bytes.\\r\\n} DXVA_VideoSample32;"},"_DXVA_VideoTransferFunction":{"comment":"","exp":"","file":"dxva9typ.h","line":268,"type":"Enum","value":"typedef enum _DXVA_VideoTransferFunction\\r\\n{\\r\\n    DXVA_VideoTransFuncShift = (DXVA_ExtColorData_ShiftBase + 19),\\r\\n    DXVA_VideoTransFuncMask = DXVAColorMask(5, DXVA_VideoTransFuncShift),\\r\\n    DXVA_VideoTransFunc_Unknown = 0,\\r\\n    DXVA_VideoTransFunc_10 = 1,\\r\\n    DXVA_VideoTransFunc_18 = 2,\\r\\n    DXVA_VideoTransFunc_20 = 3,\\r\\n    DXVA_VideoTransFunc_22 = 4,\\r\\n    DXVA_VideoTransFunc_22_709  = 5,\\r\\n    DXVA_VideoTransFunc_22_240M = 6,\\r\\n    DXVA_VideoTransFunc_22_8bit_sRGB = 7,\\r\\n    DXVA_VideoTransFunc_28 = 8\\r\\n} DXVA_VideoTransferFunction;"},"_DXVA_VideoTransferMatrix":{"comment":"","exp":"","file":"dxva9typ.h","line":312,"type":"Enum","value":"typedef enum _DXVA_VideoTransferMatrix\\r\\n{\\r\\n    DXVA_VideoTransferMatrixShift = (DXVA_ExtColorData_ShiftBase + 7),\\r\\n    DXVA_VideoTransferMatrixMask = DXVAColorMask(3, DXVA_VideoTransferMatrixShift),\\r\\n    DXVA_VideoTransferMatrix_Unknown = 0,\\r\\n    DXVA_VideoTransferMatrix_BT709 = 1,\\r\\n    DXVA_VideoTransferMatrix_BT601 = 2,\\r\\n    DXVA_VideoTransferMatrix_SMPTE240M = 3\\r\\n} DXVA_VideoTransferMatrix;"},"_DeviceStreamState":{"comment":"","exp":"","file":"mftransform.h","line":597,"type":"Enum","value":"typedef\\r\\nenum _DeviceStreamState\\r\\n    {\\r\\n        DeviceStreamState_Stop\\t= 0,\\r\\n        DeviceStreamState_Pause\\t= ( DeviceStreamState_Stop + 1 ) ,\\r\\n        DeviceStreamState_Run\\t= ( DeviceStreamState_Pause + 1 ) ,\\r\\n        DeviceStreamState_Disabled\\t= ( DeviceStreamState_Run + 1 ) \\r\\n    } \\tDeviceStreamState;"},"_EAllocationType":{"comment":"","exp":"","file":"mfapi.h","line":4368,"type":"Enum","value":"typedef enum _EAllocationType\\r\\n{\\r\\n    eAllocationTypeDynamic,\\r\\n    eAllocationTypeRT,\\r\\n    eAllocationTypePageable,\\r\\n    eAllocationTypeIgnore\\r\\n}   EAllocationType;"},"_EVRFilterConfig_Prefs":{"comment":"","exp":"","file":"evr.h","line":1400,"type":"Enum","value":"typedef\\r\\nenum _EVRFilterConfig_Prefs\\r\\n    {\\r\\n        EVRFilterConfigPrefs_EnableQoS\\t= 0x1,\\r\\n        EVRFilterConfigPrefs_Mask\\t= 0x1\\r\\n    } \\tEVRFilterConfigPrefs;"},"_MACROBLOCK_DATA":{"comment":"","exp":"","file":"mfapi.h","line":1378,"type":"Struct","value":"typedef struct _MACROBLOCK_DATA {\\r\\n    UINT32 flags;\\r\\n    INT16 motionVectorX;\\r\\n    INT16 motionVectorY;\\r\\n    INT32 QPDelta;\\r\\n} MACROBLOCK_DATA;"},"_MF2DBuffer_LockFlags":{"comment":"","exp":"","file":"mfobjects.h","line":1503,"type":"Enum","value":"typedef\\r\\nenum _MF2DBuffer_LockFlags\\r\\n    {\\r\\n        MF2DBuffer_LockFlags_LockTypeMask\\t= ( ( 0x1 | 0x2 )  | 0x3 ) ,\\r\\n        MF2DBuffer_LockFlags_Read\\t= 0x1,\\r\\n        MF2DBuffer_LockFlags_Write\\t= 0x2,\\r\\n        MF2DBuffer_LockFlags_ReadWrite\\t= 0x3,\\r\\n        MF2DBuffer_LockFlags_ForceDWORD\\t= 0x7fffffff\\r\\n    } \\tMF2DBuffer_LockFlags;"},"_MF3DVideoOutputType":{"comment":"","exp":"","file":"mftransform.h","line":1209,"type":"Enum","value":"typedef\\r\\nenum _MF3DVideoOutputType\\r\\n    {\\r\\n        MF3DVideoOutputType_BaseView\\t= 0,\\r\\n        MF3DVideoOutputType_Stereo\\t= 1\\r\\n    } \\tMF3DVideoOutputType;"},"_MFARGB":{"comment":"","exp":"","file":"mfobjects.h","line":2827,"type":"Struct","value":"typedef struct _MFARGB\\r\\n    {\\r\\n    BYTE rgbBlue;\\r\\n    BYTE rgbGreen;\\r\\n    BYTE rgbRed;\\r\\n    BYTE rgbAlpha;\\r\\n    } \\tMFARGB;"},"_MFAudioConstriction":{"comment":"","exp":"","file":"mfidl.h","line":14380,"type":"Enum","value":"typedef enum _MFAudioConstriction\\r\\n{                                                                  \\r\\n    MFaudioConstrictionOff   = 0,                                  \\r\\n    MFaudioConstriction48_16 = ( MFaudioConstrictionOff + 1 ) ,    \\r\\n    MFaudioConstriction44_16 = ( MFaudioConstriction48_16 + 1 ) ,  \\r\\n    MFaudioConstriction14_14 = ( MFaudioConstriction44_16 + 1 ) ,  \\r\\n    MFaudioConstrictionMute  = ( MFaudioConstriction14_14 + 1 )    \\r\\n} MFAudioConstriction;"},"_MFBYTESTREAM_BUFFERING_PARAMS":{"comment":"","exp":"","file":"mfidl.h","line":10953,"type":"Struct","value":"typedef struct _MFBYTESTREAM_BUFFERING_PARAMS\\r\\n    {\\r\\n    QWORD cbTotalFileSize;\\r\\n    QWORD cbPlayableDataSize;\\r\\n    MF_LEAKY_BUCKET_PAIR *prgBuckets;\\r\\n    DWORD cBuckets;\\r\\n    QWORD qwNetBufferingTime;\\r\\n    QWORD qwExtraBufferingTimeDuringSeek;\\r\\n    QWORD qwPlayDuration;\\r\\n    float dRate;\\r\\n    } \\tMFBYTESTREAM_BUFFERING_PARAMS;"},"_MFBYTESTREAM_SEEK_ORIGIN":{"comment":"","exp":"","file":"mfobjects.h","line":4378,"type":"Enum","value":"typedef\\r\\nenum _MFBYTESTREAM_SEEK_ORIGIN\\r\\n    {\\r\\n        msoBegin\\t= 0,\\r\\n        msoCurrent\\t= ( msoBegin + 1 ) \\r\\n    } \\tMFBYTESTREAM_SEEK_ORIGIN;"},"_MFCLOCK_CHARACTERISTICS_FLAGS":{"comment":"","exp":"","file":"mfidl.h","line":5144,"type":"Enum","value":"typedef\\r\\nenum _MFCLOCK_CHARACTERISTICS_FLAGS\\r\\n    {\\r\\n        MFCLOCK_CHARACTERISTICS_FLAG_FREQUENCY_10MHZ\\t= 0x2,\\r\\n        MFCLOCK_CHARACTERISTICS_FLAG_ALWAYS_RUNNING\\t= 0x4,\\r\\n        MFCLOCK_CHARACTERISTICS_FLAG_IS_SYSTEM_CLOCK\\t= 0x8\\r\\n    } \\tMFCLOCK_CHARACTERISTICS_FLAGS;"},"_MFCLOCK_PROPERTIES":{"comment":"","exp":"","file":"mfidl.h","line":5171,"type":"Struct","value":"typedef struct _MFCLOCK_PROPERTIES\\r\\n    {\\r\\n    unsigned __int64 qwCorrelationRate;\\r\\n    GUID guidClockId;\\r\\n    DWORD dwClockFlags;\\r\\n    unsigned __int64 qwClockFrequency;\\r\\n    DWORD dwClockTolerance;\\r\\n    DWORD dwClockJitter;\\r\\n    } \\tMFCLOCK_PROPERTIES;"},"_MFCLOCK_RELATIONAL_FLAGS":{"comment":"","exp":"","file":"mfidl.h","line":5161,"type":"Enum","value":"typedef\\r\\nenum _MFCLOCK_RELATIONAL_FLAGS\\r\\n    {\\r\\n        MFCLOCK_RELATIONAL_FLAG_JITTER_NEVER_AHEAD\\t= 0x1\\r\\n    } \\tMFCLOCK_RELATIONAL_FLAGS;"},"_MFCLOCK_STATE":{"comment":"","exp":"","file":"mfidl.h","line":5152,"type":"Enum","value":"typedef\\r\\nenum _MFCLOCK_STATE\\r\\n    {\\r\\n        MFCLOCK_STATE_INVALID\\t= 0,\\r\\n        MFCLOCK_STATE_RUNNING\\t= ( MFCLOCK_STATE_INVALID + 1 ) ,\\r\\n        MFCLOCK_STATE_STOPPED\\t= ( MFCLOCK_STATE_RUNNING + 1 ) ,\\r\\n        MFCLOCK_STATE_PAUSED\\t= ( MFCLOCK_STATE_STOPPED + 1 ) \\r\\n    } \\tMFCLOCK_STATE;"},"_MFCONTENTPROTECTIONDEVICE_INPUT_DATA":{"comment":"","exp":"","file":"mfidl.h","line":17319,"type":"Struct","value":"typedef struct _MFCONTENTPROTECTIONDEVICE_INPUT_DATA\\r\\n    {\\r\\n    DWORD HWProtectionFunctionID;\\r\\n    DWORD PrivateDataByteCount;\\r\\n    DWORD HWProtectionDataByteCount;\\r\\n    DWORD Reserved;\\r\\n    BYTE InputData[ 4 ];\\r\\n    } \\tMFCONTENTPROTECTIONDEVICE_INPUT_DATA;"},"_MFCONTENTPROTECTIONDEVICE_OUTPUT_DATA":{"comment":"","exp":"","file":"mfidl.h","line":17328,"type":"Struct","value":"typedef struct _MFCONTENTPROTECTIONDEVICE_OUTPUT_DATA\\r\\n    {\\r\\n    DWORD PrivateDataByteCount;\\r\\n    DWORD MaxHWProtectionDataByteCount;\\r\\n    DWORD HWProtectionDataByteCount;\\r\\n    HRESULT Status;\\r\\n    LONGLONG TransportTimeInHundredsOfNanoseconds;\\r\\n    LONGLONG ExecutionTimeInHundredsOfNanoseconds;\\r\\n    BYTE OutputData[ 4 ];\\r\\n    } \\tMFCONTENTPROTECTIONDEVICE_OUTPUT_DATA;"},"_MFCONTENTPROTECTIONDEVICE_REALTIMECLIENT_DATA":{"comment":"","exp":"","file":"mfidl.h","line":17341,"type":"Struct","value":"typedef struct _MFCONTENTPROTECTIONDEVICE_REALTIMECLIENT_DATA {\\r\\n    DWORD TaskIndex;\\r\\n    WCHAR ClassName[MAX_PATH];\\r\\n    LONG BasePriority;\\r\\n} MFCONTENTPROTECTIONDEVICE_REALTIMECLIENT_DATA;"},"_MFCameraExtrinsic_CalibratedTransform":{"comment":"","exp":"","file":"mfapi.h","line":3436,"type":"Struct","value":"typedef struct _MFCameraExtrinsic_CalibratedTransform\\r\\n{\\r\\n    GUID            CalibrationId;\\r\\n    MF_FLOAT3       Position;\\r\\n    MF_QUATERNION   Orientation;\\r\\n} MFCameraExtrinsic_CalibratedTransform;"},"_MFCameraExtrinsics":{"comment":"","exp":"","file":"mfapi.h","line":3443,"type":"Struct","value":"typedef struct _MFCameraExtrinsics\\r\\n{\\r\\n    UINT32 TransformCount;\\r\\n    MFCameraExtrinsic_CalibratedTransform CalibratedTransforms[1];\\r\\n} MFCameraExtrinsics;"},"_MFCameraIntrinsic_CameraModel":{"comment":"","exp":"","file":"mfidl.h","line":20478,"type":"Struct","value":"typedef struct _MFCameraIntrinsic_CameraModel\\r\\n    {\\r\\n    FLOAT FocalLength_x;\\r\\n    FLOAT FocalLength_y;\\r\\n    FLOAT PrincipalPoint_x;\\r\\n    FLOAT PrincipalPoint_y;\\r\\n    } \\tMFCameraIntrinsic_CameraModel;"},"_MFCameraIntrinsic_DistortionModel":{"comment":"","exp":"","file":"mfapi.h","line":3475,"type":"Struct","value":"typedef struct _MFCameraIntrinsic_DistortionModel\\r\\n{\\r\\n    FLOAT Radial_k1;\\r\\n    FLOAT Radial_k2;\\r\\n    FLOAT Radial_k3;\\r\\n    FLOAT Tangential_p1;\\r\\n    FLOAT Tangential_p2;\\r\\n} MFCameraIntrinsic_DistortionModel;"},"_MFCameraIntrinsic_DistortionModel6KT":{"comment":"","exp":"","file":"mfidl.h","line":20486,"type":"Struct","value":"typedef struct _MFCameraIntrinsic_DistortionModel6KT\\r\\n    {\\r\\n    FLOAT Radial_k1;\\r\\n    FLOAT Radial_k2;\\r\\n    FLOAT Radial_k3;\\r\\n    FLOAT Radial_k4;\\r\\n    FLOAT Radial_k5;\\r\\n    FLOAT Radial_k6;\\r\\n    FLOAT Tangential_p1;\\r\\n    FLOAT Tangential_p2;\\r\\n    } \\tMFCameraIntrinsic_DistortionModel6KT;"},"_MFCameraIntrinsic_DistortionModelArcTan":{"comment":"","exp":"","file":"mfidl.h","line":20498,"type":"Struct","value":"typedef struct _MFCameraIntrinsic_DistortionModelArcTan\\r\\n    {\\r\\n    FLOAT Radial_k0;\\r\\n    FLOAT DistortionCenter_x;\\r\\n    FLOAT DistortionCenter_y;\\r\\n    FLOAT Tangential_x;\\r\\n    FLOAT Tangential_y;\\r\\n    } \\tMFCameraIntrinsic_DistortionModelArcTan;"},"_MFCameraIntrinsic_DistortionModelType":{"comment":"","exp":"","file":"mfidl.h","line":20507,"type":"Enum","value":"typedef\\r\\nenum _MFCameraIntrinsic_DistortionModelType\\r\\n    {\\r\\n        MFCameraIntrinsic_DistortionModelType_6KT\\t= 0,\\r\\n        MFCameraIntrinsic_DistortionModelType_ArcTan\\t= ( MFCameraIntrinsic_DistortionModelType_6KT + 1 ) \\r\\n    } \\tMFCameraIntrinsic_DistortionModelType;"},"_MFCameraIntrinsic_PinholeCameraModel":{"comment":"","exp":"","file":"mfapi.h","line":3469,"type":"Struct","value":"typedef struct _MFCameraIntrinsic_PinholeCameraModel\\r\\n{\\r\\n    MF_FLOAT2   FocalLength;\\r\\n    MF_FLOAT2   PrincipalPoint;\\r\\n} MFCameraIntrinsic_PinholeCameraModel;"},"_MFDepthMeasurement":{"comment":"","exp":"","file":"mfapi.h","line":2600,"type":"Enum","value":"typedef enum _MFDepthMeasurement\\r\\n{\\r\\n    DistanceToFocalPlane        = 0,\\r\\n    DistanceToOpticalCenter     = 1,\\r\\n} MFDepthMeasurement;"},"_MFExtendedCameraIntrinsic_IntrinsicModel":{"comment":"","exp":"","file":"mfidl.h","line":20514,"type":"Struct","value":"typedef struct _MFExtendedCameraIntrinsic_IntrinsicModel\\r\\n    {\\r\\n    UINT32 Width;\\r\\n    UINT32 Height;\\r\\n    UINT32 SplitFrameId;\\r\\n    MFCameraIntrinsic_CameraModel CameraModel;\\r\\n    } \\tMFExtendedCameraIntrinsic_IntrinsicModel;"},"_MFFOLDDOWN_MATRIX":{"comment":"","exp":"","file":"mfapi.h","line":2782,"type":"Struct","value":"typedef struct _MFFOLDDOWN_MATRIX\\r\\n{\\r\\n    UINT32 cbSize;\\r\\n    UINT32 cSrcChannels; \/\/ number of source channels\\r\\n    UINT32 cDstChannels; \/\/ number of destination channels\\r\\n    UINT32 dwChannelMask; \/\/ mask\\r\\n    LONG Coeff[64];\\r\\n} MFFOLDDOWN_MATRIX;"},"_MFFrameSourceTypes":{"comment":"","exp":"","file":"mfapi.h","line":2208,"type":"Enum","value":"typedef enum _MFFrameSourceTypes\\r\\n{\\r\\n    MFFrameSourceTypes_Color                = 0x0001,\\r\\n    MFFrameSourceTypes_Infrared             = 0x0002,\\r\\n    MFFrameSourceTypes_Depth                = 0x0004,\\r\\n    MFFrameSourceTypes_Image                = 0x0008,\\r\\n    MFFrameSourceTypes_Custom               = 0x0080\\r\\n} MFFrameSourceTypes;"},"_MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS":{"comment":"","exp":"","file":"mfidl.h","line":13157,"type":"Struct","value":"typedef struct _MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS\\r\\n    {\\r\\n    DWORD dwSize;\\r\\n    DWORD dwVer;\\r\\n    DWORD cbSignatureOffset;\\r\\n    DWORD cbSignatureSize;\\r\\n    DWORD cbExtensionOffset;\\r\\n    DWORD cbExtensionSize;\\r\\n    DWORD cActions;\\r\\n    MFINPUTTRUSTAUTHORITY_ACCESS_ACTION rgOutputActions[ 1 ];\\r\\n    } \\tMFINPUTTRUSTAUTHORITY_ACCESS_PARAMS;"},"_MFINPUTTRUSTAUTHORITY_ACTION":{"comment":"","exp":"","file":"mfidl.h","line":13150,"type":"Struct","value":"typedef struct _MFINPUTTRUSTAUTHORITY_ACTION\\r\\n    {\\r\\n    MFPOLICYMANAGER_ACTION Action;\\r\\n    BYTE *pbTicket;\\r\\n    DWORD cbTicket;\\r\\n    } \\tMFINPUTTRUSTAUTHORITY_ACCESS_ACTION;"},"_MFMEDIASOURCE_CHARACTERISTICS":{"comment":"","exp":"","file":"mfidl.h","line":1639,"type":"Enum","value":"typedef\\r\\nenum _MFMEDIASOURCE_CHARACTERISTICS\\r\\n    {\\r\\n        MFMEDIASOURCE_IS_LIVE\\t= 0x1,\\r\\n        MFMEDIASOURCE_CAN_SEEK\\t= 0x2,\\r\\n        MFMEDIASOURCE_CAN_PAUSE\\t= 0x4,\\r\\n        MFMEDIASOURCE_HAS_SLOW_SEEK\\t= 0x8,\\r\\n        MFMEDIASOURCE_HAS_MULTIPLE_PRESENTATIONS\\t= 0x10,\\r\\n        MFMEDIASOURCE_CAN_SKIPFORWARD\\t= 0x20,\\r\\n        MFMEDIASOURCE_CAN_SKIPBACKWARD\\t= 0x40,\\r\\n        MFMEDIASOURCE_DOES_NOT_USE_NETWORK\\t= 0x80\\r\\n    } \\tMFMEDIASOURCE_CHARACTERISTICS;"},"_MFMPEG2DLNASINKSTATS":{"comment":"","exp":"","file":"mfmp2dlna.h","line":160,"type":"Struct","value":"typedef struct _MFMPEG2DLNASINKSTATS\\r\\n{                                            \\r\\n   DWORDLONG  cBytesWritten;                 \\r\\n   BOOL       fPAL;                          \\r\\n   DWORD      fccVideo;                      \\r\\n   DWORD      dwVideoWidth;                  \\r\\n   DWORD      dwVideoHeight;                 \\r\\n   DWORDLONG  cVideoFramesReceived;          \\r\\n   DWORDLONG  cVideoFramesEncoded;           \\r\\n   DWORDLONG  cVideoFramesSkipped;           \\r\\n   DWORDLONG  cBlackVideoFramesEncoded;      \\r\\n   DWORDLONG  cVideoFramesDuplicated;        \\r\\n   DWORD      cAudioSamplesPerSec;           \\r\\n   DWORD      cAudioChannels;                \\r\\n   DWORDLONG  cAudioBytesReceived;           \\r\\n   DWORDLONG  cAudioFramesEncoded;           \\r\\n} MFMPEG2DLNASINKSTATS;"},"_MFNETSOURCE_CACHE_STATE":{"comment":"","exp":"","file":"mfidl.h","line":12654,"type":"Enum","value":"typedef\\r\\nenum _MFNETSOURCE_CACHE_STATE\\r\\n    {\\r\\n        MFNETSOURCE_CACHE_UNAVAILABLE\\t= 0,\\r\\n        MFNETSOURCE_CACHE_ACTIVE_WRITING\\t= ( MFNETSOURCE_CACHE_UNAVAILABLE + 1 ) ,\\r\\n        MFNETSOURCE_CACHE_ACTIVE_COMPLETE\\t= ( MFNETSOURCE_CACHE_ACTIVE_WRITING + 1 ) \\r\\n    } \\tMFNETSOURCE_CACHE_STATE;"},"_MFNETSOURCE_PROTOCOL_TYPE":{"comment":"","exp":"","file":"mfidl.h","line":12518,"type":"Enum","value":"typedef\\r\\nenum _MFNETSOURCE_PROTOCOL_TYPE\\r\\n    {\\r\\n        MFNETSOURCE_UNDEFINED\\t= 0,\\r\\n        MFNETSOURCE_HTTP\\t= 0x1,\\r\\n        MFNETSOURCE_RTSP\\t= 0x2,\\r\\n        MFNETSOURCE_FILE\\t= 0x3,\\r\\n        MFNETSOURCE_MULTICAST\\t= 0x4\\r\\n    } \\tMFNETSOURCE_PROTOCOL_TYPE;"},"_MFNETSOURCE_STATISTICS_IDS":{"comment":"","exp":"","file":"mfidl.h","line":12662,"type":"Enum","value":"typedef\\r\\nenum _MFNETSOURCE_STATISTICS_IDS\\r\\n    {\\r\\n        MFNETSOURCE_RECVPACKETS_ID\\t= 0,\\r\\n        MFNETSOURCE_LOSTPACKETS_ID\\t= ( MFNETSOURCE_RECVPACKETS_ID + 1 ) ,\\r\\n        MFNETSOURCE_RESENDSREQUESTED_ID\\t= ( MFNETSOURCE_LOSTPACKETS_ID + 1 ) ,\\r\\n        MFNETSOURCE_RESENDSRECEIVED_ID\\t= ( MFNETSOURCE_RESENDSREQUESTED_ID + 1 ) ,\\r\\n        MFNETSOURCE_RECOVEREDBYECCPACKETS_ID\\t= ( MFNETSOURCE_RESENDSRECEIVED_ID + 1 ) ,\\r\\n        MFNETSOURCE_RECOVEREDBYRTXPACKETS_ID\\t= ( MFNETSOURCE_RECOVEREDBYECCPACKETS_ID + 1 ) ,\\r\\n        MFNETSOURCE_OUTPACKETS_ID\\t= ( MFNETSOURCE_RECOVEREDBYRTXPACKETS_ID + 1 ) ,\\r\\n        MFNETSOURCE_RECVRATE_ID\\t= ( MFNETSOURCE_OUTPACKETS_ID + 1 ) ,\\r\\n        MFNETSOURCE_AVGBANDWIDTHBPS_ID\\t= ( MFNETSOURCE_RECVRATE_ID + 1 ) ,\\r\\n        MFNETSOURCE_BYTESRECEIVED_ID\\t= ( MFNETSOURCE_AVGBANDWIDTHBPS_ID + 1 ) ,\\r\\n        MFNETSOURCE_PROTOCOL_ID\\t= ( MFNETSOURCE_BYTESRECEIVED_ID + 1 ) ,\\r\\n        MFNETSOURCE_TRANSPORT_ID\\t= ( MFNETSOURCE_PROTOCOL_ID + 1 ) ,\\r\\n        MFNETSOURCE_CACHE_STATE_ID\\t= ( MFNETSOURCE_TRANSPORT_ID + 1 ) ,\\r\\n        MFNETSOURCE_LINKBANDWIDTH_ID\\t= ( MFNETSOURCE_CACHE_STATE_ID + 1 ) ,\\r\\n        MFNETSOURCE_CONTENTBITRATE_ID\\t= ( MFNETSOURCE_LINKBANDWIDTH_ID + 1 ) ,\\r\\n        MFNETSOURCE_SPEEDFACTOR_ID\\t= ( MFNETSOURCE_CONTENTBITRATE_ID + 1 ) ,\\r\\n        MFNETSOURCE_BUFFERSIZE_ID\\t= ( MFNETSOURCE_SPEEDFACTOR_ID + 1 ) ,\\r\\n        MFNETSOURCE_BUFFERPROGRESS_ID\\t= ( MFNETSOURCE_BUFFERSIZE_ID + 1 ) ,\\r\\n        MFNETSOURCE_LASTBWSWITCHTS_ID\\t= ( MFNETSOURCE_BUFFERPROGRESS_ID + 1 ) ,\\r\\n        MFNETSOURCE_SEEKRANGESTART_ID\\t= ( MFNETSOURCE_LASTBWSWITCHTS_ID + 1 ) ,\\r\\n        MFNETSOURCE_SEEKRANGEEND_ID\\t= ( MFNETSOURCE_SEEKRANGESTART_ID + 1 ) ,\\r\\n        MFNETSOURCE_BUFFERINGCOUNT_ID\\t= ( MFNETSOURCE_SEEKRANGEEND_ID + 1 ) ,\\r\\n        MFNETSOURCE_INCORRECTLYSIGNEDPACKETS_ID\\t= ( MFNETSOURCE_BUFFERINGCOUNT_ID + 1 ) ,\\r\\n        MFNETSOURCE_SIGNEDSESSION_ID\\t= ( MFNETSOURCE_INCORRECTLYSIGNEDPACKETS_ID + 1 ) ,\\r\\n        MFNETSOURCE_MAXBITRATE_ID\\t= ( MFNETSOURCE_SIGNEDSESSION_ID + 1 ) ,\\r\\n        MFNETSOURCE_RECEPTION_QUALITY_ID\\t= ( MFNETSOURCE_MAXBITRATE_ID + 1 ) ,\\r\\n        MFNETSOURCE_RECOVEREDPACKETS_ID\\t= ( MFNETSOURCE_RECEPTION_QUALITY_ID + 1 ) ,\\r\\n        MFNETSOURCE_VBR_ID\\t= ( MFNETSOURCE_RECOVEREDPACKETS_ID + 1 ) ,\\r\\n        MFNETSOURCE_DOWNLOADPROGRESS_ID\\t= ( MFNETSOURCE_VBR_ID + 1 ) ,\\r\\n        MFNETSOURCE_UNPREDEFINEDPROTOCOLNAME_ID\\t= ( MFNETSOURCE_DOWNLOADPROGRESS_ID + 1 ) \\r\\n    } \\tMFNETSOURCE_STATISTICS_IDS;"},"_MFNETSOURCE_TRANSPORT_TYPE":{"comment":"","exp":"","file":"mfidl.h","line":12643,"type":"Enum","value":"typedef\\r\\nenum _MFNETSOURCE_TRANSPORT_TYPE\\r\\n    {\\r\\n        MFNETSOURCE_UDP\\t= 0,\\r\\n        MFNETSOURCE_TCP\\t= ( MFNETSOURCE_UDP + 1 ) \\r\\n    } \\tMFNETSOURCE_TRANSPORT_TYPE;"},"_MFNET_PROXYSETTINGS":{"comment":"","exp":"","file":"mfidl.h","line":12757,"type":"Enum","value":"typedef\\r\\nenum _MFNET_PROXYSETTINGS\\r\\n    {\\r\\n        MFNET_PROXYSETTING_NONE\\t= 0,\\r\\n        MFNET_PROXYSETTING_MANUAL\\t= 1,\\r\\n        MFNET_PROXYSETTING_AUTO\\t= 2,\\r\\n        MFNET_PROXYSETTING_BROWSER\\t= 3\\r\\n    } \\tMFNET_PROXYSETTINGS;"},"_MFNetAuthenticationFlags":{"comment":"","exp":"","file":"mfidl.h","line":11691,"type":"Enum","value":"typedef\\r\\nenum _MFNetAuthenticationFlags\\r\\n    {\\r\\n        MFNET_AUTHENTICATION_PROXY\\t= 0x1,\\r\\n        MFNET_AUTHENTICATION_CLEAR_TEXT\\t= 0x2,\\r\\n        MFNET_AUTHENTICATION_LOGGED_ON_USER\\t= 0x4\\r\\n    } \\tMFNetAuthenticationFlags;"},"_MFNetCredentialManagerGetParam":{"comment":"","exp":"","file":"mfidl.h","line":11554,"type":"Struct","value":"typedef struct _MFNetCredentialManagerGetParam\\r\\n    {\\r\\n    HRESULT hrOp;\\r\\n    BOOL fAllowLoggedOnUser;\\r\\n    BOOL fClearTextPackage;\\r\\n    LPCWSTR pszUrl;\\r\\n    LPCWSTR pszSite;\\r\\n    LPCWSTR pszRealm;\\r\\n    LPCWSTR pszPackage;\\r\\n    LONG nRetries;\\r\\n    } \\tMFNetCredentialManagerGetParam;"},"_MFNetCredentialOptions":{"comment":"","exp":"","file":"mfidl.h","line":11683,"type":"Enum","value":"typedef\\r\\nenum _MFNetCredentialOptions\\r\\n    {\\r\\n        MFNET_CREDENTIAL_SAVE\\t= 0x1,\\r\\n        MFNET_CREDENTIAL_DONT_CACHE\\t= 0x2,\\r\\n        MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT\\t= 0x4\\r\\n    } \\tMFNetCredentialOptions;"},"_MFNetCredentialRequirements":{"comment":"","exp":"","file":"mfidl.h","line":11676,"type":"Enum","value":"typedef\\r\\nenum _MFNetCredentialRequirements\\r\\n    {\\r\\n        REQUIRE_PROMPT\\t= 0x1,\\r\\n        REQUIRE_SAVE_SELECTED\\t= 0x2\\r\\n    } \\tMFNetCredentialRequirements;"},"_MFNominalRange":{"comment":"","exp":"","file":"mfobjects.h","line":2719,"type":"Enum","value":"typedef\\r\\nenum _MFNominalRange\\r\\n    {\\r\\n        MFNominalRange_Unknown\\t= 0,\\r\\n        MFNominalRange_Normal\\t= 1,\\r\\n        MFNominalRange_Wide\\t= 2,\\r\\n        MFNominalRange_0_255\\t= 1,\\r\\n        MFNominalRange_16_235\\t= 2,\\r\\n        MFNominalRange_48_208\\t= 3,\\r\\n        MFNominalRange_64_127\\t= 4,\\r\\n        MFNominalRange_Last\\t= ( MFNominalRange_64_127 + 1 ) ,\\r\\n        MFNominalRange_ForceDWORD\\t= 0x7fffffff\\r\\n    } \\tMFNominalRange;"},"_MFOffset":{"comment":"","exp":"","file":"mfobjects.h","line":2772,"type":"Struct","value":"typedef struct _MFOffset\\r\\n    {\\r\\n    WORD fract;\\r\\n    short value;\\r\\n    } \\tMFOffset;"},"_MFPOLICYMANAGER_ACTION":{"comment":"","exp":"","file":"mfidl.h","line":13136,"type":"Enum","value":"typedef\\r\\nenum _MFPOLICYMANAGER_ACTION\\r\\n    {\\r\\n        PEACTION_NO\\t= 0,\\r\\n        PEACTION_PLAY\\t= 1,\\r\\n        PEACTION_COPY\\t= 2,\\r\\n        PEACTION_EXPORT\\t= 3,\\r\\n        PEACTION_EXTRACT\\t= 4,\\r\\n        PEACTION_RESERVED1\\t= 5,\\r\\n        PEACTION_RESERVED2\\t= 6,\\r\\n        PEACTION_RESERVED3\\t= 7,\\r\\n        PEACTION_LAST\\t= 7\\r\\n    } \\tMFPOLICYMANAGER_ACTION;"},"_MFP_CREATION_OPTIONS":{"comment":"","exp":"","file":"mfplay.h","line":90,"type":"Enum","value":"typedef\\r\\nenum _MFP_CREATION_OPTIONS\\r\\n    {\\r\\n        MFP_OPTION_NONE\\t= 0,\\r\\n        MFP_OPTION_FREE_THREADED_CALLBACK\\t= 0x1,\\r\\n        MFP_OPTION_NO_MMCSS\\t= 0x2,\\r\\n        MFP_OPTION_NO_REMOTE_DESKTOP_OPTIMIZATION\\t= 0x4\\r\\n    } \\t_MFP_CREATION_OPTIONS;"},"_MFP_CREDENTIAL_FLAGS":{"comment":"","exp":"","file":"mfplay.h","line":122,"type":"Enum","value":"typedef\\r\\nenum _MFP_CREDENTIAL_FLAGS\\r\\n    {\\r\\n        MFP_CREDENTIAL_PROMPT\\t= 0x1,\\r\\n        MFP_CREDENTIAL_SAVE\\t= 0x2,\\r\\n        MFP_CREDENTIAL_DO_NOT_CACHE\\t= 0x4,\\r\\n        MFP_CREDENTIAL_CLEAR_TEXT\\t= 0x8,\\r\\n        MFP_CREDENTIAL_PROXY\\t= 0x10,\\r\\n        MFP_CREDENTIAL_LOGGED_ON_USER\\t= 0x20\\r\\n    } \\t_MFP_CREDENTIAL_FLAGS;"},"_MFP_MEDIAITEM_CHARACTERISTICS":{"comment":"","exp":"","file":"mfplay.h","line":111,"type":"Enum","value":"typedef\\r\\nenum _MFP_MEDIAITEM_CHARACTERISTICS\\r\\n    {\\r\\n        MFP_MEDIAITEM_IS_LIVE\\t= 0x1,\\r\\n        MFP_MEDIAITEM_CAN_SEEK\\t= 0x2,\\r\\n        MFP_MEDIAITEM_CAN_PAUSE\\t= 0x4,\\r\\n        MFP_MEDIAITEM_HAS_SLOW_SEEK\\t= 0x8\\r\\n    } \\t_MFP_MEDIAITEM_CHARACTERISTICS;"},"_MFPinholeCameraIntrinsic_IntrinsicModel":{"comment":"","exp":"","file":"mfapi.h","line":3484,"type":"Struct","value":"typedef struct _MFPinholeCameraIntrinsic_IntrinsicModel\\r\\n{\\r\\n    UINT32 Width;\\r\\n    UINT32 Height;\\r\\n    MFCameraIntrinsic_PinholeCameraModel CameraModel;\\r\\n    MFCameraIntrinsic_DistortionModel DistortionModel;\\r\\n} MFPinholeCameraIntrinsic_IntrinsicModel;"},"_MFPinholeCameraIntrinsics":{"comment":"","exp":"","file":"mfapi.h","line":3492,"type":"Struct","value":"typedef struct _MFPinholeCameraIntrinsics\\r\\n{\\r\\n    UINT32 IntrinsicModelCount;\\r\\n    MFPinholeCameraIntrinsic_IntrinsicModel IntrinsicModels[1];\\r\\n} MFPinholeCameraIntrinsics;"},"_MFRATE_DIRECTION":{"comment":"","exp":"","file":"mfidl.h","line":7865,"type":"Enum","value":"typedef\\r\\nenum _MFRATE_DIRECTION\\r\\n    {\\r\\n        MFRATE_FORWARD\\t= 0,\\r\\n        MFRATE_REVERSE\\t= ( MFRATE_FORWARD + 1 ) \\r\\n    } \\tMFRATE_DIRECTION;"},"_MFRR_COMPONENTS":{"comment":"","exp":"","file":"mfidl.h","line":7574,"type":"Struct","value":"typedef struct _MFRR_COMPONENTS\\r\\n{ \\r\\n \\r\\n    \/\/ Version number  \\r\\n    DWORD dwRRInfoVersion; \\r\\n \\r\\n    \/\/ Number of components in list \\r\\n    DWORD dwRRComponents; \\r\\n \\r\\n    \/\/ points to the end of this structure that has  \\r\\n    \/\/ allocated memory for the array of component info structures \\r\\n    PMFRR_COMPONENT_HASH_INFO pRRComponents;  \\r\\n \\r\\n}   MFRR_COMPONENTS, *PMFRR_COMPONENTS;"},"_MFRR_COMPONENT_HASH_INFO":{"comment":"","exp":"","file":"mfidl.h","line":7558,"type":"Struct","value":"typedef struct _MFRR_COMPONENT_HASH_INFO\\r\\n{ \\r\\n    \/\/ Reason for failure (revoked or unsigned or badly signed).   \\r\\n    DWORD ulReason; \\r\\n \\r\\n    \/\/ Header hash of the component \\r\\n    WCHAR rgHeaderHash[STR_HASH_LEN];  \\r\\n \\r\\n    \/\/ Hash of public key if one of the certificates  \\r\\n    \/\/ in the signing certificate chain is revoked \\r\\n    WCHAR rgPublicKeyHash[STR_HASH_LEN];  \\r\\n \\r\\n    \/\/ Component name (full path name) \\r\\n    WCHAR wszName[MAX_PATH];     \\r\\n \\r\\n}   MFRR_COMPONENT_HASH_INFO, *PMFRR_COMPONENT_HASH_INFO;"},"_MFRatio":{"comment":"","exp":"","file":"mfobjects.h","line":2766,"type":"Struct","value":"typedef struct _MFRatio\\r\\n    {\\r\\n    DWORD Numerator;\\r\\n    DWORD Denominator;\\r\\n    } \\tMFRatio;"},"_MFSHUTDOWN_STATUS":{"comment":"","exp":"","file":"mfidl.h","line":6919,"type":"Enum","value":"typedef\\r\\nenum _MFSHUTDOWN_STATUS\\r\\n    {\\r\\n        MFSHUTDOWN_INITIATED\\t= 0,\\r\\n        MFSHUTDOWN_COMPLETED\\t= ( MFSHUTDOWN_INITIATED + 1 ) \\r\\n    } \\tMFSHUTDOWN_STATUS;"},"_MFSINK_WMDRMACTION":{"comment":"","exp":"","file":"wmcontainer.h","line":2511,"type":"Enum","value":"typedef\\r\\nenum _MFSINK_WMDRMACTION\\r\\n    {\\r\\n        MFSINK_WMDRMACTION_UNDEFINED\\t= 0,\\r\\n        MFSINK_WMDRMACTION_ENCODE\\t= 1,\\r\\n        MFSINK_WMDRMACTION_TRANSCODE\\t= 2,\\r\\n        MFSINK_WMDRMACTION_TRANSCRYPT\\t= 3,\\r\\n        MFSINK_WMDRMACTION_LAST\\t= 3\\r\\n    } \\tMFSINK_WMDRMACTION;"},"_MFSTREAMSINK_MARKER_TYPE":{"comment":"","exp":"","file":"mfidl.h","line":2509,"type":"Enum","value":"typedef\\r\\nenum _MFSTREAMSINK_MARKER_TYPE\\r\\n    {\\r\\n        MFSTREAMSINK_MARKER_DEFAULT\\t= 0,\\r\\n        MFSTREAMSINK_MARKER_ENDOFSEGMENT\\t= ( MFSTREAMSINK_MARKER_DEFAULT + 1 ) ,\\r\\n        MFSTREAMSINK_MARKER_TICK\\t= ( MFSTREAMSINK_MARKER_ENDOFSEGMENT + 1 ) ,\\r\\n        MFSTREAMSINK_MARKER_EVENT\\t= ( MFSTREAMSINK_MARKER_TICK + 1 ) \\r\\n    } \\tMFSTREAMSINK_MARKER_TYPE;"},"_MFSampleEncryptionProtectionScheme":{"comment":"","exp":"","file":"mfapi.h","line":931,"type":"Enum","value":"typedef enum _MFSampleEncryptionProtectionScheme\\r\\n{\\r\\n    MF_SAMPLE_ENCRYPTION_PROTECTION_SCHEME_NONE = 0,\\r\\n    MF_SAMPLE_ENCRYPTION_PROTECTION_SCHEME_AES_CTR = 1,\\r\\n    MF_SAMPLE_ENCRYPTION_PROTECTION_SCHEME_AES_CBC = 2,\\r\\n} MFSampleEncryptionProtectionScheme;"},"_MFSequencerTopologyFlags":{"comment":"","exp":"","file":"mfidl.h","line":10470,"type":"Enum","value":"typedef\\r\\nenum _MFSequencerTopologyFlags\\r\\n    {\\r\\n        SequencerTopologyFlags_Last\\t= 0x1\\r\\n    } \\tMFSequencerTopologyFlags;"},"_MFStandardVideoFormat":{"comment":"","exp":"","file":"mfobjects.h","line":2875,"type":"Enum","value":"typedef\\r\\nenum _MFStandardVideoFormat\\r\\n    {\\r\\n        MFStdVideoFormat_reserved\\t= 0,\\r\\n        MFStdVideoFormat_NTSC\\t= ( MFStdVideoFormat_reserved + 1 ) ,\\r\\n        MFStdVideoFormat_PAL\\t= ( MFStdVideoFormat_NTSC + 1 ) ,\\r\\n        MFStdVideoFormat_DVD_NTSC\\t= ( MFStdVideoFormat_PAL + 1 ) ,\\r\\n        MFStdVideoFormat_DVD_PAL\\t= ( MFStdVideoFormat_DVD_NTSC + 1 ) ,\\r\\n        MFStdVideoFormat_DV_PAL\\t= ( MFStdVideoFormat_DVD_PAL + 1 ) ,\\r\\n        MFStdVideoFormat_DV_NTSC\\t= ( MFStdVideoFormat_DV_PAL + 1 ) ,\\r\\n        MFStdVideoFormat_ATSC_SD480i\\t= ( MFStdVideoFormat_DV_NTSC + 1 ) ,\\r\\n        MFStdVideoFormat_ATSC_HD1080i\\t= ( MFStdVideoFormat_ATSC_SD480i + 1 ) ,\\r\\n        MFStdVideoFormat_ATSC_HD720p\\t= ( MFStdVideoFormat_ATSC_HD1080i + 1 ) \\r\\n    } \\tMFStandardVideoFormat;"},"_MFTOPONODE_ATTRIBUTE_UPDATE":{"comment":"","exp":"","file":"mfidl.h","line":10821,"type":"Struct","value":"typedef struct _MFTOPONODE_ATTRIBUTE_UPDATE\\r\\n    {\\r\\n    TOPOID NodeId;\\r\\n    GUID guidAttributeKey;\\r\\n    MF_ATTRIBUTE_TYPE attrType;\\r\\n    \/* [switch_type][switch_is] *\/ union \\r\\n        {\\r\\n        \/* [case()] *\/ UINT32 u32;\\r\\n        \/* [case()] *\/ UINT64 u64;\\r\\n        \/* [case()] *\/ double d;\\r\\n        \/* [default] *\/  \/* Empty union arm *\/ \\r\\n        } \\t;\\r\\n    } \\tMFTOPONODE_ATTRIBUTE_UPDATE;"},"_MFT_DRAIN_TYPE":{"comment":"","exp":"","file":"mftransform.h","line":146,"type":"Enum","value":"enum _MFT_DRAIN_TYPE\\r\\n    {\\r\\n        MFT_DRAIN_PRODUCE_TAILS\\t= 0,\\r\\n        MFT_DRAIN_NO_TAILS\\t= 0x1\\r\\n    } ;"},"_MFT_ENUM_FLAG":{"comment":"","exp":"","file":"mfapi.h","line":1889,"type":"Enum","value":"enum _MFT_ENUM_FLAG\\r\\n{\\r\\n    MFT_ENUM_FLAG_SYNCMFT                         = 0x00000001, \/\/ Enumerates V1 MFTs. This is default.\\r\\n    MFT_ENUM_FLAG_ASYNCMFT                        = 0x00000002, \/\/ Enumerates only software async MFTs also known as V2 MFTs\\r\\n    MFT_ENUM_FLAG_HARDWARE                        = 0x00000004, \/\/ Enumerates V2 hardware async MFTs\\r\\n    MFT_ENUM_FLAG_FIELDOFUSE                      = 0x00000008, \/\/ Enumerates MFTs that require unlocking\\r\\n    MFT_ENUM_FLAG_LOCALMFT                        = 0x00000010, \/\/ Enumerates Locally (in-process) registered MFTs\\r\\n    MFT_ENUM_FLAG_TRANSCODE_ONLY                  = 0x00000020, \/\/ Enumerates decoder MFTs used by transcode only    \\r\\n    MFT_ENUM_FLAG_SORTANDFILTER                   = 0x00000040, \/\/ Apply system local, do not use and preferred sorting and filtering\\r\\n    MFT_ENUM_FLAG_SORTANDFILTER_APPROVED_ONLY     = 0x000000C0, \/\/ Similar to MFT_ENUM_FLAG_SORTANDFILTER, but apply a local policy of: MF_PLUGIN_CONTROL_POLICY_USE_APPROVED_PLUGINS\\r\\n    MFT_ENUM_FLAG_SORTANDFILTER_WEB_ONLY          = 0x00000140, \/\/ Similar to MFT_ENUM_FLAG_SORTANDFILTER, but apply a local policy of: MF_PLUGIN_CONTROL_POLICY_USE_WEB_PLUGINS\\r\\n    MFT_ENUM_FLAG_SORTANDFILTER_WEB_ONLY_EDGEMODE = 0x00000240, \/\/ Similar to MFT_ENUM_FLAG_SORTANDFILTER, but apply a local policy of: MF_PLUGIN_CONTROL_POLICY_USE_WEB_PLUGINS_EDGEMODE\\r\\n    MFT_ENUM_FLAG_UNTRUSTED_STOREMFT              = 0x00000400, \/\/ Enumerates all untrusted store MFTs downloaded from the store\\r\\n    MFT_ENUM_FLAG_ALL                             = 0x0000003F, \/\/ Enumerates all MFTs including SW and HW MFTs and applies filtering\\r\\n};"},"_MFT_INPUT_DATA_BUFFER_FLAGS":{"comment":"","exp":"","file":"mftransform.h","line":82,"type":"Enum","value":"enum _MFT_INPUT_DATA_BUFFER_FLAGS\\r\\n    {\\r\\n        MFT_INPUT_DATA_BUFFER_PLACEHOLDER\\t= 0xffffffff\\r\\n    } ;"},"_MFT_INPUT_STATUS_FLAGS":{"comment":"","exp":"","file":"mftransform.h","line":95,"type":"Enum","value":"enum _MFT_INPUT_STATUS_FLAGS\\r\\n    {\\r\\n        MFT_INPUT_STATUS_ACCEPT_DATA\\t= 0x1\\r\\n    } ;"},"_MFT_INPUT_STREAM_INFO":{"comment":"","exp":"","file":"mftransform.h","line":174,"type":"Struct","value":"typedef struct _MFT_INPUT_STREAM_INFO\\r\\n    {\\r\\n    LONGLONG hnsMaxLatency;\\r\\n    DWORD dwFlags;\\r\\n    DWORD cbSize;\\r\\n    DWORD cbMaxLookahead;\\r\\n    DWORD cbAlignment;\\r\\n    } \\tMFT_INPUT_STREAM_INFO;"},"_MFT_INPUT_STREAM_INFO_FLAGS":{"comment":"","exp":"","file":"mftransform.h","line":105,"type":"Enum","value":"enum _MFT_INPUT_STREAM_INFO_FLAGS\\r\\n    {\\r\\n        MFT_INPUT_STREAM_WHOLE_SAMPLES\\t= 0x1,\\r\\n        MFT_INPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER\\t= 0x2,\\r\\n        MFT_INPUT_STREAM_FIXED_SAMPLE_SIZE\\t= 0x4,\\r\\n        MFT_INPUT_STREAM_HOLDS_BUFFERS\\t= 0x8,\\r\\n        MFT_INPUT_STREAM_DOES_NOT_ADDREF\\t= 0x100,\\r\\n        MFT_INPUT_STREAM_REMOVABLE\\t= 0x200,\\r\\n        MFT_INPUT_STREAM_OPTIONAL\\t= 0x400,\\r\\n        MFT_INPUT_STREAM_PROCESSES_IN_PLACE\\t= 0x800\\r\\n    } ;"},"_MFT_MESSAGE_TYPE":{"comment":"","exp":"","file":"mftransform.h","line":154,"type":"Enum","value":"typedef\\r\\nenum _MFT_MESSAGE_TYPE\\r\\n    {\\r\\n        MFT_MESSAGE_COMMAND_FLUSH\\t= 0,\\r\\n        MFT_MESSAGE_COMMAND_DRAIN\\t= 0x1,\\r\\n        MFT_MESSAGE_SET_D3D_MANAGER\\t= 0x2,\\r\\n        MFT_MESSAGE_DROP_SAMPLES\\t= 0x3,\\r\\n        MFT_MESSAGE_COMMAND_TICK\\t= 0x4,\\r\\n        MFT_MESSAGE_NOTIFY_BEGIN_STREAMING\\t= 0x10000000,\\r\\n        MFT_MESSAGE_NOTIFY_END_STREAMING\\t= 0x10000001,\\r\\n        MFT_MESSAGE_NOTIFY_END_OF_STREAM\\t= 0x10000002,\\r\\n        MFT_MESSAGE_NOTIFY_START_OF_STREAM\\t= 0x10000003,\\r\\n        MFT_MESSAGE_NOTIFY_RELEASE_RESOURCES\\t= 0x10000004,\\r\\n        MFT_MESSAGE_NOTIFY_REACQUIRE_RESOURCES\\t= 0x10000005,\\r\\n        MFT_MESSAGE_NOTIFY_EVENT\\t= 0x10000006,\\r\\n        MFT_MESSAGE_COMMAND_SET_OUTPUT_STREAM_STATE\\t= 0x10000007,\\r\\n        MFT_MESSAGE_COMMAND_FLUSH_OUTPUT_STREAM\\t= 0x10000008,\\r\\n        MFT_MESSAGE_COMMAND_MARKER\\t= 0x20000000\\r\\n    } \\tMFT_MESSAGE_TYPE;"},"_MFT_OUTPUT_DATA_BUFFER":{"comment":"","exp":"","file":"mftransform.h","line":190,"type":"Struct","value":"typedef struct _MFT_OUTPUT_DATA_BUFFER\\r\\n    {\\r\\n    DWORD dwStreamID;\\r\\n    IMFSample *pSample;\\r\\n    DWORD dwStatus;\\r\\n    IMFCollection *pEvents;\\r\\n    } \\tMFT_OUTPUT_DATA_BUFFER;"},"_MFT_OUTPUT_DATA_BUFFER_FLAGS":{"comment":"","exp":"","file":"mftransform.h","line":87,"type":"Enum","value":"enum _MFT_OUTPUT_DATA_BUFFER_FLAGS\\r\\n    {\\r\\n        MFT_OUTPUT_DATA_BUFFER_INCOMPLETE\\t= 0x1000000,\\r\\n        MFT_OUTPUT_DATA_BUFFER_FORMAT_CHANGE\\t= 0x100,\\r\\n        MFT_OUTPUT_DATA_BUFFER_STREAM_END\\t= 0x200,\\r\\n        MFT_OUTPUT_DATA_BUFFER_NO_SAMPLE\\t= 0x300\\r\\n    } ;"},"_MFT_OUTPUT_STATUS_FLAGS":{"comment":"","exp":"","file":"mftransform.h","line":100,"type":"Enum","value":"enum _MFT_OUTPUT_STATUS_FLAGS\\r\\n    {\\r\\n        MFT_OUTPUT_STATUS_SAMPLE_READY\\t= 0x1\\r\\n    } ;"},"_MFT_OUTPUT_STREAM_INFO":{"comment":"","exp":"","file":"mftransform.h","line":183,"type":"Struct","value":"typedef struct _MFT_OUTPUT_STREAM_INFO\\r\\n    {\\r\\n    DWORD dwFlags;\\r\\n    DWORD cbSize;\\r\\n    DWORD cbAlignment;\\r\\n    } \\tMFT_OUTPUT_STREAM_INFO;"},"_MFT_OUTPUT_STREAM_INFO_FLAGS":{"comment":"","exp":"","file":"mftransform.h","line":117,"type":"Enum","value":"enum _MFT_OUTPUT_STREAM_INFO_FLAGS\\r\\n    {\\r\\n        MFT_OUTPUT_STREAM_WHOLE_SAMPLES\\t= 0x1,\\r\\n        MFT_OUTPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER\\t= 0x2,\\r\\n        MFT_OUTPUT_STREAM_FIXED_SAMPLE_SIZE\\t= 0x4,\\r\\n        MFT_OUTPUT_STREAM_DISCARDABLE\\t= 0x8,\\r\\n        MFT_OUTPUT_STREAM_OPTIONAL\\t= 0x10,\\r\\n        MFT_OUTPUT_STREAM_PROVIDES_SAMPLES\\t= 0x100,\\r\\n        MFT_OUTPUT_STREAM_CAN_PROVIDE_SAMPLES\\t= 0x200,\\r\\n        MFT_OUTPUT_STREAM_LAZY_READ\\t= 0x400,\\r\\n        MFT_OUTPUT_STREAM_REMOVABLE\\t= 0x800\\r\\n    } ;"},"_MFT_PROCESS_OUTPUT_FLAGS":{"comment":"","exp":"","file":"mftransform.h","line":135,"type":"Enum","value":"enum _MFT_PROCESS_OUTPUT_FLAGS\\r\\n    {\\r\\n        MFT_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER\\t= 0x1,\\r\\n        MFT_PROCESS_OUTPUT_REGENERATE_LAST_OUTPUT\\t= 0x2\\r\\n    } ;"},"_MFT_PROCESS_OUTPUT_STATUS":{"comment":"","exp":"","file":"mftransform.h","line":141,"type":"Enum","value":"enum _MFT_PROCESS_OUTPUT_STATUS\\r\\n    {\\r\\n        MFT_PROCESS_OUTPUT_STATUS_NEW_STREAMS\\t= 0x100\\r\\n    } ;"},"_MFT_REGISTRATION_INFO":{"comment":"","exp":"","file":"mfidl.h","line":16291,"type":"Struct","value":"typedef struct _MFT_REGISTRATION_INFO\\r\\n    {\\r\\n    CLSID clsid;\\r\\n    GUID guidCategory;\\r\\n    UINT32 uiFlags;\\r\\n    LPCWSTR pszName;\\r\\n    DWORD cInTypes;\\r\\n    \/* [size_is] *\/ MFT_REGISTER_TYPE_INFO *pInTypes;\\r\\n    DWORD cOutTypes;\\r\\n    \/* [size_is] *\/ MFT_REGISTER_TYPE_INFO *pOutTypes;\\r\\n    } \\tMFT_REGISTRATION_INFO;"},"_MFT_SET_TYPE_FLAGS":{"comment":"","exp":"","file":"mftransform.h","line":130,"type":"Enum","value":"enum _MFT_SET_TYPE_FLAGS\\r\\n    {\\r\\n        MFT_SET_TYPE_TEST_ONLY\\t= 0x1\\r\\n    } ;"},"_MFT_STREAM_STATE_PARAM":{"comment":"","exp":"","file":"mftransform.h","line":1292,"type":"Struct","value":"typedef struct _MFT_STREAM_STATE_PARAM\\r\\n    {\\r\\n    DWORD StreamId;\\r\\n    MF_STREAM_STATE State;\\r\\n    } \\tMFT_STREAM_STATE_PARAM;"},"_MFVIDEOFORMAT":{"comment":"","exp":"","file":"mfobjects.h","line":2863,"type":"Struct","value":"typedef struct _MFVIDEOFORMAT\\r\\n    {\\r\\n    DWORD dwSize;\\r\\n    MFVideoInfo videoInfo;\\r\\n    GUID guidFormat;\\r\\n    MFVideoCompressedInfo compressedInfo;\\r\\n    MFVideoSurfaceInfo surfaceInfo;\\r\\n    } \\tMFVIDEOFORMAT;"},"_MFVideo3DFormat":{"comment":"","exp":"","file":"mfapi.h","line":2477,"type":"Enum","value":"typedef enum _MFVideo3DFormat {\\r\\n    MFVideo3DSampleFormat_BaseView              = 0,\\r\\n    MFVideo3DSampleFormat_MultiView             = 1,\\r\\n    MFVideo3DSampleFormat_Packed_LeftRight      = 2,\\r\\n    MFVideo3DSampleFormat_Packed_TopBottom      = 3,\\r\\n} MFVideo3DFormat;"},"_MFVideo3DSampleFormat":{"comment":"","exp":"","file":"mfapi.h","line":2508,"type":"Enum","value":"typedef enum _MFVideo3DSampleFormat {\\r\\n    MFSampleExtension_3DVideo_MultiView         = 1,\\r\\n    MFSampleExtension_3DVideo_Packed            = 0,\\r\\n} MFVideo3DSampleFormat;"},"_MFVideoArea":{"comment":"","exp":"","file":"mfobjects.h","line":2778,"type":"Struct","value":"typedef struct _MFVideoArea\\r\\n    {\\r\\n    MFOffset OffsetX;\\r\\n    MFOffset OffsetY;\\r\\n    SIZE Area;\\r\\n    } \\tMFVideoArea;"},"_MFVideoChromaSubsampling":{"comment":"","exp":"","file":"mfobjects.h","line":2703,"type":"Enum","value":"typedef\\r\\nenum _MFVideoChromaSubsampling\\r\\n    {\\r\\n        MFVideoChromaSubsampling_Unknown\\t= 0,\\r\\n        MFVideoChromaSubsampling_ProgressiveChroma\\t= 0x8,\\r\\n        MFVideoChromaSubsampling_Horizontally_Cosited\\t= 0x4,\\r\\n        MFVideoChromaSubsampling_Vertically_Cosited\\t= 0x2,\\r\\n        MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes\\t= 0x1,\\r\\n        MFVideoChromaSubsampling_MPEG2\\t= ( MFVideoChromaSubsampling_Horizontally_Cosited | MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes ) ,\\r\\n        MFVideoChromaSubsampling_MPEG1\\t= MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes,\\r\\n        MFVideoChromaSubsampling_DV_PAL\\t= ( MFVideoChromaSubsampling_Horizontally_Cosited | MFVideoChromaSubsampling_Vertically_Cosited ) ,\\r\\n        MFVideoChromaSubsampling_Cosited\\t= ( ( MFVideoChromaSubsampling_Horizontally_Cosited | MFVideoChromaSubsampling_Vertically_Cosited )  | MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes ) ,\\r\\n        MFVideoChromaSubsampling_Last\\t= ( MFVideoChromaSubsampling_Cosited + 1 ) ,\\r\\n        MFVideoChromaSubsampling_ForceDWORD\\t= 0x7fffffff\\r\\n    } \\tMFVideoChromaSubsampling;"},"_MFVideoCompressedInfo":{"comment":"","exp":"","file":"mfobjects.h","line":2856,"type":"Struct","value":"typedef struct _MFVideoCompressedInfo\\r\\n    {\\r\\n    LONGLONG AvgBitrate;\\r\\n    LONGLONG AvgBitErrorRate;\\r\\n    DWORD MaxKeyFrameSpacing;\\r\\n    } \\tMFVideoCompressedInfo;"},"_MFVideoDRMFlags":{"comment":"","exp":"","file":"mfapi.h","line":2911,"type":"Enum","value":"typedef enum _MFVideoDRMFlags {\\r\\n    MFVideoDRMFlag_None                 = 0,\\r\\n    MFVideoDRMFlag_AnalogProtected      = 1,\\r\\n    MFVideoDRMFlag_DigitallyProtected   = 2,\\r\\n} MFVideoDRMFlags;"},"_MFVideoDSPMode":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3800,"type":"Enum","value":"typedef\\r\\nenum _MFVideoDSPMode\\r\\n    {\\r\\n        MFVideoDSPMode_Passthrough\\t= 1,\\r\\n        MFVideoDSPMode_Stabilization\\t= 4\\r\\n    } \\tMFVideoDSPMode;"},"_MFVideoFlags":{"comment":"","exp":"","file":"mfobjects.h","line":2737,"type":"Enum","value":"typedef\\r\\nenum _MFVideoFlags\\r\\n    {\\r\\n        MFVideoFlag_PAD_TO_Mask\\t= ( 0x1 | 0x2 ) ,\\r\\n        MFVideoFlag_PAD_TO_None\\t= ( 0 * 0x1 ) ,\\r\\n        MFVideoFlag_PAD_TO_4x3\\t= ( 1 * 0x1 ) ,\\r\\n        MFVideoFlag_PAD_TO_16x9\\t= ( 2 * 0x1 ) ,\\r\\n        MFVideoFlag_SrcContentHintMask\\t= ( ( 0x4 | 0x8 )  | 0x10 ) ,\\r\\n        MFVideoFlag_SrcContentHintNone\\t= ( 0 * 0x4 ) ,\\r\\n        MFVideoFlag_SrcContentHint16x9\\t= ( 1 * 0x4 ) ,\\r\\n        MFVideoFlag_SrcContentHint235_1\\t= ( 2 * 0x4 ) ,\\r\\n        MFVideoFlag_AnalogProtected\\t= 0x20,\\r\\n        MFVideoFlag_DigitallyProtected\\t= 0x40,\\r\\n        MFVideoFlag_ProgressiveContent\\t= 0x80,\\r\\n        MFVideoFlag_FieldRepeatCountMask\\t= ( ( 0x100 | 0x200 )  | 0x400 ) ,\\r\\n        MFVideoFlag_FieldRepeatCountShift\\t= 8,\\r\\n        MFVideoFlag_ProgressiveSeqReset\\t= 0x800,\\r\\n        MFVideoFlag_PanScanEnabled\\t= 0x20000,\\r\\n        MFVideoFlag_LowerFieldFirst\\t= 0x40000,\\r\\n        MFVideoFlag_BottomUpLinearRep\\t= 0x80000,\\r\\n        MFVideoFlags_DXVASurface\\t= 0x100000,\\r\\n        MFVideoFlags_RenderTargetSurface\\t= 0x400000,\\r\\n        MFVideoFlags_ForceQWORD\\t= 0x7fffffff\\r\\n    } \\tMFVideoFlags;"},"_MFVideoInfo":{"comment":"","exp":"","file":"mfobjects.h","line":2793,"type":"Struct","value":"typedef struct _MFVideoInfo\\r\\n    {\\r\\n    DWORD dwWidth;\\r\\n    DWORD dwHeight;\\r\\n    MFRatio PixelAspectRatio;\\r\\n    MFVideoChromaSubsampling SourceChromaSubsampling;\\r\\n    MFVideoInterlaceMode InterlaceMode;\\r\\n    MFVideoTransferFunction TransferFunction;\\r\\n    MFVideoPrimaries ColorPrimaries;\\r\\n    MFVideoTransferMatrix TransferMatrix;\\r\\n    MFVideoLighting SourceLighting;\\r\\n    MFRatio FramesPerSecond;\\r\\n    MFNominalRange NominalRange;\\r\\n    MFVideoArea GeometricAperture;\\r\\n    MFVideoArea MinimumDisplayAperture;\\r\\n    MFVideoArea PanScanAperture;\\r\\n    unsigned __int64 VideoFlags;\\r\\n    } \\tMFVideoInfo;"},"_MFVideoInterlaceMode":{"comment":"","exp":"","file":"mfobjects.h","line":2617,"type":"Enum","value":"typedef\\r\\nenum _MFVideoInterlaceMode\\r\\n    {\\r\\n        MFVideoInterlace_Unknown\\t= 0,\\r\\n        MFVideoInterlace_Progressive\\t= 2,\\r\\n        MFVideoInterlace_FieldInterleavedUpperFirst\\t= 3,\\r\\n        MFVideoInterlace_FieldInterleavedLowerFirst\\t= 4,\\r\\n        MFVideoInterlace_FieldSingleUpper\\t= 5,\\r\\n        MFVideoInterlace_FieldSingleLower\\t= 6,\\r\\n        MFVideoInterlace_MixedInterlaceOrProgressive\\t= 7,\\r\\n        MFVideoInterlace_Last\\t= ( MFVideoInterlace_MixedInterlaceOrProgressive + 1 ) ,\\r\\n        MFVideoInterlace_ForceDWORD\\t= 0x7fffffff\\r\\n    } \\tMFVideoInterlaceMode;"},"_MFVideoLighting":{"comment":"","exp":"","file":"mfobjects.h","line":2678,"type":"Enum","value":"typedef\\r\\nenum _MFVideoLighting\\r\\n    {\\r\\n        MFVideoLighting_Unknown\\t= 0,\\r\\n        MFVideoLighting_bright\\t= 1,\\r\\n        MFVideoLighting_office\\t= 2,\\r\\n        MFVideoLighting_dim\\t= 3,\\r\\n        MFVideoLighting_dark\\t= 4,\\r\\n        MFVideoLighting_Last\\t= ( MFVideoLighting_dark + 1 ) ,\\r\\n        MFVideoLighting_ForceDWORD\\t= 0x7fffffff\\r\\n    } \\tMFVideoLighting;"},"_MFVideoMixPrefs":{"comment":"","exp":"","file":"evr.h","line":1080,"type":"Enum","value":"typedef\\r\\nenum _MFVideoMixPrefs\\r\\n    {\\r\\n        MFVideoMixPrefs_ForceHalfInterlace\\t= 0x1,\\r\\n        MFVideoMixPrefs_AllowDropToHalfInterlace\\t= 0x2,\\r\\n        MFVideoMixPrefs_AllowDropToBob\\t= 0x4,\\r\\n        MFVideoMixPrefs_ForceBob\\t= 0x8,\\r\\n        MFVideoMixPrefs_EnableRotation\\t= 0x10,\\r\\n        MFVideoMixPrefs_Mask\\t= 0x1f\\r\\n    } \\tMFVideoMixPrefs;"},"_MFVideoPadFlags":{"comment":"","exp":"","file":"mfapi.h","line":2922,"type":"Enum","value":"typedef enum _MFVideoPadFlags {\\r\\n    MFVideoPadFlag_PAD_TO_None  = 0,\\r\\n    MFVideoPadFlag_PAD_TO_4x3   = 1,\\r\\n    MFVideoPadFlag_PAD_TO_16x9  = 2\\r\\n} MFVideoPadFlags;"},"_MFVideoPrimaries":{"comment":"","exp":"","file":"mfobjects.h","line":2658,"type":"Enum","value":"typedef\\r\\nenum _MFVideoPrimaries\\r\\n    {\\r\\n        MFVideoPrimaries_Unknown\\t= 0,\\r\\n        MFVideoPrimaries_reserved\\t= 1,\\r\\n        MFVideoPrimaries_BT709\\t= 2,\\r\\n        MFVideoPrimaries_BT470_2_SysM\\t= 3,\\r\\n        MFVideoPrimaries_BT470_2_SysBG\\t= 4,\\r\\n        MFVideoPrimaries_SMPTE170M\\t= 5,\\r\\n        MFVideoPrimaries_SMPTE240M\\t= 6,\\r\\n        MFVideoPrimaries_EBU3213\\t= 7,\\r\\n        MFVideoPrimaries_SMPTE_C\\t= 8,\\r\\n        MFVideoPrimaries_BT2020\\t= 9,\\r\\n        MFVideoPrimaries_XYZ\\t= 10,\\r\\n        MFVideoPrimaries_DCI_P3\\t= 11,\\r\\n        MFVideoPrimaries_ACES\\t= 12,\\r\\n        MFVideoPrimaries_Last\\t= ( MFVideoPrimaries_ACES + 1 ) ,\\r\\n        MFVideoPrimaries_ForceDWORD\\t= 0x7fffffff\\r\\n    } \\tMFVideoPrimaries;"},"_MFVideoRotationFormat":{"comment":"","exp":"","file":"mfapi.h","line":2526,"type":"Enum","value":"typedef enum _MFVideoRotationFormat {\\r\\n    MFVideoRotationFormat_0        = 0,\\r\\n    MFVideoRotationFormat_90       = 90,\\r\\n    MFVideoRotationFormat_180      = 180,\\r\\n    MFVideoRotationFormat_270      = 270,\\r\\n} MFVideoRotationFormat;"},"_MFVideoSphericalFormat":{"comment":"","exp":"","file":"mfidl.h","line":3614,"type":"Enum","value":"typedef\\r\\nenum _MFVideoSphericalFormat\\r\\n    {\\r\\n        MFVideoSphericalFormat_Unsupported\\t= 0,\\r\\n        MFVideoSphericalFormat_Equirectangular\\t= 1,\\r\\n        MFVideoSphericalFormat_CubeMap\\t= 2,\\r\\n        MFVideoSphericalFormat_3DMesh\\t= 3\\r\\n    } \\tMFVideoSphericalFormat;"},"_MFVideoSrcContentHintFlags":{"comment":"","exp":"","file":"mfapi.h","line":2932,"type":"Enum","value":"typedef enum _MFVideoSrcContentHintFlags {\\r\\n    MFVideoSrcContentHintFlag_None  = 0,\\r\\n    MFVideoSrcContentHintFlag_16x9  = 1,\\r\\n    MFVideoSrcContentHintFlag_235_1 = 2\\r\\n} MFVideoSrcContentHintFlags;"},"_MFVideoSurfaceInfo":{"comment":"","exp":"","file":"mfobjects.h","line":2849,"type":"Struct","value":"typedef struct _MFVideoSurfaceInfo\\r\\n    {\\r\\n    DWORD Format;\\r\\n    DWORD PaletteEntries;\\r\\n    \/* [size_is] *\/ MFPaletteEntry Palette[ 1 ];\\r\\n    } \\tMFVideoSurfaceInfo;"},"_MFVideoTransferFunction":{"comment":"","exp":"","file":"mfobjects.h","line":2633,"type":"Enum","value":"typedef\\r\\nenum _MFVideoTransferFunction\\r\\n    {\\r\\n        MFVideoTransFunc_Unknown\\t= 0,\\r\\n        MFVideoTransFunc_10\\t= 1,\\r\\n        MFVideoTransFunc_18\\t= 2,\\r\\n        MFVideoTransFunc_20\\t= 3,\\r\\n        MFVideoTransFunc_22\\t= 4,\\r\\n        MFVideoTransFunc_709\\t= 5,\\r\\n        MFVideoTransFunc_240M\\t= 6,\\r\\n        MFVideoTransFunc_sRGB\\t= 7,\\r\\n        MFVideoTransFunc_28\\t= 8,\\r\\n        MFVideoTransFunc_Log_100\\t= 9,\\r\\n        MFVideoTransFunc_Log_316\\t= 10,\\r\\n        MFVideoTransFunc_709_sym\\t= 11,\\r\\n        MFVideoTransFunc_2020_const\\t= 12,\\r\\n        MFVideoTransFunc_2020\\t= 13,\\r\\n        MFVideoTransFunc_26\\t= 14,\\r\\n        MFVideoTransFunc_2084\\t= 15,\\r\\n        MFVideoTransFunc_HLG\\t= 16,\\r\\n        MFVideoTransFunc_10_rel\\t= 17,\\r\\n        MFVideoTransFunc_Last\\t= ( MFVideoTransFunc_10_rel + 1 ) ,\\r\\n        MFVideoTransFunc_ForceDWORD\\t= 0x7fffffff\\r\\n    } \\tMFVideoTransferFunction;"},"_MFVideoTransferMatrix":{"comment":"","exp":"","file":"mfobjects.h","line":2690,"type":"Enum","value":"typedef\\r\\nenum _MFVideoTransferMatrix\\r\\n    {\\r\\n        MFVideoTransferMatrix_Unknown\\t= 0,\\r\\n        MFVideoTransferMatrix_BT709\\t= 1,\\r\\n        MFVideoTransferMatrix_BT601\\t= 2,\\r\\n        MFVideoTransferMatrix_SMPTE240M\\t= 3,\\r\\n        MFVideoTransferMatrix_BT2020_10\\t= 4,\\r\\n        MFVideoTransferMatrix_BT2020_12\\t= 5,\\r\\n        MFVideoTransferMatrix_Last\\t= ( MFVideoTransferMatrix_BT2020_12 + 1 ) ,\\r\\n        MFVideoTransferMatrix_ForceDWORD\\t= 0x7fffffff\\r\\n    } \\tMFVideoTransferMatrix;"},"_MFWaveFormatExConvertFlags":{"comment":"","exp":"","file":"mfapi.h","line":3639,"type":"Enum","value":"typedef enum _MFWaveFormatExConvertFlags {\\r\\n    MFWaveFormatExConvertFlag_Normal            = 0,\\r\\n    MFWaveFormatExConvertFlag_ForceExtensible   = 1\\r\\n} MFWaveFormatExConvertFlags;"},"_MF_ATTRIBUTES_MATCH_TYPE":{"comment":"","exp":"","file":"mfobjects.h","line":269,"type":"Enum","value":"typedef\\r\\nenum _MF_ATTRIBUTES_MATCH_TYPE\\r\\n    {\\r\\n        MF_ATTRIBUTES_MATCH_OUR_ITEMS\\t= 0,\\r\\n        MF_ATTRIBUTES_MATCH_THEIR_ITEMS\\t= 1,\\r\\n        MF_ATTRIBUTES_MATCH_ALL_ITEMS\\t= 2,\\r\\n        MF_ATTRIBUTES_MATCH_INTERSECTION\\t= 3,\\r\\n        MF_ATTRIBUTES_MATCH_SMALLER\\t= 4\\r\\n    } \\tMF_ATTRIBUTES_MATCH_TYPE;"},"_MF_ATTRIBUTE_TYPE":{"comment":"","exp":"","file":"mfobjects.h","line":257,"type":"Enum","value":"typedef\\r\\nenum _MF_ATTRIBUTE_TYPE\\r\\n    {\\r\\n        MF_ATTRIBUTE_UINT32\\t= VT_UI4,\\r\\n        MF_ATTRIBUTE_UINT64\\t= VT_UI8,\\r\\n        MF_ATTRIBUTE_DOUBLE\\t= VT_R8,\\r\\n        MF_ATTRIBUTE_GUID\\t= VT_CLSID,\\r\\n        MF_ATTRIBUTE_STRING\\t= VT_LPWSTR,\\r\\n        MF_ATTRIBUTE_BLOB\\t= ( VT_VECTOR | VT_UI1 ) ,\\r\\n        MF_ATTRIBUTE_IUNKNOWN\\t= VT_UNKNOWN\\r\\n    } \\tMF_ATTRIBUTE_TYPE;"},"_MF_CONNECT_METHOD":{"comment":"","exp":"","file":"mfidl.h","line":1284,"type":"Enum","value":"typedef\\r\\nenum _MF_CONNECT_METHOD\\r\\n    {\\r\\n        MF_CONNECT_DIRECT\\t= 0,\\r\\n        MF_CONNECT_ALLOW_CONVERTER\\t= 0x1,\\r\\n        MF_CONNECT_ALLOW_DECODER\\t= 0x3,\\r\\n        MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES\\t= 0x4,\\r\\n        MF_CONNECT_AS_OPTIONAL\\t= 0x10000,\\r\\n        MF_CONNECT_AS_OPTIONAL_BRANCH\\t= 0x20000\\r\\n    } \\tMF_CONNECT_METHOD;"},"_MF_CROSS_ORIGIN_POLICY":{"comment":"","exp":"","file":"mfidl.h","line":17643,"type":"Enum","value":"typedef\\r\\nenum _MF_CROSS_ORIGIN_POLICY\\r\\n    {\\r\\n        MF_CROSS_ORIGIN_POLICY_NONE\\t= 0,\\r\\n        MF_CROSS_ORIGIN_POLICY_ANONYMOUS\\t= 1,\\r\\n        MF_CROSS_ORIGIN_POLICY_USE_CREDENTIALS\\t= 2\\r\\n    } \\tMF_CROSS_ORIGIN_POLICY;"},"_MF_CUSTOM_DECODE_UNIT_TYPE":{"comment":"","exp":"","file":"mfapi.h","line":2676,"type":"Enum","value":"typedef enum _MF_CUSTOM_DECODE_UNIT_TYPE\\r\\n{\\r\\n    MF_DECODE_UNIT_NAL = 0,\\r\\n    MF_DECODE_UNIT_SEI = 1\\r\\n} MF_CUSTOM_DECODE_UNIT_TYPE;"},"_MF_FLOAT2":{"comment":"","exp":"","file":"mfapi.h","line":3415,"type":"Struct","value":"typedef struct _MF_FLOAT2\\r\\n{\\r\\n    FLOAT   x;\\r\\n    FLOAT   y;\\r\\n} MF_FLOAT2;"},"_MF_FLOAT3":{"comment":"","exp":"","file":"mfapi.h","line":3421,"type":"Struct","value":"typedef struct _MF_FLOAT3\\r\\n{\\r\\n    FLOAT   x;\\r\\n    FLOAT   y;\\r\\n    FLOAT   z;\\r\\n} MF_FLOAT3;"},"_MF_HDCP_STATUS":{"comment":"","exp":"","file":"mfmediaengine.h","line":4984,"type":"Enum","value":"typedef\\r\\nenum _MF_HDCP_STATUS\\r\\n    {\\r\\n        MF_HDCP_STATUS_ON\\t= 0,\\r\\n        MF_HDCP_STATUS_OFF\\t= 1,\\r\\n        MF_HDCP_STATUS_ON_WITH_TYPE_ENFORCEMENT\\t= 2\\r\\n    } \\tMF_HDCP_STATUS;"},"_MF_LEAKY_BUCKET_PAIR":{"comment":"","exp":"","file":"mfidl.h","line":10935,"type":"Struct","value":"typedef struct _MF_LEAKY_BUCKET_PAIR\\r\\n    {\\r\\n    DWORD dwBitrate;\\r\\n    DWORD msBufferWindow;\\r\\n    } \\tMF_LEAKY_BUCKET_PAIR;"},"_MF_MEDIA_ENGINE_KEYERR":{"comment":"","exp":"","file":"mfmediaengine.h","line":4631,"type":"Enum","value":"typedef\\r\\nenum _MF_MEDIA_ENGINE_KEYERR\\r\\n    {\\r\\n        MF_MEDIAENGINE_KEYERR_UNKNOWN\\t= 1,\\r\\n        MF_MEDIAENGINE_KEYERR_CLIENT\\t= 2,\\r\\n        MF_MEDIAENGINE_KEYERR_SERVICE\\t= 3,\\r\\n        MF_MEDIAENGINE_KEYERR_OUTPUT\\t= 4,\\r\\n        MF_MEDIAENGINE_KEYERR_HARDWARECHANGE\\t= 5,\\r\\n        MF_MEDIAENGINE_KEYERR_DOMAIN\\t= 6\\r\\n    } \\tMF_MEDIA_ENGINE_KEYERR;"},"_MF_OPM_ACP_PROTECTION_LEVEL":{"comment":"","exp":"","file":"mfidl.h","line":14330,"type":"Enum","value":"typedef\\r\\nenum _MF_OPM_ACP_PROTECTION_LEVEL\\r\\n    {\\r\\n        MF_OPM_ACP_OFF\\t= 0,\\r\\n        MF_OPM_ACP_LEVEL_ONE\\t= 1,\\r\\n        MF_OPM_ACP_LEVEL_TWO\\t= 2,\\r\\n        MF_OPM_ACP_LEVEL_THREE\\t= 3,\\r\\n        MF_OPM_ACP_FORCE_ULONG\\t= 0x7fffffff\\r\\n    } \\tMF_OPM_ACP_PROTECTION_LEVEL;"},"_MF_OPM_CGMSA_PROTECTION_LEVEL":{"comment":"","exp":"","file":"mfidl.h","line":14319,"type":"Enum","value":"typedef\\r\\nenum _MF_OPM_CGMSA_PROTECTION_LEVEL\\r\\n    {\\r\\n        MF_OPM_CGMSA_OFF\\t= 0,\\r\\n        MF_OPM_CGMSA_COPY_FREELY\\t= 0x1,\\r\\n        MF_OPM_CGMSA_COPY_NO_MORE\\t= 0x2,\\r\\n        MF_OPM_CGMSA_COPY_ONE_GENERATION\\t= 0x3,\\r\\n        MF_OPM_CGMSA_COPY_NEVER\\t= 0x4,\\r\\n        MF_OPM_CGMSA_REDISTRIBUTION_CONTROL_REQUIRED\\t= 0x8\\r\\n    } \\tMF_OPM_CGMSA_PROTECTION_LEVEL;"},"_MF_Plugin_Type":{"comment":"","exp":"","file":"mfobjects.h","line":5605,"type":"Enum","value":"typedef\\r\\nenum _MF_Plugin_Type\\r\\n    {\\r\\n        MF_Plugin_Type_MFT\\t= 0,\\r\\n        MF_Plugin_Type_MediaSource\\t= 1,\\r\\n        MF_Plugin_Type_MFT_MatchOutputType\\t= 2,\\r\\n        MF_Plugin_Type_Other\\t= ( DWORD  )-1\\r\\n    } \\tMF_Plugin_Type;"},"_MF_QUALITY_ADVISE_FLAGS":{"comment":"","exp":"","file":"mfidl.h","line":9699,"type":"Enum","value":"typedef\\r\\nenum _MF_QUALITY_ADVISE_FLAGS\\r\\n    {\\r\\n        MF_QUALITY_CANNOT_KEEP_UP\\t= 0x1\\r\\n    } \\tMF_QUALITY_ADVISE_FLAGS;"},"_MF_QUALITY_DROP_MODE":{"comment":"","exp":"","file":"mfidl.h","line":9670,"type":"Enum","value":"typedef\\r\\nenum _MF_QUALITY_DROP_MODE\\r\\n    {\\r\\n        MF_DROP_MODE_NONE\\t= 0,\\r\\n        MF_DROP_MODE_1\\t= 0x1,\\r\\n        MF_DROP_MODE_2\\t= 0x2,\\r\\n        MF_DROP_MODE_3\\t= 0x3,\\r\\n        MF_DROP_MODE_4\\t= 0x4,\\r\\n        MF_DROP_MODE_5\\t= 0x5,\\r\\n        MF_NUM_DROP_MODES\\t= 0x6\\r\\n    } \\tMF_QUALITY_DROP_MODE;"},"_MF_QUALITY_LEVEL":{"comment":"","exp":"","file":"mfidl.h","line":9682,"type":"Enum","value":"typedef\\r\\nenum _MF_QUALITY_LEVEL\\r\\n    {\\r\\n        MF_QUALITY_NORMAL\\t= 0,\\r\\n        MF_QUALITY_NORMAL_MINUS_1\\t= 0x1,\\r\\n        MF_QUALITY_NORMAL_MINUS_2\\t= 0x2,\\r\\n        MF_QUALITY_NORMAL_MINUS_3\\t= 0x3,\\r\\n        MF_QUALITY_NORMAL_MINUS_4\\t= 0x4,\\r\\n        MF_QUALITY_NORMAL_MINUS_5\\t= 0x5,\\r\\n        MF_NUM_QUALITY_LEVELS\\t= 0x6\\r\\n    } \\tMF_QUALITY_LEVEL;"},"_MF_QUATERNION":{"comment":"","exp":"","file":"mfapi.h","line":3428,"type":"Struct","value":"typedef struct _MF_QUATERNION\\r\\n{\\r\\n    FLOAT   x;\\r\\n    FLOAT   y;\\r\\n    FLOAT   z;\\r\\n    FLOAT   w;\\r\\n} MF_QUATERNION;"},"_MF_SERVICE_LOOKUP_TYPE":{"comment":"","exp":"","file":"evr.h","line":1521,"type":"Enum","value":"typedef\\r\\nenum _MF_SERVICE_LOOKUP_TYPE\\r\\n    {\\r\\n        MF_SERVICE_LOOKUP_UPSTREAM\\t= 0,\\r\\n        MF_SERVICE_LOOKUP_UPSTREAM_DIRECT\\t= ( MF_SERVICE_LOOKUP_UPSTREAM + 1 ) ,\\r\\n        MF_SERVICE_LOOKUP_DOWNSTREAM\\t= ( MF_SERVICE_LOOKUP_UPSTREAM_DIRECT + 1 ) ,\\r\\n        MF_SERVICE_LOOKUP_DOWNSTREAM_DIRECT\\t= ( MF_SERVICE_LOOKUP_DOWNSTREAM + 1 ) ,\\r\\n        MF_SERVICE_LOOKUP_ALL\\t= ( MF_SERVICE_LOOKUP_DOWNSTREAM_DIRECT + 1 ) ,\\r\\n        MF_SERVICE_LOOKUP_GLOBAL\\t= ( MF_SERVICE_LOOKUP_ALL + 1 ) \\r\\n    } \\tMF_SERVICE_LOOKUP_TYPE;"},"_MF_SINK_WRITER_STATISTICS":{"comment":"","exp":"","file":"mfreadwrite.h","line":1163,"type":"Struct","value":"typedef struct _MF_SINK_WRITER_STATISTICS\\r\\n    {\\r\\n    DWORD cb;\\r\\n    LONGLONG llLastTimestampReceived;\\r\\n    LONGLONG llLastTimestampEncoded;\\r\\n    LONGLONG llLastTimestampProcessed;\\r\\n    LONGLONG llLastStreamTickReceived;\\r\\n    LONGLONG llLastSinkSampleRequest;\\r\\n    QWORD qwNumSamplesReceived;\\r\\n    QWORD qwNumSamplesEncoded;\\r\\n    QWORD qwNumSamplesProcessed;\\r\\n    QWORD qwNumStreamTicksReceived;\\r\\n    DWORD dwByteCountQueued;\\r\\n    QWORD qwByteCountProcessed;\\r\\n    DWORD dwNumOutstandingSinkSampleRequests;\\r\\n    DWORD dwAverageSampleRateReceived;\\r\\n    DWORD dwAverageSampleRateEncoded;\\r\\n    DWORD dwAverageSampleRateProcessed;\\r\\n    } \\tMF_SINK_WRITER_STATISTICS;"},"_MF_STREAM_STATE":{"comment":"","exp":"","file":"mfobjects.h","line":6143,"type":"Enum","value":"typedef\\r\\nenum _MF_STREAM_STATE\\r\\n    {\\r\\n        MF_STREAM_STATE_STOPPED\\t= 0,\\r\\n        MF_STREAM_STATE_PAUSED\\t= ( MF_STREAM_STATE_STOPPED + 1 ) ,\\r\\n        MF_STREAM_STATE_RUNNING\\t= ( MF_STREAM_STATE_PAUSED + 1 ) \\r\\n    } \\tMF_STREAM_STATE;"},"_MF_TOPOLOGY_RESOLUTION_STATUS_FLAGS":{"comment":"","exp":"","file":"mfidl.h","line":1295,"type":"Enum","value":"typedef\\r\\nenum _MF_TOPOLOGY_RESOLUTION_STATUS_FLAGS\\r\\n    {\\r\\n        MF_TOPOLOGY_RESOLUTION_SUCCEEDED\\t= 0,\\r\\n        MF_OPTIONAL_NODE_REJECTED_MEDIA_TYPE\\t= 0x1,\\r\\n        MF_OPTIONAL_NODE_REJECTED_PROTECTED_PROCESS\\t= 0x2\\r\\n    } \\tMF_TOPOLOGY_RESOLUTION_STATUS_FLAGS;"},"_MF_TOPONODE_DRAIN_MODE":{"comment":"","exp":"","file":"mfidl.h","line":4984,"type":"Enum","value":"typedef\\r\\nenum _MF_TOPONODE_DRAIN_MODE\\r\\n    {\\r\\n        MF_TOPONODE_DRAIN_DEFAULT\\t= 0,\\r\\n        MF_TOPONODE_DRAIN_ALWAYS\\t= ( MF_TOPONODE_DRAIN_DEFAULT + 1 ) ,\\r\\n        MF_TOPONODE_DRAIN_NEVER\\t= ( MF_TOPONODE_DRAIN_ALWAYS + 1 ) \\r\\n    } \\tMF_TOPONODE_DRAIN_MODE;"},"_MF_TOPONODE_FLUSH_MODE":{"comment":"","exp":"","file":"mfidl.h","line":4975,"type":"Enum","value":"typedef\\r\\nenum _MF_TOPONODE_FLUSH_MODE\\r\\n    {\\r\\n        MF_TOPONODE_FLUSH_ALWAYS\\t= 0,\\r\\n        MF_TOPONODE_FLUSH_SEEK\\t= ( MF_TOPONODE_FLUSH_ALWAYS + 1 ) ,\\r\\n        MF_TOPONODE_FLUSH_NEVER\\t= ( MF_TOPONODE_FLUSH_SEEK + 1 ) \\r\\n    } \\tMF_TOPONODE_FLUSH_MODE;"},"_MF_TRANSCODE_ADJUST_PROFILE_FLAGS":{"comment":"","exp":"","file":"mfidl.h","line":16002,"type":"Enum","value":"typedef\\r\\nenum _MF_TRANSCODE_ADJUST_PROFILE_FLAGS\\r\\n    {\\r\\n        MF_TRANSCODE_ADJUST_PROFILE_DEFAULT\\t= 0,\\r\\n        MF_TRANSCODE_ADJUST_PROFILE_USE_SOURCE_ATTRIBUTES\\t= 1\\r\\n    } \\tMF_TRANSCODE_ADJUST_PROFILE_FLAGS;"},"_MF_TRANSCODE_SINK_INFO":{"comment":"","exp":"","file":"mfidl.h","line":16067,"type":"Struct","value":"typedef struct _MF_TRANSCODE_SINK_INFO\\r\\n    {\\r\\n    DWORD dwVideoStreamID;\\r\\n    IMFMediaType *pVideoMediaType;\\r\\n    DWORD dwAudioStreamID;\\r\\n    IMFMediaType *pAudioMediaType;\\r\\n    } \\tMF_TRANSCODE_SINK_INFO;"},"_MF_TRANSCODE_TOPOLOGYMODE_FLAGS":{"comment":"","exp":"","file":"mfidl.h","line":15994,"type":"Enum","value":"typedef\\r\\nenum _MF_TRANSCODE_TOPOLOGYMODE_FLAGS\\r\\n    {\\r\\n        MF_TRANSCODE_TOPOLOGYMODE_SOFTWARE_ONLY\\t= 0,\\r\\n        MF_TRANSCODE_TOPOLOGYMODE_HARDWARE_ALLOWED\\t= 1\\r\\n    } \\tMF_TRANSCODE_TOPOLOGYMODE_FLAGS;"},"_MF_VIDEO_PROCESSOR_ALGORITHM_TYPE":{"comment":"","exp":"","file":"mfidl.h","line":16016,"type":"Enum","value":"typedef\\r\\nenum _MF_VIDEO_PROCESSOR_ALGORITHM_TYPE\\r\\n    {\\r\\n        MF_VIDEO_PROCESSOR_ALGORITHM_DEFAULT\\t= 0,\\r\\n        MF_VIDEO_PROCESSOR_ALGORITHM_MRF_CRF_444\\t= 1\\r\\n    } \\tMF_VIDEO_PROCESSOR_ALGORITHM_TYPE;"},"_MF_VIDEO_PROCESSOR_MIRROR":{"comment":"","exp":"","file":"mfidl.h","line":3291,"type":"Enum","value":"typedef\\r\\nenum _MF_VIDEO_PROCESSOR_MIRROR\\r\\n    {\\r\\n        MIRROR_NONE\\t= 0,\\r\\n        MIRROR_HORIZONTAL\\t= 1,\\r\\n        MIRROR_VERTICAL\\t= 2\\r\\n    } \\tMF_VIDEO_PROCESSOR_MIRROR;"},"_MF_VIDEO_PROCESSOR_ROTATION":{"comment":"","exp":"","file":"mfidl.h","line":3284,"type":"Enum","value":"typedef\\r\\nenum _MF_VIDEO_PROCESSOR_ROTATION\\r\\n    {\\r\\n        ROTATION_NONE\\t= 0,\\r\\n        ROTATION_NORMAL\\t= 1\\r\\n    } \\tMF_VIDEO_PROCESSOR_ROTATION;"},"_MF_VIDEO_SPHERICAL_VIEWDIRECTION":{"comment":"","exp":"","file":"mfidl.h","line":18310,"type":"Struct","value":"typedef struct _MF_VIDEO_SPHERICAL_VIEWDIRECTION\\r\\n    {\\r\\n    int iHeading;\\r\\n    int iPitch;\\r\\n    int iRoll;\\r\\n    } \\tMF_VIDEO_SPHERICAL_VIEWDIRECTION;"},"_MOVEREGION_INFO":{"comment":"","exp":"","file":"mfapi.h","line":1198,"type":"Struct","value":"typedef struct _MOVEREGION_INFO\\r\\n{\\r\\n    UINT        FrameNumber;\\r\\n    UINT        NumMoveRegions;\\r\\n    MOVE_RECT   MoveRegions[1];\\r\\n} MOVEREGION_INFO;"},"_MOVE_RECT":{"comment":"","exp":"","file":"mfapi.h","line":1185,"type":"Struct","value":"typedef struct _MOVE_RECT\\r\\n{\\r\\n    POINT   SourcePoint;\\r\\n    RECT    DestRect;\\r\\n} MOVE_RECT;"},"_MT_ARBITRARY_HEADER":{"comment":"","exp":"","file":"mfapi.h","line":3297,"type":"Struct","value":"typedef struct _MT_ARBITRARY_HEADER\\r\\n{\\r\\n    GUID majortype;\\r\\n    GUID subtype;\\r\\n    BOOL bFixedSizeSamples;\\r\\n    BOOL bTemporalCompression;\\r\\n    ULONG lSampleSize;\\r\\n    GUID formattype;\\r\\n}\\r\\nMT_ARBITRARY_HEADER;"},"_MT_CUSTOM_VIDEO_PRIMARIES":{"comment":"","exp":"","file":"mfapi.h","line":3017,"type":"Struct","value":"typedef struct _MT_CUSTOM_VIDEO_PRIMARIES {\\r\\n    float fRx;\\r\\n    float fRy;\\r\\n    float fGx;\\r\\n    float fGy;\\r\\n    float fBx;\\r\\n    float fBy;\\r\\n    float fWx;\\r\\n    float fWy;\\r\\n} MT_CUSTOM_VIDEO_PRIMARIES;"},"_OPM_ACP_AND_CGMSA_SIGNALING":{"comment":"","exp":"","file":"opmapi.h","line":345,"type":"Struct","value":"typedef struct _OPM_ACP_AND_CGMSA_SIGNALING\\r\\n    {\\r\\n    OPM_RANDOM_NUMBER rnRandomNumber;\\r\\n    ULONG ulStatusFlags;\\r\\n    ULONG ulAvailableTVProtectionStandards;\\r\\n    ULONG ulActiveTVProtectionStandard;\\r\\n    ULONG ulReserved;\\r\\n    ULONG ulAspectRatioValidMask1;\\r\\n    ULONG ulAspectRatioData1;\\r\\n    ULONG ulAspectRatioValidMask2;\\r\\n    ULONG ulAspectRatioData2;\\r\\n    ULONG ulAspectRatioValidMask3;\\r\\n    ULONG ulAspectRatioData3;\\r\\n    ULONG ulReserved2[ 4 ];\\r\\n    ULONG ulReserved3[ 4 ];\\r\\n    } \\tOPM_ACP_AND_CGMSA_SIGNALING;"},"_OPM_ACP_PROTECTION_LEVEL":{"comment":"","exp":"","file":"opmapi.h","line":208,"type":"Enum","value":"typedef\\r\\nenum _OPM_ACP_PROTECTION_LEVEL\\r\\n    {\\r\\n        OPM_ACP_OFF\\t= 0,\\r\\n        OPM_ACP_LEVEL_ONE\\t= 1,\\r\\n        OPM_ACP_LEVEL_TWO\\t= 2,\\r\\n        OPM_ACP_LEVEL_THREE\\t= 3,\\r\\n        OPM_ACP_FORCE_ULONG\\t= 0x7fffffff\\r\\n    } \\tOPM_ACP_PROTECTION_LEVEL;"},"_OPM_ACTUAL_OUTPUT_FORMAT":{"comment":"","exp":"","file":"opmapi.h","line":332,"type":"Struct","value":"typedef struct _OPM_ACTUAL_OUTPUT_FORMAT\\r\\n    {\\r\\n    OPM_RANDOM_NUMBER rnRandomNumber;\\r\\n    ULONG ulStatusFlags;\\r\\n    ULONG ulDisplayWidth;\\r\\n    ULONG ulDisplayHeight;\\r\\n    DXVA2_SampleFormat dsfSampleInterleaveFormat;\\r\\n    D3DFORMAT d3dFormat;\\r\\n    ULONG ulFrequencyNumerator;\\r\\n    ULONG ulFrequencyDenominator;\\r\\n    } \\tOPM_ACTUAL_OUTPUT_FORMAT;"},"_OPM_CONFIGURE_PARAMETERS":{"comment":"","exp":"","file":"opmapi.h","line":369,"type":"Struct","value":"typedef struct _OPM_CONFIGURE_PARAMETERS\\r\\n    {\\r\\n    OPM_OMAC omac;\\r\\n    GUID guidSetting;\\r\\n    ULONG ulSequenceNumber;\\r\\n    ULONG cbParametersSize;\\r\\n    BYTE abParameters[ 4056 ];\\r\\n    } \\tOPM_CONFIGURE_PARAMETERS;"},"_OPM_CONNECTED_HDCP_DEVICE_INFORMATION":{"comment":"","exp":"","file":"opmapi.h","line":304,"type":"Struct","value":"typedef struct _OPM_CONNECTED_HDCP_DEVICE_INFORMATION\\r\\n    {\\r\\n    OPM_RANDOM_NUMBER rnRandomNumber;\\r\\n    ULONG ulStatusFlags;\\r\\n    ULONG ulHDCPFlags;\\r\\n    OPM_HDCP_KEY_SELECTION_VECTOR ksvB;\\r\\n    BYTE Reserved[ 11 ];\\r\\n    BYTE Reserved2[ 16 ];\\r\\n    BYTE Reserved3[ 16 ];\\r\\n    } \\tOPM_CONNECTED_HDCP_DEVICE_INFORMATION;"},"_OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS":{"comment":"","exp":"","file":"opmapi.h","line":290,"type":"Struct","value":"typedef struct _OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS\\r\\n    {\\r\\n    OPM_RANDOM_NUMBER rnRandomNumber;\\r\\n    GUID guidInformation;\\r\\n    ULONG ulSequenceNumber;\\r\\n    ULONG cbParametersSize;\\r\\n    BYTE abParameters[ 4056 ];\\r\\n    } \\tOPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS;"},"_OPM_DPCP_PROTECTION_LEVEL":{"comment":"","exp":"","file":"opmapi.h","line":173,"type":"Enum","value":"typedef\\r\\nenum _OPM_DPCP_PROTECTION_LEVEL\\r\\n    {\\r\\n        OPM_DPCP_OFF\\t= 0,\\r\\n        OPM_DPCP_ON\\t= 1,\\r\\n        OPM_DPCP_FORCE_ULONG\\t= 0x7fffffff\\r\\n    } \\tOPM_DPCP_PROTECTION_LEVEL;"},"_OPM_ENCRYPTED_INITIALIZATION_PARAMETERS":{"comment":"","exp":"","file":"ksopmapi.h","line":98,"type":"Struct","value":"typedef struct _OPM_ENCRYPTED_INITIALIZATION_PARAMETERS\\r\\n{\\r\\n    BYTE abEncryptedInitializationParameters[OPM_ENCRYPTED_INITIALIZATION_PARAMETERS_SIZE];\\r\\n} OPM_ENCRYPTED_INITIALIZATION_PARAMETERS;"},"_OPM_GET_CODEC_INFO_INFORMATION":{"comment":"","exp":"","file":"ksopmapi.h","line":121,"type":"Struct","value":"typedef struct _OPM_GET_CODEC_INFO_INFORMATION\\r\\n{\\r\\n    OPM_RANDOM_NUMBER rnRandomNumber;\\r\\n    DWORD Merit;   \/\/ Merit assigned to the codec\\r\\n} OPM_GET_CODEC_INFO_INFORMATION;"},"_OPM_GET_CODEC_INFO_PARAMETERS":{"comment":"","exp":"","file":"ksopmapi.h","line":114,"type":"Struct","value":"typedef struct _OPM_GET_CODEC_INFO_PARAMETERS\\r\\n{\\r\\n    DWORD  cbVerifier;\\r\\n    BYTE   Verifier[OPM_GET_INFORMATION_PARAMETERS_SIZE - 4];  \/\/ Class ID of MFT or symbolic link for AVStream \\r\\n                          \/\/ drivers\\r\\n} OPM_GET_CODEC_INFO_PARAMETERS;"},"_OPM_GET_INFO_PARAMETERS":{"comment":"","exp":"","file":"ksopmapi.h","line":79,"type":"Struct","value":"typedef struct _OPM_GET_INFO_PARAMETERS\\r\\n{\\r\\n    OPM_OMAC omac;  \\r\\n    OPM_RANDOM_NUMBER rnRandomNumber;\\r\\n    GUID guidInformation;\\r\\n    ULONG ulSequenceNumber;\\r\\n    ULONG cbParametersSize;\\r\\n    BYTE abParameters[OPM_GET_INFORMATION_PARAMETERS_SIZE];\\r\\n} OPM_GET_INFO_PARAMETERS;"},"_OPM_HDCP_KEY_SELECTION_VECTOR":{"comment":"","exp":"","file":"opmapi.h","line":299,"type":"Struct","value":"typedef struct _OPM_HDCP_KEY_SELECTION_VECTOR\\r\\n    {\\r\\n    BYTE abKeySelectionVector[ 5 ];\\r\\n    } \\tOPM_HDCP_KEY_SELECTION_VECTOR;"},"_OPM_HDCP_PROTECTION_LEVEL":{"comment":"","exp":"","file":"opmapi.h","line":181,"type":"Enum","value":"typedef\\r\\nenum _OPM_HDCP_PROTECTION_LEVEL\\r\\n    {\\r\\n        OPM_HDCP_OFF\\t= 0,\\r\\n        OPM_HDCP_ON\\t= 1,\\r\\n        OPM_HDCP_FORCE_ULONG\\t= 0x7fffffff\\r\\n    } \\tOPM_HDCP_PROTECTION_LEVEL;"},"_OPM_IMAGE_ASPECT_RATIO_EN300294":{"comment":"","exp":"","file":"opmapi.h","line":251,"type":"Enum","value":"typedef\\r\\nenum _OPM_IMAGE_ASPECT_RATIO_EN300294\\r\\n    {\\r\\n        OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_4_BY_3\\t= 0,\\r\\n        OPM_ASPECT_RATIO_EN300294_BOX_14_BY_9_CENTER\\t= 1,\\r\\n        OPM_ASPECT_RATIO_EN300294_BOX_14_BY_9_TOP\\t= 2,\\r\\n        OPM_ASPECT_RATIO_EN300294_BOX_16_BY_9_CENTER\\t= 3,\\r\\n        OPM_ASPECT_RATIO_EN300294_BOX_16_BY_9_TOP\\t= 4,\\r\\n        OPM_ASPECT_RATIO_EN300294_BOX_GT_16_BY_9_CENTER\\t= 5,\\r\\n        OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_4_BY_3_PROTECTED_CENTER\\t= 6,\\r\\n        OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_16_BY_9_ANAMORPHIC\\t= 7,\\r\\n        OPM_ASPECT_RATIO_FORCE_ULONG\\t= 0x7fffffff\\r\\n    } \\tOPM_IMAGE_ASPECT_RATIO_EN300294;"},"_OPM_OMAC":{"comment":"","exp":"","file":"ksopmapi.h","line":73,"type":"Struct","value":"typedef struct _OPM_OMAC\\r\\n{\\r\\n    BYTE abOMAC[OPM_OMAC_SIZE];  \\r\\n} OPM_OMAC;"},"_OPM_OUTPUT_HARDWARE_PROTECTION":{"comment":"","exp":"","file":"opmapi.h","line":150,"type":"Enum","value":"typedef\\r\\nenum _OPM_OUTPUT_HARDWARE_PROTECTION\\r\\n    {\\r\\n        OPM_OUTPUT_HARDWARE_PROTECTION_NOT_SUPPORTED\\t= 0,\\r\\n        OPM_OUTPUT_HARDWARE_PROTECTION_SUPPORTED\\t= 0x1\\r\\n    } \\tOPM_OUTPUT_HARDWARE_PROTECTION;"},"_OPM_OUTPUT_ID_DATA":{"comment":"","exp":"","file":"opmapi.h","line":362,"type":"Struct","value":"typedef struct _OPM_OUTPUT_ID_DATA\\r\\n    {\\r\\n    OPM_RANDOM_NUMBER rnRandomNumber;\\r\\n    ULONG ulStatusFlags;\\r\\n    UINT64 OutputId;\\r\\n    } \\tOPM_OUTPUT_ID_DATA;"},"_OPM_RANDOM_NUMBER":{"comment":"","exp":"","file":"ksopmapi.h","line":54,"type":"Struct","value":"typedef struct _OPM_RANDOM_NUMBER\\r\\n{\\r\\n    BYTE abRandomNumber[ 16 ];\\r\\n}OPM_RANDOM_NUMBER, *POPM_RANDOM_NUMBER;"},"_OPM_REQUESTED_INFORMATION":{"comment":"","exp":"","file":"ksopmapi.h","line":90,"type":"Struct","value":"typedef struct _OPM_REQUESTED_INFORMATION\\r\\n{\\r\\n    OPM_OMAC omac;  \\r\\n    ULONG cbRequestedInformationSize;\\r\\n    BYTE abRequestedInformation[OPM_REQUESTED_INFORMATION_SIZE];\\r\\n} OPM_REQUESTED_INFORMATION;"},"_OPM_SET_ACP_AND_CGMSA_SIGNALING_PARAMETERS":{"comment":"","exp":"","file":"opmapi.h","line":386,"type":"Struct","value":"typedef struct _OPM_SET_ACP_AND_CGMSA_SIGNALING_PARAMETERS\\r\\n    {\\r\\n    ULONG ulNewTVProtectionStandard;\\r\\n    ULONG ulAspectRatioChangeMask1;\\r\\n    ULONG ulAspectRatioData1;\\r\\n    ULONG ulAspectRatioChangeMask2;\\r\\n    ULONG ulAspectRatioData2;\\r\\n    ULONG ulAspectRatioChangeMask3;\\r\\n    ULONG ulAspectRatioData3;\\r\\n    ULONG ulReserved[ 4 ];\\r\\n    ULONG ulReserved2[ 4 ];\\r\\n    ULONG ulReserved3;\\r\\n    } \\tOPM_SET_ACP_AND_CGMSA_SIGNALING_PARAMETERS;"},"_OPM_SET_HDCP_SRM_PARAMETERS":{"comment":"","exp":"","file":"opmapi.h","line":400,"type":"Struct","value":"typedef struct _OPM_SET_HDCP_SRM_PARAMETERS\\r\\n    {\\r\\n    ULONG ulSRMVersion;\\r\\n    } \\tOPM_SET_HDCP_SRM_PARAMETERS;"},"_OPM_SET_PROTECTION_LEVEL_PARAMETERS":{"comment":"","exp":"","file":"opmapi.h","line":378,"type":"Struct","value":"typedef struct _OPM_SET_PROTECTION_LEVEL_PARAMETERS\\r\\n    {\\r\\n    ULONG ulProtectionType;\\r\\n    ULONG ulProtectionLevel;\\r\\n    ULONG Reserved;\\r\\n    ULONG Reserved2;\\r\\n    } \\tOPM_SET_PROTECTION_LEVEL_PARAMETERS;"},"_OPM_STANDARD_INFORMATION":{"comment":"","exp":"","file":"ksopmapi.h","line":104,"type":"Struct","value":"typedef struct _OPM_STANDARD_INFORMATION\\r\\n{\\r\\n    OPM_RANDOM_NUMBER rnRandomNumber;\\r\\n    ULONG ulStatusFlags;\\r\\n    ULONG ulInformation;\\r\\n    ULONG ulReserved;\\r\\n    ULONG ulReserved2;\\r\\n} OPM_STANDARD_INFORMATION;"},"_OPM_TYPE_ENFORCEMENT_HDCP_PROTECTION_LEVEL":{"comment":"","exp":"","file":"opmapi.h","line":189,"type":"Enum","value":"typedef\\r\\nenum _OPM_TYPE_ENFORCEMENT_HDCP_PROTECTION_LEVEL\\r\\n    {\\r\\n        OPM_TYPE_ENFORCEMENT_HDCP_OFF\\t= OPM_HDCP_OFF,\\r\\n        OPM_TYPE_ENFORCEMENT_HDCP_ON_WITH_NO_TYPE_RESTRICTION\\t= OPM_HDCP_ON,\\r\\n        OPM_TYPE_ENFORCEMENT_HDCP_ON_WITH_TYPE1_RESTRICTION\\t= ( OPM_HDCP_ON + 1 ) ,\\r\\n        OPM_TYPE_ENFORCEMENT_HDCP_FORCE_ULONG\\t= 0x7fffffff\\r\\n    } \\tOPM_TYPE_ENFORCEMENT_HDCP_PROTECTION_LEVEL;"},"_OPM_VIDEO_OUTPUT_SEMANTICS":{"comment":"","exp":"","file":"opmapi.h","line":98,"type":"Enum","value":"typedef\\r\\nenum _OPM_VIDEO_OUTPUT_SEMANTICS\\r\\n    {\\r\\n        OPM_VOS_COPP_SEMANTICS\\t= 0,\\r\\n        OPM_VOS_OPM_SEMANTICS\\t= 1,\\r\\n        OPM_VOS_OPM_INDIRECT_DISPLAY\\t= 2\\r\\n    } \\tOPM_VIDEO_OUTPUT_SEMANTICS;"},"_ROI_AREA":{"comment":"","exp":"","file":"mfapi.h","line":1348,"type":"Struct","value":"typedef struct _ROI_AREA {\\r\\n    RECT rect;\\r\\n    INT32 QPDelta;\\r\\n} ROI_AREA, *PROI_AREA;"},"_STREAM_MEDIUM":{"comment":"","exp":"","file":"mftransform.h","line":612,"type":"Struct","value":"typedef struct _STREAM_MEDIUM\\r\\n    {\\r\\n    GUID gidMedium;\\r\\n    UINT32 unMediumInstance;\\r\\n    } \\tSTREAM_MEDIUM;"},"_TOC_DESCRIPTOR":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3836,"type":"Struct","value":"typedef struct _TOC_DESCRIPTOR\\r\\n    {\\r\\n    GUID guidID;\\r\\n    WORD wStreamNumber;\\r\\n    GUID guidType;\\r\\n    WORD wLanguageIndex;\\r\\n    } \\tTOC_DESCRIPTOR;"},"_TOC_ENTRY_DESCRIPTOR":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3844,"type":"Struct","value":"typedef struct _TOC_ENTRY_DESCRIPTOR\\r\\n    {\\r\\n    QWORD qwStartTime;\\r\\n    QWORD qwEndTime;\\r\\n    QWORD qwStartPacketOffset;\\r\\n    QWORD qwEndPacketOffset;\\r\\n    QWORD qwRepresentativeFrameTime;\\r\\n    } \\tTOC_ENTRY_DESCRIPTOR;"},"__MFAYUVSample":{"comment":"","exp":"","file":"mfobjects.h","line":2819,"type":"Struct","value":"typedef struct __MFAYUVSample\\r\\n    {\\r\\n    BYTE bCrValue;\\r\\n    BYTE bCbValue;\\r\\n    BYTE bYValue;\\r\\n    BYTE bSampleAlpha8;\\r\\n    } \\tMFAYUVSample;"},"__MIDL___MIDL_itf_dxva2api_0000_0000_0003":{"comment":"","exp":"","file":"dxva2api.h","line":330,"type":"Enum","value":"enum __MIDL___MIDL_itf_dxva2api_0000_0000_0003\\r\\n    {\\r\\n        DXVA2_DeinterlaceTech_Unknown\\t= 0,\\r\\n        DXVA2_DeinterlaceTech_BOBLineReplicate\\t= 0x1,\\r\\n        DXVA2_DeinterlaceTech_BOBVerticalStretch\\t= 0x2,\\r\\n        DXVA2_DeinterlaceTech_BOBVerticalStretch4Tap\\t= 0x4,\\r\\n        DXVA2_DeinterlaceTech_MedianFiltering\\t= 0x8,\\r\\n        DXVA2_DeinterlaceTech_EdgeFiltering\\t= 0x10,\\r\\n        DXVA2_DeinterlaceTech_FieldAdaptive\\t= 0x20,\\r\\n        DXVA2_DeinterlaceTech_PixelAdaptive\\t= 0x40,\\r\\n        DXVA2_DeinterlaceTech_MotionVectorSteered\\t= 0x80,\\r\\n        DXVA2_DeinterlaceTech_InverseTelecine\\t= 0x100,\\r\\n        DXVA2_DeinterlaceTech_Mask\\t= 0x1ff\\r\\n    } ;"},"__MIDL___MIDL_itf_dxva2api_0000_0000_0004":{"comment":"","exp":"","file":"dxva2api.h","line":345,"type":"Enum","value":"enum __MIDL___MIDL_itf_dxva2api_0000_0000_0004\\r\\n    {\\r\\n        DXVA2_NoiseFilterLumaLevel\\t= 1,\\r\\n        DXVA2_NoiseFilterLumaThreshold\\t= 2,\\r\\n        DXVA2_NoiseFilterLumaRadius\\t= 3,\\r\\n        DXVA2_NoiseFilterChromaLevel\\t= 4,\\r\\n        DXVA2_NoiseFilterChromaThreshold\\t= 5,\\r\\n        DXVA2_NoiseFilterChromaRadius\\t= 6,\\r\\n        DXVA2_DetailFilterLumaLevel\\t= 7,\\r\\n        DXVA2_DetailFilterLumaThreshold\\t= 8,\\r\\n        DXVA2_DetailFilterLumaRadius\\t= 9,\\r\\n        DXVA2_DetailFilterChromaLevel\\t= 10,\\r\\n        DXVA2_DetailFilterChromaThreshold\\t= 11,\\r\\n        DXVA2_DetailFilterChromaRadius\\t= 12\\r\\n    } ;"},"__MIDL___MIDL_itf_dxva2api_0000_0000_0005":{"comment":"","exp":"","file":"dxva2api.h","line":361,"type":"Enum","value":"enum __MIDL___MIDL_itf_dxva2api_0000_0000_0005\\r\\n    {\\r\\n        DXVA2_NoiseFilterTech_Unsupported\\t= 0,\\r\\n        DXVA2_NoiseFilterTech_Unknown\\t= 0x1,\\r\\n        DXVA2_NoiseFilterTech_Median\\t= 0x2,\\r\\n        DXVA2_NoiseFilterTech_Temporal\\t= 0x4,\\r\\n        DXVA2_NoiseFilterTech_BlockNoise\\t= 0x8,\\r\\n        DXVA2_NoiseFilterTech_MosquitoNoise\\t= 0x10,\\r\\n        DXVA2_NoiseFilterTech_Mask\\t= 0x1f\\r\\n    } ;"},"__MIDL___MIDL_itf_dxva2api_0000_0000_0006":{"comment":"","exp":"","file":"dxva2api.h","line":372,"type":"Enum","value":"enum __MIDL___MIDL_itf_dxva2api_0000_0000_0006\\r\\n    {\\r\\n        DXVA2_DetailFilterTech_Unsupported\\t= 0,\\r\\n        DXVA2_DetailFilterTech_Unknown\\t= 0x1,\\r\\n        DXVA2_DetailFilterTech_Edge\\t= 0x2,\\r\\n        DXVA2_DetailFilterTech_Sharpening\\t= 0x4,\\r\\n        DXVA2_DetailFilterTech_Mask\\t= 0x7\\r\\n    } ;"},"__MIDL___MIDL_itf_dxva2api_0000_0000_0007":{"comment":"","exp":"","file":"dxva2api.h","line":381,"type":"Enum","value":"enum __MIDL___MIDL_itf_dxva2api_0000_0000_0007\\r\\n    {\\r\\n        DXVA2_ProcAmp_None\\t= 0,\\r\\n        DXVA2_ProcAmp_Brightness\\t= 0x1,\\r\\n        DXVA2_ProcAmp_Contrast\\t= 0x2,\\r\\n        DXVA2_ProcAmp_Hue\\t= 0x4,\\r\\n        DXVA2_ProcAmp_Saturation\\t= 0x8,\\r\\n        DXVA2_ProcAmp_Mask\\t= 0xf\\r\\n    } ;"},"__MIDL___MIDL_itf_dxva2api_0000_0000_0008":{"comment":"","exp":"","file":"dxva2api.h","line":391,"type":"Enum","value":"enum __MIDL___MIDL_itf_dxva2api_0000_0000_0008\\r\\n    {\\r\\n        DXVA2_VideoProcess_None\\t= 0,\\r\\n        DXVA2_VideoProcess_YUV2RGB\\t= 0x1,\\r\\n        DXVA2_VideoProcess_StretchX\\t= 0x2,\\r\\n        DXVA2_VideoProcess_StretchY\\t= 0x4,\\r\\n        DXVA2_VideoProcess_AlphaBlend\\t= 0x8,\\r\\n        DXVA2_VideoProcess_SubRects\\t= 0x10,\\r\\n        DXVA2_VideoProcess_SubStreams\\t= 0x20,\\r\\n        DXVA2_VideoProcess_SubStreamsExtended\\t= 0x40,\\r\\n        DXVA2_VideoProcess_YUV2RGBExtended\\t= 0x80,\\r\\n        DXVA2_VideoProcess_AlphaBlendExtended\\t= 0x100,\\r\\n        DXVA2_VideoProcess_Constriction\\t= 0x200,\\r\\n        DXVA2_VideoProcess_NoiseFilter\\t= 0x400,\\r\\n        DXVA2_VideoProcess_DetailFilter\\t= 0x800,\\r\\n        DXVA2_VideoProcess_PlanarAlpha\\t= 0x1000,\\r\\n        DXVA2_VideoProcess_LinearScaling\\t= 0x2000,\\r\\n        DXVA2_VideoProcess_GammaCompensated\\t= 0x4000,\\r\\n        DXVA2_VideoProcess_MaintainsOriginalFieldData\\t= 0x8000,\\r\\n        DXVA2_VideoProcess_Mask\\t= 0xffff\\r\\n    } ;"},"__MIDL___MIDL_itf_dxva2api_0000_0000_0009":{"comment":"","exp":"","file":"dxva2api.h","line":413,"type":"Enum","value":"enum __MIDL___MIDL_itf_dxva2api_0000_0000_0009\\r\\n    {\\r\\n        DXVA2_VPDev_HardwareDevice\\t= 0x1,\\r\\n        DXVA2_VPDev_EmulatedDXVA1\\t= 0x2,\\r\\n        DXVA2_VPDev_SoftwareDevice\\t= 0x4,\\r\\n        DXVA2_VPDev_Mask\\t= 0x7\\r\\n    } ;"},"__MIDL___MIDL_itf_dxva2api_0000_0000_0010":{"comment":"","exp":"","file":"dxva2api.h","line":421,"type":"Enum","value":"enum __MIDL___MIDL_itf_dxva2api_0000_0000_0010\\r\\n    {\\r\\n        DXVA2_SampleData_RFF\\t= 0x1,\\r\\n        DXVA2_SampleData_TFF\\t= 0x2,\\r\\n        DXVA2_SampleData_RFF_TFF_Present\\t= 0x4,\\r\\n        DXVA2_SampleData_Mask\\t= 0xffff\\r\\n    } ;"},"__MIDL___MIDL_itf_dxva2api_0000_0000_0011":{"comment":"","exp":"","file":"dxva2api.h","line":429,"type":"Enum","value":"enum __MIDL___MIDL_itf_dxva2api_0000_0000_0011\\r\\n    {\\r\\n        DXVA2_DestData_RFF\\t= 0x1,\\r\\n        DXVA2_DestData_TFF\\t= 0x2,\\r\\n        DXVA2_DestData_RFF_TFF_Present\\t= 0x4,\\r\\n        DXVA2_DestData_Mask\\t= 0xffff\\r\\n    } ;"},"__MIDL___MIDL_itf_dxva2api_0000_0000_0012":{"comment":"","exp":"","file":"dxva2api.h","line":542,"type":"Enum","value":"enum __MIDL___MIDL_itf_dxva2api_0000_0000_0012\\r\\n    {\\r\\n        DXVA2_PictureParametersBufferType\\t= 0,\\r\\n        DXVA2_MacroBlockControlBufferType\\t= 1,\\r\\n        DXVA2_ResidualDifferenceBufferType\\t= 2,\\r\\n        DXVA2_DeblockingControlBufferType\\t= 3,\\r\\n        DXVA2_InverseQuantizationMatrixBufferType\\t= 4,\\r\\n        DXVA2_SliceControlBufferType\\t= 5,\\r\\n        DXVA2_BitStreamDateBufferType\\t= 6,\\r\\n        DXVA2_MotionVectorBuffer\\t= 7,\\r\\n        DXVA2_FilmGrainBuffer\\t= 8\\r\\n    } ;"},"__MIDL___MIDL_itf_dxva2api_0000_0000_0013":{"comment":"","exp":"","file":"dxva2api.h","line":555,"type":"Enum","value":"enum __MIDL___MIDL_itf_dxva2api_0000_0000_0013\\r\\n    {\\r\\n        DXVA2_VideoDecoderRenderTarget\\t= 0,\\r\\n        DXVA2_VideoProcessorRenderTarget\\t= 1,\\r\\n        DXVA2_VideoSoftwareRenderTarget\\t= 2\\r\\n    } ;"},"__MIDL___MIDL_itf_dxva2api_0000_0006_0001":{"comment":"","exp":"","file":"dxva2api.h","line":1787,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_dxva2api_0000_0006_0001\\r\\n    {\\r\\n        DXVA2_SurfaceType_DecoderRenderTarget\\t= 0,\\r\\n        DXVA2_SurfaceType_ProcessorRenderTarget\\t= 1,\\r\\n        DXVA2_SurfaceType_D3DRenderTargetTexture\\t= 2\\r\\n    } \\tDXVA2_SurfaceType;"},"__MIDL___MIDL_itf_evr9_0000_0002_0002":{"comment":"","exp":"","file":"evr9.h","line":410,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_evr9_0000_0002_0002\\r\\n    {\\r\\n        MFVideoAlphaBitmap_EntireDDS\\t= 0x1,\\r\\n        MFVideoAlphaBitmap_SrcColorKey\\t= 0x2,\\r\\n        MFVideoAlphaBitmap_SrcRect\\t= 0x4,\\r\\n        MFVideoAlphaBitmap_DestRect\\t= 0x8,\\r\\n        MFVideoAlphaBitmap_FilterMode\\t= 0x10,\\r\\n        MFVideoAlphaBitmap_Alpha\\t= 0x20,\\r\\n        MFVideoAlphaBitmap_BitMask\\t= 0x3f\\r\\n    } \\tMFVideoAlphaBitmapFlags;"},"__MIDL___MIDL_itf_mfcaptureengine_0000_0000_0001":{"comment":"","exp":"","file":"mfcaptureengine.h","line":162,"type":"Enum","value":"enum __MIDL___MIDL_itf_mfcaptureengine_0000_0000_0001\\r\\n    {\\r\\n        MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_VIDEO_PREVIEW\\t= 0xfffffffa,\\r\\n        MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_VIDEO_RECORD\\t= 0xfffffff9,\\r\\n        MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_PHOTO\\t= 0xfffffff8,\\r\\n        MF_CAPTURE_ENGINE_PREFERRED_SOURCE_STREAM_FOR_AUDIO\\t= 0xfffffff7,\\r\\n        MF_CAPTURE_ENGINE_MEDIASOURCE\\t= 0xffffffff\\r\\n    } ;"},"__MIDL___MIDL_itf_mfidl_0000_0001_0001":{"comment":"","exp":"","file":"mfidl.h","line":1266,"type":"Enum","value":"enum __MIDL___MIDL_itf_mfidl_0000_0001_0001\\r\\n    {\\r\\n        MF_RESOLUTION_MEDIASOURCE\\t= 0x1,\\r\\n        MF_RESOLUTION_BYTESTREAM\\t= 0x2,\\r\\n        MF_RESOLUTION_CONTENT_DOES_NOT_HAVE_TO_MATCH_EXTENSION_OR_MIME_TYPE\\t= 0x10,\\r\\n        MF_RESOLUTION_KEEP_BYTE_STREAM_ALIVE_ON_FAIL\\t= 0x20,\\r\\n        MF_RESOLUTION_DISABLE_LOCAL_PLUGINS\\t= 0x40,\\r\\n        MF_RESOLUTION_PLUGIN_CONTROL_POLICY_APPROVED_ONLY\\t= 0x80,\\r\\n        MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY\\t= 0x100,\\r\\n        MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY_EDGEMODE\\t= 0x200,\\r\\n        MF_RESOLUTION_ENABLE_STORE_PLUGINS\\t= 0x400,\\r\\n        MF_RESOLUTION_READ\\t= 0x10000,\\r\\n        MF_RESOLUTION_WRITE\\t= 0x20000\\r\\n    } ;"},"__MIDL___MIDL_itf_mfidl_0000_0029_0001":{"comment":"","exp":"","file":"mfidl.h","line":6904,"type":"Enum","value":"enum __MIDL___MIDL_itf_mfidl_0000_0029_0001\\r\\n    {\\r\\n        MF_ACTIVATE_CUSTOM_MIXER_ALLOWFAIL\\t= 0x1\\r\\n    } ;"},"__MIDL___MIDL_itf_mfidl_0000_0029_0002":{"comment":"","exp":"","file":"mfidl.h","line":6909,"type":"Enum","value":"enum __MIDL___MIDL_itf_mfidl_0000_0029_0002\\r\\n    {\\r\\n        MF_ACTIVATE_CUSTOM_PRESENTER_ALLOWFAIL\\t= 0x1\\r\\n    } ;"},"__MIDL___MIDL_itf_mfidl_0000_0032_0001":{"comment":"","exp":"","file":"mfidl.h","line":7354,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_mfidl_0000_0032_0001\\r\\n    {\\r\\n        MF_LICENSE_URL_UNTRUSTED\\t= 0,\\r\\n        MF_LICENSE_URL_TRUSTED\\t= ( MF_LICENSE_URL_UNTRUSTED + 1 ) ,\\r\\n        MF_LICENSE_URL_TAMPERED\\t= ( MF_LICENSE_URL_TRUSTED + 1 ) \\r\\n    } \\tMF_URL_TRUST_STATUS;"},"__MIDL___MIDL_itf_mfidl_0000_0059_0001":{"comment":"","exp":"","file":"mfidl.h","line":11265,"type":"Struct","value":"typedef struct __MIDL___MIDL_itf_mfidl_0000_0059_0001\\r\\n    {\\r\\n    QWORD qwStartOffset;\\r\\n    QWORD qwEndOffset;\\r\\n    } \\tMF_BYTE_STREAM_CACHE_RANGE;"},"__MIDL___MIDL_itf_mfidl_0000_0110_0001":{"comment":"","exp":"","file":"mfidl.h","line":18685,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_mfidl_0000_0110_0001\\r\\n    {\\r\\n        MFSensorDeviceType_Unknown\\t= 0,\\r\\n        MFSensorDeviceType_Device\\t= ( MFSensorDeviceType_Unknown + 1 ) ,\\r\\n        MFSensorDeviceType_MediaSource\\t= ( MFSensorDeviceType_Device + 1 ) ,\\r\\n        MFSensorDeviceType_FrameProvider\\t= ( MFSensorDeviceType_MediaSource + 1 ) ,\\r\\n        MFSensorDeviceType_SensorTransform\\t= ( MFSensorDeviceType_FrameProvider + 1 ) \\r\\n    } \\tMFSensorDeviceType;"},"__MIDL___MIDL_itf_mfidl_0000_0110_0002":{"comment":"","exp":"","file":"mfidl.h","line":18695,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_mfidl_0000_0110_0002\\r\\n    {\\r\\n        MFSensorStreamType_Unknown\\t= 0,\\r\\n        MFSensorStreamType_Input\\t= ( MFSensorStreamType_Unknown + 1 ) ,\\r\\n        MFSensorStreamType_Output\\t= ( MFSensorStreamType_Input + 1 ) \\r\\n    } \\tMFSensorStreamType;"},"__MIDL___MIDL_itf_mfidl_0000_0110_0003":{"comment":"","exp":"","file":"mfidl.h","line":18703,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_mfidl_0000_0110_0003\\r\\n    {\\r\\n        MFSensorDeviceMode_Controller\\t= 0,\\r\\n        MFSensorDeviceMode_Shared\\t= ( MFSensorDeviceMode_Controller + 1 ) \\r\\n    } \\tMFSensorDeviceMode;"},"__MIDL___MIDL_itf_mfidl_0000_0114_0001":{"comment":"","exp":"","file":"mfidl.h","line":19619,"type":"Struct","value":"typedef struct __MIDL___MIDL_itf_mfidl_0000_0114_0001\\r\\n    {\\r\\n    GUID Type;\\r\\n    UINT32 Index;\\r\\n    UINT32 Unused;\\r\\n    } \\tSENSORPROFILEID;"},"__MIDL___MIDL_itf_mfobjects_0000_0008_0001":{"comment":"","exp":"","file":"mfobjects.h","line":2578,"type":"Struct","value":"typedef struct __MIDL___MIDL_itf_mfobjects_0000_0008_0001\\r\\n    {\\r\\n    DWORD biSize;\\r\\n    LONG biWidth;\\r\\n    LONG biHeight;\\r\\n    WORD biPlanes;\\r\\n    WORD biBitCount;\\r\\n    DWORD biCompression;\\r\\n    DWORD biSizeImage;\\r\\n    LONG biXPelsPerMeter;\\r\\n    LONG biYPelsPerMeter;\\r\\n    DWORD biClrUsed;\\r\\n    DWORD biClrImportant;\\r\\n    } \\tBITMAPINFOHEADER;"},"__MIDL___MIDL_itf_mfobjects_0000_0008_0002":{"comment":"","exp":"","file":"mfobjects.h","line":2593,"type":"Struct","value":"typedef struct __MIDL___MIDL_itf_mfobjects_0000_0008_0002\\r\\n    {\\r\\n    BITMAPINFOHEADER bmiHeader;\\r\\n    RGBQUAD bmiColors[ 1 ];\\r\\n    } \\tBITMAPINFO;"},"__MIDL___MIDL_itf_mfobjects_0000_0008_0003":{"comment":"","exp":"","file":"mfobjects.h","line":2605,"type":"Struct","value":"typedef struct __MIDL___MIDL_itf_mfobjects_0000_0008_0003\\r\\n    {\\r\\n    GUID guidMajorType;\\r\\n    GUID guidSubtype;\\r\\n    } \\tMFT_REGISTER_TYPE_INFO;"},"__MIDL___MIDL_itf_mfobjects_0000_0012_0001":{"comment":"","exp":"","file":"mfobjects.h","line":3634,"type":"Enum","value":"enum __MIDL___MIDL_itf_mfobjects_0000_0012_0001\\r\\n    {\\r\\n        MEUnknown\\t= 0,\\r\\n        MEError\\t= 1,\\r\\n        MEExtendedType\\t= 2,\\r\\n        MENonFatalError\\t= 3,\\r\\n        MEGenericV1Anchor\\t= MENonFatalError,\\r\\n        MESessionUnknown\\t= 100,\\r\\n        MESessionTopologySet\\t= 101,\\r\\n        MESessionTopologiesCleared\\t= 102,\\r\\n        MESessionStarted\\t= 103,\\r\\n        MESessionPaused\\t= 104,\\r\\n        MESessionStopped\\t= 105,\\r\\n        MESessionClosed\\t= 106,\\r\\n        MESessionEnded\\t= 107,\\r\\n        MESessionRateChanged\\t= 108,\\r\\n        MESessionScrubSampleComplete\\t= 109,\\r\\n        MESessionCapabilitiesChanged\\t= 110,\\r\\n        MESessionTopologyStatus\\t= 111,\\r\\n        MESessionNotifyPresentationTime\\t= 112,\\r\\n        MENewPresentation\\t= 113,\\r\\n        MELicenseAcquisitionStart\\t= 114,\\r\\n        MELicenseAcquisitionCompleted\\t= 115,\\r\\n        MEIndividualizationStart\\t= 116,\\r\\n        MEIndividualizationCompleted\\t= 117,\\r\\n        MEEnablerProgress\\t= 118,\\r\\n        MEEnablerCompleted\\t= 119,\\r\\n        MEPolicyError\\t= 120,\\r\\n        MEPolicyReport\\t= 121,\\r\\n        MEBufferingStarted\\t= 122,\\r\\n        MEBufferingStopped\\t= 123,\\r\\n        MEConnectStart\\t= 124,\\r\\n        MEConnectEnd\\t= 125,\\r\\n        MEReconnectStart\\t= 126,\\r\\n        MEReconnectEnd\\t= 127,\\r\\n        MERendererEvent\\t= 128,\\r\\n        MESessionStreamSinkFormatChanged\\t= 129,\\r\\n        MESessionV1Anchor\\t= MESessionStreamSinkFormatChanged,\\r\\n        MESourceUnknown\\t= 200,\\r\\n        MESourceStarted\\t= 201,\\r\\n        MEStreamStarted\\t= 202,\\r\\n        MESourceSeeked\\t= 203,\\r\\n        MEStreamSeeked\\t= 204,\\r\\n        MENewStream\\t= 205,\\r\\n        MEUpdatedStream\\t= 206,\\r\\n        MESourceStopped\\t= 207,\\r\\n        MEStreamStopped\\t= 208,\\r\\n        MESourcePaused\\t= 209,\\r\\n        MEStreamPaused\\t= 210,\\r\\n        MEEndOfPresentation\\t= 211,\\r\\n        MEEndOfStream\\t= 212,\\r\\n        MEMediaSample\\t= 213,\\r\\n        MEStreamTick\\t= 214,\\r\\n        MEStreamThinMode\\t= 215,\\r\\n        MEStreamFormatChanged\\t= 216,\\r\\n        MESourceRateChanged\\t= 217,\\r\\n        MEEndOfPresentationSegment\\t= 218,\\r\\n        MESourceCharacteristicsChanged\\t= 219,\\r\\n        MESourceRateChangeRequested\\t= 220,\\r\\n        MESourceMetadataChanged\\t= 221,\\r\\n        MESequencerSourceTopologyUpdated\\t= 222,\\r\\n        MESourceV1Anchor\\t= MESequencerSourceTopologyUpdated,\\r\\n        MESinkUnknown\\t= 300,\\r\\n        MEStreamSinkStarted\\t= 301,\\r\\n        MEStreamSinkStopped\\t= 302,\\r\\n        MEStreamSinkPaused\\t= 303,\\r\\n        MEStreamSinkRateChanged\\t= 304,\\r\\n        MEStreamSinkRequestSample\\t= 305,\\r\\n        MEStreamSinkMarker\\t= 306,\\r\\n        MEStreamSinkPrerolled\\t= 307,\\r\\n        MEStreamSinkScrubSampleComplete\\t= 308,\\r\\n        MEStreamSinkFormatChanged\\t= 309,\\r\\n        MEStreamSinkDeviceChanged\\t= 310,\\r\\n        MEQualityNotify\\t= 311,\\r\\n        MESinkInvalidated\\t= 312,\\r\\n        MEAudioSessionNameChanged\\t= 313,\\r\\n        MEAudioSessionVolumeChanged\\t= 314,\\r\\n        MEAudioSessionDeviceRemoved\\t= 315,\\r\\n        MEAudioSessionServerShutdown\\t= 316,\\r\\n        MEAudioSessionGroupingParamChanged\\t= 317,\\r\\n        MEAudioSessionIconChanged\\t= 318,\\r\\n        MEAudioSessionFormatChanged\\t= 319,\\r\\n        MEAudioSessionDisconnected\\t= 320,\\r\\n        MEAudioSessionExclusiveModeOverride\\t= 321,\\r\\n        MESinkV1Anchor\\t= MEAudioSessionExclusiveModeOverride,\\r\\n        MECaptureAudioSessionVolumeChanged\\t= 322,\\r\\n        MECaptureAudioSessionDeviceRemoved\\t= 323,\\r\\n        MECaptureAudioSessionFormatChanged\\t= 324,\\r\\n        MECaptureAudioSessionDisconnected\\t= 325,\\r\\n        MECaptureAudioSessionExclusiveModeOverride\\t= 326,\\r\\n        MECaptureAudioSessionServerShutdown\\t= 327,\\r\\n        MESinkV2Anchor\\t= MECaptureAudioSessionServerShutdown,\\r\\n        METrustUnknown\\t= 400,\\r\\n        MEPolicyChanged\\t= 401,\\r\\n        MEContentProtectionMessage\\t= 402,\\r\\n        MEPolicySet\\t= 403,\\r\\n        METrustV1Anchor\\t= MEPolicySet,\\r\\n        MEWMDRMLicenseBackupCompleted\\t= 500,\\r\\n        MEWMDRMLicenseBackupProgress\\t= 501,\\r\\n        MEWMDRMLicenseRestoreCompleted\\t= 502,\\r\\n        MEWMDRMLicenseRestoreProgress\\t= 503,\\r\\n        MEWMDRMLicenseAcquisitionCompleted\\t= 506,\\r\\n        MEWMDRMIndividualizationCompleted\\t= 508,\\r\\n        MEWMDRMIndividualizationProgress\\t= 513,\\r\\n        MEWMDRMProximityCompleted\\t= 514,\\r\\n        MEWMDRMLicenseStoreCleaned\\t= 515,\\r\\n        MEWMDRMRevocationDownloadCompleted\\t= 516,\\r\\n        MEWMDRMV1Anchor\\t= MEWMDRMRevocationDownloadCompleted,\\r\\n        METransformUnknown\\t= 600,\\r\\n        METransformNeedInput\\t= ( METransformUnknown + 1 ) ,\\r\\n        METransformHaveOutput\\t= ( METransformNeedInput + 1 ) ,\\r\\n        METransformDrainComplete\\t= ( METransformHaveOutput + 1 ) ,\\r\\n        METransformMarker\\t= ( METransformDrainComplete + 1 ) ,\\r\\n        METransformInputStreamStateChanged\\t= ( METransformMarker + 1 ) ,\\r\\n        MEByteStreamCharacteristicsChanged\\t= 700,\\r\\n        MEVideoCaptureDeviceRemoved\\t= 800,\\r\\n        MEVideoCaptureDevicePreempted\\t= 801,\\r\\n        MEStreamSinkFormatInvalidated\\t= 802,\\r\\n        MEEncodingParameters\\t= 803,\\r\\n        MEContentProtectionMetadata\\t= 900,\\r\\n        MEDeviceThermalStateChanged\\t= 950,\\r\\n        MEReservedMax\\t= 10000\\r\\n    } ;"},"__MIDL___MIDL_itf_mfobjects_0000_0017_0001":{"comment":"","exp":"","file":"mfobjects.h","line":4825,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_mfobjects_0000_0017_0001\\r\\n    {\\r\\n        MF_ACCESSMODE_READ\\t= 1,\\r\\n        MF_ACCESSMODE_WRITE\\t= 2,\\r\\n        MF_ACCESSMODE_READWRITE\\t= 3\\r\\n    } \\tMF_FILE_ACCESSMODE;"},"__MIDL___MIDL_itf_mfobjects_0000_0017_0002":{"comment":"","exp":"","file":"mfobjects.h","line":4833,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_mfobjects_0000_0017_0002\\r\\n    {\\r\\n        MF_OPENMODE_FAIL_IF_NOT_EXIST\\t= 0,\\r\\n        MF_OPENMODE_FAIL_IF_EXIST\\t= 1,\\r\\n        MF_OPENMODE_RESET_IF_EXIST\\t= 2,\\r\\n        MF_OPENMODE_APPEND_IF_EXIST\\t= 3,\\r\\n        MF_OPENMODE_DELETE_IF_EXIST\\t= 4\\r\\n    } \\tMF_FILE_OPENMODE;"},"__MIDL___MIDL_itf_mfobjects_0000_0017_0003":{"comment":"","exp":"","file":"mfobjects.h","line":4843,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_mfobjects_0000_0017_0003\\r\\n    {\\r\\n        MF_FILEFLAGS_NONE\\t= 0,\\r\\n        MF_FILEFLAGS_NOBUFFERING\\t= 0x1,\\r\\n        MF_FILEFLAGS_ALLOW_WRITE_SHARING\\t= 0x2\\r\\n    } \\tMF_FILE_FLAGS;"},"__MIDL___MIDL_itf_mfreadwrite_0000_0001_0001":{"comment":"","exp":"","file":"mfreadwrite.h","line":310,"type":"Enum","value":"enum __MIDL___MIDL_itf_mfreadwrite_0000_0001_0001\\r\\n    {\\r\\n        MF_SOURCE_READER_INVALID_STREAM_INDEX\\t= 0xffffffff,\\r\\n        MF_SOURCE_READER_ALL_STREAMS\\t= 0xfffffffe,\\r\\n        MF_SOURCE_READER_ANY_STREAM\\t= 0xfffffffe,\\r\\n        MF_SOURCE_READER_FIRST_AUDIO_STREAM\\t= 0xfffffffd,\\r\\n        MF_SOURCE_READER_FIRST_VIDEO_STREAM\\t= 0xfffffffc,\\r\\n        MF_SOURCE_READER_MEDIASOURCE\\t= 0xffffffff\\r\\n    } ;"},"__MIDL___MIDL_itf_mfreadwrite_0000_0001_0002":{"comment":"","exp":"","file":"mfreadwrite.h","line":321,"type":"Enum","value":"enum __MIDL___MIDL_itf_mfreadwrite_0000_0001_0002\\r\\n    {\\r\\n        MF_SOURCE_READER_CURRENT_TYPE_INDEX\\t= 0xffffffff\\r\\n    } ;"},"__MIDL___MIDL_itf_mfreadwrite_0000_0005_0001":{"comment":"","exp":"","file":"mfreadwrite.h","line":1153,"type":"Enum","value":"enum __MIDL___MIDL_itf_mfreadwrite_0000_0005_0001\\r\\n    {\\r\\n        MF_SINK_WRITER_INVALID_STREAM_INDEX\\t= 0xffffffff,\\r\\n        MF_SINK_WRITER_ALL_STREAMS\\t= 0xfffffffe,\\r\\n        MF_SINK_WRITER_MEDIASINK\\t= 0xffffffff\\r\\n    } ;"},"__MIDL___MIDL_itf_opmapi_0000_0000_0001":{"comment":"","exp":"","file":"opmapi.h","line":85,"type":"Enum","value":"enum __MIDL___MIDL_itf_opmapi_0000_0000_0001\\r\\n    {\\r\\n        OPM_OMAC_SIZE\\t= 16,\\r\\n        OPM_128_BIT_RANDOM_NUMBER_SIZE\\t= 16,\\r\\n        OPM_ENCRYPTED_INITIALIZATION_PARAMETERS_SIZE\\t= 256,\\r\\n        OPM_CONFIGURE_SETTING_DATA_SIZE\\t= 4056,\\r\\n        OPM_GET_INFORMATION_PARAMETERS_SIZE\\t= 4056,\\r\\n        OPM_REQUESTED_INFORMATION_SIZE\\t= 4076,\\r\\n        OPM_HDCP_KEY_SELECTION_VECTOR_SIZE\\t= 5,\\r\\n        OPM_PROTECTION_TYPE_SIZE\\t= 4,\\r\\n        OPM_BUS_TYPE_MASK\\t= 0xffff,\\r\\n        OPM_BUS_IMPLEMENTATION_MODIFIER_MASK\\t= 0x7fff\\r\\n    } ;"},"__MIDL___MIDL_itf_opmapi_0000_0000_0002":{"comment":"","exp":"","file":"opmapi.h","line":107,"type":"Enum","value":"enum __MIDL___MIDL_itf_opmapi_0000_0000_0002\\r\\n    {\\r\\n        OPM_HDCP_FLAG_NONE\\t= 0,\\r\\n        OPM_HDCP_FLAG_REPEATER\\t= 0x1\\r\\n    } ;"},"__MIDL___MIDL_itf_opmapi_0000_0000_0003":{"comment":"","exp":"","file":"opmapi.h","line":113,"type":"Enum","value":"enum __MIDL___MIDL_itf_opmapi_0000_0000_0003\\r\\n    {\\r\\n        OPM_STATUS_NORMAL\\t= 0,\\r\\n        OPM_STATUS_LINK_LOST\\t= 0x1,\\r\\n        OPM_STATUS_RENEGOTIATION_REQUIRED\\t= 0x2,\\r\\n        OPM_STATUS_TAMPERING_DETECTED\\t= 0x4,\\r\\n        OPM_STATUS_REVOKED_HDCP_DEVICE_ATTACHED\\t= 0x8\\r\\n    } ;"},"__MIDL___MIDL_itf_opmapi_0000_0000_0004":{"comment":"","exp":"","file":"opmapi.h","line":122,"type":"Enum","value":"enum __MIDL___MIDL_itf_opmapi_0000_0000_0004\\r\\n    {\\r\\n        OPM_CONNECTOR_TYPE_OTHER\\t= -1,\\r\\n        OPM_CONNECTOR_TYPE_VGA\\t= 0,\\r\\n        OPM_CONNECTOR_TYPE_SVIDEO\\t= 1,\\r\\n        OPM_CONNECTOR_TYPE_COMPOSITE_VIDEO\\t= 2,\\r\\n        OPM_CONNECTOR_TYPE_COMPONENT_VIDEO\\t= 3,\\r\\n        OPM_CONNECTOR_TYPE_DVI\\t= 4,\\r\\n        OPM_CONNECTOR_TYPE_HDMI\\t= 5,\\r\\n        OPM_CONNECTOR_TYPE_LVDS\\t= 6,\\r\\n        OPM_CONNECTOR_TYPE_D_JPN\\t= 8,\\r\\n        OPM_CONNECTOR_TYPE_SDI\\t= 9,\\r\\n        OPM_CONNECTOR_TYPE_DISPLAYPORT_EXTERNAL\\t= 10,\\r\\n        OPM_CONNECTOR_TYPE_DISPLAYPORT_EMBEDDED\\t= 11,\\r\\n        OPM_CONNECTOR_TYPE_UDI_EXTERNAL\\t= 12,\\r\\n        OPM_CONNECTOR_TYPE_UDI_EMBEDDED\\t= 13,\\r\\n        OPM_CONNECTOR_TYPE_RESERVED\\t= 14,\\r\\n        OPM_CONNECTOR_TYPE_MIRACAST\\t= 15,\\r\\n        OPM_CONNECTOR_TYPE_TRANSPORT_AGNOSTIC_DIGITAL_MODE_A\\t= 16,\\r\\n        OPM_CONNECTOR_TYPE_TRANSPORT_AGNOSTIC_DIGITAL_MODE_B\\t= 17,\\r\\n        OPM_COPP_COMPATIBLE_CONNECTOR_TYPE_INTERNAL\\t= 0x80000000\\r\\n    } ;"},"__MIDL___MIDL_itf_opmapi_0000_0000_0005":{"comment":"","exp":"","file":"opmapi.h","line":145,"type":"Enum","value":"enum __MIDL___MIDL_itf_opmapi_0000_0000_0005\\r\\n    {\\r\\n        OPM_DVI_CHARACTERISTIC_1_0\\t= 1,\\r\\n        OPM_DVI_CHARACTERISTIC_1_1_OR_ABOVE\\t= 2\\r\\n    } ;"},"__MIDL___MIDL_itf_opmapi_0000_0000_0006":{"comment":"","exp":"","file":"opmapi.h","line":158,"type":"Enum","value":"enum __MIDL___MIDL_itf_opmapi_0000_0000_0006\\r\\n    {\\r\\n        OPM_BUS_TYPE_OTHER\\t= 0,\\r\\n        OPM_BUS_TYPE_PCI\\t= 0x1,\\r\\n        OPM_BUS_TYPE_PCIX\\t= 0x2,\\r\\n        OPM_BUS_TYPE_PCIEXPRESS\\t= 0x3,\\r\\n        OPM_BUS_TYPE_AGP\\t= 0x4,\\r\\n        OPM_BUS_IMPLEMENTATION_MODIFIER_INSIDE_OF_CHIPSET\\t= 0x10000,\\r\\n        OPM_BUS_IMPLEMENTATION_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP\\t= 0x20000,\\r\\n        OPM_BUS_IMPLEMENTATION_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET\\t= 0x30000,\\r\\n        OPM_BUS_IMPLEMENTATION_MODIFIER_DAUGHTER_BOARD_CONNECTOR\\t= 0x40000,\\r\\n        OPM_BUS_IMPLEMENTATION_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE\\t= 0x50000,\\r\\n        OPM_BUS_IMPLEMENTATION_MODIFIER_NON_STANDARD\\t= 0x80000000,\\r\\n        OPM_COPP_COMPATIBLE_BUS_TYPE_INTEGRATED\\t= 0x80000000\\r\\n    } ;"},"__MIDL___MIDL_itf_opmapi_0000_0000_0007":{"comment":"","exp":"","file":"opmapi.h","line":199,"type":"Enum","value":"enum __MIDL___MIDL_itf_opmapi_0000_0000_0007\\r\\n    {\\r\\n        OPM_CGMSA_OFF\\t= 0,\\r\\n        OPM_CGMSA_COPY_FREELY\\t= 0x1,\\r\\n        OPM_CGMSA_COPY_NO_MORE\\t= 0x2,\\r\\n        OPM_CGMSA_COPY_ONE_GENERATION\\t= 0x3,\\r\\n        OPM_CGMSA_COPY_NEVER\\t= 0x4,\\r\\n        OPM_CGMSA_REDISTRIBUTION_CONTROL_REQUIRED\\t= 0x8\\r\\n    } ;"},"__MIDL___MIDL_itf_opmapi_0000_0000_0008":{"comment":"","exp":"","file":"opmapi.h","line":219,"type":"Enum","value":"enum __MIDL___MIDL_itf_opmapi_0000_0000_0008\\r\\n    {\\r\\n        OPM_PROTECTION_TYPE_OTHER\\t= 0x80000000,\\r\\n        OPM_PROTECTION_TYPE_NONE\\t= 0,\\r\\n        OPM_PROTECTION_TYPE_COPP_COMPATIBLE_HDCP\\t= 0x1,\\r\\n        OPM_PROTECTION_TYPE_ACP\\t= 0x2,\\r\\n        OPM_PROTECTION_TYPE_CGMSA\\t= 0x4,\\r\\n        OPM_PROTECTION_TYPE_HDCP\\t= 0x8,\\r\\n        OPM_PROTECTION_TYPE_DPCP\\t= 0x10,\\r\\n        OPM_PROTECTION_TYPE_TYPE_ENFORCEMENT_HDCP\\t= 0x20\\r\\n    } ;"},"__MIDL___MIDL_itf_opmapi_0000_0000_0009":{"comment":"","exp":"","file":"opmapi.h","line":231,"type":"Enum","value":"enum __MIDL___MIDL_itf_opmapi_0000_0000_0009\\r\\n    {\\r\\n        OPM_PROTECTION_STANDARD_OTHER\\t= 0x80000000,\\r\\n        OPM_PROTECTION_STANDARD_NONE\\t= 0,\\r\\n        OPM_PROTECTION_STANDARD_IEC61880_525I\\t= 0x1,\\r\\n        OPM_PROTECTION_STANDARD_IEC61880_2_525I\\t= 0x2,\\r\\n        OPM_PROTECTION_STANDARD_IEC62375_625P\\t= 0x4,\\r\\n        OPM_PROTECTION_STANDARD_EIA608B_525\\t= 0x8,\\r\\n        OPM_PROTECTION_STANDARD_EN300294_625I\\t= 0x10,\\r\\n        OPM_PROTECTION_STANDARD_CEA805A_TYPEA_525P\\t= 0x20,\\r\\n        OPM_PROTECTION_STANDARD_CEA805A_TYPEA_750P\\t= 0x40,\\r\\n        OPM_PROTECTION_STANDARD_CEA805A_TYPEA_1125I\\t= 0x80,\\r\\n        OPM_PROTECTION_STANDARD_CEA805A_TYPEB_525P\\t= 0x100,\\r\\n        OPM_PROTECTION_STANDARD_CEA805A_TYPEB_750P\\t= 0x200,\\r\\n        OPM_PROTECTION_STANDARD_CEA805A_TYPEB_1125I\\t= 0x400,\\r\\n        OPM_PROTECTION_STANDARD_ARIBTRB15_525I\\t= 0x800,\\r\\n        OPM_PROTECTION_STANDARD_ARIBTRB15_525P\\t= 0x1000,\\r\\n        OPM_PROTECTION_STANDARD_ARIBTRB15_750P\\t= 0x2000,\\r\\n        OPM_PROTECTION_STANDARD_ARIBTRB15_1125I\\t= 0x4000\\r\\n    } ;"},"__REQUIRED_RPCNDR_H_VERSION__":{"comment":"","exp":"500","file":"dxva2api.h","line":13,"type":"Integer","value":500},"__REQUIRED_RPCSAL_H_VERSION__":{"comment":"","exp":"100","file":"dxva2api.h","line":18,"type":"Integer","value":100},"eAVAudioChannelConfig":{"comment":"","exp":"","file":"codecapi.h","line":1901,"type":"Enum","value":"enum eAVAudioChannelConfig\\r\\n{\\r\\n    eAVAudioChannelConfig_FRONT_LEFT    = 0x1, \\r\\n    eAVAudioChannelConfig_FRONT_RIGHT   = 0x2, \\r\\n    eAVAudioChannelConfig_FRONT_CENTER  = 0x4, \\r\\n    eAVAudioChannelConfig_LOW_FREQUENCY = 0x8,  \/\/ aka LFE\\r\\n    eAVAudioChannelConfig_BACK_LEFT     = 0x10, \\r\\n    eAVAudioChannelConfig_BACK_RIGHT    = 0x20, \\r\\n    eAVAudioChannelConfig_FRONT_LEFT_OF_CENTER  = 0x40, \\r\\n    eAVAudioChannelConfig_FRONT_RIGHT_OF_CENTER = 0x80, \\r\\n    eAVAudioChannelConfig_BACK_CENTER = 0x100,  \/\/ aka Mono Surround \\r\\n    eAVAudioChannelConfig_SIDE_LEFT   = 0x200,  \/\/ aka Left Surround\\r\\n    eAVAudioChannelConfig_SIDE_RIGHT  = 0x400,  \/\/ aka Right Surround\\r\\n    eAVAudioChannelConfig_TOP_CENTER  = 0x800, \\r\\n    eAVAudioChannelConfig_TOP_FRONT_LEFT   = 0x1000, \\r\\n    eAVAudioChannelConfig_TOP_FRONT_CENTER = 0x2000, \\r\\n    eAVAudioChannelConfig_TOP_FRONT_RIGHT  = 0x4000, \\r\\n    eAVAudioChannelConfig_TOP_BACK_LEFT    = 0x8000, \\r\\n    eAVAudioChannelConfig_TOP_BACK_CENTER  = 0x10000, \\r\\n    eAVAudioChannelConfig_TOP_BACK_RIGHT   = 0x20000 \\r\\n};"},"eAVDDSurroundMode":{"comment":"","exp":"","file":"codecapi.h","line":1934,"type":"Enum","value":"enum eAVDDSurroundMode\\r\\n{\\r\\n    eAVDDSurroundMode_NotIndicated = 0,\\r\\n    eAVDDSurroundMode_No           = 1,\\r\\n    eAVDDSurroundMode_Yes          = 2\\r\\n};"},"eAVDSPLoudnessEqualization":{"comment":"","exp":"","file":"codecapi.h","line":2010,"type":"Enum","value":"enum eAVDSPLoudnessEqualization\\r\\n{\\r\\n    eAVDSPLoudnessEqualization_OFF  = 0, \\r\\n    eAVDSPLoudnessEqualization_ON   = 1,\\r\\n    eAVDSPLoudnessEqualization_AUTO = 2\\r\\n};"},"eAVDSPSpeakerFill":{"comment":"","exp":"","file":"codecapi.h","line":2022,"type":"Enum","value":"enum eAVDSPSpeakerFill\\r\\n{\\r\\n    eAVDSPSpeakerFill_OFF  = 0, \\r\\n    eAVDSPSpeakerFill_ON   = 1, \\r\\n    eAVDSPSpeakerFill_AUTO = 2\\r\\n};"},"eAVDecAACDownmixMode":{"comment":"","exp":"","file":"codecapi.h","line":1834,"type":"Enum","value":"enum eAVDecAACDownmixMode\\r\\n{\\r\\n    eAVDecAACUseISODownmix  = 0,\\r\\n    eAVDecAACUseARIBDownmix = 1        \\r\\n};"},"eAVDecAudioDualMono":{"comment":"","exp":"","file":"codecapi.h","line":1858,"type":"Enum","value":"enum eAVDecAudioDualMono\\r\\n{\\r\\n    eAVDecAudioDualMono_IsNotDualMono = 0, \/\/ 2-ch bitstream input is not dual mono\\r\\n    eAVDecAudioDualMono_IsDualMono    = 1, \/\/ 2-ch bitstream input is dual mono\\r\\n    eAVDecAudioDualMono_UnSpecified   = 2  \/\/ There is no indication in the bitstream \\r\\n};"},"eAVDecAudioDualMonoReproMode":{"comment":"","exp":"","file":"codecapi.h","line":1873,"type":"Enum","value":"enum eAVDecAudioDualMonoReproMode\\r\\n{\\r\\n    eAVDecAudioDualMonoReproMode_STEREO      = 0, \/\/ Ch1+Ch2 for mono output, (Ch1 left,     Ch2 right) for stereo output\\r\\n    eAVDecAudioDualMonoReproMode_LEFT_MONO   = 1, \/\/ Ch1 for mono output,     (Ch1 left,     Ch1 right) for stereo output\\r\\n    eAVDecAudioDualMonoReproMode_RIGHT_MONO  = 2, \/\/ Ch2 for mono output,     (Ch2 left,     Ch2 right) for stereo output\\r\\n    eAVDecAudioDualMonoReproMode_MIX_MONO    = 3, \/\/ Ch1+Ch2 for mono output, (Ch1+Ch2 left, Ch1+Ch2 right) for stereo output\\r\\n};"},"eAVDecDDMatrixDecodingMode":{"comment":"","exp":"","file":"codecapi.h","line":1966,"type":"Enum","value":"enum eAVDecDDMatrixDecodingMode\\r\\n{\\r\\n    eAVDecDDMatrixDecodingMode_OFF  = 0,  \\r\\n    eAVDecDDMatrixDecodingMode_ON   = 1,  \\r\\n    eAVDecDDMatrixDecodingMode_AUTO = 2   \\r\\n};"},"eAVDecDDOperationalMode":{"comment":"","exp":"","file":"codecapi.h","line":1944,"type":"Enum","value":"enum eAVDecDDOperationalMode\\r\\n{\\r\\n    eAVDecDDOperationalMode_NONE       = 0,\\r\\n    eAVDecDDOperationalMode_LINE       = 1,\/\/ Dialnorm enabled, dialogue at -31dBFS, dynrng used, high\/low scaling allowed  \\r\\n    eAVDecDDOperationalMode_RF         = 2,\/\/ Dialnorm enabled, dialogue at -20dBFS, dynrng & compr used, high\/low scaling NOT allowed (always fully compressed)\\r\\n    eAVDecDDOperationalMode_CUSTOM0    = 3,\/\/ Analog dialnorm (dialogue normalization not part of the decoder)\\r\\n    eAVDecDDOperationalMode_CUSTOM1    = 4,\/\/ Digital dialnorm (dialogue normalization is part of the decoder)\\r\\n    eAVDecDDOperationalMode_PORTABLE8  = 5,\/\/ Dialnorm enabled, dialogue at -8dBFS, dynrng & compr used, high\/low scaling NOT allowed (always fully compressed)\\r\\n    eAVDecDDOperationalMode_PORTABLE11 = 6,\/\/ Dialnorm enabled, dialogue at -11dBFS, dynrng & compr used, high\/low scaling NOT allowed (always fully compressed)\\r\\n    eAVDecDDOperationalMode_PORTABLE14 = 7 \/\/ Dialnorm enabled, dialogue at -14dBFS, dynrng & compr used, high\/low scaling NOT allowed (always fully compressed)\\r\\n};"},"eAVDecDDStereoDownMixMode":{"comment":"","exp":"","file":"codecapi.h","line":1997,"type":"Enum","value":"enum eAVDecDDStereoDownMixMode\\r\\n{\\r\\n    eAVDecDDStereoDownMixMode_Auto  = 0, \/\/ Automatic detection\\r\\n    eAVDecDDStereoDownMixMode_LtRt  = 1, \/\/ Surround compatible (Lt\/Rt)\\r\\n    eAVDecDDStereoDownMixMode_LoRo  = 2  \/\/ Stereo (Lo\/Ro)\\r\\n};"},"eAVDecHEAACDynamicRangeControl":{"comment":"","exp":"","file":"codecapi.h","line":1845,"type":"Enum","value":"enum eAVDecHEAACDynamicRangeControl\\r\\n{\\r\\n    eAVDecHEAACDynamicRangeControl_OFF  = 0,\\r\\n    eAVDecHEAACDynamicRangeControl_ON   = 1\\r\\n};"},"eAVDecVideoCodecType":{"comment":"","exp":"","file":"codecapi.h","line":643,"type":"Enum","value":"enum eAVDecVideoCodecType\\r\\n{\\r\\n    eAVDecVideoCodecType_NOTPLAYING  = 0,\\r\\n    eAVDecVideoCodecType_MPEG2  = 1,\\r\\n    eAVDecVideoCodecType_H264   = 2\\r\\n};"},"eAVDecVideoDXVABusEncryption":{"comment":"","exp":"","file":"codecapi.h","line":667,"type":"Enum","value":"enum eAVDecVideoDXVABusEncryption\\r\\n{\\r\\n    eAVDecVideoDXVABusEncryption_NONE     = 0,\\r\\n    eAVDecVideoDXVABusEncryption_PRIVATE  = 1,\\r\\n    eAVDecVideoDXVABusEncryption_AES      = 2\\r\\n};"},"eAVDecVideoDXVAMode":{"comment":"","exp":"","file":"codecapi.h","line":653,"type":"Enum","value":"enum eAVDecVideoDXVAMode\\r\\n{\\r\\n    eAVDecVideoDXVAMode_NOTPLAYING = 0,\\r\\n    eAVDecVideoDXVAMode_SW     = 1,\\r\\n    eAVDecVideoDXVAMode_MC     = 2,\\r\\n    eAVDecVideoDXVAMode_IDCT   = 3,\\r\\n    eAVDecVideoDXVAMode_VLD    = 4\\r\\n};"},"eAVDecVideoH264ErrorConcealment":{"comment":"","exp":"","file":"codecapi.h","line":618,"type":"Enum","value":"enum eAVDecVideoH264ErrorConcealment\\r\\n{\\r\\n    eErrorConcealmentTypeDrop          = 0,  \/\/ ERR_CONCEALMENT_TYPE_DROP\\r\\n    eErrorConcealmentTypeBasic         = 1,  \/\/ ERR_CONCEALMENT_TYPE_BASIC  (the default, and good mode used most of the time)\\r\\n    eErrorConcealmentTypeAdvanced      = 2,  \/\/ ERR_CONCEALMENT_TYPE_ADVANCED\\r\\n    eErrorConcealmentTypeDXVASetBlack  = 3,  \/\/ ERR_CONCEALMENT_TYPE_DXVA_SET_BLACK\\r\\n};"},"eAVDecVideoInputScanType":{"comment":"","exp":"","file":"codecapi.h","line":1793,"type":"Enum","value":"enum eAVDecVideoInputScanType\\r\\n{\\r\\n    eAVDecVideoInputScan_Unknown           = 0,\\r\\n    eAVDecVideoInputScan_Progressive       = 1, \\r\\n    eAVDecVideoInputScan_Interlaced_UpperFieldFirst = 2,\\r\\n    eAVDecVideoInputScan_Interlaced_LowerFieldFirst = 3\\r\\n};"},"eAVDecVideoMPEG2ErrorConcealment":{"comment":"","exp":"","file":"codecapi.h","line":633,"type":"Enum","value":"enum eAVDecVideoMPEG2ErrorConcealment\\r\\n{\\r\\n    eErrorConcealmentOff          = 0,  \/\/ \\r\\n    eErrorConcealmentOn           = 1,  \/\/  the default and good mode used most of the time\\r\\n};"},"eAVDecVideoSWPowerLevel":{"comment":"","exp":"","file":"codecapi.h","line":1807,"type":"Enum","value":"enum eAVDecVideoSWPowerLevel\\r\\n{\\r\\n    eAVDecVideoSWPowerLevel_BatteryLife  = 0, \\r\\n    eAVDecVideoSWPowerLevel_Balanced   = 50, \\r\\n    eAVDecVideoSWPowerLevel_VideoQuality = 100\\r\\n};"},"eAVDecVideoSoftwareDeinterlaceMode":{"comment":"","exp":"","file":"codecapi.h","line":586,"type":"Enum","value":"enum eAVDecVideoSoftwareDeinterlaceMode\\r\\n{\\r\\n    eAVDecVideoSoftwareDeinterlaceMode_NoDeinterlacing          = 0, \/\/ do not use software deinterlace\\r\\n    eAVDecVideoSoftwareDeinterlaceMode_ProgressiveDeinterlacing = 1, \/\/ Use progressive deinterlace\\r\\n    eAVDecVideoSoftwareDeinterlaceMode_BOBDeinterlacing         = 2, \/\/ BOB deinterlacing\\r\\n    eAVDecVideoSoftwareDeinterlaceMode_SmartBOBDeinterlacing    = 3  \/\/ Smart BOB deinterlacing\\r\\n};"},"eAVEncAdaptiveMode":{"comment":"","exp":"","file":"codecapi.h","line":963,"type":"Enum","value":"enum eAVEncAdaptiveMode\\r\\n{\\r\\n    eAVEncAdaptiveMode_None         = 0,\\r\\n    eAVEncAdaptiveMode_Resolution   = 1,\\r\\n    eAVEncAdaptiveMode_FrameRate    = 2\\r\\n };"},"eAVEncAudioDualMono":{"comment":"","exp":"","file":"codecapi.h","line":1087,"type":"Enum","value":"enum eAVEncAudioDualMono\\r\\n{\\r\\n    eAVEncAudioDualMono_SameAsInput = 0, \/\/ As indicated by input media type \\r\\n    eAVEncAudioDualMono_Off         = 1,  \/\/ 2-ch output bitstream should not be dual mono\\r\\n    eAVEncAudioDualMono_On          = 2   \/\/ 2-ch output bitstream should be dual mono\\r\\n};"},"eAVEncAudioInputContent":{"comment":"","exp":"","file":"codecapi.h","line":1118,"type":"Enum","value":"enum eAVEncAudioInputContent\\r\\n{\\r\\n    AVEncAudioInputContent_Unknown =0,\\r\\n    AVEncAudioInputContent_Voice = 1,\\r\\n    AVEncAudioInputContent_Music = 2\\r\\n};"},"eAVEncChromaEncodeMode":{"comment":"","exp":"","file":"codecapi.h","line":2057,"type":"Enum","value":"enum eAVEncChromaEncodeMode\\r\\n{\\r\\n    eAVEncChromaEncodeMode_420,\\r\\n    eAVEncChromaEncodeMode_444,\\r\\n    eAVEncChromaEncodeMode_444_v2,\\r\\n};"},"eAVEncCommonRateControlMode":{"comment":"","exp":"","file":"codecapi.h","line":445,"type":"Enum","value":"enum eAVEncCommonRateControlMode\\r\\n{\\r\\n    eAVEncCommonRateControlMode_CBR                = 0,\\r\\n    eAVEncCommonRateControlMode_PeakConstrainedVBR = 1,\\r\\n    eAVEncCommonRateControlMode_UnconstrainedVBR   = 2,\\r\\n    eAVEncCommonRateControlMode_Quality            = 3,\\r\\n    eAVEncCommonRateControlMode_LowDelayVBR        = 4,\\r\\n    eAVEncCommonRateControlMode_GlobalVBR          = 5,\\r\\n    eAVEncCommonRateControlMode_GlobalLowDelayVBR  = 6\\r\\n};"},"eAVEncCommonStreamEndHandling":{"comment":"","exp":"","file":"codecapi.h","line":505,"type":"Enum","value":"enum eAVEncCommonStreamEndHandling\\r\\n{\\r\\n    eAVEncCommonStreamEndHandling_DiscardPartial = 0,\\r\\n    eAVEncCommonStreamEndHandling_EnsureComplete = 1\\r\\n};"},"eAVEncDDAtoDConverterType":{"comment":"","exp":"","file":"codecapi.h","line":1603,"type":"Enum","value":"enum eAVEncDDAtoDConverterType\\r\\n{\\r\\n    eAVEncDDAtoDConverterType_Standard = 0,\\r\\n    eAVEncDDAtoDConverterType_HDCD     = 1\\r\\n};"},"eAVEncDDDynamicRangeCompressionControl":{"comment":"","exp":"","file":"codecapi.h","line":1556,"type":"Enum","value":"enum eAVEncDDDynamicRangeCompressionControl\\r\\n{\\r\\n    eAVEncDDDynamicRangeCompressionControl_None          = 0,\\r\\n    eAVEncDDDynamicRangeCompressionControl_FilmStandard  = 1,\\r\\n    eAVEncDDDynamicRangeCompressionControl_FilmLight     = 2,\\r\\n    eAVEncDDDynamicRangeCompressionControl_MusicStandard = 3,\\r\\n    eAVEncDDDynamicRangeCompressionControl_MusicLight    = 4,\\r\\n    eAVEncDDDynamicRangeCompressionControl_Speech        = 5\\r\\n};"},"eAVEncDDHeadphoneMode":{"comment":"","exp":"","file":"codecapi.h","line":1612,"type":"Enum","value":"enum eAVEncDDHeadphoneMode\\r\\n{\\r\\n    eAVEncDDHeadphoneMode_NotIndicated = 0,\\r\\n    eAVEncDDHeadphoneMode_NotEncoded   = 1,\\r\\n    eAVEncDDHeadphoneMode_Encoded      = 2\\r\\n};"},"eAVEncDDPreferredStereoDownMixMode":{"comment":"","exp":"","file":"codecapi.h","line":1582,"type":"Enum","value":"enum eAVEncDDPreferredStereoDownMixMode\\r\\n{\\r\\n    eAVEncDDPreferredStereoDownMixMode_LtRt = 0,\\r\\n    eAVEncDDPreferredStereoDownMixMode_LoRo = 1\\r\\n};"},"eAVEncDDProductionRoomType":{"comment":"","exp":"","file":"codecapi.h","line":1519,"type":"Enum","value":"enum eAVEncDDProductionRoomType\\r\\n{\\r\\n    eAVEncDDProductionRoomType_NotIndicated = 0,\\r\\n    eAVEncDDProductionRoomType_Large        = 1,\\r\\n    eAVEncDDProductionRoomType_Small        = 2\\r\\n};"},"eAVEncDDService":{"comment":"","exp":"","file":"codecapi.h","line":1492,"type":"Enum","value":"enum eAVEncDDService\\r\\n{\\r\\n    eAVEncDDService_CM = 0,  \/\/ (Main Service: Complete Main)\\r\\n    eAVEncDDService_ME = 1,  \/\/ (Main Service: Music and Effects (ME))\\r\\n    eAVEncDDService_VI = 2,  \/\/ (Associated Service: Visually-Impaired (VI)\\r\\n    eAVEncDDService_HI = 3,  \/\/ (Associated Service: Hearing-Impaired (HI))\\r\\n    eAVEncDDService_D  = 4,  \/\/ (Associated Service: Dialog (D))\\r\\n    eAVEncDDService_C  = 5,  \/\/ (Associated Service: Commentary (C))\\r\\n    eAVEncDDService_E  = 6,  \/\/ (Associated Service: Emergency (E))\\r\\n    eAVEncDDService_VO = 7   \/\/ (Associated Service: Voice Over (VO) \/ Karaoke)\\r\\n};"},"eAVEncDDSurroundExMode":{"comment":"","exp":"","file":"codecapi.h","line":1572,"type":"Enum","value":"enum eAVEncDDSurroundExMode\\r\\n{\\r\\n    eAVEncDDSurroundExMode_NotIndicated = 0,\\r\\n    eAVEncDDSurroundExMode_No           = 1,\\r\\n    eAVEncDDSurroundExMode_Yes          = 2\\r\\n};"},"eAVEncH263PictureType":{"comment":"","exp":"","file":"codecapi.h","line":1260,"type":"Enum","value":"enum eAVEncH263PictureType\\r\\n{\\r\\n    eAVEncH263PictureType_I = 0,\\r\\n    eAVEncH263PictureType_P,\\r\\n    eAVEncH263PictureType_B\\r\\n};"},"eAVEncH263VLevel":{"comment":"","exp":"","file":"codecapi.h","line":1275,"type":"Enum","value":"enum eAVEncH263VLevel\\r\\n{\\r\\n    eAVEncH263VLevel1 = 10,\\r\\n    eAVEncH263VLevel2 = 20,\\r\\n    eAVEncH263VLevel3 = 30,\\r\\n    eAVEncH263VLevel4 = 40,\\r\\n    eAVEncH263VLevel4_5 = 45,\\r\\n    eAVEncH263VLevel5 = 50,\\r\\n    eAVEncH263VLevel6 = 60,\\r\\n    eAVEncH263VLevel7 = 70\\r\\n};"},"eAVEncH263VProfile":{"comment":"","exp":"","file":"codecapi.h","line":1187,"type":"Enum","value":"enum eAVEncH263VProfile\\r\\n{\\r\\n    eAVEncH263VProfile_Base = 0,\\r\\n    eAVEncH263VProfile_CompatibilityV2 = 1,\\r\\n    eAVEncH263VProfile_CompatibilityV1 = 2,\\r\\n    eAVEncH263VProfile_WirelessV2 = 3,\\r\\n    eAVEncH263VProfile_WirelessV3 = 4,\\r\\n    eAVEncH263VProfile_HighCompression = 5,\\r\\n    eAVEncH263VProfile_Internet = 6,\\r\\n    eAVEncH263VProfile_Interlace = 7,\\r\\n    eAVEncH263VProfile_HighLatency = 8\\r\\n};"},"eAVEncH264PictureType":{"comment":"","exp":"","file":"codecapi.h","line":1267,"type":"Enum","value":"enum eAVEncH264PictureType {\\r\\n  eAVEncH264PictureType_IDR = 0,\\r\\n  eAVEncH264PictureType_P,\\r\\n  eAVEncH264PictureType_B\\r\\n};"},"eAVEncH264VLevel":{"comment":"","exp":"","file":"codecapi.h","line":1290,"type":"Enum","value":"enum eAVEncH264VLevel\\r\\n{\\r\\n    eAVEncH264VLevel1         = 10,\\r\\n    eAVEncH264VLevel1_b       = 11,    \\r\\n    eAVEncH264VLevel1_1       = 11,\\r\\n    eAVEncH264VLevel1_2       = 12,\\r\\n    eAVEncH264VLevel1_3       = 13,\\r\\n    eAVEncH264VLevel2         = 20,\\r\\n    eAVEncH264VLevel2_1       = 21,\\r\\n    eAVEncH264VLevel2_2       = 22,\\r\\n    eAVEncH264VLevel3         = 30,\\r\\n    eAVEncH264VLevel3_1       = 31,\\r\\n    eAVEncH264VLevel3_2       = 32,\\r\\n    eAVEncH264VLevel4         = 40,\\r\\n    eAVEncH264VLevel4_1       = 41,\\r\\n    eAVEncH264VLevel4_2       = 42,\\r\\n    eAVEncH264VLevel5         = 50,\\r\\n    eAVEncH264VLevel5_1       = 51,\\r\\n    eAVEncH264VLevel5_2       = 52\\r\\n};"},"eAVEncH264VProfile":{"comment":"","exp":"","file":"codecapi.h","line":1200,"type":"Enum","value":"enum eAVEncH264VProfile\\r\\n{\\r\\n   eAVEncH264VProfile_unknown  = 0,\\r\\n   eAVEncH264VProfile_Simple   = 66,\\r\\n   eAVEncH264VProfile_Base     = 66,\\r\\n   eAVEncH264VProfile_Main     = 77,\\r\\n   eAVEncH264VProfile_High     = 100,\\r\\n   eAVEncH264VProfile_422      = 122,\\r\\n   eAVEncH264VProfile_High10   = 110,\\r\\n   eAVEncH264VProfile_444      = 244,\\r\\n   eAVEncH264VProfile_Extended = 88,\\r\\n   \\r\\n\/\/ UVC 1.2 H.264 extension\\r\\n   eAVEncH264VProfile_ScalableBase                     = 83, \\r\\n   eAVEncH264VProfile_ScalableHigh                     = 86,\\r\\n   eAVEncH264VProfile_MultiviewHigh                    = 118,\\r\\n   eAVEncH264VProfile_StereoHigh                       = 128,\\r\\n   eAVEncH264VProfile_ConstrainedBase                  = 256,\\r\\n   eAVEncH264VProfile_UCConstrainedHigh                = 257,\\r\\n   eAVEncH264VProfile_UCScalableConstrainedBase        = 258,\\r\\n   eAVEncH264VProfile_UCScalableConstrainedHigh        = 259\\r\\n};"},"eAVEncH264VProfile_ConstrainedHigh":{"comment":"","exp":"eAVEncH264VProfile_UCConstrainedHigh","file":"codecapi.h","line":1223,"type":"Unknown","value":"eAVEncH264VProfile_UCConstrainedHigh"},"eAVEncH265VLevel":{"comment":"","exp":"","file":"codecapi.h","line":1311,"type":"Enum","value":"enum eAVEncH265VLevel\\r\\n{  \\r\\n    eAVEncH265VLevel1       = 30,  \\r\\n    eAVEncH265VLevel2       = 60,      \\r\\n    eAVEncH265VLevel2_1     = 63,  \\r\\n    eAVEncH265VLevel3       = 90,  \\r\\n    eAVEncH265VLevel3_1     = 93,  \\r\\n    eAVEncH265VLevel4       = 120,  \\r\\n    eAVEncH265VLevel4_1     = 123,  \\r\\n    eAVEncH265VLevel5       = 150,  \\r\\n    eAVEncH265VLevel5_1     = 153,  \\r\\n    eAVEncH265VLevel5_2     = 156,  \\r\\n    eAVEncH265VLevel6       = 180,  \\r\\n    eAVEncH265VLevel6_1     = 183,  \\r\\n    eAVEncH265VLevel6_2     = 186  \\r\\n};"},"eAVEncH265VProfile":{"comment":"","exp":"","file":"codecapi.h","line":1225,"type":"Enum","value":"enum eAVEncH265VProfile\\r\\n{\\r\\n   eAVEncH265VProfile_unknown           = 0,\\r\\n   eAVEncH265VProfile_Main_420_8        = 1,\\r\\n   eAVEncH265VProfile_Main_420_10       = 2,\\r\\n   eAVEncH265VProfile_Main_420_12       = 3,\\r\\n   eAVEncH265VProfile_Main_422_10       = 4,\\r\\n   eAVEncH265VProfile_Main_422_12       = 5,\\r\\n   eAVEncH265VProfile_Main_444_8        = 6,\\r\\n   eAVEncH265VProfile_Main_444_10       = 7,\\r\\n   eAVEncH265VProfile_Main_444_12       = 8,\\r\\n   eAVEncH265VProfile_Monochrome_12     = 9,\\r\\n   eAVEncH265VProfile_Monochrome_16     = 10,\\r\\n   eAVEncH265VProfile_MainIntra_420_8   = 11,\\r\\n   eAVEncH265VProfile_MainIntra_420_10  = 12,\\r\\n   eAVEncH265VProfile_MainIntra_420_12  = 13,\\r\\n   eAVEncH265VProfile_MainIntra_422_10  = 14,\\r\\n   eAVEncH265VProfile_MainIntra_422_12  = 15,\\r\\n   eAVEncH265VProfile_MainIntra_444_8   = 16,\\r\\n   eAVEncH265VProfile_MainIntra_444_10  = 17,\\r\\n   eAVEncH265VProfile_MainIntra_444_12  = 18,\\r\\n   eAVEncH265VProfile_MainIntra_444_16  = 19,\\r\\n   eAVEncH265VProfile_MainStill_420_8   = 20,\\r\\n   eAVEncH265VProfile_MainStill_444_8   = 21,\\r\\n   eAVEncH265VProfile_MainStill_444_16  = 22\\r\\n};"},"eAVEncInputVideoSystem":{"comment":"","exp":"","file":"codecapi.h","line":840,"type":"Enum","value":"enum eAVEncInputVideoSystem\\r\\n{\\r\\n    eAVEncInputVideoSystem_Unspecified = 0,\\r\\n    eAVEncInputVideoSystem_PAL       = 1,\\r\\n    eAVEncInputVideoSystem_NTSC      = 2,\\r\\n    eAVEncInputVideoSystem_SECAM     = 3,\\r\\n    eAVEncInputVideoSystem_MAC       = 4,\\r\\n    eAVEncInputVideoSystem_HDV       = 5,\\r\\n    eAVEncInputVideoSystem_Component = 6\\r\\n};"},"eAVEncMPACodingMode":{"comment":"","exp":"","file":"codecapi.h","line":1442,"type":"Enum","value":"enum eAVEncMPACodingMode\\r\\n{\\r\\n    eAVEncMPACodingMode_Mono        = 0,\\r\\n    eAVEncMPACodingMode_Stereo      = 1,\\r\\n    eAVEncMPACodingMode_DualChannel = 2,\\r\\n    eAVEncMPACodingMode_JointStereo = 3,\\r\\n    eAVEncMPACodingMode_Surround    = 4\\r\\n};"},"eAVEncMPAEmphasisType":{"comment":"","exp":"","file":"codecapi.h","line":1473,"type":"Enum","value":"enum eAVEncMPAEmphasisType\\r\\n{\\r\\n    eAVEncMPAEmphasisType_None        = 0,\\r\\n    eAVEncMPAEmphasisType_50_15       = 1,\\r\\n    eAVEncMPAEmphasisType_Reserved    = 2,\\r\\n    eAVEncMPAEmphasisType_CCITT_J17   = 3,\\r\\n};"},"eAVEncMPALayer":{"comment":"","exp":"","file":"codecapi.h","line":1432,"type":"Enum","value":"enum eAVEncMPALayer\\r\\n{\\r\\n    eAVEncMPALayer_1 = 1,\\r\\n    eAVEncMPALayer_2 = 2,\\r\\n    eAVEncMPALayer_3 = 3\\r\\n};"},"eAVEncMPVFrameFieldMode":{"comment":"","exp":"","file":"codecapi.h","line":1331,"type":"Enum","value":"enum eAVEncMPVFrameFieldMode\\r\\n{\\r\\n    eAVEncMPVFrameFieldMode_FieldMode = 0,\\r\\n    eAVEncMPVFrameFieldMode_FrameMode = 1\\r\\n};"},"eAVEncMPVIntraVLCTable":{"comment":"","exp":"","file":"codecapi.h","line":1402,"type":"Enum","value":"enum eAVEncMPVIntraVLCTable\\r\\n{\\r\\n    eAVEncMPVIntraVLCTable_Auto      = 0,\\r\\n    eAVEncMPVIntraVLCTable_MPEG1     = 1,\\r\\n    eAVEncMPVIntraVLCTable_Alternate = 2\\r\\n};"},"eAVEncMPVLevel":{"comment":"","exp":"","file":"codecapi.h","line":1179,"type":"Enum","value":"enum eAVEncMPVLevel\\r\\n{\\r\\n    eAVEncMPVLevel_Low      = 1,\\r\\n    eAVEncMPVLevel_Main     = 2,\\r\\n    eAVEncMPVLevel_High1440 = 3,\\r\\n    eAVEncMPVLevel_High     = 4,\\r\\n};"},"eAVEncMPVProfile":{"comment":"","exp":"","file":"codecapi.h","line":1167,"type":"Enum","value":"enum eAVEncMPVProfile\\r\\n{\\r\\n    eAVEncMPVProfile_unknown = 0,\\r\\n    eAVEncMPVProfile_Simple = 1,\\r\\n    eAVEncMPVProfile_Main   = 2,\\r\\n    eAVEncMPVProfile_High   = 3,\\r\\n    eAVEncMPVProfile_422    = 4,\\r\\n};"},"eAVEncMPVQScaleType":{"comment":"","exp":"","file":"codecapi.h","line":1392,"type":"Enum","value":"enum eAVEncMPVQScaleType\\r\\n{\\r\\n    eAVEncMPVQScaleType_Auto      = 0,\\r\\n    eAVEncMPVQScaleType_Linear    = 1,\\r\\n    eAVEncMPVQScaleType_NonLinear = 2\\r\\n};"},"eAVEncMPVScanPattern":{"comment":"","exp":"","file":"codecapi.h","line":1379,"type":"Enum","value":"enum eAVEncMPVScanPattern\\r\\n{\\r\\n    eAVEncMPVScanPattern_Auto          = 0,\\r\\n    eAVEncMPVScanPattern_ZigZagScan    = 1,\\r\\n    eAVEncMPVScanPattern_AlternateScan = 2\\r\\n};"},"eAVEncMPVSceneDetection":{"comment":"","exp":"","file":"codecapi.h","line":1353,"type":"Enum","value":"enum eAVEncMPVSceneDetection\\r\\n{\\r\\n    eAVEncMPVSceneDetection_None                 = 0,\\r\\n    eAVEncMPVSceneDetection_InsertIPicture       = 1,\\r\\n    eAVEncMPVSceneDetection_StartNewGOP          = 2,\\r\\n    eAVEncMPVSceneDetection_StartNewLocatableGOP = 3\\r\\n};"},"eAVEncMuxOutput":{"comment":"","exp":"","file":"codecapi.h","line":1049,"type":"Enum","value":"enum eAVEncMuxOutput\\r\\n{\\r\\n    eAVEncMuxOutputAuto = 0, \/\/ Decision is made automatically be the mux (elementary stream, program stream or transport stream)\\r\\n    eAVEncMuxOutputPS   = 1, \/\/ Program stream\\r\\n    eAVEncMuxOutputTS   = 2  \/\/ Transport stream\\r\\n};"},"eAVEncVP9VProfile":{"comment":"","exp":"","file":"codecapi.h","line":1252,"type":"Enum","value":"enum eAVEncVP9VProfile\\r\\n{\\r\\n    eAVEncVP9VProfile_unknown  = 0,\\r\\n    eAVEncVP9VProfile_420_8    = 1,\\r\\n    eAVEncVP9VProfile_420_10   = 2,\\r\\n    eAVEncVP9VProfile_420_12   = 3,\\r\\n};"},"eAVEncVideoChromaResolution":{"comment":"","exp":"","file":"codecapi.h","line":736,"type":"Enum","value":"enum eAVEncVideoChromaResolution\\r\\n{\\r\\n    eAVEncVideoChromaResolution_SameAsSource =0 ,\\r\\n    eAVEncVideoChromaResolution_444 = 1,\\r\\n    eAVEncVideoChromaResolution_422 = 2,\\r\\n    eAVEncVideoChromaResolution_420 = 3,\\r\\n    eAVEncVideoChromaResolution_411 = 4\\r\\n};"},"eAVEncVideoChromaSubsampling":{"comment":"","exp":"","file":"codecapi.h","line":750,"type":"Enum","value":"enum eAVEncVideoChromaSubsampling\\r\\n{\\r\\n    eAVEncVideoChromaSubsamplingFormat_SameAsSource                   = 0,\\r\\n    eAVEncVideoChromaSubsamplingFormat_ProgressiveChroma              = 0x8,\\r\\n    eAVEncVideoChromaSubsamplingFormat_Horizontally_Cosited           = 0x4,\\r\\n    eAVEncVideoChromaSubsamplingFormat_Vertically_Cosited             = 0x2,\\r\\n    eAVEncVideoChromaSubsamplingFormat_Vertically_AlignedChromaPlanes = 0x1,\\r\\n};"},"eAVEncVideoColorLighting":{"comment":"","exp":"","file":"codecapi.h","line":814,"type":"Enum","value":"enum eAVEncVideoColorLighting\\r\\n{\\r\\n    eAVEncVideoColorLighting_SameAsSource = 0,\\r\\n    eAVEncVideoColorLighting_Unknown      = 1,\\r\\n    eAVEncVideoColorLighting_Bright       = 2,\\r\\n    eAVEncVideoColorLighting_Office       = 3,\\r\\n    eAVEncVideoColorLighting_Dim          = 4,\\r\\n    eAVEncVideoColorLighting_Dark         = 5\\r\\n};"},"eAVEncVideoColorNominalRange":{"comment":"","exp":"","file":"codecapi.h","line":829,"type":"Enum","value":"enum eAVEncVideoColorNominalRange\\r\\n{\\r\\n    eAVEncVideoColorNominalRange_SameAsSource = 0,\\r\\n    eAVEncVideoColorNominalRange_0_255        = 1,  \/\/ (8 bit: 0..255, 10 bit: 0..1023)\\r\\n    eAVEncVideoColorNominalRange_16_235       = 2,  \/\/ (16..235, 64..940 (16*4...235*4) \\r\\n    eAVEncVideoColorNominalRange_48_208       = 3   \/\/ (48..208) \\r\\n};"},"eAVEncVideoColorPrimaries":{"comment":"","exp":"","file":"codecapi.h","line":764,"type":"Enum","value":"enum eAVEncVideoColorPrimaries\\r\\n{\\r\\n    eAVEncVideoColorPrimaries_SameAsSource  = 0, \\r\\n    eAVEncVideoColorPrimaries_Reserved      = 1,\\r\\n    eAVEncVideoColorPrimaries_BT709         = 2,\\r\\n    eAVEncVideoColorPrimaries_BT470_2_SysM  = 3,\\r\\n    eAVEncVideoColorPrimaries_BT470_2_SysBG = 4,\\r\\n    eAVEncVideoColorPrimaries_SMPTE170M     = 5,\\r\\n    eAVEncVideoColorPrimaries_SMPTE240M     = 6,\\r\\n    eAVEncVideoColorPrimaries_EBU3231       = 7,\\r\\n    eAVEncVideoColorPrimaries_SMPTE_C       = 8\\r\\n};"},"eAVEncVideoColorTransferFunction":{"comment":"","exp":"","file":"codecapi.h","line":782,"type":"Enum","value":"enum eAVEncVideoColorTransferFunction\\r\\n{\\r\\n    eAVEncVideoColorTransferFunction_SameAsSource = 0,\\r\\n    eAVEncVideoColorTransferFunction_10           = 1,  \/\/ (Linear, scRGB)\\r\\n    eAVEncVideoColorTransferFunction_18           = 2,\\r\\n    eAVEncVideoColorTransferFunction_20           = 3,\\r\\n    eAVEncVideoColorTransferFunction_22           = 4,  \/\/ (BT470-2 SysM) \\r\\n    eAVEncVideoColorTransferFunction_22_709       = 5,  \/\/ (BT709,  SMPTE296M, SMPTE170M, BT470, SMPTE274M, BT.1361) \\r\\n    eAVEncVideoColorTransferFunction_22_240M      = 6,  \/\/ (SMPTE240M, interim 274M)\\r\\n    eAVEncVideoColorTransferFunction_22_8bit_sRGB = 7,  \/\/ (sRGB)\\r\\n    eAVEncVideoColorTransferFunction_28           = 8\\r\\n};"},"eAVEncVideoColorTransferMatrix":{"comment":"","exp":"","file":"codecapi.h","line":801,"type":"Enum","value":"enum eAVEncVideoColorTransferMatrix\\r\\n{\\r\\n    eAVEncVideoColorTransferMatrix_SameAsSource = 0,\\r\\n    eAVEncVideoColorTransferMatrix_BT709        = 1,\\r\\n    eAVEncVideoColorTransferMatrix_BT601        = 2,  \/\/ (601, BT470-2 B,B, 170M)\\r\\n    eAVEncVideoColorTransferMatrix_SMPTE240M    = 3\\r\\n};"},"eAVEncVideoContentType":{"comment":"","exp":"","file":"codecapi.h","line":884,"type":"Enum","value":"enum eAVEncVideoContentType\\r\\n{\\r\\n    eAVEncVideoContentType_Unknown          = 0,\\r\\n    eAVEncVideoContentType_FixedCameraAngle = 1\\r\\n};"},"eAVEncVideoFilmContent":{"comment":"","exp":"","file":"codecapi.h","line":718,"type":"Enum","value":"enum eAVEncVideoFilmContent\\r\\n{\\r\\n    eAVEncVideoFilmContent_VideoOnly = 0,\\r\\n    eAVEncVideoFilmContent_FilmOnly  = 1,\\r\\n    eAVEncVideoFilmContent_Mixed     = 2\\r\\n};"},"eAVEncVideoOutputFrameRateConversion":{"comment":"","exp":"","file":"codecapi.h","line":528,"type":"Enum","value":"enum eAVEncVideoOutputFrameRateConversion\\r\\n{\\r\\n    eAVEncVideoOutputFrameRateConversion_Disable = 0,\\r\\n    eAVEncVideoOutputFrameRateConversion_Enable  = 1,\\r\\n    eAVEncVideoOutputFrameRateConversion_Alias   = 2\\r\\n};"},"eAVEncVideoOutputScanType":{"comment":"","exp":"","file":"codecapi.h","line":701,"type":"Enum","value":"enum eAVEncVideoOutputScanType\\r\\n{\\r\\n    eAVEncVideoOutputScan_Progressive       = 0, \\r\\n    eAVEncVideoOutputScan_Interlaced        = 1,\\r\\n    eAVEncVideoOutputScan_SameAsInput       = 2,\\r\\n    eAVEncVideoOutputScan_Automatic         = 3\\r\\n};"},"eAVEncVideoSourceScanType":{"comment":"","exp":"","file":"codecapi.h","line":677,"type":"Enum","value":"enum eAVEncVideoSourceScanType\\r\\n{\\r\\n    eAVEncVideoSourceScan_Automatic         = 0,\\r\\n    eAVEncVideoSourceScan_Interlaced        = 1,\\r\\n    eAVEncVideoSourceScan_Progressive       = 2\\r\\n};"},"eAVFastDecodeMode":{"comment":"","exp":"","file":"codecapi.h","line":599,"type":"Enum","value":"enum eAVFastDecodeMode\\r\\n{\\r\\n    eVideoDecodeCompliant  = 0,\\r\\n    eVideoDecodeOptimalLF  = 1, \/\/ Optimal Loop Filter\\r\\n    eVideoDecodeDisableLF  = 2, \/\/ Disable Loop Filter\\r\\n    eVideoDecodeFastest    = 32,\\r\\n};"},"eAVScenarioInfo":{"comment":"","exp":"","file":"codecapi.h","line":970,"type":"Enum","value":"enum eAVScenarioInfo\\r\\n{\\r\\n    eAVScenarioInfo_Unknown         = 0,\\r\\n    eAVScenarioInfo_DisplayRemoting = 1,\\r\\n    eAVScenarioInfo_VideoConference = 2,\\r\\n    eAVScenarioInfo_Archive         = 3,\\r\\n    eAVScenarioInfo_LiveStreaming   = 4,\\r\\n    eAVScenarioInfo_CameraRecord    = 5,\\r\\n    eAVScenarioInfo_DisplayRemotingWithFeatureMap = 6\\r\\n};"},"eVideoEncoderDisplayContentType":{"comment":"","exp":"","file":"codecapi.h","line":981,"type":"Enum","value":"enum eVideoEncoderDisplayContentType\\r\\n{\\r\\n    eVideoEncoderDisplayContent_Unknown = 0,\\r\\n    eVideoEncoderDisplayContent_FullScreenVideo = 1,\\r\\n};"},"g_wszSpeechFormatCaps":{"comment":"","exp":"( L\"SpeechFormatCap\" )","file":"wmcodecdsp.h","line":3653,"type":"String","value":"( L\"SpeechFormatCap\" )"},"g_wszWMACAvgBytesPerSec":{"comment":"","exp":"( L\"AvgBytesPerSec\" )","file":"wmcodecdsp.h","line":3563,"type":"String","value":"( L\"AvgBytesPerSec\" )"},"g_wszWMACAvgPCMValue":{"comment":"","exp":"( L\"AverageLevel\" )","file":"wmcodecdsp.h","line":3551,"type":"String","value":"( L\"AverageLevel\" )"},"g_wszWMACDRCSetting":{"comment":"","exp":"( L\"DynamicRangeControl\" )","file":"wmcodecdsp.h","line":3569,"type":"String","value":"( L\"DynamicRangeControl\" )"},"g_wszWMACHiResOutput":{"comment":"","exp":"( L\"_HIRESOUTPUT\" )","file":"wmcodecdsp.h","line":3561,"type":"String","value":"( L\"_HIRESOUTPUT\" )"},"g_wszWMACIncludeNumPasses":{"comment":"","exp":"( L\"_INCLUDENUMPASSES\" )","file":"wmcodecdsp.h","line":3583,"type":"String","value":"( L\"_INCLUDENUMPASSES\" )"},"g_wszWMACInputFormatName":{"comment":"","exp":"( L\"_INPUTFORMATNAME\" )","file":"wmcodecdsp.h","line":3521,"type":"String","value":"( L\"_INPUTFORMATNAME\" )"},"g_wszWMACMixTable":{"comment":"","exp":"( L\"MixTable\" )","file":"wmcodecdsp.h","line":3567,"type":"String","value":"( L\"MixTable\" )"},"g_wszWMACMusicSpeechClassMode":{"comment":"","exp":"( L\"MusicSpeechClassMode\" )","file":"wmcodecdsp.h","line":3647,"type":"String","value":"( L\"MusicSpeechClassMode\" )"},"g_wszWMACOriginalWaveFormat":{"comment":"","exp":"( L\"_ORIGINALWAVEFORMAT\" )","file":"wmcodecdsp.h","line":3581,"type":"String","value":"( L\"_ORIGINALWAVEFORMAT\" )"},"g_wszWMACPeakPCMValue":{"comment":"","exp":"( L\"PeakValue\" )","file":"wmcodecdsp.h","line":3549,"type":"String","value":"( L\"PeakValue\" )"},"g_wszWMACSourceFormatTag":{"comment":"","exp":"( L\"_SOURCEFORMATTAG\" )","file":"wmcodecdsp.h","line":3523,"type":"String","value":"( L\"_SOURCEFORMATTAG\" )"},"g_wszWMACSpeakerConfig":{"comment":"","exp":"( L\"SpeakerConfig\" )","file":"wmcodecdsp.h","line":3565,"type":"String","value":"( L\"SpeakerConfig\" )"},"g_wszWMACVoiceBuffer":{"comment":"","exp":"( L\"BufferWindow\" )","file":"wmcodecdsp.h","line":3649,"type":"String","value":"( L\"BufferWindow\" )"},"g_wszWMACVoiceEDL":{"comment":"","exp":"( L\"_EDL\" )","file":"wmcodecdsp.h","line":3651,"type":"String","value":"( L\"_EDL\" )"},"g_wszWMADRCAverageReference":{"comment":"","exp":"( L\"WMADRCAverageReference\" )","file":"wmcodecdsp.h","line":3553,"type":"String","value":"( L\"WMADRCAverageReference\" )"},"g_wszWMADRCAverageTarget":{"comment":"","exp":"( L\"WMADRCAverageTarget\" )","file":"wmcodecdsp.h","line":3557,"type":"String","value":"( L\"WMADRCAverageTarget\" )"},"g_wszWMADRCPeakReference":{"comment":"","exp":"( L\"WMADRCPeakReference\" )","file":"wmcodecdsp.h","line":3555,"type":"String","value":"( L\"WMADRCPeakReference\" )"},"g_wszWMADRCPeakTarget":{"comment":"","exp":"( L\"WMADRCPeakTarget\" )","file":"wmcodecdsp.h","line":3559,"type":"String","value":"( L\"WMADRCPeakTarget\" )"},"g_wszWMVAspectHorizSize":{"comment":"","exp":"( L\"_AspectHorizSize\" )","file":"wmcodecdsp.h","line":3641,"type":"String","value":"( L\"_AspectHorizSize\" )"},"g_wszWMVAspectVertSize":{"comment":"","exp":"( L\"_AspectVertSize\" )","file":"wmcodecdsp.h","line":3643,"type":"String","value":"( L\"_AspectVertSize\" )"},"g_wszWMVCAdaptiveResolution":{"comment":"","exp":"( L\"_ADAPTIVERESOLUTION\" )","file":"wmcodecdsp.h","line":3517,"type":"String","value":"( L\"_ADAPTIVERESOLUTION\" )"},"g_wszWMVCAvgBitrate":{"comment":"","exp":"( L\"_RAVG\" )","file":"wmcodecdsp.h","line":3529,"type":"String","value":"( L\"_RAVG\" )"},"g_wszWMVCAvgFrameRate":{"comment":"","exp":"( L\"_AVGFRAMERATE\" )","file":"wmcodecdsp.h","line":3541,"type":"String","value":"( L\"_AVGFRAMERATE\" )"},"g_wszWMVCBAvg":{"comment":"","exp":"( L\"_BAVG\" )","file":"wmcodecdsp.h","line":3533,"type":"String","value":"( L\"_BAVG\" )"},"g_wszWMVCBDeltaQP":{"comment":"","exp":"( L\"_BDELTAQP\" )","file":"wmcodecdsp.h","line":3463,"type":"String","value":"( L\"_BDELTAQP\" )"},"g_wszWMVCBMax":{"comment":"","exp":"( L\"_BMAX\" )","file":"wmcodecdsp.h","line":3535,"type":"String","value":"( L\"_BMAX\" )"},"g_wszWMVCBufferFullnessInFirstByte":{"comment":"","exp":"( L\"_BUFFERFULLNESSINFIRSTBYTE\" )","file":"wmcodecdsp.h","line":3547,"type":"String","value":"( L\"_BUFFERFULLNESSINFIRSTBYTE\" )"},"g_wszWMVCChangeBitRate":{"comment":"","exp":"( L\"_CHANGEBITRATE\" )","file":"wmcodecdsp.h","line":3449,"type":"String","value":"( L\"_CHANGEBITRATE\" )"},"g_wszWMVCChangeFrameRate":{"comment":"","exp":"( L\"_CHANGEFRAMERATE\" )","file":"wmcodecdsp.h","line":3447,"type":"String","value":"( L\"_CHANGEFRAMERATE\" )"},"g_wszWMVCChangeMaxBitRate":{"comment":"","exp":"( L\"_CHANGEMAXBITRATE\" )","file":"wmcodecdsp.h","line":3451,"type":"String","value":"( L\"_CHANGEMAXBITRATE\" )"},"g_wszWMVCClosedEntryPoint":{"comment":"","exp":"( L\"_CLOSEDENTRYPOINT\" )","file":"wmcodecdsp.h","line":3591,"type":"String","value":"( L\"_CLOSEDENTRYPOINT\" )"},"g_wszWMVCCodedFrames":{"comment":"","exp":"( L\"_CODEDFRAMES\" )","file":"wmcodecdsp.h","line":3539,"type":"String","value":"( L\"_CODEDFRAMES\" )"},"g_wszWMVCComplexityEx":{"comment":"","exp":"( L\"_COMPLEXITYEX\" )","file":"wmcodecdsp.h","line":3411,"type":"String","value":"( L\"_COMPLEXITYEX\" )"},"g_wszWMVCComplexityLive":{"comment":"","exp":"( L\"_COMPLEXITYEXLIVE\" )","file":"wmcodecdsp.h","line":3415,"type":"String","value":"( L\"_COMPLEXITYEXLIVE\" )"},"g_wszWMVCComplexityMax":{"comment":"","exp":"( L\"_COMPLEXITYEXMAX\" )","file":"wmcodecdsp.h","line":3413,"type":"String","value":"( L\"_COMPLEXITYEXMAX\" )"},"g_wszWMVCComplexityMode":{"comment":"","exp":"( L\"_COMPLEXITY\" )","file":"wmcodecdsp.h","line":3409,"type":"String","value":"( L\"_COMPLEXITY\" )"},"g_wszWMVCComplexityOffline":{"comment":"","exp":"( L\"_COMPLEXITYEXOFFLINE\" )","file":"wmcodecdsp.h","line":3417,"type":"String","value":"( L\"_COMPLEXITYEXOFFLINE\" )"},"g_wszWMVCCompressionOptimizationType":{"comment":"","exp":"( L\"_COMPRESSIONOPTIMIZATIONTYPE\" )","file":"wmcodecdsp.h","line":3493,"type":"String","value":"( L\"_COMPRESSIONOPTIMIZATIONTYPE\" )"},"g_wszWMVCCrisp":{"comment":"","exp":"( L\"_CRISP\" )","file":"wmcodecdsp.h","line":3395,"type":"String","value":"( L\"_CRISP\" )"},"g_wszWMVCDatarate":{"comment":"","exp":"( L\"_DATARATE\" )","file":"wmcodecdsp.h","line":3391,"type":"String","value":"( L\"_DATARATE\" )"},"g_wszWMVCDecoderComplexityProfile":{"comment":"","exp":"( L\"_DECODERCOMPLEXITYPROFILE\" )","file":"wmcodecdsp.h","line":3543,"type":"String","value":"( L\"_DECODERCOMPLEXITYPROFILE\" )"},"g_wszWMVCDecoderComplexityRequested":{"comment":"","exp":"( L\"_DECODERCOMPLEXITYREQUESTED\" )","file":"wmcodecdsp.h","line":3545,"type":"String","value":"( L\"_DECODERCOMPLEXITYREQUESTED\" )"},"g_wszWMVCDecoderDeinterlacing":{"comment":"","exp":"( L\"_DECODERDEINTERLACING\" )","file":"wmcodecdsp.h","line":3579,"type":"String","value":"( L\"_DECODERDEINTERLACING\" )"},"g_wszWMVCDecoderForceNoResizeOutput":{"comment":"","exp":"( L\"_FORCENORESIZE\" )","file":"wmcodecdsp.h","line":3507,"type":"String","value":"( L\"_FORCENORESIZE\" )"},"g_wszWMVCDefaultCrisp":{"comment":"","exp":"( L\"_DEFAULTCRISP\" )","file":"wmcodecdsp.h","line":3397,"type":"String","value":"( L\"_DEFAULTCRISP\" )"},"g_wszWMVCDeltaMVRangeIndex":{"comment":"","exp":"( L\"_DELTAMVRANGEINDEX\" )","file":"wmcodecdsp.h","line":3457,"type":"String","value":"( L\"_DELTAMVRANGEINDEX\" )"},"g_wszWMVCDenoiseOption":{"comment":"","exp":"( L\"_DENOISEOPTION\" )","file":"wmcodecdsp.h","line":3443,"type":"String","value":"( L\"_DENOISEOPTION\" )"},"g_wszWMVCDquantOption":{"comment":"","exp":"( L\"_DQUANTOPTION\" )","file":"wmcodecdsp.h","line":3617,"type":"String","value":"( L\"_DQUANTOPTION\" )"},"g_wszWMVCDquantStrength":{"comment":"","exp":"( L\"_DQUANTSTRENGTH\" )","file":"wmcodecdsp.h","line":3619,"type":"String","value":"( L\"_DQUANTSTRENGTH\" )"},"g_wszWMVCDynComplexityLevel":{"comment":"","exp":"( L\"_DYNCOMPLEXLEVEL\" )","file":"wmcodecdsp.h","line":3509,"type":"String","value":"( L\"_DYNCOMPLEXLEVEL\" )"},"g_wszWMVCDynamicEncoderMode":{"comment":"","exp":"( L\"_DYNENCMODE\" )","file":"wmcodecdsp.h","line":3513,"type":"String","value":"( L\"_DYNENCMODE\" )"},"g_wszWMVCDynamicVideoResolution":{"comment":"","exp":"( L\"_SETDYNVIDRES\" )","file":"wmcodecdsp.h","line":3519,"type":"String","value":"( L\"_SETDYNVIDRES\" )"},"g_wszWMVCEncodedHeight_Dec":{"comment":"","exp":"( L\"_ENCODEDHEIGHT_DEC\" )","file":"wmcodecdsp.h","line":3599,"type":"String","value":"( L\"_ENCODEDHEIGHT_DEC\" )"},"g_wszWMVCEncodedWidth_Dec":{"comment":"","exp":"( L\"_ENCODEDWIDTH_DEC\" )","file":"wmcodecdsp.h","line":3597,"type":"String","value":"( L\"_ENCODEDWIDTH_DEC\" )"},"g_wszWMVCEncodercomplexity":{"comment":"","exp":"( L\"_ENCODERCOMPLEXITY\" )","file":"wmcodecdsp.h","line":3603,"type":"String","value":"( L\"_ENCODERCOMPLEXITY\" )"},"g_wszWMVCEncodingHeight":{"comment":"","exp":"( L\"_ENCODINGHEIGHT\" )","file":"wmcodecdsp.h","line":3503,"type":"String","value":"( L\"_ENCODINGHEIGHT\" )"},"g_wszWMVCEncodingWidth":{"comment":"","exp":"( L\"_ENCODINGWIDTH\" )","file":"wmcodecdsp.h","line":3501,"type":"String","value":"( L\"_ENCODINGWIDTH\" )"},"g_wszWMVCEndOfPass":{"comment":"","exp":"( L\"_ENDOFPASS\" )","file":"wmcodecdsp.h","line":3427,"type":"String","value":"( L\"_ENDOFPASS\" )"},"g_wszWMVCFOURCC":{"comment":"","exp":"( L\"_FOURCC\" )","file":"wmcodecdsp.h","line":3399,"type":"String","value":"( L\"_FOURCC\" )"},"g_wszWMVCForceFrameHeight":{"comment":"","exp":"( L\"_FORCEFRAMEHEIGHT\" )","file":"wmcodecdsp.h","line":3467,"type":"String","value":"( L\"_FORCEFRAMEHEIGHT\" )"},"g_wszWMVCForceFrameWidth":{"comment":"","exp":"( L\"_FORCEFRAMEWIDTH\" )","file":"wmcodecdsp.h","line":3465,"type":"String","value":"( L\"_FORCEFRAMEWIDTH\" )"},"g_wszWMVCForceMedianSetting":{"comment":"","exp":"( L\"_FORCEMEDIANSETTING\" )","file":"wmcodecdsp.h","line":3477,"type":"String","value":"( L\"_FORCEMEDIANSETTING\" )"},"g_wszWMVCForceOverlap":{"comment":"","exp":"( L\"_FORCEOVERLAP\" )","file":"wmcodecdsp.h","line":3621,"type":"String","value":"( L\"_FORCEOVERLAP\" )"},"g_wszWMVCForcePostProcessMode":{"comment":"","exp":"( L\"_POSTPROCESSMODE\" )","file":"wmcodecdsp.h","line":3587,"type":"String","value":"( L\"_POSTPROCESSMODE\" )"},"g_wszWMVCFrameCount":{"comment":"","exp":"( L\"_FRAMECOUNT\" )","file":"wmcodecdsp.h","line":3405,"type":"String","value":"( L\"_FRAMECOUNT\" )"},"g_wszWMVCFrameInterpolationEnabled":{"comment":"","exp":"( L\"_FRAMEINTERPOLATIONENABLED\" )","file":"wmcodecdsp.h","line":3431,"type":"String","value":"( L\"_FRAMEINTERPOLATIONENABLED\" )"},"g_wszWMVCFrameInterpolationSupported":{"comment":"","exp":"( L\"_FRAMEINTERPOLATIONSUPPORTED\" )","file":"wmcodecdsp.h","line":3429,"type":"String","value":"( L\"_FRAMEINTERPOLATIONSUPPORTED\" )"},"g_wszWMVCFullFrameRate":{"comment":"","exp":"( L\"_FULLFRAMERATE\" )","file":"wmcodecdsp.h","line":3453,"type":"String","value":"( L\"_FULLFRAMERATE\" )"},"g_wszWMVCHonorKeyFrameSettings":{"comment":"","exp":"( L\"_HONORKEYSETTINGS\" )","file":"wmcodecdsp.h","line":3627,"type":"String","value":"( L\"_HONORKEYSETTINGS\" )"},"g_wszWMVCHonorTSFrameQP":{"comment":"","exp":"( L\"_HONORTSFRAMEQP\" )","file":"wmcodecdsp.h","line":3629,"type":"String","value":"( L\"_HONORTSFRAMEQP\" )"},"g_wszWMVCInterlacedCodingEnabled":{"comment":"","exp":"( L\"_INTERLACEDCODINGENABLED\" )","file":"wmcodecdsp.h","line":3575,"type":"String","value":"( L\"_INTERLACEDCODINGENABLED\" )"},"g_wszWMVCInverseTelecinedInput":{"comment":"","exp":"( L\"_INVERSETELECINEDINPUT\" )","file":"wmcodecdsp.h","line":3585,"type":"String","value":"( L\"_INVERSETELECINEDINPUT\" )"},"g_wszWMVCKeyframeDistance":{"comment":"","exp":"( L\"_KEYDIST\" )","file":"wmcodecdsp.h","line":3393,"type":"String","value":"( L\"_KEYDIST\" )"},"g_wszWMVCLegacy411InterlacedFormat":{"comment":"","exp":"( L\"_LEGACY411INTERLACEDFORMAT\" )","file":"wmcodecdsp.h","line":3421,"type":"String","value":"( L\"_LEGACY411INTERLACEDFORMAT\" )"},"g_wszWMVCLetterboxpresent":{"comment":"","exp":"( L\"_LETTERBOXPRESENT\" )","file":"wmcodecdsp.h","line":3607,"type":"String","value":"( L\"_LETTERBOXPRESENT\" )"},"g_wszWMVCLiveEncode":{"comment":"","exp":"( L\"_LIVEENCODE\" )","file":"wmcodecdsp.h","line":3407,"type":"String","value":"( L\"_LIVEENCODE\" )"},"g_wszWMVCLookAhead":{"comment":"","exp":"( L\"_LOOKAHEAD\" )","file":"wmcodecdsp.h","line":3471,"type":"String","value":"( L\"_LOOKAHEAD\" )"},"g_wszWMVCLookaheadRC":{"comment":"","exp":"( L\"_LOOKAHEADRC\" )","file":"wmcodecdsp.h","line":3615,"type":"String","value":"( L\"_LOOKAHEADRC\" )"},"g_wszWMVCLoopFilter":{"comment":"","exp":"( L\"_LOOPFILTER\" )","file":"wmcodecdsp.h","line":3481,"type":"String","value":"( L\"_LOOPFILTER\" )"},"g_wszWMVCMacroblockModeCostMethod":{"comment":"","exp":"( L\"_MACROBLOCKMODECOSTMETHOD\" )","file":"wmcodecdsp.h","line":3491,"type":"String","value":"( L\"_MACROBLOCKMODECOSTMETHOD\" )"},"g_wszWMVCMaxBitrate":{"comment":"","exp":"( L\"_RMAX\" )","file":"wmcodecdsp.h","line":3531,"type":"String","value":"( L\"_RMAX\" )"},"g_wszWMVCMirrorDisplayOn":{"comment":"","exp":"( L\"_MIRRORDISPLAYON\" )","file":"wmcodecdsp.h","line":3445,"type":"String","value":"( L\"_MIRRORDISPLAYON\" )"},"g_wszWMVCMotionMatchMethod":{"comment":"","exp":"( L\"_MOTIONMATCHMETHOD\" )","file":"wmcodecdsp.h","line":3489,"type":"String","value":"( L\"_MOTIONMATCHMETHOD\" )"},"g_wszWMVCMotionSearchLevel":{"comment":"","exp":"( L\"_MOTIONSEARCHLEVEL\" )","file":"wmcodecdsp.h","line":3487,"type":"String","value":"( L\"_MOTIONSEARCHLEVEL\" )"},"g_wszWMVCMotionSearchRange":{"comment":"","exp":"( L\"_MOTIONSEARCHRANGE\" )","file":"wmcodecdsp.h","line":3455,"type":"String","value":"( L\"_MOTIONSEARCHRANGE\" )"},"g_wszWMVCMotionVectorCostMethod":{"comment":"","exp":"( L\"_MOTIONVECTORCOSTMETHOD\" )","file":"wmcodecdsp.h","line":3623,"type":"String","value":"( L\"_MOTIONVECTORCOSTMETHOD\" )"},"g_wszWMVCNeedsDrain":{"comment":"","exp":"( L\"_DECODERNEEDSDRAIN\" )","file":"wmcodecdsp.h","line":3601,"type":"String","value":"( L\"_DECODERNEEDSDRAIN\" )"},"g_wszWMVCNoiseEdgeRemoval":{"comment":"","exp":"( L\"_NOISEEDGEREMOVAL\" )","file":"wmcodecdsp.h","line":3483,"type":"String","value":"( L\"_NOISEEDGEREMOVAL\" )"},"g_wszWMVCNumBFrames":{"comment":"","exp":"( L\"_NUMBFRAMES\" )","file":"wmcodecdsp.h","line":3459,"type":"String","value":"( L\"_NUMBFRAMES\" )"},"g_wszWMVCNumThreads":{"comment":"","exp":"( L\"_NUMTHREADS\" )","file":"wmcodecdsp.h","line":3479,"type":"String","value":"( L\"_NUMTHREADS\" )"},"g_wszWMVCNumThreadsDec":{"comment":"","exp":"( L\"_NUMTHREADSDEC\" )","file":"wmcodecdsp.h","line":3589,"type":"String","value":"( L\"_NUMTHREADSDEC\" )"},"g_wszWMVCPacketOverhead":{"comment":"","exp":"( L\"_ASFOVERHEADPERFRAME\" )","file":"wmcodecdsp.h","line":3419,"type":"String","value":"( L\"_ASFOVERHEADPERFRAME\" )"},"g_wszWMVCPassesRecommended":{"comment":"","exp":"( L\"_PASSESRECOMMENDED\" )","file":"wmcodecdsp.h","line":3423,"type":"String","value":"( L\"_PASSESRECOMMENDED\" )"},"g_wszWMVCPassesUsed":{"comment":"","exp":"( L\"_PASSESUSED\" )","file":"wmcodecdsp.h","line":3425,"type":"String","value":"( L\"_PASSESUSED\" )"},"g_wszWMVCPerceptualOptLevel":{"comment":"","exp":"( L\"_PERCEPTUALOPTLEVEL\" )","file":"wmcodecdsp.h","line":3475,"type":"String","value":"( L\"_PERCEPTUALOPTLEVEL\" )"},"g_wszWMVCPeriodicalSPDistance":{"comment":"","exp":"( L\"_PERIODICALSPDISTANCE\" )","file":"wmcodecdsp.h","line":3495,"type":"String","value":"( L\"_PERIODICALSPDISTANCE\" )"},"g_wszWMVCProduceDummyFrames":{"comment":"","exp":"( L\"_PRODUCEDUMMYFRAMES\" )","file":"wmcodecdsp.h","line":3577,"type":"String","value":"( L\"_PRODUCEDUMMYFRAMES\" )"},"g_wszWMVCQPPerFrame":{"comment":"","exp":"( L\"_QPPERFRAME\" )","file":"wmcodecdsp.h","line":3433,"type":"String","value":"( L\"_QPPERFRAME\" )"},"g_wszWMVCQueryTimeStampTag":{"comment":"","exp":"( L\"_QUERYTIMESTAMPTAG\" )","file":"wmcodecdsp.h","line":3497,"type":"String","value":"( L\"_QUERYTIMESTAMPTAG\" )"},"g_wszWMVCQueryTimeStampTagDec":{"comment":"","exp":"( L\"_QUERYTIMESTAMPTAGDEC\" )","file":"wmcodecdsp.h","line":3593,"type":"String","value":"( L\"_QUERYTIMESTAMPTAGDEC\" )"},"g_wszWMVCRDSubpixelSearch":{"comment":"","exp":"( L\"_RDSUBPIXELSEARCH\" )","file":"wmcodecdsp.h","line":3461,"type":"String","value":"( L\"_RDSUBPIXELSEARCH\" )"},"g_wszWMVCRangeRedux":{"comment":"","exp":"( L\"_RANGEREDUX\" )","file":"wmcodecdsp.h","line":3469,"type":"String","value":"( L\"_RANGEREDUX\" )"},"g_wszWMVCReencDuration":{"comment":"","exp":"( L\"_REENCDURATION\" )","file":"wmcodecdsp.h","line":3435,"type":"String","value":"( L\"_REENCDURATION\" )"},"g_wszWMVCReencEndBufferSize":{"comment":"","exp":"( L\"_REENCENDBUFFERSIZE\" )","file":"wmcodecdsp.h","line":3439,"type":"String","value":"( L\"_REENCENDBUFFERSIZE\" )"},"g_wszWMVCReencQPRef":{"comment":"","exp":"( L\"_REENCQPREF\" )","file":"wmcodecdsp.h","line":3441,"type":"String","value":"( L\"_REENCQPREF\" )"},"g_wszWMVCReencStartBufferSize":{"comment":"","exp":"( L\"_REENCSTARTBUFFERSIZE\" )","file":"wmcodecdsp.h","line":3437,"type":"String","value":"( L\"_REENCSTARTBUFFERSIZE\" )"},"g_wszWMVCSceneChangeI":{"comment":"","exp":"( L\"_SCENECHANGEI\" )","file":"wmcodecdsp.h","line":3613,"type":"String","value":"( L\"_SCENECHANGEI\" )"},"g_wszWMVCScenechange":{"comment":"","exp":"( L\"_SCENECHANGE\" )","file":"wmcodecdsp.h","line":3609,"type":"String","value":"( L\"_SCENECHANGE\" )"},"g_wszWMVCSupportOneInMultiOut":{"comment":"","exp":"( L\"_SUPPORTONEINMULTIOUT\" )","file":"wmcodecdsp.h","line":3499,"type":"String","value":"( L\"_SUPPORTONEINMULTIOUT\" )"},"g_wszWMVCSupportOneInMultiOut_Dec":{"comment":"","exp":"( L\"_SUPPORTONEINMULTIOUT_DEC\" )","file":"wmcodecdsp.h","line":3595,"type":"String","value":"( L\"_SUPPORTONEINMULTIOUT_DEC\" )"},"g_wszWMVCTargetEncodeDelta":{"comment":"","exp":"( L\"_TARGETENCDELTA\" )","file":"wmcodecdsp.h","line":3515,"type":"String","value":"( L\"_TARGETENCDELTA\" )"},"g_wszWMVCTargetEncodeRate":{"comment":"","exp":"( L\"_TARGETENCRATE\" )","file":"wmcodecdsp.h","line":3511,"type":"String","value":"( L\"_TARGETENCRATE\" )"},"g_wszWMVCThreadAffinityMask":{"comment":"","exp":"( L\"_THREADAFFINITYMASK\" )","file":"wmcodecdsp.h","line":3505,"type":"String","value":"( L\"_THREADAFFINITYMASK\" )"},"g_wszWMVCTotalFrames":{"comment":"","exp":"( L\"_TOTALFRAMES\" )","file":"wmcodecdsp.h","line":3537,"type":"String","value":"( L\"_TOTALFRAMES\" )"},"g_wszWMVCTotalWindow":{"comment":"","exp":"( L\"_TOTALWINDOW\" )","file":"wmcodecdsp.h","line":3401,"type":"String","value":"( L\"_TOTALWINDOW\" )"},"g_wszWMVCUserdatasize":{"comment":"","exp":"( L\"_USERDATASIZE\" )","file":"wmcodecdsp.h","line":3605,"type":"String","value":"( L\"_USERDATASIZE\" )"},"g_wszWMVCVBREnabled":{"comment":"","exp":"( L\"_VBRENABLED\" )","file":"wmcodecdsp.h","line":3525,"type":"String","value":"( L\"_VBRENABLED\" )"},"g_wszWMVCVBRQuality":{"comment":"","exp":"( L\"_VBRQUALITY\" )","file":"wmcodecdsp.h","line":3527,"type":"String","value":"( L\"_VBRQUALITY\" )"},"g_wszWMVCVType":{"comment":"","exp":"( L\"_VTYPE\" )","file":"wmcodecdsp.h","line":3485,"type":"String","value":"( L\"_VTYPE\" )"},"g_wszWMVCVariableGOP":{"comment":"","exp":"( L\"_VARIABLEGOP\" )","file":"wmcodecdsp.h","line":3611,"type":"String","value":"( L\"_VARIABLEGOP\" )"},"g_wszWMVCVideoScaling":{"comment":"","exp":"( L\"_VIDEOSCALING\" )","file":"wmcodecdsp.h","line":3473,"type":"String","value":"( L\"_VIDEOSCALING\" )"},"g_wszWMVCVideoWIndow":{"comment":"","exp":"( L\"_VIDEOWINDOW\" )","file":"wmcodecdsp.h","line":3403,"type":"String","value":"( L\"_VIDEOWINDOW\" )"},"g_wszWMVCWatermarkConfig":{"comment":"","exp":"( L\"WatermarkConfig\" )","file":"wmcodecdsp.h","line":3571,"type":"String","value":"( L\"WatermarkConfig\" )"},"g_wszWMVCWatermarkDelay":{"comment":"","exp":"( L\"WatermarkDelay\" )","file":"wmcodecdsp.h","line":3573,"type":"String","value":"( L\"WatermarkDelay\" )"},"g_wszWMVDisplayHeight":{"comment":"","exp":"( L\"_DisplayHeight\" )","file":"wmcodecdsp.h","line":3633,"type":"String","value":"( L\"_DisplayHeight\" )"},"g_wszWMVDisplayWidth":{"comment":"","exp":"( L\"_DisplayWidth\" )","file":"wmcodecdsp.h","line":3631,"type":"String","value":"( L\"_DisplayWidth\" )"},"g_wszWMVEncodeHeight":{"comment":"","exp":"( L\"_EncodeHeight\" )","file":"wmcodecdsp.h","line":3637,"type":"String","value":"( L\"_EncodeHeight\" )"},"g_wszWMVEncodeWidth":{"comment":"","exp":"( L\"_EncodeWidth\" )","file":"wmcodecdsp.h","line":3635,"type":"String","value":"( L\"_EncodeWidth\" )"},"g_wszWMVForceStartCode":{"comment":"","exp":"( L\"_FORCESTARTCODE\" )","file":"wmcodecdsp.h","line":3625,"type":"String","value":"( L\"_FORCESTARTCODE\" )"},"g_wszWMVTimeStampFixed":{"comment":"","exp":"( L\"TSFixed\" )","file":"wmcodecdsp.h","line":3645,"type":"String","value":"( L\"TSFixed\" )"},"g_wszWMVTranscodeMode":{"comment":"","exp":"( L\"_TranscodeMode\" )","file":"wmcodecdsp.h","line":3639,"type":"String","value":"( L\"_TranscodeMode\" )"},"tagAecQualityMetrics_Struct":{"comment":"","exp":"","file":"wmcodecdsp.h","line":3685,"type":"Struct","value":"typedef struct tagAecQualityMetrics_Struct\\r\\n    {\\r\\n    LONGLONG i64Timestamp;\\r\\n    BYTE ConvergenceFlag;\\r\\n    BYTE MicClippedFlag;\\r\\n    BYTE MicSilenceFlag;\\r\\n    BYTE PstvFeadbackFlag;\\r\\n    BYTE SpkClippedFlag;\\r\\n    BYTE SpkMuteFlag;\\r\\n    BYTE GlitchFlag;\\r\\n    BYTE DoubleTalkFlag;\\r\\n    ULONG uGlitchCount;\\r\\n    ULONG uMicClipCount;\\r\\n    float fDuration;\\r\\n    float fTSVariance;\\r\\n    float fTSDriftRate;\\r\\n    float fVoiceLevel;\\r\\n    float fNoiseLevel;\\r\\n    float fERLE;\\r\\n    float fAvgERLE;\\r\\n    DWORD dwReserved;\\r\\n    } \\tAecQualityMetrics_Struct;"},"tagCapturedMetadataExposureCompensation":{"comment":"","exp":"","file":"mfapi.h","line":1636,"type":"Struct","value":"typedef struct tagCapturedMetadataExposureCompensation\\r\\n{\\r\\n    UINT64  Flags;  \/\/ KSCAMERA_EXTENDEDPROP_EVCOMP_XXX step flag\\r\\n    INT32   Value;  \/\/ EV Compensation value in units of the step  \\r\\n} CapturedMetadataExposureCompensation;"},"tagCapturedMetadataISOGains":{"comment":"","exp":"","file":"mfapi.h","line":1643,"type":"Struct","value":"typedef struct tagCapturedMetadataISOGains\\r\\n{\\r\\n    FLOAT    AnalogGain; \\t \\r\\n    FLOAT    DigitalGain;\\t  \\r\\n} CapturedMetadataISOGains;"},"tagCapturedMetadataWhiteBalanceGains":{"comment":"","exp":"","file":"mfapi.h","line":1649,"type":"Struct","value":"typedef struct tagCapturedMetadataWhiteBalanceGains\\r\\n{\\r\\n    FLOAT    R; \\t \\r\\n    FLOAT    G;\\r\\n    FLOAT    B; \\t  \\r\\n} CapturedMetadataWhiteBalanceGains;"},"tagFaceCharacterization":{"comment":"","exp":"","file":"mfapi.h","line":1626,"type":"Struct","value":"typedef struct tagFaceCharacterization\\r\\n{\\r\\n    ULONG BlinkScoreLeft;        \/\/ [0, 100]. 0 indicates no blink for the left eye. 100 indicates definite blink for the left eye\\r\\n    ULONG BlinkScoreRight;       \/\/ [0, 100]. 0 indicates no blink for the right eye. 100 indicates definite blink for the right eye\\r\\n    ULONG FacialExpression;      \/\/ Any one of the MF_METADATAFACIALEXPRESSION_XXX defined \\r\\n    ULONG FacialExpressionScore; \/\/ [0, 100]. 0 indicates no such facial expression as identified. 100 indicates definite such facial expression as defined\\r\\n} FaceCharacterization;"},"tagFaceCharacterizationBlobHeader":{"comment":"","exp":"","file":"mfapi.h","line":1619,"type":"Struct","value":"typedef struct tagFaceCharacterizationBlobHeader\\r\\n{\\r\\n    ULONG Size;  \/\/ Size of this header + all FaceCharacterization following\\r\\n    ULONG Count; \/\/ Number of FaceCharacterization's in the blob. Must match the number of FaceRectInfo's in FaceRectInfoBlobHeader\\r\\n} FaceCharacterizationBlobHeader;"},"tagFaceRectInfo":{"comment":"","exp":"","file":"mfapi.h","line":1612,"type":"Struct","value":"typedef struct tagFaceRectInfo\\r\\n{\\r\\n    RECT Region;            \/\/ Relative coordinates on the frame (Q31 format)\\r\\n    LONG confidenceLevel;   \/\/ Confidence Level of the region being a face\\r\\n} FaceRectInfo;"},"tagFaceRectInfoBlobHeader":{"comment":"","exp":"","file":"mfapi.h","line":1606,"type":"Struct","value":"typedef struct tagFaceRectInfoBlobHeader\\r\\n{\\r\\n    ULONG Size;     \/\/ Size of this header + all FaceRectInfo following\\r\\n    ULONG Count;    \/\/ Number of FaceRectInfo's in the blob\\r\\n} FaceRectInfoBlobHeader;"},"tagHistogramBlobHeader":{"comment":"","exp":"","file":"mfapi.h","line":1674,"type":"Struct","value":"typedef struct tagHistogramBlobHeader\\r\\n{\\r\\n    ULONG Size;        \/\/ Size of the entire histogram blob in bytes \\r\\n    ULONG Histograms;  \/\/ Number of histograms in the blob. Each histogram is identified by a HistogramHeader\\r\\n} HistogramBlobHeader;"},"tagHistogramDataHeader":{"comment":"","exp":"","file":"mfapi.h","line":1689,"type":"Struct","value":"typedef struct tagHistogramDataHeader\\r\\n{\\r\\n    ULONG Size;        \/\/ Size in bytes of this header + histogram data following\\r\\n    ULONG ChannelMask; \/\/ Mask of the color channel for the histogram data\\r\\n    ULONG Linear;      \/\/ 1, if linear; 0 nonlinear\\r\\n} HistogramDataHeader;"},"tagHistogramGrid":{"comment":"","exp":"","file":"mfapi.h","line":1666,"type":"Struct","value":"typedef struct tagHistogramGrid\\r\\n{\\r\\n    ULONG Width;  \/\/ Width of the sensor output that histogram is collected from\\r\\n    ULONG Height; \/\/ Height of the sensor output that histogram is collected from\\r\\n    RECT Region;  \/\/ Absolute coordinates of the region on the sensor output that the histogram is collected for\\r\\n} HistogramGrid;"},"tagHistogramHeader":{"comment":"","exp":"","file":"mfapi.h","line":1680,"type":"Struct","value":"typedef struct tagHistogramHeader\\r\\n{\\r\\n    ULONG Size;         \/\/ Size in bytes of this header + (HistogramDataHeader + histogram data following)*number of channels available\\r\\n    ULONG Bins;         \/\/ Number of bins in the histogram\\r\\n    ULONG FourCC;       \/\/ Color space that the histogram is collected from\\r\\n    ULONG ChannelMasks; \/\/ Masks of the color channels that the histogram is collected for\\r\\n    HistogramGrid Grid; \/\/ Grid that the histogram is collected from\\r\\n} HistogramHeader;"},"tagMFASYNCRESULT":{"comment":"","exp":"","file":"mfapi.h","line":395,"type":"Struct","value":"typedef struct tagMFASYNCRESULT\\r\\n{\\r\\n    IMFAsyncResult AsyncResult;\\r\\n    OVERLAPPED overlapped;\\r\\n    IMFAsyncCallback * pCallback;\\r\\n    HRESULT hrStatusResult;\\r\\n    DWORD dwBytesTransferred;\\r\\n    HANDLE hEvent;\\r\\n}   MFASYNCRESULT;"},"tagMetadataTimeStamps":{"comment":"","exp":"","file":"mfapi.h","line":1656,"type":"Struct","value":"typedef struct tagMetadataTimeStamps\\r\\n{\\r\\n    ULONG Flags;           \/\/ Bitwise OR of MF_METADATATIMESTAMPS_XXX flags\\r\\n    LONGLONG Device;       \/\/ QPC time for the sample where the metadata is derived from (in 100ns) \\r\\n    LONGLONG Presentation; \/\/ PTS for the sample where the metadata is derived from (in 100ns)\\r\\n} MetadataTimeStamps;"}},"__includes_list":{"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|codecapi.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|dxva2api.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|dxva9typ.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["stdlib.h","stdlib.h"],["objbase.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\objbase.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|dxvahd.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|evr.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["propidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\PropIdl.h"],["mfidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfidl.h"],["strmif.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\strmif.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|evr9.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["mfobjects.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfobjects.h"],["mftransform.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mftransform.h"],["evr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\evr.h"],["dxva2api.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\dxva2api.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|icodecapi.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["oaidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OAIdl.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|ksopmapi.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfapi.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["mfobjects.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfobjects.h"],["mmreg.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\mmreg.h"],["avrt.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\avrt.h"],["dxgiformat.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\dxgiformat.h"],["initguid.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\initguid.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfcaptureengine.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["mfobjects.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfobjects.h"],["mfidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfidl.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfcontentdecryptionmodule.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["mfmediaengine.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfmediaengine.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfidl.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["mfobjects.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfobjects.h"],["mftransform.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mftransform.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["windef.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\windef.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfmediacapture.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["mfobjects.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfobjects.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfmediaengine.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["mfidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfidl.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfmp2dlna.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["mfobjects.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfobjects.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfobjects.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["propsys.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\propsys.h"],["mediaobj.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mediaobj.h"],["mmreg.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\mmreg.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfplay.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["propsys.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\propsys.h"],["mfidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfidl.h"],["evr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\evr.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfreadwrite.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["mfobjects.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfobjects.h"],["MFTransform.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mftransform.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfsharingengine.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["MFMediaEngine.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfmediaengine.h"],["inspectable.h","inspectable.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mfspatialaudio.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["mfobjects.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfobjects.h"],["SpatialAudioClient.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\SpatialAudioClient.h"],["SpatialAudioMetadata.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\SpatialAudioMetadata.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mftransform.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["mfobjects.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfobjects.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|opmapi.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["dxva2api.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\dxva2api.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|wmcodecdsp.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["mediaobj.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mediaobj.h"],["strmif.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\strmif.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|wmcontainer.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["mfidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mfidl.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]]}}