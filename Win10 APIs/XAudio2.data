{"__const_list":{"FACILITY_XAUDIO2":{"comment":"","exp":"0x896","file":"xaudio2.h","line":160,"type":"Integer","value":2198},"FXECHO_INITDATA":{"comment":"","exp":"","file":"xapofx.h","line":158,"type":"Struct","value":"typedef struct FXECHO_INITDATA {\\r\\n        float MaxDelay;  \/\/ maximum delay (all channels) in milliseconds, must be within [FXECHO_MIN_DELAY, FXECHO_MAX_DELAY]\\r\\n    } FXECHO_INITDATA;"},"FXECHO_PARAMETERS":{"comment":"","exp":"","file":"xapofx.h","line":164,"type":"Struct","value":"typedef struct FXECHO_PARAMETERS {\\r\\n        float WetDryMix; \/\/ ratio of wet (processed) signal to dry (original) signal\\r\\n        float Feedback;  \/\/ amount of output fed back into input\\r\\n        float Delay;     \/\/ delay (all channels) in milliseconds, must be within [FXECHO_MIN_DELAY, FXECHO_PARAMETERS.MaxDelay]\\r\\n    } FXECHO_PARAMETERS;"},"FXEQ_PARAMETERS":{"comment":"","exp":"","file":"xapofx.h","line":121,"type":"Struct","value":"typedef struct FXEQ_PARAMETERS {\\r\\n        float FrequencyCenter0; \/\/ center frequency in Hz, band 0\\r\\n        float Gain0;            \/\/ boost\/cut\\r\\n        float Bandwidth0;       \/\/ bandwidth, region of EQ is center frequency +\/- bandwidth\/2\\r\\n        float FrequencyCenter1; \/\/ band 1\\r\\n        float Gain1;\\r\\n        float Bandwidth1;\\r\\n        float FrequencyCenter2; \/\/ band 2\\r\\n        float Gain2;\\r\\n        float Bandwidth2;\\r\\n        float FrequencyCenter3; \/\/ band 3\\r\\n        float Gain3;\\r\\n        float Bandwidth3;\\r\\n    } FXEQ_PARAMETERS;"},"FXMASTERINGLIMITER_PARAMETERS":{"comment":"","exp":"","file":"xapofx.h","line":139,"type":"Struct","value":"typedef struct FXMASTERINGLIMITER_PARAMETERS {\\r\\n        UINT32 Release;  \/\/ release time (tuning factor with no specific units)\\r\\n        UINT32 Loudness; \/\/ loudness target (threshold)\\r\\n    } FXMASTERINGLIMITER_PARAMETERS;"},"FXREVERB_PARAMETERS":{"comment":"","exp":"","file":"xapofx.h","line":150,"type":"Struct","value":"typedef struct FXREVERB_PARAMETERS {\\r\\n        float Diffusion; \/\/ diffusion\\r\\n        float RoomSize;  \/\/ room size\\r\\n    } FXREVERB_PARAMETERS;"},"HRTF_DEFAULT_CUTOFF_DISTANCE":{"comment":"","exp":"FLT_MAX","file":"hrtfapoapi.h","line":22,"type":"Unknown","value":"FLT_MAX"},"HRTF_DEFAULT_UNITY_GAIN_DISTANCE":{"comment":"","exp":"1.0f","file":"hrtfapoapi.h","line":21,"type":"Float","value":1.0},"HRTF_MAX_GAIN_LIMIT":{"comment":"","exp":"12.0f","file":"hrtfapoapi.h","line":18,"type":"Float","value":12.0},"HRTF_MIN_GAIN_LIMIT":{"comment":"","exp":"-96.0f","file":"hrtfapoapi.h","line":19,"type":"Float","value":-96.0},"HRTF_MIN_UNITY_GAIN_DISTANCE":{"comment":"","exp":"0.05f","file":"hrtfapoapi.h","line":20,"type":"Float","value":0.050000000000000003},"HrtfApoInit":{"comment":"","exp":"","file":"hrtfapoapi.h","line":133,"type":"Struct","value":"typedef struct HrtfApoInit\\r\\n{\\r\\n    \/\/! The decay type. If you pass in nullptr, the default value will be used. The default is natural decay.\\r\\n    HrtfDistanceDecay* distanceDecay;\\r\\n    \/\/! The directivity type. If you pass in nullptr, the default value will be used. The default directivity is omni-directional.\\r\\n    HrtfDirectivity*   directivity;\\r\\n} HrtfApoInit;"},"HrtfDirectivity":{"comment":"","exp":"","file":"hrtfapoapi.h","line":66,"type":"Struct","value":"typedef struct HrtfDirectivity\\r\\n{\\r\\n    \/\/! Indicates the type of directivity.\\r\\n    HrtfDirectivityType type;\\r\\n    \/\/! A normalized value between zero and one. Specifies the amount of linear interpolation between omnidirectional sound and the full directivity pattern, where 0 is fully omnidirectional and 1 is fully directional.\\r\\n    float               scaling;\\r\\n} HrtfDirectivity;"},"HrtfDirectivityCardioid":{"comment":"","exp":"","file":"hrtfapoapi.h","line":75,"type":"Struct","value":"typedef struct HrtfDirectivityCardioid\\r\\n{\\r\\n    \/\/! Descriptor for the cardioid pattern. The type parameter must be set to HrtfDirectivityType.Cardioid.\\r\\n    HrtfDirectivity directivity;\\r\\n    \/\/! Order controls the shape of the cardioid. The higher order the shape, the narrower it is. Must be greater than 0 and less than or equal to 32.\\r\\n    float           order;\\r\\n} HrtfDirectivityCardioid;"},"HrtfDirectivityCone":{"comment":"","exp":"","file":"hrtfapoapi.h","line":88,"type":"Struct","value":"typedef struct HrtfDirectivityCone\\r\\n{\\r\\n    \/\/! Descriptor for the cone pattern. The type parameter must be set to HrtfDirectivityType.Cone.\\r\\n    HrtfDirectivity directivity;\\r\\n    \/\/! Angle, in radians, that defines the inner cone. Must be between 0 and 2 * pi.\\r\\n    float           innerAngle;\\r\\n    \/\/! Angle, in radians, that defines the outer cone. Must be between 0 and 2 * pi.\\r\\n    float           outerAngle;\\r\\n} HrtfDirectivityCone;"},"HrtfDirectivityType":{"comment":"","exp":"","file":"hrtfapoapi.h","line":39,"type":"Enum","value":"typedef enum HrtfDirectivityType\\r\\n{\\r\\n    \/\/! The sound emission is in all directions.\\r\\n    OmniDirectional=0,\\r\\n    \/\/! The sound emission is a cardiod shape.\\r\\n    Cardioid,\\r\\n    \/\/! The sound emission is a cone.\\r\\n    Cone\\r\\n} HrtfDirectivityType;"},"HrtfDistanceDecay":{"comment":"","exp":"","file":"hrtfapoapi.h","line":112,"type":"Struct","value":"typedef struct HrtfDistanceDecay\\r\\n{\\r\\n    \/\/! The type of decay behavior, natural or custom.\\r\\n    HrtfDistanceDecayType type;\\r\\n    \/\/! The maximum gain limit applied at any distance. Applies to both natural and custom decay. This value is specified in dB, with a range from -96 to 12 inclusive. The default value is 12 dB.\\r\\n    float                 maxGain;\\r\\n    \/\/! The minimum gain limit applied at any distance. Applies to both natural and custom decay. This value is specified in dB, with a range from -96 to 12 inclusive. The default value is -96 dB.\\r\\n    float                 minGain;\\r\\n    \/\/! The distance at which the gain is 0dB. Applies to natural decay only. This value is specified in meters, with a range from 0.05 to infinity (FLT_MAX). The default value is 1 meter.\\r\\n    float                 unityGainDistance;\\r\\n    \/\/! The distance at which output is silent. Applies to natural decay only. This value is specified in meters, with a range from zero (non-inclusive) to infinity (FLT_MAX). The default value is infinity.\\r\\n    float                 cutoffDistance;\\r\\n} HrtfDistanceDecay;"},"HrtfDistanceDecayType":{"comment":"","exp":"","file":"hrtfapoapi.h","line":101,"type":"Enum","value":"typedef enum HrtfDistanceDecayType\\r\\n{\\r\\n    \/\/! Simulates natural decay with distance, as constrained by minimum and maximum gain distance limits. Drops to silence at rolloff distance.\\r\\n    NaturalDecay=0,\\r\\n    \/\/! Used to set up a custom gain curve, within the maximum and minimum gain limit.\\r\\n    CustomDecay\\r\\n} HrtfDistanceDecayType;"},"HrtfEnvironment":{"comment":"","exp":"","file":"hrtfapoapi.h","line":50,"type":"Enum","value":"typedef enum HrtfEnvironment\\r\\n{\\r\\n    \/\/! A small room.\\r\\n    Small=0,\\r\\n    \/\/! A medium-sized room.\\r\\n    Medium,\\r\\n    \/\/! A large enclosed space.\\r\\n    Large,\\r\\n    \/\/! An outdoor space.\\r\\n    Outdoors,\\r\\n} HrtfEnvironment;"},"HrtfOrientation":{"comment":"","exp":"","file":"hrtfapoapi.h","line":33,"type":"Struct","value":"typedef struct HrtfOrientation\\r\\n{\\r\\n    float element[9];\\r\\n} HrtfOrientation;"},"HrtfPosition":{"comment":"","exp":"","file":"hrtfapoapi.h","line":25,"type":"Struct","value":"typedef struct HrtfPosition\\r\\n{\\r\\n    float x;\\r\\n    float y;\\r\\n    float z;\\r\\n} HrtfPosition;"},"INTERFACE":{"comment":"","dupe":[{"comment":"","exp":"IXAudio2","file":"xaudio2.h","line":425,"type":"Unknown","value":"IXAudio2"},{"comment":"","exp":"IXAudio2Extension","file":"xaudio2.h","line":563,"type":"Unknown","value":"IXAudio2Extension"},{"comment":"","exp":"IXAudio2Voice","file":"xaudio2.h","line":612,"type":"Unknown","value":"IXAudio2Voice"},{"comment":"","exp":"IXAudio2SourceVoice","file":"xaudio2.h","line":836,"type":"Unknown","value":"IXAudio2SourceVoice"},{"comment":"","exp":"IXAudio2SubmixVoice","file":"xaudio2.h","line":937,"type":"Unknown","value":"IXAudio2SubmixVoice"},{"comment":"","exp":"IXAudio2MasteringVoice","file":"xaudio2.h","line":954,"type":"Unknown","value":"IXAudio2MasteringVoice"},{"comment":"","exp":"IXAudio2EngineCallback","file":"xaudio2.h","line":984,"type":"Unknown","value":"IXAudio2EngineCallback"},{"comment":"","exp":"IXAudio2VoiceCallback","file":"xaudio2.h","line":1011,"type":"Unknown","value":"IXAudio2VoiceCallback"}],"exp":"IXAPOHrtfParameters","file":"hrtfapoapi.h","line":160,"type":"Unknown","value":"IXAPOHrtfParameters"},"IXAudio2MasteringVoice_DestroyVoice":{"comment":"","exp":"IXAudio2Voice_DestroyVoice","file":"xaudio2.h","line":1160,"type":"Unknown","value":"IXAudio2Voice_DestroyVoice"},"IXAudio2MasteringVoice_DisableEffect":{"comment":"","exp":"IXAudio2Voice_DisableEffect","file":"xaudio2.h","line":1146,"type":"Unknown","value":"IXAudio2Voice_DisableEffect"},"IXAudio2MasteringVoice_EnableEffect":{"comment":"","exp":"IXAudio2Voice_EnableEffect","file":"xaudio2.h","line":1145,"type":"Unknown","value":"IXAudio2Voice_EnableEffect"},"IXAudio2MasteringVoice_GetChannelVolumes":{"comment":"","exp":"IXAudio2Voice_GetChannelVolumes","file":"xaudio2.h","line":1157,"type":"Unknown","value":"IXAudio2Voice_GetChannelVolumes"},"IXAudio2MasteringVoice_GetEffectParameters":{"comment":"","exp":"IXAudio2Voice_GetEffectParameters","file":"xaudio2.h","line":1149,"type":"Unknown","value":"IXAudio2Voice_GetEffectParameters"},"IXAudio2MasteringVoice_GetEffectState":{"comment":"","exp":"IXAudio2Voice_GetEffectState","file":"xaudio2.h","line":1147,"type":"Unknown","value":"IXAudio2Voice_GetEffectState"},"IXAudio2MasteringVoice_GetFilterParameters":{"comment":"","exp":"IXAudio2Voice_GetFilterParameters","file":"xaudio2.h","line":1151,"type":"Unknown","value":"IXAudio2Voice_GetFilterParameters"},"IXAudio2MasteringVoice_GetOutputFilterParameters":{"comment":"","exp":"IXAudio2Voice_GetOutputFilterParameters","file":"xaudio2.h","line":1153,"type":"Unknown","value":"IXAudio2Voice_GetOutputFilterParameters"},"IXAudio2MasteringVoice_GetOutputMatrix":{"comment":"","exp":"IXAudio2Voice_GetOutputMatrix","file":"xaudio2.h","line":1159,"type":"Unknown","value":"IXAudio2Voice_GetOutputMatrix"},"IXAudio2MasteringVoice_GetVoiceDetails":{"comment":"","exp":"IXAudio2Voice_GetVoiceDetails","file":"xaudio2.h","line":1142,"type":"Unknown","value":"IXAudio2Voice_GetVoiceDetails"},"IXAudio2MasteringVoice_GetVolume":{"comment":"","exp":"IXAudio2Voice_GetVolume","file":"xaudio2.h","line":1155,"type":"Unknown","value":"IXAudio2Voice_GetVolume"},"IXAudio2MasteringVoice_SetChannelVolumes":{"comment":"","exp":"IXAudio2Voice_SetChannelVolumes","file":"xaudio2.h","line":1156,"type":"Unknown","value":"IXAudio2Voice_SetChannelVolumes"},"IXAudio2MasteringVoice_SetEffectChain":{"comment":"","exp":"IXAudio2Voice_SetEffectChain","file":"xaudio2.h","line":1144,"type":"Unknown","value":"IXAudio2Voice_SetEffectChain"},"IXAudio2MasteringVoice_SetEffectParameters":{"comment":"","exp":"IXAudio2Voice_SetEffectParameters","file":"xaudio2.h","line":1148,"type":"Unknown","value":"IXAudio2Voice_SetEffectParameters"},"IXAudio2MasteringVoice_SetFilterParameters":{"comment":"","exp":"IXAudio2Voice_SetFilterParameters","file":"xaudio2.h","line":1150,"type":"Unknown","value":"IXAudio2Voice_SetFilterParameters"},"IXAudio2MasteringVoice_SetOutputFilterParameters":{"comment":"","exp":"IXAudio2Voice_SetOutputFilterParameters","file":"xaudio2.h","line":1152,"type":"Unknown","value":"IXAudio2Voice_SetOutputFilterParameters"},"IXAudio2MasteringVoice_SetOutputMatrix":{"comment":"","exp":"IXAudio2Voice_SetOutputMatrix","file":"xaudio2.h","line":1158,"type":"Unknown","value":"IXAudio2Voice_SetOutputMatrix"},"IXAudio2MasteringVoice_SetOutputVoices":{"comment":"","exp":"IXAudio2Voice_SetOutputVoices","file":"xaudio2.h","line":1143,"type":"Unknown","value":"IXAudio2Voice_SetOutputVoices"},"IXAudio2MasteringVoice_SetVolume":{"comment":"","exp":"IXAudio2Voice_SetVolume","file":"xaudio2.h","line":1154,"type":"Unknown","value":"IXAudio2Voice_SetVolume"},"IXAudio2SourceVoice_DestroyVoice":{"comment":"","exp":"IXAudio2Voice_DestroyVoice","file":"xaudio2.h","line":1108,"type":"Unknown","value":"IXAudio2Voice_DestroyVoice"},"IXAudio2SourceVoice_DisableEffect":{"comment":"","exp":"IXAudio2Voice_DisableEffect","file":"xaudio2.h","line":1094,"type":"Unknown","value":"IXAudio2Voice_DisableEffect"},"IXAudio2SourceVoice_EnableEffect":{"comment":"","exp":"IXAudio2Voice_EnableEffect","file":"xaudio2.h","line":1093,"type":"Unknown","value":"IXAudio2Voice_EnableEffect"},"IXAudio2SourceVoice_GetChannelVolumes":{"comment":"","exp":"IXAudio2Voice_GetChannelVolumes","file":"xaudio2.h","line":1105,"type":"Unknown","value":"IXAudio2Voice_GetChannelVolumes"},"IXAudio2SourceVoice_GetEffectParameters":{"comment":"","exp":"IXAudio2Voice_GetEffectParameters","file":"xaudio2.h","line":1097,"type":"Unknown","value":"IXAudio2Voice_GetEffectParameters"},"IXAudio2SourceVoice_GetEffectState":{"comment":"","exp":"IXAudio2Voice_GetEffectState","file":"xaudio2.h","line":1095,"type":"Unknown","value":"IXAudio2Voice_GetEffectState"},"IXAudio2SourceVoice_GetFilterParameters":{"comment":"","exp":"IXAudio2Voice_GetFilterParameters","file":"xaudio2.h","line":1099,"type":"Unknown","value":"IXAudio2Voice_GetFilterParameters"},"IXAudio2SourceVoice_GetOutputFilterParameters":{"comment":"","exp":"IXAudio2Voice_GetOutputFilterParameters","file":"xaudio2.h","line":1101,"type":"Unknown","value":"IXAudio2Voice_GetOutputFilterParameters"},"IXAudio2SourceVoice_GetOutputMatrix":{"comment":"","exp":"IXAudio2Voice_GetOutputMatrix","file":"xaudio2.h","line":1107,"type":"Unknown","value":"IXAudio2Voice_GetOutputMatrix"},"IXAudio2SourceVoice_GetVoiceDetails":{"comment":"","exp":"IXAudio2Voice_GetVoiceDetails","file":"xaudio2.h","line":1090,"type":"Unknown","value":"IXAudio2Voice_GetVoiceDetails"},"IXAudio2SourceVoice_GetVolume":{"comment":"","exp":"IXAudio2Voice_GetVolume","file":"xaudio2.h","line":1103,"type":"Unknown","value":"IXAudio2Voice_GetVolume"},"IXAudio2SourceVoice_SetChannelVolumes":{"comment":"","exp":"IXAudio2Voice_SetChannelVolumes","file":"xaudio2.h","line":1104,"type":"Unknown","value":"IXAudio2Voice_SetChannelVolumes"},"IXAudio2SourceVoice_SetEffectChain":{"comment":"","exp":"IXAudio2Voice_SetEffectChain","file":"xaudio2.h","line":1092,"type":"Unknown","value":"IXAudio2Voice_SetEffectChain"},"IXAudio2SourceVoice_SetEffectParameters":{"comment":"","exp":"IXAudio2Voice_SetEffectParameters","file":"xaudio2.h","line":1096,"type":"Unknown","value":"IXAudio2Voice_SetEffectParameters"},"IXAudio2SourceVoice_SetFilterParameters":{"comment":"","exp":"IXAudio2Voice_SetFilterParameters","file":"xaudio2.h","line":1098,"type":"Unknown","value":"IXAudio2Voice_SetFilterParameters"},"IXAudio2SourceVoice_SetOutputFilterParameters":{"comment":"","exp":"IXAudio2Voice_SetOutputFilterParameters","file":"xaudio2.h","line":1100,"type":"Unknown","value":"IXAudio2Voice_SetOutputFilterParameters"},"IXAudio2SourceVoice_SetOutputMatrix":{"comment":"","exp":"IXAudio2Voice_SetOutputMatrix","file":"xaudio2.h","line":1106,"type":"Unknown","value":"IXAudio2Voice_SetOutputMatrix"},"IXAudio2SourceVoice_SetOutputVoices":{"comment":"","exp":"IXAudio2Voice_SetOutputVoices","file":"xaudio2.h","line":1091,"type":"Unknown","value":"IXAudio2Voice_SetOutputVoices"},"IXAudio2SourceVoice_SetVolume":{"comment":"","exp":"IXAudio2Voice_SetVolume","file":"xaudio2.h","line":1102,"type":"Unknown","value":"IXAudio2Voice_SetVolume"},"IXAudio2SubmixVoice_DestroyVoice":{"comment":"","exp":"IXAudio2Voice_DestroyVoice","file":"xaudio2.h","line":1139,"type":"Unknown","value":"IXAudio2Voice_DestroyVoice"},"IXAudio2SubmixVoice_DisableEffect":{"comment":"","exp":"IXAudio2Voice_DisableEffect","file":"xaudio2.h","line":1125,"type":"Unknown","value":"IXAudio2Voice_DisableEffect"},"IXAudio2SubmixVoice_EnableEffect":{"comment":"","exp":"IXAudio2Voice_EnableEffect","file":"xaudio2.h","line":1124,"type":"Unknown","value":"IXAudio2Voice_EnableEffect"},"IXAudio2SubmixVoice_GetChannelVolumes":{"comment":"","exp":"IXAudio2Voice_GetChannelVolumes","file":"xaudio2.h","line":1136,"type":"Unknown","value":"IXAudio2Voice_GetChannelVolumes"},"IXAudio2SubmixVoice_GetEffectParameters":{"comment":"","exp":"IXAudio2Voice_GetEffectParameters","file":"xaudio2.h","line":1128,"type":"Unknown","value":"IXAudio2Voice_GetEffectParameters"},"IXAudio2SubmixVoice_GetEffectState":{"comment":"","exp":"IXAudio2Voice_GetEffectState","file":"xaudio2.h","line":1126,"type":"Unknown","value":"IXAudio2Voice_GetEffectState"},"IXAudio2SubmixVoice_GetFilterParameters":{"comment":"","exp":"IXAudio2Voice_GetFilterParameters","file":"xaudio2.h","line":1130,"type":"Unknown","value":"IXAudio2Voice_GetFilterParameters"},"IXAudio2SubmixVoice_GetOutputFilterParameters":{"comment":"","exp":"IXAudio2Voice_GetOutputFilterParameters","file":"xaudio2.h","line":1132,"type":"Unknown","value":"IXAudio2Voice_GetOutputFilterParameters"},"IXAudio2SubmixVoice_GetOutputMatrix":{"comment":"","exp":"IXAudio2Voice_GetOutputMatrix","file":"xaudio2.h","line":1138,"type":"Unknown","value":"IXAudio2Voice_GetOutputMatrix"},"IXAudio2SubmixVoice_GetVoiceDetails":{"comment":"","exp":"IXAudio2Voice_GetVoiceDetails","file":"xaudio2.h","line":1121,"type":"Unknown","value":"IXAudio2Voice_GetVoiceDetails"},"IXAudio2SubmixVoice_GetVolume":{"comment":"","exp":"IXAudio2Voice_GetVolume","file":"xaudio2.h","line":1134,"type":"Unknown","value":"IXAudio2Voice_GetVolume"},"IXAudio2SubmixVoice_SetChannelVolumes":{"comment":"","exp":"IXAudio2Voice_SetChannelVolumes","file":"xaudio2.h","line":1135,"type":"Unknown","value":"IXAudio2Voice_SetChannelVolumes"},"IXAudio2SubmixVoice_SetEffectChain":{"comment":"","exp":"IXAudio2Voice_SetEffectChain","file":"xaudio2.h","line":1123,"type":"Unknown","value":"IXAudio2Voice_SetEffectChain"},"IXAudio2SubmixVoice_SetEffectParameters":{"comment":"","exp":"IXAudio2Voice_SetEffectParameters","file":"xaudio2.h","line":1127,"type":"Unknown","value":"IXAudio2Voice_SetEffectParameters"},"IXAudio2SubmixVoice_SetFilterParameters":{"comment":"","exp":"IXAudio2Voice_SetFilterParameters","file":"xaudio2.h","line":1129,"type":"Unknown","value":"IXAudio2Voice_SetFilterParameters"},"IXAudio2SubmixVoice_SetOutputFilterParameters":{"comment":"","exp":"IXAudio2Voice_SetOutputFilterParameters","file":"xaudio2.h","line":1131,"type":"Unknown","value":"IXAudio2Voice_SetOutputFilterParameters"},"IXAudio2SubmixVoice_SetOutputMatrix":{"comment":"","exp":"IXAudio2Voice_SetOutputMatrix","file":"xaudio2.h","line":1137,"type":"Unknown","value":"IXAudio2Voice_SetOutputMatrix"},"IXAudio2SubmixVoice_SetOutputVoices":{"comment":"","exp":"IXAudio2Voice_SetOutputVoices","file":"xaudio2.h","line":1122,"type":"Unknown","value":"IXAudio2Voice_SetOutputVoices"},"IXAudio2SubmixVoice_SetVolume":{"comment":"","exp":"IXAudio2Voice_SetVolume","file":"xaudio2.h","line":1133,"type":"Unknown","value":"IXAudio2Voice_SetVolume"},"Processor1":{"comment":"","exp":"0x00000001","file":"xaudio2.h","line":195,"type":"Integer","value":1},"Processor10":{"comment":"","exp":"0x00000200","file":"xaudio2.h","line":204,"type":"Integer","value":512},"Processor11":{"comment":"","exp":"0x00000400","file":"xaudio2.h","line":205,"type":"Integer","value":1024},"Processor12":{"comment":"","exp":"0x00000800","file":"xaudio2.h","line":206,"type":"Integer","value":2048},"Processor13":{"comment":"","exp":"0x00001000","file":"xaudio2.h","line":207,"type":"Integer","value":4096},"Processor14":{"comment":"","exp":"0x00002000","file":"xaudio2.h","line":208,"type":"Integer","value":8192},"Processor15":{"comment":"","exp":"0x00004000","file":"xaudio2.h","line":209,"type":"Integer","value":16384},"Processor16":{"comment":"","exp":"0x00008000","file":"xaudio2.h","line":210,"type":"Integer","value":32768},"Processor17":{"comment":"","exp":"0x00010000","file":"xaudio2.h","line":211,"type":"Integer","value":65536},"Processor18":{"comment":"","exp":"0x00020000","file":"xaudio2.h","line":212,"type":"Integer","value":131072},"Processor19":{"comment":"","exp":"0x00040000","file":"xaudio2.h","line":213,"type":"Integer","value":262144},"Processor2":{"comment":"","exp":"0x00000002","file":"xaudio2.h","line":196,"type":"Integer","value":2},"Processor20":{"comment":"","exp":"0x00080000","file":"xaudio2.h","line":214,"type":"Integer","value":524288},"Processor21":{"comment":"","exp":"0x00100000","file":"xaudio2.h","line":215,"type":"Integer","value":1048576},"Processor22":{"comment":"","exp":"0x00200000","file":"xaudio2.h","line":216,"type":"Integer","value":2097152},"Processor23":{"comment":"","exp":"0x00400000","file":"xaudio2.h","line":217,"type":"Integer","value":4194304},"Processor24":{"comment":"","exp":"0x00800000","file":"xaudio2.h","line":218,"type":"Integer","value":8388608},"Processor25":{"comment":"","exp":"0x01000000","file":"xaudio2.h","line":219,"type":"Integer","value":16777216},"Processor26":{"comment":"","exp":"0x02000000","file":"xaudio2.h","line":220,"type":"Integer","value":33554432},"Processor27":{"comment":"","exp":"0x04000000","file":"xaudio2.h","line":221,"type":"Integer","value":67108864},"Processor28":{"comment":"","exp":"0x08000000","file":"xaudio2.h","line":222,"type":"Integer","value":134217728},"Processor29":{"comment":"","exp":"0x10000000","file":"xaudio2.h","line":223,"type":"Integer","value":268435456},"Processor3":{"comment":"","exp":"0x00000004","file":"xaudio2.h","line":197,"type":"Integer","value":4},"Processor30":{"comment":"","exp":"0x20000000","file":"xaudio2.h","line":224,"type":"Integer","value":536870912},"Processor31":{"comment":"","exp":"0x40000000","file":"xaudio2.h","line":225,"type":"Integer","value":1073741824},"Processor32":{"comment":"","exp":"0x80000000","file":"xaudio2.h","line":226,"type":"Integer","value":2147483648},"Processor4":{"comment":"","exp":"0x00000008","file":"xaudio2.h","line":198,"type":"Integer","value":8},"Processor5":{"comment":"","exp":"0x00000010","file":"xaudio2.h","line":199,"type":"Integer","value":16},"Processor6":{"comment":"","exp":"0x00000020","file":"xaudio2.h","line":200,"type":"Integer","value":32},"Processor7":{"comment":"","exp":"0x00000040","file":"xaudio2.h","line":201,"type":"Integer","value":64},"Processor8":{"comment":"","exp":"0x00000080","file":"xaudio2.h","line":202,"type":"Integer","value":128},"Processor9":{"comment":"","exp":"0x00000100","file":"xaudio2.h","line":203,"type":"Integer","value":256},"X3DAUDIO_2PI":{"comment":"","exp":"6.283185307f","file":"x3daudio.h","line":108,"type":"Float","value":6.2831853070000001},"X3DAUDIO_CALCULATE_DELAY":{"comment":"\/\/ enable delay time array calculation (stereo final mix only)","exp":"0x00000002","file":"x3daudio.h","line":115,"type":"Integer","value":2},"X3DAUDIO_CALCULATE_DOPPLER":{"comment":"\/\/ enable doppler shift factor calculation","exp":"0x00000020","file":"x3daudio.h","line":119,"type":"Integer","value":32},"X3DAUDIO_CALCULATE_EMITTER_ANGLE":{"comment":"\/\/ enable emitter-to-listener interior angle calculation","exp":"0x00000040","file":"x3daudio.h","line":120,"type":"Integer","value":64},"X3DAUDIO_CALCULATE_LPF_DIRECT":{"comment":"\/\/ enable LPF direct-path coefficient calculation","exp":"0x00000004","file":"x3daudio.h","line":116,"type":"Integer","value":4},"X3DAUDIO_CALCULATE_LPF_REVERB":{"comment":"\/\/ enable LPF reverb-path coefficient calculation","exp":"0x00000008","file":"x3daudio.h","line":117,"type":"Integer","value":8},"X3DAUDIO_CALCULATE_MATRIX":{"comment":"\/\/ enable matrix coefficient table calculation","exp":"0x00000001","file":"x3daudio.h","line":114,"type":"Integer","value":1},"X3DAUDIO_CALCULATE_REDIRECT_TO_LFE":{"comment":"\/\/ apply equal mix of all source channels to LFE destination channel, valid only for matrix calculations with sources that have no LFE channel and final mix formats that have an LFE channel","exp":"0x00020000","file":"x3daudio.h","line":123,"type":"Integer","value":131072},"X3DAUDIO_CALCULATE_REVERB":{"comment":"\/\/ enable reverb send level calculation","exp":"0x00000010","file":"x3daudio.h","line":118,"type":"Integer","value":16},"X3DAUDIO_CALCULATE_ZEROCENTER":{"comment":"\/\/ do not position to front center speaker, signal positioned to remaining speakers instead, front center destination channel will be zero in returned matrix coefficient table, valid only for matrix calculations with final mix formats that have a front center channel","exp":"0x00010000","file":"x3daudio.h","line":122,"type":"Integer","value":65536},"X3DAUDIO_CONE":{"comment":"","exp":"","file":"x3daudio.h","line":177,"type":"Struct","value":"typedef struct X3DAUDIO_CONE\\r\\n{\\r\\n    FLOAT32 InnerAngle; \/\/ inner cone angle in radians, must be within [0.0f, X3DAUDIO_2PI]\\r\\n    FLOAT32 OuterAngle; \/\/ outer cone angle in radians, must be within [InnerAngle, X3DAUDIO_2PI]\\r\\n    FLOAT32 InnerVolume; \/\/ volume level scaler on\/within inner cone, used only for matrix calculations, must be within [0.0f, 2.0f] when used\\r\\n    FLOAT32 OuterVolume; \/\/ volume level scaler on\/beyond outer cone, used only for matrix calculations, must be within [0.0f, 2.0f] when used\\r\\n    FLOAT32 InnerLPF;    \/\/ LPF (both direct and reverb paths) coefficient subtrahend on\/within inner cone, used only for LPF (both direct and reverb paths) calculations, must be within [0.0f, 1.0f] when used\\r\\n    FLOAT32 OuterLPF;    \/\/ LPF (both direct and reverb paths) coefficient subtrahend on\/beyond outer cone, used only for LPF (both direct and reverb paths) calculations, must be within [0.0f, 1.0f] when used\\r\\n    FLOAT32 InnerReverb; \/\/ reverb send level scaler on\/within inner cone, used only for reverb calculations, must be within [0.0f, 2.0f] when used\\r\\n    FLOAT32 OuterReverb; \/\/ reverb send level scaler on\/beyond outer cone, used only for reverb calculations, must be within [0.0f, 2.0f] when used\\r\\n} X3DAUDIO_CONE, *LPX3DAUDIO_CONE;"},"X3DAUDIO_DISTANCE_CURVE":{"comment":"","exp":"","file":"x3daudio.h","line":159,"type":"Struct","value":"typedef struct X3DAUDIO_DISTANCE_CURVE\\r\\n{\\r\\n    X3DAUDIO_DISTANCE_CURVE_POINT* pPoints;    \/\/ distance curve point array, must have at least PointCount elements with no duplicates and be sorted in ascending order with respect to Distance\\r\\n    UINT32                         PointCount; \/\/ number of distance curve points, must be >= 2 as all distance curves must have at least two endpoints, defining DSP settings at 0.0f and 1.0f normalized distance\\r\\n} X3DAUDIO_DISTANCE_CURVE, *LPX3DAUDIO_DISTANCE_CURVE;"},"X3DAUDIO_DISTANCE_CURVE_POINT":{"comment":"","exp":"","file":"x3daudio.h","line":140,"type":"Struct","value":"typedef struct X3DAUDIO_DISTANCE_CURVE_POINT\\r\\n{\\r\\n    FLOAT32 Distance;   \/\/ normalized distance, must be within [0.0f, 1.0f]\\r\\n    FLOAT32 DSPSetting; \/\/ DSP setting\\r\\n} X3DAUDIO_DISTANCE_CURVE_POINT, *LPX3DAUDIO_DISTANCE_CURVE_POINT;"},"X3DAUDIO_DSP_SETTINGS":{"comment":"","exp":"","file":"x3daudio.h","line":270,"type":"Struct","value":"typedef struct X3DAUDIO_DSP_SETTINGS\\r\\n{\\r\\n    FLOAT32* pMatrixCoefficients; \/\/ [inout] matrix coefficient table, receives an array representing the volume level used to send from source channel S to destination channel D, stored as pMatrixCoefficients[SrcChannelCount * D + S], must have at least SrcChannelCount*DstChannelCount elements\\r\\n    FLOAT32* pDelayTimes;         \/\/ [inout] delay time array, receives delays for each destination channel in milliseconds, must have at least DstChannelCount elements (stereo final mix only)\\r\\n    UINT32 SrcChannelCount;       \/\/ [in] number of source channels, must equal number of channels in respective emitter\\r\\n    UINT32 DstChannelCount;       \/\/ [in] number of destination channels, must equal number of channels of the final mix\\r\\n    FLOAT32 LPFDirectCoefficient; \/\/ [out] LPF direct-path coefficient\\r\\n    FLOAT32 LPFReverbCoefficient; \/\/ [out] LPF reverb-path coefficient\\r\\n    FLOAT32 ReverbLevel; \/\/ [out] reverb send level\\r\\n    FLOAT32 DopplerFactor; \/\/ [out] doppler shift factor, scales resampler ratio for doppler shift effect, where the effective frequency = DopplerFactor * original frequency\\r\\n    FLOAT32 EmitterToListenerAngle; \/\/ [out] emitter-to-listener interior angle, expressed in radians with respect to the emitter's front orientation\\r\\n    FLOAT32 EmitterToListenerDistance; \/\/ [out] distance in user-defined world units from the emitter base to listener position, always calculated\\r\\n    FLOAT32 EmitterVelocityComponent; \/\/ [out] component of emitter velocity vector projected onto emitter->listener vector in user-defined world units\/second, calculated only for doppler\\r\\n    FLOAT32 ListenerVelocityComponent; \/\/ [out] component of listener velocity vector projected onto emitter->listener vector in user-defined world units\/second, calculated only for doppler\\r\\n} X3DAUDIO_DSP_SETTINGS, *LPX3DAUDIO_DSP_SETTINGS;"},"X3DAUDIO_EMITTER":{"comment":"","exp":"","file":"x3daudio.h","line":237,"type":"Struct","value":"typedef struct X3DAUDIO_EMITTER\\r\\n{\\r\\n    X3DAUDIO_CONE* pCone; \/\/ sound cone, used only with single-channel emitters for matrix, LPF (both direct and reverb paths), and reverb calculations, NULL specifies omnidirectionality\\r\\n    X3DAUDIO_VECTOR OrientFront; \/\/ orientation of front direction, used only for emitter angle calculations or with multi-channel emitters for matrix calculations or single-channel emitters with cones for matrix, LPF (both direct and reverb paths), and reverb calculations, must be normalized when used\\r\\n    X3DAUDIO_VECTOR OrientTop;   \/\/ orientation of top direction, used only with multi-channel emitters for matrix calculations, must be orthonormal with OrientFront when used\\r\\n    X3DAUDIO_VECTOR Position; \/\/ position in user-defined world units, does not affect Velocity\\r\\n    X3DAUDIO_VECTOR Velocity; \/\/ velocity vector in user-defined world units\/second, used only for doppler calculations, does not affect Position\\r\\n    FLOAT32 InnerRadius;      \/\/ inner radius, must be within [0.0f, FLT_MAX]\\r\\n    FLOAT32 InnerRadiusAngle; \/\/ inner radius angle, must be within [0.0f, X3DAUDIO_PI\/4.0)\\r\\n    UINT32 ChannelCount;       \/\/ number of sound channels, must be > 0\\r\\n    FLOAT32 ChannelRadius;     \/\/ channel radius, used only with multi-channel emitters for matrix calculations, must be >= 0.0f when used\\r\\n    FLOAT32* pChannelAzimuths; \/\/ channel azimuth array, used only with multi-channel emitters for matrix calculations, contains positions of each channel expressed in radians along the channel radius with respect to the front orientation vector in the plane orthogonal to the top orientation vector, or X3DAUDIO_2PI to specify an LFE channel, must have at least ChannelCount elements, all within [0.0f, X3DAUDIO_2PI] when used\\r\\n    X3DAUDIO_DISTANCE_CURVE* pVolumeCurve;    \/\/ volume level distance curve, used only for matrix calculations, NULL specifies a default curve that conforms to the inverse square law, calculated in user-defined world units with distances <= CurveDistanceScaler clamped to no attenuation\\r\\n    X3DAUDIO_DISTANCE_CURVE* pLFECurve;       \/\/ LFE level distance curve, used only for matrix calculations, NULL specifies a default curve that conforms to the inverse square law, calculated in user-defined world units with distances <= CurveDistanceScaler clamped to no attenuation\\r\\n    X3DAUDIO_DISTANCE_CURVE* pLPFDirectCurve; \/\/ LPF direct-path coefficient distance curve, used only for LPF direct-path calculations, NULL specifies the default curve: [0.0f,1.0f], [1.0f,0.75f]\\r\\n    X3DAUDIO_DISTANCE_CURVE* pLPFReverbCurve; \/\/ LPF reverb-path coefficient distance curve, used only for LPF reverb-path calculations, NULL specifies the default curve: [0.0f,0.75f], [1.0f,0.75f]\\r\\n    X3DAUDIO_DISTANCE_CURVE* pReverbCurve;    \/\/ reverb send level distance curve, used only for reverb calculations, NULL specifies the default curve: [0.0f,1.0f], [1.0f,0.0f]\\r\\n    FLOAT32 CurveDistanceScaler; \/\/ curve distance scaler, used to scale normalized distance curves to user-defined world units and\/or exaggerate their effect, used only for matrix, LPF (both direct and reverb paths), and reverb calculations, must be within [FLT_MIN, FLT_MAX] when used\\r\\n    FLOAT32 DopplerScaler;       \/\/ doppler shift scaler, used to exaggerate doppler shift effect, used only for doppler calculations, must be within [0.0f, FLT_MAX] when used\\r\\n} X3DAUDIO_EMITTER, *LPX3DAUDIO_EMITTER;"},"X3DAUDIO_HANDLE_BYTESIZE":{"comment":"","exp":"20","file":"x3daudio.h","line":104,"type":"Integer","value":20},"X3DAUDIO_LISTENER":{"comment":"","exp":"","file":"x3daudio.h","line":196,"type":"Struct","value":"typedef struct X3DAUDIO_LISTENER\\r\\n{\\r\\n    X3DAUDIO_VECTOR OrientFront; \/\/ orientation of front direction, used only for matrix and delay calculations or listeners with cones for matrix, LPF (both direct and reverb paths), and reverb calculations, must be normalized when used\\r\\n    X3DAUDIO_VECTOR OrientTop;   \/\/ orientation of top direction, used only for matrix and delay calculations, must be orthonormal with OrientFront when used\\r\\n    X3DAUDIO_VECTOR Position; \/\/ position in user-defined world units, does not affect Velocity\\r\\n    X3DAUDIO_VECTOR Velocity; \/\/ velocity vector in user-defined world units\/second, used only for doppler calculations, does not affect Position\\r\\n    X3DAUDIO_CONE* pCone; \/\/ sound cone, used only for matrix, LPF (both direct and reverb paths), and reverb calculations, NULL specifies omnidirectionality\\r\\n} X3DAUDIO_LISTENER, *LPX3DAUDIO_LISTENER;"},"X3DAUDIO_PI":{"comment":"","exp":"3.141592654f","file":"x3daudio.h","line":107,"type":"Float","value":3.1415926540000001},"X3DAUDIO_SPEED_OF_SOUND":{"comment":"","exp":"343.5f","file":"x3daudio.h","line":111,"type":"Float","value":343.5},"XAPOBASE_DEFAULT_BUFFER_COUNT":{"comment":"","exp":"1","file":"xapobase.h","line":34,"type":"Integer","value":1},"XAPOBASE_DEFAULT_FLAG":{"comment":"","exp":"(XAPO_FLAG_CHANNELS_MUST_MATCH | XAPO_FLAG_FRAMERATE_MUST_MATCH | XAPO_FLAG_BITSPERSAMPLE_MUST_MATCH | XAPO_FLAG_BUFFERCOUNT_MUST_MATCH | XAPO_FLAG_INPLACE_SUPPORTED)","file":"xapobase.h","line":31,"type":"Unknown","value":"(XAPO_FLAG_CHANNELS_MUST_MATCH | XAPO_FLAG_FRAMERATE_MUST_MATCH | XAPO_FLAG_BITSPERSAMPLE_MUST_MATCH | XAPO_FLAG_BUFFERCOUNT_MUST_MATCH | XAPO_FLAG_INPLACE_SUPPORTED)"},"XAPOBASE_DEFAULT_FORMAT_BITSPERSAMPLE":{"comment":"\/\/ 32-bit float only, applies to WAVEFORMATEX.wBitsPerSample and WAVEFORMATEXTENSIBLE.wValidBitsPerSample when used","exp":"32","file":"xapobase.h","line":28,"type":"Integer","value":32},"XAPOBASE_DEFAULT_FORMAT_MAX_CHANNELS":{"comment":"\/\/ maximum channel count, applies to WAVEFORMATEX.nChannels","exp":"XAPO_MAX_CHANNELS","file":"xapobase.h","line":25,"type":"Unknown","value":"XAPO_MAX_CHANNELS"},"XAPOBASE_DEFAULT_FORMAT_MAX_FRAMERATE":{"comment":"\/\/ maximum framerate, applies to WAVEFORMATEX.nSamplesPerSec","exp":"XAPO_MAX_FRAMERATE","file":"xapobase.h","line":27,"type":"Unknown","value":"XAPO_MAX_FRAMERATE"},"XAPOBASE_DEFAULT_FORMAT_MIN_CHANNELS":{"comment":"\/\/ minimum channel count, applies to WAVEFORMATEX.nChannels","exp":"XAPO_MIN_CHANNELS","file":"xapobase.h","line":24,"type":"Unknown","value":"XAPO_MIN_CHANNELS"},"XAPOBASE_DEFAULT_FORMAT_MIN_FRAMERATE":{"comment":"\/\/ minimum framerate, applies to WAVEFORMATEX.nSamplesPerSec","exp":"XAPO_MIN_FRAMERATE","file":"xapobase.h","line":26,"type":"Unknown","value":"XAPO_MIN_FRAMERATE"},"XAPOBASE_DEFAULT_FORMAT_TAG":{"comment":"\/\/ 32-bit float only, applies to WAVEFORMATEX.wFormatTag or WAVEFORMATEXTENSIBLE.SubFormat when used","exp":"WAVE_FORMAT_IEEE_FLOAT","file":"xapobase.h","line":23,"type":"Unknown","value":"WAVE_FORMAT_IEEE_FLOAT"},"XAPO_BUFFER_FLAGS":{"comment":"","exp":"","file":"xapo.h","line":236,"type":"Enum","value":"typedef enum XAPO_BUFFER_FLAGS {\\r\\n        XAPO_BUFFER_SILENT, \/\/ silent data should be assumed, respective memory may be uninitialized\\r\\n        XAPO_BUFFER_VALID,  \/\/ arbitrary data should be assumed (may or may not be silent frames), respective memory initialized\\r\\n    } XAPO_BUFFER_FLAGS;"},"XAPO_LOCKFORPROCESS_BUFFER_PARAMETERS":{"comment":"","exp":"","file":"xapo.h","line":214,"type":"Struct","value":"typedef struct XAPO_LOCKFORPROCESS_BUFFER_PARAMETERS {\\r\\n        const WAVEFORMATEX* pFormat;       \/\/ buffer audio format\\r\\n        UINT32              MaxFrameCount; \/\/ maximum number of frames in respective buffer that IXAPO::Process would have to handle, irrespective of dynamic variable settings, can be 0\\r\\n    } XAPO_LOCKFORPROCESS_PARAMETERS;"},"XAPO_PROCESS_BUFFER_PARAMETERS":{"comment":"","exp":"","file":"xapo.h","line":255,"type":"Struct","value":"typedef struct XAPO_PROCESS_BUFFER_PARAMETERS {\\r\\n        void*             pBuffer;         \/\/ audio data buffer, must be non-NULL\\r\\n        XAPO_BUFFER_FLAGS BufferFlags;     \/\/ describes assumed content of pBuffer, does not affect ValidFrameCount\\r\\n        UINT32            ValidFrameCount; \/\/ number of frames of valid data, must be within respective [0, XAPO_LOCKFORPROCESS_BUFFER_PARAMETERS.MaxFrameCount], always XAPO_LOCKFORPROCESS_BUFFER_PARAMETERS.MaxFrameCount for CBR\/user-defined XAPOs, does not affect BufferFlags\\r\\n    } XAPO_PROCESS_BUFFER_PARAMETERS;"},"XAPO_REGISTRATION_PROPERTIES":{"comment":"","exp":"","file":"xapo.h","line":194,"type":"Struct","value":"typedef struct XAPO_REGISTRATION_PROPERTIES {\\r\\n        CLSID  clsid;                                          \/\/ COM class ID, used with CoCreate\\r\\n        WCHAR  FriendlyName[XAPO_REGISTRATION_STRING_LENGTH];  \/\/ friendly name unicode string\\r\\n        WCHAR  CopyrightInfo[XAPO_REGISTRATION_STRING_LENGTH]; \/\/ copyright information unicode string\\r\\n        UINT32 MajorVersion;                                   \/\/ major version\\r\\n        UINT32 MinorVersion;                                   \/\/ minor version\\r\\n        UINT32 Flags;                                          \/\/ XAPO property flags, describes supported input\/output configuration\\r\\n        UINT32 MinInputBufferCount;                            \/\/ minimum number of input buffers required for processing, can be 0\\r\\n        UINT32 MaxInputBufferCount;                            \/\/ maximum number of input buffers supported for processing, must be >= MinInputBufferCount\\r\\n        UINT32 MinOutputBufferCount;                           \/\/ minimum number of output buffers required for processing, can be 0, must match MinInputBufferCount when XAPO_FLAG_BUFFERCOUNT_MUST_MATCH used\\r\\n        UINT32 MaxOutputBufferCount;                           \/\/ maximum number of output buffers supported for processing, must be >= MinOutputBufferCount, must match MaxInputBufferCount when XAPO_FLAG_BUFFERCOUNT_MUST_MATCH used\\r\\n    } XAPO_REGISTRATION_PROPERTIES;"},"XAUDIO2FX_I3DL2_PRESET_ALLEY":{"comment":"","exp":"{100, -1000, -270,0.0f, 1.49f,0.86f, -1204,0.007f, -4,0.011f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":374,"type":"Other","value":"{100, -1000, -270,0.0f, 1.49f,0.86f, -1204,0.007f, -4,0.011f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_ARENA":{"comment":"","exp":"{100, -1000, -698,0.0f, 7.24f,0.33f, -1166,0.020f, 16,0.030f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":369,"type":"Other","value":"{100, -1000, -698,0.0f, 7.24f,0.33f, -1166,0.020f, 16,0.030f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_AUDITORIUM":{"comment":"","exp":"{100, -1000, -476,0.0f, 4.32f,0.59f, -789,0.020f, -289,0.030f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":366,"type":"Other","value":"{100, -1000, -476,0.0f, 4.32f,0.59f, -789,0.020f, -289,0.030f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_BATHROOM":{"comment":"","exp":"{100, -1000,-1200,0.0f, 1.49f,0.54f, -370,0.007f, 1030,0.011f,100.0f, 60.0f,5000.0f}","file":"xaudio2fx.h","line":363,"type":"Other","value":"{100, -1000,-1200,0.0f, 1.49f,0.54f, -370,0.007f, 1030,0.011f,100.0f, 60.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_CARPETEDHALLWAY":{"comment":"","exp":"{100, -1000,-4000,0.0f, 0.30f,0.10f, -1831,0.002f, -1630,0.030f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":371,"type":"Other","value":"{100, -1000,-4000,0.0f, 0.30f,0.10f, -1831,0.002f, -1630,0.030f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_CAVE":{"comment":"","exp":"{100, -1000, 0,0.0f, 2.91f,1.30f, -602,0.015f, -302,0.022f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":368,"type":"Other","value":"{100, -1000, 0,0.0f, 2.91f,1.30f, -602,0.015f, -302,0.022f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_CITY":{"comment":"","exp":"{100, -1000, -800,0.0f, 1.49f,0.67f, -2273,0.007f, -2217,0.011f, 50.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":376,"type":"Other","value":"{100, -1000, -800,0.0f, 1.49f,0.67f, -2273,0.007f, -2217,0.011f, 50.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_CONCERTHALL":{"comment":"","exp":"{100, -1000, -500,0.0f, 3.92f,0.70f, -1230,0.020f, -2,0.029f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":367,"type":"Other","value":"{100, -1000, -500,0.0f, 3.92f,0.70f, -1230,0.020f, -2,0.029f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_DEFAULT":{"comment":"","exp":"{100,-10000, 0,0.0f, 1.00f,0.50f,-10000,0.020f,-10000,0.040f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":359,"type":"Other","value":"{100,-10000, 0,0.0f, 1.00f,0.50f,-10000,0.020f,-10000,0.040f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_FOREST":{"comment":"","exp":"{100, -1000,-3300,0.0f, 1.49f,0.54f, -2560,0.162f, -613,0.088f, 79.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":375,"type":"Other","value":"{100, -1000,-3300,0.0f, 1.49f,0.54f, -2560,0.162f, -613,0.088f, 79.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_GENERIC":{"comment":"","exp":"{100, -1000, -100,0.0f, 1.49f,0.83f, -2602,0.007f, 200,0.011f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":360,"type":"Other","value":"{100, -1000, -100,0.0f, 1.49f,0.83f, -2602,0.007f, 200,0.011f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_HALLWAY":{"comment":"","exp":"{100, -1000, -300,0.0f, 1.49f,0.59f, -1219,0.007f, 441,0.011f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":372,"type":"Other","value":"{100, -1000, -300,0.0f, 1.49f,0.59f, -1219,0.007f, 441,0.011f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_HANGAR":{"comment":"","exp":"{100, -1000,-1000,0.0f,10.05f,0.23f, -602,0.020f, 198,0.030f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":370,"type":"Other","value":"{100, -1000,-1000,0.0f,10.05f,0.23f, -602,0.020f, 198,0.030f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_LARGEHALL":{"comment":"","exp":"{100, -1000, -600,0.0f, 1.80f,0.70f, -2000,0.030f, -1400,0.060f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":387,"type":"Other","value":"{100, -1000, -600,0.0f, 1.80f,0.70f, -2000,0.030f, -1400,0.060f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_LARGEROOM":{"comment":"","exp":"{100, -1000, -600,0.0f, 1.50f,0.83f, -1600,0.020f, -1000,0.040f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":385,"type":"Other","value":"{100, -1000, -600,0.0f, 1.50f,0.83f, -1600,0.020f, -1000,0.040f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_LIVINGROOM":{"comment":"","exp":"{100, -1000,-6000,0.0f, 0.50f,0.10f, -1376,0.003f, -1104,0.004f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":364,"type":"Other","value":"{100, -1000,-6000,0.0f, 0.50f,0.10f, -1376,0.003f, -1104,0.004f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_MEDIUMHALL":{"comment":"","exp":"{100, -1000, -600,0.0f, 1.80f,0.70f, -1300,0.015f, -800,0.030f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":386,"type":"Other","value":"{100, -1000, -600,0.0f, 1.80f,0.70f, -1300,0.015f, -800,0.030f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_MEDIUMROOM":{"comment":"","exp":"{100, -1000, -600,0.0f, 1.30f,0.83f, -1000,0.010f, -200,0.020f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":384,"type":"Other","value":"{100, -1000, -600,0.0f, 1.30f,0.83f, -1000,0.010f, -200,0.020f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_MOUNTAINS":{"comment":"","exp":"{100, -1000,-2500,0.0f, 1.49f,0.21f, -2780,0.300f, -2014,0.100f, 27.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":377,"type":"Other","value":"{100, -1000,-2500,0.0f, 1.49f,0.21f, -2780,0.300f, -2014,0.100f, 27.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_PADDEDCELL":{"comment":"","exp":"{100, -1000,-6000,0.0f, 0.17f,0.10f, -1204,0.001f, 207,0.002f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":361,"type":"Other","value":"{100, -1000,-6000,0.0f, 0.17f,0.10f, -1204,0.001f, 207,0.002f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_PARKINGLOT":{"comment":"","exp":"{100, -1000, 0,0.0f, 1.65f,1.50f, -1363,0.008f, -1153,0.012f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":380,"type":"Other","value":"{100, -1000, 0,0.0f, 1.65f,1.50f, -1363,0.008f, -1153,0.012f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_PLAIN":{"comment":"","exp":"{100, -1000,-2000,0.0f, 1.49f,0.50f, -2466,0.179f, -2514,0.100f, 21.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":379,"type":"Other","value":"{100, -1000,-2000,0.0f, 1.49f,0.50f, -2466,0.179f, -2514,0.100f, 21.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_PLATE":{"comment":"","exp":"{100, -1000, -200,0.0f, 1.30f,0.90f, 0,0.002f, 0,0.010f,100.0f, 75.0f,5000.0f}","file":"xaudio2fx.h","line":388,"type":"Other","value":"{100, -1000, -200,0.0f, 1.30f,0.90f, 0,0.002f, 0,0.010f,100.0f, 75.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_QUARRY":{"comment":"","exp":"{100, -1000,-1000,0.0f, 1.49f,0.83f,-10000,0.061f, 500,0.025f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":378,"type":"Other","value":"{100, -1000,-1000,0.0f, 1.49f,0.83f,-10000,0.061f, 500,0.025f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_ROOM":{"comment":"","exp":"{100, -1000, -454,0.0f, 0.40f,0.83f, -1646,0.002f, 53,0.003f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":362,"type":"Other","value":"{100, -1000, -454,0.0f, 0.40f,0.83f, -1646,0.002f, 53,0.003f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_SEWERPIPE":{"comment":"","exp":"{100, -1000,-1000,0.0f, 2.81f,0.14f, 429,0.014f, 648,0.021f, 80.0f, 60.0f,5000.0f}","file":"xaudio2fx.h","line":381,"type":"Other","value":"{100, -1000,-1000,0.0f, 2.81f,0.14f, 429,0.014f, 648,0.021f, 80.0f, 60.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_SMALLROOM":{"comment":"","exp":"{100, -1000, -600,0.0f, 1.10f,0.83f, -400,0.005f, 500,0.010f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":383,"type":"Other","value":"{100, -1000, -600,0.0f, 1.10f,0.83f, -400,0.005f, 500,0.010f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_STONECORRIDOR":{"comment":"","exp":"{100, -1000, -237,0.0f, 2.70f,0.79f, -1214,0.013f, 395,0.020f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":373,"type":"Other","value":"{100, -1000, -237,0.0f, 2.70f,0.79f, -1214,0.013f, 395,0.020f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_STONEROOM":{"comment":"","exp":"{100, -1000, -300,0.0f, 2.31f,0.64f, -711,0.012f, 83,0.017f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":365,"type":"Other","value":"{100, -1000, -300,0.0f, 2.31f,0.64f, -711,0.012f, 83,0.017f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_I3DL2_PRESET_UNDERWATER":{"comment":"","exp":"{100, -1000,-4000,0.0f, 1.49f,0.10f, -449,0.007f, 1700,0.011f,100.0f,100.0f,5000.0f}","file":"xaudio2fx.h","line":382,"type":"Other","value":"{100, -1000,-4000,0.0f, 1.49f,0.10f, -449,0.007f, 1700,0.011f,100.0f,100.0f,5000.0f}"},"XAUDIO2FX_REVERB_DEFAULT_7POINT1_REAR_DELAY":{"comment":"","exp":"20","file":"xaudio2fx.h","line":221,"type":"Integer","value":20},"XAUDIO2FX_REVERB_DEFAULT_7POINT1_SIDE_DELAY":{"comment":"","exp":"5","file":"xaudio2fx.h","line":220,"type":"Integer","value":5},"XAUDIO2FX_REVERB_DEFAULT_DECAY_TIME":{"comment":"","exp":"1.0f","file":"xaudio2fx.h","line":235,"type":"Float","value":1.0},"XAUDIO2FX_REVERB_DEFAULT_DENSITY":{"comment":"","exp":"100.0f","file":"xaudio2fx.h","line":236,"type":"Float","value":100.0},"XAUDIO2FX_REVERB_DEFAULT_DISABLE_LATE_FIELD":{"comment":"","exp":"FALSE","file":"xaudio2fx.h","line":238,"type":"Unknown","value":"FALSE"},"XAUDIO2FX_REVERB_DEFAULT_EARLY_DIFFUSION":{"comment":"","exp":"8","file":"xaudio2fx.h","line":224,"type":"Integer","value":8},"XAUDIO2FX_REVERB_DEFAULT_HIGH_EQ_CUTOFF":{"comment":"","exp":"4","file":"xaudio2fx.h","line":229,"type":"Integer","value":4},"XAUDIO2FX_REVERB_DEFAULT_HIGH_EQ_GAIN":{"comment":"","exp":"8","file":"xaudio2fx.h","line":228,"type":"Integer","value":8},"XAUDIO2FX_REVERB_DEFAULT_LATE_DIFFUSION":{"comment":"","exp":"8","file":"xaudio2fx.h","line":225,"type":"Integer","value":8},"XAUDIO2FX_REVERB_DEFAULT_LOW_EQ_CUTOFF":{"comment":"","exp":"4","file":"xaudio2fx.h","line":227,"type":"Integer","value":4},"XAUDIO2FX_REVERB_DEFAULT_LOW_EQ_GAIN":{"comment":"","exp":"8","file":"xaudio2fx.h","line":226,"type":"Integer","value":8},"XAUDIO2FX_REVERB_DEFAULT_POSITION":{"comment":"","exp":"6","file":"xaudio2fx.h","line":222,"type":"Integer","value":6},"XAUDIO2FX_REVERB_DEFAULT_POSITION_MATRIX":{"comment":"","exp":"27","file":"xaudio2fx.h","line":223,"type":"Integer","value":27},"XAUDIO2FX_REVERB_DEFAULT_REAR_DELAY":{"comment":"","exp":"5","file":"xaudio2fx.h","line":219,"type":"Integer","value":5},"XAUDIO2FX_REVERB_DEFAULT_REFLECTIONS_DELAY":{"comment":"","exp":"5","file":"xaudio2fx.h","line":217,"type":"Integer","value":5},"XAUDIO2FX_REVERB_DEFAULT_REFLECTIONS_GAIN":{"comment":"","exp":"0.0f","file":"xaudio2fx.h","line":233,"type":"Float","value":0.0},"XAUDIO2FX_REVERB_DEFAULT_REVERB_DELAY":{"comment":"","exp":"5","file":"xaudio2fx.h","line":218,"type":"Integer","value":5},"XAUDIO2FX_REVERB_DEFAULT_REVERB_GAIN":{"comment":"","exp":"0.0f","file":"xaudio2fx.h","line":234,"type":"Float","value":0.0},"XAUDIO2FX_REVERB_DEFAULT_ROOM_FILTER_FREQ":{"comment":"","exp":"5000.0f","file":"xaudio2fx.h","line":230,"type":"Float","value":5000.0},"XAUDIO2FX_REVERB_DEFAULT_ROOM_FILTER_HF":{"comment":"","exp":"0.0f","file":"xaudio2fx.h","line":232,"type":"Float","value":0.0},"XAUDIO2FX_REVERB_DEFAULT_ROOM_FILTER_MAIN":{"comment":"","exp":"0.0f","file":"xaudio2fx.h","line":231,"type":"Float","value":0.0},"XAUDIO2FX_REVERB_DEFAULT_ROOM_SIZE":{"comment":"","exp":"100.0f","file":"xaudio2fx.h","line":237,"type":"Float","value":100.0},"XAUDIO2FX_REVERB_DEFAULT_WET_DRY_MIX":{"comment":"","exp":"100.0f","file":"xaudio2fx.h","line":216,"type":"Float","value":100.0},"XAUDIO2FX_REVERB_I3DL2_PARAMETERS":{"comment":"","exp":"","file":"xaudio2fx.h","line":243,"type":"Struct","value":"typedef struct XAUDIO2FX_REVERB_I3DL2_PARAMETERS\\r\\n{\\r\\n    \/\/ ratio of wet (processed) signal to dry (original) signal\\r\\n    float WetDryMix;            \/\/ [0, 100] (percentage)\\r\\n    \/\/ Standard I3DL2 parameters\\r\\n    INT32 Room;                 \/\/ [-10000, 0] in mB (hundredths of decibels)\\r\\n    INT32 RoomHF;               \/\/ [-10000, 0] in mB (hundredths of decibels)\\r\\n    float RoomRolloffFactor;    \/\/ [0.0, 10.0]\\r\\n    float DecayTime;            \/\/ [0.1, 20.0] in seconds\\r\\n    float DecayHFRatio;         \/\/ [0.1, 2.0]\\r\\n    INT32 Reflections;          \/\/ [-10000, 1000] in mB (hundredths of decibels)\\r\\n    float ReflectionsDelay;     \/\/ [0.0, 0.3] in seconds\\r\\n    INT32 Reverb;               \/\/ [-10000, 2000] in mB (hundredths of decibels)\\r\\n    float ReverbDelay;          \/\/ [0.0, 0.1] in seconds\\r\\n    float Diffusion;            \/\/ [0.0, 100.0] (percentage)\\r\\n    float Density;              \/\/ [0.0, 100.0] (percentage)\\r\\n    float HFReference;          \/\/ [20.0, 20000.0] in Hz\\r\\n} XAUDIO2FX_REVERB_I3DL2_PARAMETERS;"},"XAUDIO2FX_REVERB_MAX_7POINT1_REAR_DELAY":{"comment":"","exp":"20","file":"xaudio2fx.h","line":201,"type":"Integer","value":20},"XAUDIO2FX_REVERB_MAX_7POINT1_SIDE_DELAY":{"comment":"","exp":"5","file":"xaudio2fx.h","line":200,"type":"Integer","value":5},"XAUDIO2FX_REVERB_MAX_DENSITY":{"comment":"","exp":"100.0f","file":"xaudio2fx.h","line":213,"type":"Float","value":100.0},"XAUDIO2FX_REVERB_MAX_DIFFUSION":{"comment":"","exp":"15","file":"xaudio2fx.h","line":203,"type":"Integer","value":15},"XAUDIO2FX_REVERB_MAX_FRAMERATE":{"comment":"","exp":"48000","file":"xaudio2fx.h","line":129,"type":"Integer","value":48000},"XAUDIO2FX_REVERB_MAX_HIGH_EQ_CUTOFF":{"comment":"","exp":"14","file":"xaudio2fx.h","line":207,"type":"Integer","value":14},"XAUDIO2FX_REVERB_MAX_HIGH_EQ_GAIN":{"comment":"","exp":"8","file":"xaudio2fx.h","line":206,"type":"Integer","value":8},"XAUDIO2FX_REVERB_MAX_LOW_EQ_CUTOFF":{"comment":"","exp":"9","file":"xaudio2fx.h","line":205,"type":"Integer","value":9},"XAUDIO2FX_REVERB_MAX_LOW_EQ_GAIN":{"comment":"","exp":"12","file":"xaudio2fx.h","line":204,"type":"Integer","value":12},"XAUDIO2FX_REVERB_MAX_POSITION":{"comment":"","exp":"30","file":"xaudio2fx.h","line":202,"type":"Integer","value":30},"XAUDIO2FX_REVERB_MAX_REAR_DELAY":{"comment":"","exp":"5","file":"xaudio2fx.h","line":199,"type":"Integer","value":5},"XAUDIO2FX_REVERB_MAX_REFLECTIONS_DELAY":{"comment":"","exp":"300","file":"xaudio2fx.h","line":197,"type":"Integer","value":300},"XAUDIO2FX_REVERB_MAX_REFLECTIONS_GAIN":{"comment":"","exp":"20.0f","file":"xaudio2fx.h","line":211,"type":"Float","value":20.0},"XAUDIO2FX_REVERB_MAX_REVERB_DELAY":{"comment":"","exp":"85","file":"xaudio2fx.h","line":198,"type":"Integer","value":85},"XAUDIO2FX_REVERB_MAX_REVERB_GAIN":{"comment":"","exp":"20.0f","file":"xaudio2fx.h","line":212,"type":"Float","value":20.0},"XAUDIO2FX_REVERB_MAX_ROOM_FILTER_FREQ":{"comment":"","exp":"20000.0f","file":"xaudio2fx.h","line":208,"type":"Float","value":20000.0},"XAUDIO2FX_REVERB_MAX_ROOM_FILTER_HF":{"comment":"","exp":"0.0f","file":"xaudio2fx.h","line":210,"type":"Float","value":0.0},"XAUDIO2FX_REVERB_MAX_ROOM_FILTER_MAIN":{"comment":"","exp":"0.0f","file":"xaudio2fx.h","line":209,"type":"Float","value":0.0},"XAUDIO2FX_REVERB_MAX_ROOM_SIZE":{"comment":"","exp":"100.0f","file":"xaudio2fx.h","line":214,"type":"Float","value":100.0},"XAUDIO2FX_REVERB_MAX_WET_DRY_MIX":{"comment":"","exp":"100.0f","file":"xaudio2fx.h","line":196,"type":"Float","value":100.0},"XAUDIO2FX_REVERB_MIN_7POINT1_REAR_DELAY":{"comment":"","exp":"0","file":"xaudio2fx.h","line":180,"type":"Integer","value":0},"XAUDIO2FX_REVERB_MIN_7POINT1_SIDE_DELAY":{"comment":"","exp":"0","file":"xaudio2fx.h","line":179,"type":"Integer","value":0},"XAUDIO2FX_REVERB_MIN_DECAY_TIME":{"comment":"","exp":"0.1f","file":"xaudio2fx.h","line":192,"type":"Float","value":0.10000000000000001},"XAUDIO2FX_REVERB_MIN_DENSITY":{"comment":"","exp":"0.0f","file":"xaudio2fx.h","line":193,"type":"Float","value":0.0},"XAUDIO2FX_REVERB_MIN_DIFFUSION":{"comment":"","exp":"0","file":"xaudio2fx.h","line":182,"type":"Integer","value":0},"XAUDIO2FX_REVERB_MIN_FRAMERATE":{"comment":"","exp":"20000","file":"xaudio2fx.h","line":128,"type":"Integer","value":20000},"XAUDIO2FX_REVERB_MIN_HIGH_EQ_CUTOFF":{"comment":"","exp":"0","file":"xaudio2fx.h","line":186,"type":"Integer","value":0},"XAUDIO2FX_REVERB_MIN_HIGH_EQ_GAIN":{"comment":"","exp":"0","file":"xaudio2fx.h","line":185,"type":"Integer","value":0},"XAUDIO2FX_REVERB_MIN_LOW_EQ_CUTOFF":{"comment":"","exp":"0","file":"xaudio2fx.h","line":184,"type":"Integer","value":0},"XAUDIO2FX_REVERB_MIN_LOW_EQ_GAIN":{"comment":"","exp":"0","file":"xaudio2fx.h","line":183,"type":"Integer","value":0},"XAUDIO2FX_REVERB_MIN_POSITION":{"comment":"","exp":"0","file":"xaudio2fx.h","line":181,"type":"Integer","value":0},"XAUDIO2FX_REVERB_MIN_REAR_DELAY":{"comment":"","exp":"0","file":"xaudio2fx.h","line":178,"type":"Integer","value":0},"XAUDIO2FX_REVERB_MIN_REFLECTIONS_DELAY":{"comment":"","exp":"0","file":"xaudio2fx.h","line":176,"type":"Integer","value":0},"XAUDIO2FX_REVERB_MIN_REFLECTIONS_GAIN":{"comment":"","exp":"-100.0f","file":"xaudio2fx.h","line":190,"type":"Float","value":-100.0},"XAUDIO2FX_REVERB_MIN_REVERB_DELAY":{"comment":"","exp":"0","file":"xaudio2fx.h","line":177,"type":"Integer","value":0},"XAUDIO2FX_REVERB_MIN_REVERB_GAIN":{"comment":"","exp":"-100.0f","file":"xaudio2fx.h","line":191,"type":"Float","value":-100.0},"XAUDIO2FX_REVERB_MIN_ROOM_FILTER_FREQ":{"comment":"","exp":"20.0f","file":"xaudio2fx.h","line":187,"type":"Float","value":20.0},"XAUDIO2FX_REVERB_MIN_ROOM_FILTER_HF":{"comment":"","exp":"-100.0f","file":"xaudio2fx.h","line":189,"type":"Float","value":-100.0},"XAUDIO2FX_REVERB_MIN_ROOM_FILTER_MAIN":{"comment":"","exp":"-100.0f","file":"xaudio2fx.h","line":188,"type":"Float","value":-100.0},"XAUDIO2FX_REVERB_MIN_ROOM_SIZE":{"comment":"","exp":"0.0f","file":"xaudio2fx.h","line":194,"type":"Float","value":0.0},"XAUDIO2FX_REVERB_MIN_WET_DRY_MIX":{"comment":"","exp":"0.0f","file":"xaudio2fx.h","line":175,"type":"Float","value":0.0},"XAUDIO2FX_REVERB_PARAMETERS":{"comment":"","exp":"","file":"xaudio2fx.h","line":133,"type":"Struct","value":"typedef struct XAUDIO2FX_REVERB_PARAMETERS\\r\\n{\\r\\n    \/\/ ratio of wet (processed) signal to dry (original) signal\\r\\n    float WetDryMix;            \/\/ [0, 100] (percentage)\\r\\n    \/\/ Delay times\\r\\n    UINT32 ReflectionsDelay;    \/\/ [0, 300] in ms\\r\\n    BYTE ReverbDelay;           \/\/ [0, 85] in ms\\r\\n    BYTE RearDelay;             \/\/ 7.1: [0, 20] in ms, all other: [0, 5] in ms\\r\\n#if(_WIN32_WINNT >= _WIN32_WINNT_WIN10)\\r\\n    BYTE SideDelay;             \/\/ 7.1: [0, 5] in ms, all other: not used, but still validated\\r\\n#endif\\r\\n    \/\/ Indexed parameters\\r\\n    BYTE PositionLeft;          \/\/ [0, 30] no units\\r\\n    BYTE PositionRight;         \/\/ [0, 30] no units, ignored when configured to mono\\r\\n    BYTE PositionMatrixLeft;    \/\/ [0, 30] no units\\r\\n    BYTE PositionMatrixRight;   \/\/ [0, 30] no units, ignored when configured to mono\\r\\n    BYTE EarlyDiffusion;        \/\/ [0, 15] no units\\r\\n    BYTE LateDiffusion;         \/\/ [0, 15] no units\\r\\n    BYTE LowEQGain;             \/\/ [0, 12] no units\\r\\n    BYTE LowEQCutoff;           \/\/ [0, 9] no units\\r\\n    BYTE HighEQGain;            \/\/ [0, 8] no units\\r\\n    BYTE HighEQCutoff;          \/\/ [0, 14] no units\\r\\n    \/\/ Direct parameters\\r\\n    float RoomFilterFreq;       \/\/ [20, 20000] in Hz\\r\\n    float RoomFilterMain;       \/\/ [-100, 0] in dB\\r\\n    float RoomFilterHF;         \/\/ [-100, 0] in dB\\r\\n    float ReflectionsGain;      \/\/ [-100, 20] in dB\\r\\n    float ReverbGain;           \/\/ [-100, 20] in dB\\r\\n    float DecayTime;            \/\/ [0.1, inf] in seconds\\r\\n    float Density;              \/\/ [0, 100] (percentage)\\r\\n    float RoomSize;             \/\/ [1, 100] in feet\\r\\n    \/\/ component control\\r\\n    BOOL DisableLateField;      \/\/ TRUE to disable late field reflections\\r\\n} XAUDIO2FX_REVERB_PARAMETERS;"},"XAUDIO2FX_STDAPI":{"comment":"","exp":"STDAPI","file":"xaudio2fx.h","line":66,"type":"Unknown","value":"STDAPI"},"XAUDIO2FX_VOLUMEMETER_LEVELS":{"comment":"","exp":"","file":"xaudio2fx.h","line":97,"type":"Struct","value":"typedef struct XAUDIO2FX_VOLUMEMETER_LEVELS\\r\\n{\\r\\n    float* pPeakLevels;  \/\/ Peak levels table: receives maximum absolute level for each channel\\r\\n                         \/\/ over a processing pass; may be NULL if pRMSLevls != NULL,\\r\\n                         \/\/ otherwise must have at least ChannelCount elements.\\r\\n    float* pRMSLevels;   \/\/ Root mean square levels table: receives RMS level for each channel\\r\\n                         \/\/ over a processing pass; may be NULL if pPeakLevels != NULL,\\r\\n                         \/\/ otherwise must have at least ChannelCount elements.\\r\\n    UINT32 ChannelCount; \/\/ Number of channels being processed by the volume meter APO\\r\\n} XAUDIO2FX_VOLUMEMETER_LEVELS;"},"XAUDIO2_1024_QUANTUM":{"comment":"\/\/ Used in XAudio2Create to specify nondefault processing quantum of 21.33 ms (1024 samples at 48KHz)","exp":"0x8000","file":"xaudio2.h","line":144,"type":"Integer","value":32768},"XAUDIO2_ANY_PROCESSOR":{"comment":"","exp":"0xffffffff","file":"xaudio2.h","line":227,"type":"Integer","value":4294967295},"XAUDIO2_BUFFER":{"comment":"","exp":"","file":"xaudio2.h","line":302,"type":"Struct","value":"typedef struct XAUDIO2_BUFFER\\r\\n{\\r\\n    UINT32 Flags;                       \/\/ Either 0 or XAUDIO2_END_OF_STREAM.\\r\\n    UINT32 AudioBytes;                  \/\/ Size of the audio data buffer in bytes.\\r\\n    const BYTE* pAudioData;             \/\/ Pointer to the audio data buffer.\\r\\n    UINT32 PlayBegin;                   \/\/ First sample in this buffer to be played.\\r\\n    UINT32 PlayLength;                  \/\/ Length of the region to be played in samples,\\r\\n                                        \/\/  or 0 to play the whole buffer.\\r\\n    UINT32 LoopBegin;                   \/\/ First sample of the region to be looped.\\r\\n    UINT32 LoopLength;                  \/\/ Length of the desired loop region in samples,\\r\\n                                        \/\/  or 0 to loop the entire buffer.\\r\\n    UINT32 LoopCount;                   \/\/ Number of times to repeat the loop region,\\r\\n                                        \/\/  or XAUDIO2_LOOP_INFINITE to loop forever.\\r\\n    void* pContext;                     \/\/ Context value to be passed back in callbacks.\\r\\n} XAUDIO2_BUFFER;"},"XAUDIO2_BUFFER_WMA":{"comment":"","exp":"","file":"xaudio2.h","line":325,"type":"Struct","value":"typedef struct XAUDIO2_BUFFER_WMA\\r\\n{\\r\\n    const UINT32* pDecodedPacketCumulativeBytes; \/\/ Decoded packet's cumulative size array.\\r\\n                                                 \/\/  Each element is the number of bytes accumulated\\r\\n                                                 \/\/  when the corresponding XWMA packet is decoded in\\r\\n                                                 \/\/  order.  The array must have PacketCount elements.\\r\\n    UINT32 PacketCount;                          \/\/ Number of XWMA packets submitted. Must be >= 1 and\\r\\n                                                 \/\/  divide evenly into XAUDIO2_BUFFER.AudioBytes.\\r\\n} XAUDIO2_BUFFER_WMA;"},"XAUDIO2_COMMIT_ALL":{"comment":"\/\/ Used in IXAudio2::CommitChanges","exp":"0","file":"xaudio2.h","line":127,"type":"Integer","value":0},"XAUDIO2_COMMIT_NOW":{"comment":"\/\/ Used as an OperationSet argument","exp":"0","file":"xaudio2.h","line":126,"type":"Integer","value":0},"XAUDIO2_DEBUG_CONFIGURATION":{"comment":"","exp":"","file":"xaudio2.h","line":385,"type":"Struct","value":"typedef struct XAUDIO2_DEBUG_CONFIGURATION\\r\\n{\\r\\n    UINT32 TraceMask;                   \/\/ Bitmap of enabled debug message types.\\r\\n    UINT32 BreakMask;                   \/\/ Message types that will break into the debugger.\\r\\n    BOOL LogThreadID;                   \/\/ Whether to log the thread ID with each message.\\r\\n    BOOL LogFileline;                   \/\/ Whether to log the source file and line number.\\r\\n    BOOL LogFunctionName;               \/\/ Whether to log the function name.\\r\\n    BOOL LogTiming;                     \/\/ Whether to log message timestamps.\\r\\n} XAUDIO2_DEBUG_CONFIGURATION;"},"XAUDIO2_DEBUG_ENGINE":{"comment":"\/\/ Used in XAudio2Create","exp":"0x0001","file":"xaudio2.h","line":135,"type":"Integer","value":1},"XAUDIO2_DEFAULT_CHANNELS":{"comment":"\/\/ Used in CreateMasteringVoice","exp":"0","file":"xaudio2.h","line":131,"type":"Integer","value":0},"XAUDIO2_DEFAULT_FILTER_FREQUENCY":{"comment":"","exp":"XAUDIO2_MAX_FILTER_FREQUENCY","file":"xaudio2.h","line":149,"type":"Float","value":1.0},"XAUDIO2_DEFAULT_FILTER_ONEOVERQ":{"comment":"","exp":"1.0f","file":"xaudio2.h","line":150,"type":"Float","value":1.0},"XAUDIO2_DEFAULT_FILTER_TYPE":{"comment":"","exp":"LowPassFilter","file":"xaudio2.h","line":148,"type":"Unknown","value":"LowPassFilter"},"XAUDIO2_DEFAULT_FREQ_RATIO":{"comment":"\/\/ Default MaxFrequencyRatio argument","exp":"2.0f","file":"xaudio2.h","line":113,"type":"Float","value":2.0},"XAUDIO2_DEFAULT_PROCESSOR":{"comment":"","exp":"Processor1","file":"xaudio2.h","line":237,"type":"Integer","value":1},"XAUDIO2_DEFAULT_SAMPLERATE":{"comment":"\/\/ Used in CreateMasteringVoice","exp":"0","file":"xaudio2.h","line":132,"type":"Integer","value":0},"XAUDIO2_EFFECT_CHAIN":{"comment":"","exp":"","file":"xaudio2.h","line":271,"type":"Struct","value":"typedef struct XAUDIO2_EFFECT_CHAIN\\r\\n{\\r\\n    UINT32 EffectCount;                 \/\/ Number of effects in this voice's effect chain.\\r\\n    XAUDIO2_EFFECT_DESCRIPTOR* pEffectDescriptors; \/\/ Array of effect descriptors.\\r\\n} XAUDIO2_EFFECT_CHAIN;"},"XAUDIO2_EFFECT_DESCRIPTOR":{"comment":"","exp":"","file":"xaudio2.h","line":263,"type":"Struct","value":"typedef struct XAUDIO2_EFFECT_DESCRIPTOR\\r\\n{\\r\\n    IUnknown* pEffect;                  \/\/ Pointer to the effect object's IUnknown interface.\\r\\n    BOOL InitialState;                  \/\/ TRUE if the effect should begin in the enabled state.\\r\\n    UINT32 OutputChannels;              \/\/ How many output channels the effect should produce.\\r\\n} XAUDIO2_EFFECT_DESCRIPTOR;"},"XAUDIO2_END_OF_STREAM":{"comment":"\/\/ Used in XAUDIO2_BUFFER.Flags","exp":"0x0040","file":"xaudio2.h","line":140,"type":"Integer","value":64},"XAUDIO2_E_DEVICE_INVALIDATED":{"comment":"\/\/ An audio device became unusable (unplugged, etc)","exp":"((HRESULT)0x88960004)","file":"xaudio2.h","line":164,"type":"Integer","value":2291531780},"XAUDIO2_E_INVALID_CALL":{"comment":"\/\/ An API call or one of its arguments was illegal","exp":"((HRESULT)0x88960001)","file":"xaudio2.h","line":161,"type":"Integer","value":2291531777},"XAUDIO2_E_XAPO_CREATION_FAILED":{"comment":"\/\/ XAudio2 failed to initialize an XAPO effect","exp":"((HRESULT)0x88960003)","file":"xaudio2.h","line":163,"type":"Integer","value":2291531779},"XAUDIO2_E_XMA_DECODER_ERROR":{"comment":"\/\/ The XMA hardware suffered an unrecoverable error","exp":"((HRESULT)0x88960002)","file":"xaudio2.h","line":162,"type":"Integer","value":2291531778},"XAUDIO2_FILTER_PARAMETERS":{"comment":"","exp":"","file":"xaudio2.h","line":289,"type":"Struct","value":"typedef struct XAUDIO2_FILTER_PARAMETERS\\r\\n{\\r\\n    XAUDIO2_FILTER_TYPE Type;           \/\/ Filter type.\\r\\n    float Frequency;                    \/\/ Filter coefficient.\\r\\n                                        \/\/  must be >= 0 and <= XAUDIO2_MAX_FILTER_FREQUENCY\\r\\n                                        \/\/  See XAudio2CutoffFrequencyToRadians() for state-variable filter types and\\r\\n                                        \/\/  XAudio2CutoffFrequencyToOnePoleCoefficient() for one-pole filter types.\\r\\n    float OneOverQ;                     \/\/ Reciprocal of the filter's quality factor Q;\\r\\n                                        \/\/  must be > 0 and <= XAUDIO2_MAX_FILTER_ONEOVERQ.\\r\\n                                        \/\/  Has no effect for one-pole filters.\\r\\n} XAUDIO2_FILTER_PARAMETERS;"},"XAUDIO2_FILTER_TYPE":{"comment":"","exp":"","file":"xaudio2.h","line":278,"type":"Enum","value":"typedef enum XAUDIO2_FILTER_TYPE\\r\\n{\\r\\n    LowPassFilter,                      \/\/ Attenuates frequencies above the cutoff frequency (state-variable filter).\\r\\n    BandPassFilter,                     \/\/ Attenuates frequencies outside a given range      (state-variable filter).\\r\\n    HighPassFilter,                     \/\/ Attenuates frequencies below the cutoff frequency (state-variable filter).\\r\\n    NotchFilter,                        \/\/ Attenuates frequencies inside a given range       (state-variable filter).\\r\\n    LowPassOnePoleFilter,               \/\/ Attenuates frequencies above the cutoff frequency (one-pole filter, XAUDIO2_FILTER_PARAMETERS.OneOverQ has no effect)\\r\\n    HighPassOnePoleFilter               \/\/ Attenuates frequencies below the cutoff frequency (one-pole filter, XAUDIO2_FILTER_PARAMETERS.OneOverQ has no effect)\\r\\n} XAUDIO2_FILTER_TYPE;"},"XAUDIO2_INVALID_OPSET":{"comment":"\/\/ Not allowed for OperationSet arguments","exp":"(UINT32)(-1)","file":"xaudio2.h","line":128,"type":"Integer","value":-1},"XAUDIO2_LOG_API_CALLS":{"comment":"\/\/ Public API function entries and exits.","exp":"0x0010","file":"xaudio2.h","line":403,"type":"Integer","value":16},"XAUDIO2_LOG_DETAIL":{"comment":"\/\/ More detailed chit-chat.","exp":"0x0008","file":"xaudio2.h","line":402,"type":"Integer","value":8},"XAUDIO2_LOG_ERRORS":{"comment":"\/\/ For handled errors with serious effects.","exp":"0x0001","file":"xaudio2.h","line":399,"type":"Integer","value":1},"XAUDIO2_LOG_FUNC_CALLS":{"comment":"\/\/ Internal function entries and exits.","exp":"0x0020","file":"xaudio2.h","line":404,"type":"Integer","value":32},"XAUDIO2_LOG_INFO":{"comment":"\/\/ Informational chit-chat (e.g. state changes).","exp":"0x0004","file":"xaudio2.h","line":401,"type":"Integer","value":4},"XAUDIO2_LOG_LOCKS":{"comment":"\/\/ Usage of critical sections and mutexes.","exp":"0x0080","file":"xaudio2.h","line":406,"type":"Integer","value":128},"XAUDIO2_LOG_MEMORY":{"comment":"\/\/ Memory heap usage information.","exp":"0x0100","file":"xaudio2.h","line":407,"type":"Integer","value":256},"XAUDIO2_LOG_STREAMING":{"comment":"\/\/ Audio streaming information.","exp":"0x1000","file":"xaudio2.h","line":408,"type":"Integer","value":4096},"XAUDIO2_LOG_TIMING":{"comment":"\/\/ Delays detected and other timing data.","exp":"0x0040","file":"xaudio2.h","line":405,"type":"Integer","value":64},"XAUDIO2_LOG_WARNINGS":{"comment":"\/\/ For handled errors that may be recoverable.","exp":"0x0002","file":"xaudio2.h","line":400,"type":"Integer","value":2},"XAUDIO2_LOOP_INFINITE":{"comment":"\/\/ Used in XAUDIO2_BUFFER.LoopCount","exp":"255","file":"xaudio2.h","line":130,"type":"Integer","value":255},"XAUDIO2_MAX_AUDIO_CHANNELS":{"comment":"\/\/ Maximum channels in an audio stream","exp":"64","file":"xaudio2.h","line":107,"type":"Integer","value":64},"XAUDIO2_MAX_BUFFERS_SYSTEM":{"comment":"\/\/ Maximum buffers allowed for system threads (Xbox 360 only)","exp":"2","file":"xaudio2.h","line":106,"type":"Integer","value":2},"XAUDIO2_MAX_BUFFER_BYTES":{"comment":"\/\/ Maximum bytes allowed in a source buffer","exp":"0x80000000","file":"xaudio2.h","line":104,"type":"Integer","value":2147483648},"XAUDIO2_MAX_FILTER_FREQUENCY":{"comment":"\/\/ Maximum XAUDIO2_FILTER_PARAMETERS.Frequency","exp":"1.0f","file":"xaudio2.h","line":115,"type":"Float","value":1.0},"XAUDIO2_MAX_FILTER_ONEOVERQ":{"comment":"\/\/ Maximum XAUDIO2_FILTER_PARAMETERS.OneOverQ","exp":"1.5f","file":"xaudio2.h","line":114,"type":"Float","value":1.5},"XAUDIO2_MAX_FREQ_RATIO":{"comment":"\/\/ Maximum MaxFrequencyRatio argument","exp":"1024.0f","file":"xaudio2.h","line":112,"type":"Float","value":1024.0},"XAUDIO2_MAX_INSTANCES":{"comment":"\/\/ Maximum simultaneous XAudio2 objects on Xbox 360","exp":"8","file":"xaudio2.h","line":117,"type":"Integer","value":8},"XAUDIO2_MAX_LOOP_COUNT":{"comment":"\/\/ Maximum non-infinite XAUDIO2_BUFFER.LoopCount","exp":"254","file":"xaudio2.h","line":116,"type":"Integer","value":254},"XAUDIO2_MAX_QUEUED_BUFFERS":{"comment":"\/\/ Maximum buffers allowed in a voice queue","exp":"64","file":"xaudio2.h","line":105,"type":"Integer","value":64},"XAUDIO2_MAX_RATIO_TIMES_RATE_XMA_MONO":{"comment":"","exp":"600000","file":"xaudio2.h","line":122,"type":"Integer","value":600000},"XAUDIO2_MAX_RATIO_TIMES_RATE_XMA_MULTICHANNEL":{"comment":"","exp":"300000","file":"xaudio2.h","line":123,"type":"Integer","value":300000},"XAUDIO2_MAX_SAMPLE_RATE":{"comment":"\/\/ Maximum audio sample rate supported","exp":"200000","file":"xaudio2.h","line":109,"type":"Integer","value":200000},"XAUDIO2_MAX_VOLUME_LEVEL":{"comment":"\/\/ Maximum acceptable volume level (2^24)","exp":"16777216.0f","file":"xaudio2.h","line":110,"type":"Float","value":16777216.0},"XAUDIO2_MIN_FREQ_RATIO":{"comment":"\/\/ Minimum SetFrequencyRatio argument","exp":"(1\/1024.0f)","file":"xaudio2.h","line":111,"type":"Float","value":0.0009765625},"XAUDIO2_MIN_SAMPLE_RATE":{"comment":"\/\/ Minimum audio sample rate supported","exp":"1000","file":"xaudio2.h","line":108,"type":"Integer","value":1000},"XAUDIO2_NO_LOOP_REGION":{"comment":"\/\/ Used in XAUDIO2_BUFFER.LoopCount","exp":"0","file":"xaudio2.h","line":129,"type":"Integer","value":0},"XAUDIO2_NO_VIRTUAL_AUDIO_CLIENT":{"comment":"\/\/ Used in CreateMasteringVoice to create a virtual audio client","exp":"0x10000","file":"xaudio2.h","line":145,"type":"Integer","value":65536},"XAUDIO2_PERFORMANCE_DATA":{"comment":"","exp":"","file":"xaudio2.h","line":351,"type":"Struct","value":"typedef struct XAUDIO2_PERFORMANCE_DATA\\r\\n{\\r\\n    \/\/ CPU usage information\\r\\n    UINT64 AudioCyclesSinceLastQuery;   \/\/ CPU cycles spent on audio processing since the\\r\\n                                        \/\/  last call to StartEngine or GetPerformanceData.\\r\\n    UINT64 TotalCyclesSinceLastQuery;   \/\/ Total CPU cycles elapsed since the last call\\r\\n                                        \/\/  (only counts the CPU XAudio2 is running on).\\r\\n    UINT32 MinimumCyclesPerQuantum;     \/\/ Fewest CPU cycles spent processing any one\\r\\n                                        \/\/  audio quantum since the last call.\\r\\n    UINT32 MaximumCyclesPerQuantum;     \/\/ Most CPU cycles spent processing any one\\r\\n                                        \/\/  audio quantum since the last call.\\r\\n    \/\/ Memory usage information\\r\\n    UINT32 MemoryUsageInBytes;          \/\/ Total heap space currently in use.\\r\\n    \/\/ Audio latency and glitching information\\r\\n    UINT32 CurrentLatencyInSamples;     \/\/ Minimum delay from when a sample is read from a\\r\\n                                        \/\/  source buffer to when it reaches the speakers.\\r\\n    UINT32 GlitchesSinceEngineStarted;  \/\/ Audio dropouts since the engine was started.\\r\\n    \/\/ Data about XAudio2's current workload\\r\\n    UINT32 ActiveSourceVoiceCount;      \/\/ Source voices currently playing.\\r\\n    UINT32 TotalSourceVoiceCount;       \/\/ Source voices currently existing.\\r\\n    UINT32 ActiveSubmixVoiceCount;      \/\/ Submix voices currently playing\/existing.\\r\\n    UINT32 ActiveResamplerCount;        \/\/ Resample xAPOs currently active.\\r\\n    UINT32 ActiveMatrixMixCount;        \/\/ MatrixMix xAPOs currently active.\\r\\n    \/\/ Usage of the hardware XMA decoder (Xbox 360 only)\\r\\n    UINT32 ActiveXmaSourceVoices;       \/\/ Number of source voices decoding XMA data.\\r\\n    UINT32 ActiveXmaStreams;            \/\/ A voice can use more than one XMA stream.\\r\\n} XAUDIO2_PERFORMANCE_DATA;"},"XAUDIO2_PLAY_TAILS":{"comment":"\/\/ Used in IXAudio2SourceVoice::Stop","exp":"0x0020","file":"xaudio2.h","line":139,"type":"Integer","value":32},"XAUDIO2_QUANTUM_DENOMINATOR":{"comment":"\/\/  in 10ms chunks (= 1\/100 seconds)","exp":"100","file":"xaudio2.h","line":156,"type":"Integer","value":100},"XAUDIO2_QUANTUM_MS":{"comment":"","exp":"(1000.0f * XAUDIO2_QUANTUM_NUMERATOR \/ XAUDIO2_QUANTUM_DENOMINATOR)","file":"xaudio2.h","line":157,"type":"Float","value":10.0},"XAUDIO2_QUANTUM_NUMERATOR":{"comment":"\/\/ On Windows, XAudio2 processes audio","exp":"1","file":"xaudio2.h","line":155,"type":"Integer","value":1},"XAUDIO2_SEND_DESCRIPTOR":{"comment":"","exp":"","file":"xaudio2.h","line":249,"type":"Struct","value":"typedef struct XAUDIO2_SEND_DESCRIPTOR\\r\\n{\\r\\n    UINT32 Flags;                       \/\/ Either 0 or XAUDIO2_SEND_USEFILTER.\\r\\n    IXAudio2Voice* pOutputVoice;        \/\/ This send's destination voice.\\r\\n} XAUDIO2_SEND_DESCRIPTOR;"},"XAUDIO2_SEND_USEFILTER":{"comment":"\/\/ Used in XAUDIO2_SEND_DESCRIPTOR.Flags","exp":"0x0080","file":"xaudio2.h","line":141,"type":"Integer","value":128},"XAUDIO2_STDAPI":{"comment":"","exp":"EXTERN_C DECLSPEC_IMPORT HRESULT STDAPICALLTYPE","file":"xaudio2.h","line":1268,"type":"Unknown","value":"EXTERN_C DECLSPEC_IMPORT HRESULT STDAPICALLTYPE"},"XAUDIO2_STOP_ENGINE_WHEN_IDLE":{"comment":"\/\/ Used in XAudio2Create to force the engine to Stop when no source voices are Started, and Start when a voice is Started","exp":"0x2000","file":"xaudio2.h","line":143,"type":"Integer","value":8192},"XAUDIO2_USE_DEFAULT_PROCESSOR":{"comment":"","exp":"0x00000000","file":"xaudio2.h","line":232,"type":"Integer","value":0},"XAUDIO2_VOICE_DETAILS":{"comment":"","exp":"","file":"xaudio2.h","line":240,"type":"Struct","value":"typedef struct XAUDIO2_VOICE_DETAILS\\r\\n{\\r\\n    UINT32 CreationFlags;               \/\/ Flags the voice was created with.\\r\\n    UINT32 ActiveFlags;                 \/\/ Flags currently active.\\r\\n    UINT32 InputChannels;               \/\/ Channels in the voice's input audio.\\r\\n    UINT32 InputSampleRate;             \/\/ Sample rate of the voice's input audio.\\r\\n} XAUDIO2_VOICE_DETAILS;"},"XAUDIO2_VOICE_NOPITCH":{"comment":"\/\/ Used in IXAudio2::CreateSourceVoice","exp":"0x0002","file":"xaudio2.h","line":136,"type":"Integer","value":2},"XAUDIO2_VOICE_NOSAMPLESPLAYED":{"comment":"\/\/ Used in IXAudio2SourceVoice::GetState","exp":"0x0100","file":"xaudio2.h","line":142,"type":"Integer","value":256},"XAUDIO2_VOICE_NOSRC":{"comment":"\/\/ Used in IXAudio2::CreateSourceVoice","exp":"0x0004","file":"xaudio2.h","line":137,"type":"Integer","value":4},"XAUDIO2_VOICE_SENDS":{"comment":"","exp":"","file":"xaudio2.h","line":256,"type":"Struct","value":"typedef struct XAUDIO2_VOICE_SENDS\\r\\n{\\r\\n    UINT32 SendCount;                   \/\/ Number of sends from this voice.\\r\\n    XAUDIO2_SEND_DESCRIPTOR* pSends;    \/\/ Array of SendCount send descriptors.\\r\\n} XAUDIO2_VOICE_SENDS;"},"XAUDIO2_VOICE_STATE":{"comment":"","exp":"","file":"xaudio2.h","line":336,"type":"Struct","value":"typedef struct XAUDIO2_VOICE_STATE\\r\\n{\\r\\n    void* pCurrentBufferContext;        \/\/ The pContext value provided in the XAUDIO2_BUFFER\\r\\n                                        \/\/  that is currently being processed, or NULL if\\r\\n                                        \/\/  there are no buffers in the queue.\\r\\n    UINT32 BuffersQueued;               \/\/ Number of buffers currently queued on the voice\\r\\n                                        \/\/  (including the one that is being processed).\\r\\n    UINT64 SamplesPlayed;               \/\/ Total number of samples produced by the voice since\\r\\n                                        \/\/  it began processing the current audio stream.\\r\\n                                        \/\/  If XAUDIO2_VOICE_NOSAMPLESPLAYED is specified\\r\\n                                        \/\/  in the call to IXAudio2SourceVoice::GetState,\\r\\n                                        \/\/  this member will not be calculated, saving CPU.\\r\\n} XAUDIO2_VOICE_STATE;"},"XAUDIO2_VOICE_USEFILTER":{"comment":"\/\/ Used in IXAudio2::CreateSource\/SubmixVoice","exp":"0x0008","file":"xaudio2.h","line":138,"type":"Integer","value":8},"_USE_MATH_DEFINES":{"comment":"\/\/ Make math.h define M_PI","exp":"","file":"xaudio2.h","line":1177,"type":"Other","value":""}},"__includes_list":{"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|hrtfapoapi.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["float.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\ucrt\\float.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|x3daudio.h":[["sdkddkver.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\sdkddkver.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["windef.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\windef.h"],["DirectXMath.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\DirectXMath.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|xapo.h":[["sdkddkver.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\sdkddkver.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["basetyps.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\basetyps.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|xapobase.h":[["XAPO.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\xapo.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|xapofx.h":[["sdkddkver.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\sdkddkver.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|xaudio2.h":[["sdkddkver.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\sdkddkver.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["basetyps.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\basetyps.h"],["objbase.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\objbase.h"],["sal.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\sal.h"],["mmreg.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\mmreg.h"],["audiosessiontypes.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\AudioSessionTypes.h"],["math.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\ucrt\\math.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|xaudio2fx.h":[["sdkddkver.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\sdkddkver.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["objbase.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\objbase.h"],["math.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\ucrt\\math.h"]]}}