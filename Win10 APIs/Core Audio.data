{"__const_list":{"AE_CURRENT_POSITION":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":174,"type":"Struct","value":"typedef struct AE_CURRENT_POSITION\\r\\n    {\\r\\n    UINT64 u64DevicePosition;\\r\\n    UINT64 u64StreamPosition;\\r\\n    UINT64 u64PaddingFrames;\\r\\n    HNSTIME hnsQPCPosition;\\r\\n    FLOAT32 f32FramesPerSecond;\\r\\n    AE_POSITION_FLAGS Flag;\\r\\n    } \\tAE_CURRENT_POSITION;"},"AE_POSITION_FLAGS":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":165,"type":"Enum","value":"typedef\\r\\nenum AE_POSITION_FLAGS\\r\\n    {\\r\\n        POSITION_INVALID\\t= 0,\\r\\n        POSITION_DISCONTINUOUS\\t= 1,\\r\\n        POSITION_CONTINUOUS\\t= 2,\\r\\n        POSITION_QPC_ERROR\\t= 4\\r\\n    } \\tAE_POSITION_FLAGS;"},"AMBISONICS_CHANNEL_ORDERING":{"comment":"","exp":"","file":"Audioclient.h","line":1798,"type":"Enum","value":"typedef\\r\\nenum AMBISONICS_CHANNEL_ORDERING\\r\\n    {\\r\\n        AMBISONICS_CHANNEL_ORDERING_ACN\\t= 0\\r\\n    } \\tAMBISONICS_CHANNEL_ORDERING;"},"AMBISONICS_NORMALIZATION":{"comment":"","exp":"","file":"Audioclient.h","line":1804,"type":"Enum","value":"typedef\\r\\nenum AMBISONICS_NORMALIZATION\\r\\n    {\\r\\n        AMBISONICS_NORMALIZATION_SN3D\\t= 0,\\r\\n        AMBISONICS_NORMALIZATION_N3D\\t= ( AMBISONICS_NORMALIZATION_SN3D + 1 ) \\r\\n    } \\tAMBISONICS_NORMALIZATION;"},"AMBISONICS_PARAMS":{"comment":"","exp":"","file":"Audioclient.h","line":1823,"type":"Struct","value":"typedef struct AMBISONICS_PARAMS\\r\\n    {\\r\\n    UINT32 u32Size;\\r\\n    UINT32 u32Version;\\r\\n    AMBISONICS_TYPE u32Type;\\r\\n    AMBISONICS_CHANNEL_ORDERING u32ChannelOrdering;\\r\\n    AMBISONICS_NORMALIZATION u32Normalization;\\r\\n    UINT32 u32Order;\\r\\n    UINT32 u32NumChannels;\\r\\n    \/* [size_is][annotation] *\/ \\r\\n    __field_ecount(u32NumChannels)  UINT32 *pu32ChannelMap;\\r\\n    } \\tAMBISONICS_PARAMS;"},"AMBISONICS_PARAM_VERSION_1":{"comment":"","exp":"1","file":"Audioclient.h","line":1811,"type":"Integer","value":1},"AMBISONICS_TYPE":{"comment":"","exp":"","file":"Audioclient.h","line":1792,"type":"Enum","value":"typedef\\r\\nenum AMBISONICS_TYPE\\r\\n    {\\r\\n        AMBISONICS_TYPE_FULL3D\\t= 0\\r\\n    } \\tAMBISONICS_TYPE;"},"APOERR_ALREADY_INITIALIZED":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D0001)","file":"audioenginebaseapo.h","line":121,"type":"Integer","value":2289893377},"APOERR_ALREADY_UNLOCKED":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D0006)","file":"audioenginebaseapo.h","line":131,"type":"Integer","value":2289893382},"APOERR_APO_LOCKED":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D000A)","file":"audioenginebaseapo.h","line":139,"type":"Integer","value":2289893386},"APOERR_BUFFERS_OVERLAP":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D0005)","file":"audioenginebaseapo.h","line":129,"type":"Integer","value":2289893381},"APOERR_FORMAT_NOT_SUPPORTED":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D0003)","file":"audioenginebaseapo.h","line":125,"type":"Integer","value":2289893379},"APOERR_INVALID_APO_CLSID":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D0004)","file":"audioenginebaseapo.h","line":127,"type":"Integer","value":2289893380},"APOERR_INVALID_COEFFCOUNT":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D000B)","file":"audioenginebaseapo.h","line":141,"type":"Integer","value":2289893387},"APOERR_INVALID_COEFFICIENT":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D000C)","file":"audioenginebaseapo.h","line":143,"type":"Integer","value":2289893388},"APOERR_INVALID_CONNECTION_FORMAT":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D0009)","file":"audioenginebaseapo.h","line":137,"type":"Integer","value":2289893385},"APOERR_INVALID_CURVE_PARAM":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D000D)","file":"audioenginebaseapo.h","line":145,"type":"Integer","value":2289893389},"APOERR_INVALID_OUTPUT_MAXFRAMECOUNT":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D0008)","file":"audioenginebaseapo.h","line":135,"type":"Integer","value":2289893384},"APOERR_NOT_INITIALIZED":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D0002)","file":"audioenginebaseapo.h","line":123,"type":"Integer","value":2289893378},"APOERR_NUM_CONNECTIONS_INVALID":{"comment":"","exp":"_HRESULT_TYPEDEF_(0x887D0007)","file":"audioenginebaseapo.h","line":133,"type":"Integer","value":2289893383},"APOInitBaseStruct":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":210,"type":"Struct","value":"typedef struct APOInitBaseStruct\\r\\n    {\\r\\n    UINT32 cbSize;\\r\\n    CLSID clsid;\\r\\n    } \\tAPOInitBaseStruct;"},"APOInitSystemEffects":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":1066,"type":"Struct","value":"typedef struct APOInitSystemEffects\\r\\n    {\\r\\n    APOInitBaseStruct APOInit;\\r\\n    IPropertyStore *pAPOEndpointProperties;\\r\\n    IPropertyStore *pAPOSystemEffectsProperties;\\r\\n    void *pReserved;\\r\\n    IMMDeviceCollection *pDeviceCollection;\\r\\n    } \\tAPOInitSystemEffects;"},"APOInitSystemEffects2":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":1075,"type":"Struct","value":"typedef struct APOInitSystemEffects2\\r\\n    {\\r\\n    APOInitBaseStruct APOInit;\\r\\n    IPropertyStore *pAPOEndpointProperties;\\r\\n    IPropertyStore *pAPOSystemEffectsProperties;\\r\\n    void *pReserved;\\r\\n    IMMDeviceCollection *pDeviceCollection;\\r\\n    UINT nSoftwareIoDeviceInCollection;\\r\\n    UINT nSoftwareIoConnectorIndex;\\r\\n    GUID AudioProcessingMode;\\r\\n    BOOL InitializeForDiscoveryOnly;\\r\\n    } \\tAPOInitSystemEffects2;"},"APO_CONNECTION_BUFFER_TYPE":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":162,"type":"Enum","value":"typedef\\r\\nenum APO_CONNECTION_BUFFER_TYPE\\r\\n    {\\r\\n        APO_CONNECTION_BUFFER_TYPE_ALLOCATED\\t= 0,\\r\\n        APO_CONNECTION_BUFFER_TYPE_EXTERNAL\\t= 1,\\r\\n        APO_CONNECTION_BUFFER_TYPE_DEPENDANT\\t= 2\\r\\n    } \\tAPO_CONNECTION_BUFFER_TYPE;"},"APO_CONNECTION_DESCRIPTOR":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":170,"type":"Struct","value":"typedef struct APO_CONNECTION_DESCRIPTOR\\r\\n    {\\r\\n    APO_CONNECTION_BUFFER_TYPE Type;\\r\\n    UINT_PTR pBuffer;\\r\\n    UINT32 u32MaxFrameCount;\\r\\n    IAudioMediaType *pFormat;\\r\\n    UINT32 u32Signature;\\r\\n    } \\tAPO_CONNECTION_DESCRIPTOR;"},"APO_CONNECTION_DESCRIPTOR_SIGNATURE":{"comment":"","exp":"'ACDS'","file":"audioenginebaseapo.h","line":149,"type":"String","value":"'ACDS'"},"APO_CONNECTION_PROPERTY_SIGNATURE":{"comment":"","exp":"'ACPS'","file":"audioenginebaseapo.h","line":150,"type":"String","value":"'ACPS'"},"APO_FLAG":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":179,"type":"Enum","value":"typedef\\r\\nenum APO_FLAG\\r\\n    {\\r\\n        APO_FLAG_NONE\\t= 0,\\r\\n        APO_FLAG_INPLACE\\t= 0x1,\\r\\n        APO_FLAG_SAMPLESPERFRAME_MUST_MATCH\\t= 0x2,\\r\\n        APO_FLAG_FRAMESPERSECOND_MUST_MATCH\\t= 0x4,\\r\\n        APO_FLAG_BITSPERSAMPLE_MUST_MATCH\\t= 0x8,\\r\\n        APO_FLAG_MIXER\\t= 0x10,\\r\\n        APO_FLAG_DEFAULT\\t= ( ( APO_FLAG_SAMPLESPERFRAME_MUST_MATCH | APO_FLAG_FRAMESPERSECOND_MUST_MATCH )  | APO_FLAG_BITSPERSAMPLE_MUST_MATCH ) \\r\\n    } \\tAPO_FLAG;"},"APO_REG_PROPERTIES":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":191,"type":"Struct","value":"typedef struct APO_REG_PROPERTIES\\r\\n    {\\r\\n    CLSID clsid;\\r\\n    APO_FLAG Flags;\\r\\n    WCHAR szFriendlyName[ 256 ];\\r\\n    WCHAR szCopyrightInfo[ 256 ];\\r\\n    UINT32 u32MajorVersion;\\r\\n    UINT32 u32MinorVersion;\\r\\n    UINT32 u32MinInputConnections;\\r\\n    UINT32 u32MaxInputConnections;\\r\\n    UINT32 u32MinOutputConnections;\\r\\n    UINT32 u32MaxOutputConnections;\\r\\n    UINT32 u32MaxInstances;\\r\\n    UINT32 u32NumAPOInterfaces;\\r\\n    \/* [size_is] *\/ IID iidAPOInterfaceList[ 1 ];\\r\\n    } \\tAPO_REG_PROPERTIES;"},"AUDCLNT_E_ALREADY_INITIALIZED":{"comment":"","exp":"AUDCLNT_ERR(0x002)","file":"Audioclient.h","line":2131,"type":"Integer","value":2290679810},"AUDCLNT_E_BUFDURATION_PERIOD_NOT_EQUAL":{"comment":"","exp":"AUDCLNT_ERR(0x013)","file":"Audioclient.h","line":2147,"type":"Integer","value":2290679827},"AUDCLNT_E_BUFFER_ERROR":{"comment":"","exp":"AUDCLNT_ERR(0x018)","file":"Audioclient.h","line":2152,"type":"Integer","value":2290679832},"AUDCLNT_E_BUFFER_OPERATION_PENDING":{"comment":"","exp":"AUDCLNT_ERR(0x00b)","file":"Audioclient.h","line":2140,"type":"Integer","value":2290679819},"AUDCLNT_E_BUFFER_SIZE_ERROR":{"comment":"","exp":"AUDCLNT_ERR(0x016)","file":"Audioclient.h","line":2150,"type":"Integer","value":2290679830},"AUDCLNT_E_BUFFER_SIZE_NOT_ALIGNED":{"comment":"","exp":"AUDCLNT_ERR(0x019)","file":"Audioclient.h","line":2153,"type":"Integer","value":2290679833},"AUDCLNT_E_BUFFER_TOO_LARGE":{"comment":"","exp":"AUDCLNT_ERR(0x006)","file":"Audioclient.h","line":2135,"type":"Integer","value":2290679814},"AUDCLNT_E_CPUUSAGE_EXCEEDED":{"comment":"","exp":"AUDCLNT_ERR(0x017)","file":"Audioclient.h","line":2151,"type":"Integer","value":2290679831},"AUDCLNT_E_DEVICE_INVALIDATED":{"comment":"","exp":"AUDCLNT_ERR(0x004)","file":"Audioclient.h","line":2133,"type":"Integer","value":2290679812},"AUDCLNT_E_DEVICE_IN_USE":{"comment":"","exp":"AUDCLNT_ERR(0x00a)","file":"Audioclient.h","line":2139,"type":"Integer","value":2290679818},"AUDCLNT_E_ENDPOINT_CREATE_FAILED":{"comment":"","exp":"AUDCLNT_ERR(0x00f)","file":"Audioclient.h","line":2143,"type":"Integer","value":2290679823},"AUDCLNT_E_ENDPOINT_OFFLOAD_NOT_CAPABLE":{"comment":"","exp":"AUDCLNT_ERR(0x022)","file":"Audioclient.h","line":2156,"type":"Integer","value":2290679842},"AUDCLNT_E_ENGINE_FORMAT_LOCKED":{"comment":"","exp":"AUDCLNT_ERR(0x029)","file":"Audioclient.h","line":2163,"type":"Integer","value":2290679849},"AUDCLNT_E_ENGINE_PERIODICITY_LOCKED":{"comment":"","exp":"AUDCLNT_ERR(0x028)","file":"Audioclient.h","line":2162,"type":"Integer","value":2290679848},"AUDCLNT_E_EVENTHANDLE_NOT_EXPECTED":{"comment":"","exp":"AUDCLNT_ERR(0x011)","file":"Audioclient.h","line":2145,"type":"Integer","value":2290679825},"AUDCLNT_E_EVENTHANDLE_NOT_SET":{"comment":"","exp":"AUDCLNT_ERR(0x014)","file":"Audioclient.h","line":2148,"type":"Integer","value":2290679828},"AUDCLNT_E_EXCLUSIVE_MODE_NOT_ALLOWED":{"comment":"","exp":"AUDCLNT_ERR(0x00e)","file":"Audioclient.h","line":2142,"type":"Integer","value":2290679822},"AUDCLNT_E_EXCLUSIVE_MODE_ONLY":{"comment":"","exp":"AUDCLNT_ERR(0x012)","file":"Audioclient.h","line":2146,"type":"Integer","value":2290679826},"AUDCLNT_E_HEADTRACKING_ENABLED":{"comment":"","exp":"AUDCLNT_ERR(0x030)","file":"Audioclient.h","line":2164,"type":"Integer","value":2290679856},"AUDCLNT_E_HEADTRACKING_UNSUPPORTED":{"comment":"","exp":"AUDCLNT_ERR(0x040)","file":"Audioclient.h","line":2165,"type":"Integer","value":2290679872},"AUDCLNT_E_INCORRECT_BUFFER_SIZE":{"comment":"","exp":"AUDCLNT_ERR(0x015)","file":"Audioclient.h","line":2149,"type":"Integer","value":2290679829},"AUDCLNT_E_INVALID_DEVICE_PERIOD":{"comment":"","exp":"AUDCLNT_ERR(0x020)","file":"Audioclient.h","line":2154,"type":"Integer","value":2290679840},"AUDCLNT_E_INVALID_SIZE":{"comment":"","exp":"AUDCLNT_ERR(0x009)","file":"Audioclient.h","line":2138,"type":"Integer","value":2290679817},"AUDCLNT_E_INVALID_STREAM_FLAG":{"comment":"","exp":"AUDCLNT_ERR(0x021)","file":"Audioclient.h","line":2155,"type":"Integer","value":2290679841},"AUDCLNT_E_NONOFFLOAD_MODE_ONLY":{"comment":"","exp":"AUDCLNT_ERR(0x025)","file":"Audioclient.h","line":2159,"type":"Integer","value":2290679845},"AUDCLNT_E_NOT_INITIALIZED":{"comment":"","exp":"AUDCLNT_ERR(0x001)","file":"Audioclient.h","line":2130,"type":"Integer","value":2290679809},"AUDCLNT_E_NOT_STOPPED":{"comment":"","exp":"AUDCLNT_ERR(0x005)","file":"Audioclient.h","line":2134,"type":"Integer","value":2290679813},"AUDCLNT_E_OFFLOAD_MODE_ONLY":{"comment":"","exp":"AUDCLNT_ERR(0x024)","file":"Audioclient.h","line":2158,"type":"Integer","value":2290679844},"AUDCLNT_E_OUT_OF_OFFLOAD_RESOURCES":{"comment":"","exp":"AUDCLNT_ERR(0x023)","file":"Audioclient.h","line":2157,"type":"Integer","value":2290679843},"AUDCLNT_E_OUT_OF_ORDER":{"comment":"","exp":"AUDCLNT_ERR(0x007)","file":"Audioclient.h","line":2136,"type":"Integer","value":2290679815},"AUDCLNT_E_RAW_MODE_UNSUPPORTED":{"comment":"","exp":"AUDCLNT_ERR(0x027)","file":"Audioclient.h","line":2161,"type":"Integer","value":2290679847},"AUDCLNT_E_RESOURCES_INVALIDATED":{"comment":"","exp":"AUDCLNT_ERR(0x026)","file":"Audioclient.h","line":2160,"type":"Integer","value":2290679846},"AUDCLNT_E_SERVICE_NOT_RUNNING":{"comment":"","exp":"AUDCLNT_ERR(0x010)","file":"Audioclient.h","line":2144,"type":"Integer","value":2290679824},"AUDCLNT_E_THREAD_NOT_REGISTERED":{"comment":"","exp":"AUDCLNT_ERR(0x00c)","file":"Audioclient.h","line":2141,"type":"Integer","value":2290679820},"AUDCLNT_E_UNSUPPORTED_FORMAT":{"comment":"","exp":"AUDCLNT_ERR(0x008)","file":"Audioclient.h","line":2137,"type":"Integer","value":2290679816},"AUDCLNT_E_WRONG_ENDPOINT_TYPE":{"comment":"","exp":"AUDCLNT_ERR(0x003)","file":"Audioclient.h","line":2132,"type":"Integer","value":2290679811},"AUDCLNT_SESSIONFLAGS_DISPLAY_HIDE":{"comment":"","exp":"0x20000000","file":"AudioSessionTypes.h","line":134,"type":"Integer","value":536870912},"AUDCLNT_SESSIONFLAGS_DISPLAY_HIDEWHENEXPIRED":{"comment":"","exp":"0x40000000","file":"AudioSessionTypes.h","line":135,"type":"Integer","value":1073741824},"AUDCLNT_SESSIONFLAGS_EXPIREWHENUNOWNED":{"comment":"","exp":"0x10000000","file":"AudioSessionTypes.h","line":133,"type":"Integer","value":268435456},"AUDCLNT_STREAMFLAGS_AUTOCONVERTPCM":{"comment":"","exp":"0x80000000","file":"AudioSessionTypes.h","line":132,"type":"Integer","value":2147483648},"AUDCLNT_STREAMFLAGS_CROSSPROCESS":{"comment":"","exp":"0x00010000","file":"AudioSessionTypes.h","line":126,"type":"Integer","value":65536},"AUDCLNT_STREAMFLAGS_EVENTCALLBACK":{"comment":"","exp":"0x00040000","file":"AudioSessionTypes.h","line":128,"type":"Integer","value":262144},"AUDCLNT_STREAMFLAGS_LOOPBACK":{"comment":"","exp":"0x00020000","file":"AudioSessionTypes.h","line":127,"type":"Integer","value":131072},"AUDCLNT_STREAMFLAGS_NOPERSIST":{"comment":"","exp":"0x00080000","file":"AudioSessionTypes.h","line":129,"type":"Integer","value":524288},"AUDCLNT_STREAMFLAGS_RATEADJUST":{"comment":"","exp":"0x00100000","file":"AudioSessionTypes.h","line":130,"type":"Integer","value":1048576},"AUDCLNT_STREAMFLAGS_SRC_DEFAULT_QUALITY":{"comment":"","exp":"0x08000000","file":"AudioSessionTypes.h","line":131,"type":"Integer","value":134217728},"AUDCLNT_STREAMOPTIONS":{"comment":"","exp":"","file":"Audioclient.h","line":160,"type":"Enum","value":"typedef\\r\\nenum AUDCLNT_STREAMOPTIONS\\r\\n    {\\r\\n        AUDCLNT_STREAMOPTIONS_NONE\\t= 0,\\r\\n        AUDCLNT_STREAMOPTIONS_RAW\\t= 0x1,\\r\\n        AUDCLNT_STREAMOPTIONS_MATCH_FORMAT\\t= 0x2,\\r\\n        AUDCLNT_STREAMOPTIONS_AMBISONICS\\t= 0x4\\r\\n    } \\tAUDCLNT_STREAMOPTIONS;"},"AUDCLNT_S_BUFFER_EMPTY":{"comment":"","exp":"AUDCLNT_SUCCESS(0x001)","file":"Audioclient.h","line":2166,"type":"Integer","value":143196161},"AUDCLNT_S_POSITION_STALLED":{"comment":"","exp":"AUDCLNT_SUCCESS(0x003)","file":"Audioclient.h","line":2168,"type":"Integer","value":143196163},"AUDCLNT_S_THREAD_ALREADY_REGISTERED":{"comment":"","exp":"AUDCLNT_SUCCESS(0x002)","file":"Audioclient.h","line":2167,"type":"Integer","value":143196162},"AUDIOCLOCK_CHARACTERISTIC_FIXED_FREQ":{"comment":"","exp":"0x00000001","file":"Audioclient.h","line":1197,"type":"Integer","value":1},"AUDIO_ENDPOINT_SHARED_CREATE_PARAMS":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":155,"type":"Struct","value":"typedef struct AUDIO_ENDPOINT_SHARED_CREATE_PARAMS\\r\\n    {\\r\\n    UINT32 u32Size;\\r\\n    UINT32 u32TSSessionId;\\r\\n    EndpointConnectorType targetEndpointConnectorType;\\r\\n    WAVEFORMATEX wfxDeviceFormat;\\r\\n    } \\tAUDIO_ENDPOINT_SHARED_CREATE_PARAMS;"},"AUDIO_FLOW_TYPE":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":216,"type":"Enum","value":"typedef\\r\\nenum AUDIO_FLOW_TYPE\\r\\n    {\\r\\n        AUDIO_FLOW_PULL\\t= 0,\\r\\n        AUDIO_FLOW_PUSH\\t= ( AUDIO_FLOW_PULL + 1 ) \\r\\n    } \\tAUDIO_FLOW_TYPE;"},"AUDIO_MAX_CHANNELS":{"comment":"\/\/ Current maximum number of channels for APOs","exp":"4096","file":"audioenginebaseapo.h","line":158,"type":"Integer","value":4096},"AUDIO_MAX_FRAMERATE":{"comment":"\/\/ Maximum frame rate for APOs","exp":"384000.0","file":"audioenginebaseapo.h","line":154,"type":"Float","value":384000.0},"AUDIO_MIN_CHANNELS":{"comment":"\/\/ Current minimum number of channels for APOs","exp":"1","file":"audioenginebaseapo.h","line":157,"type":"Integer","value":1},"AUDIO_MIN_FRAMERATE":{"comment":"\/\/ Minimum frame rate for APOs","exp":"10.0","file":"audioenginebaseapo.h","line":153,"type":"Float","value":10.0},"AUDIO_VOLUME_NOTIFICATION_DATA":{"comment":"","exp":"","file":"endpointvolume.h","line":85,"type":"Struct","value":"typedef struct AUDIO_VOLUME_NOTIFICATION_DATA\\r\\n    {\\r\\n    GUID guidEventContext;\\r\\n    BOOL bMuted;\\r\\n    float fMasterVolume;\\r\\n    UINT nChannels;\\r\\n    float afChannelVolumes[ 1 ];\\r\\n    } \\tAUDIO_VOLUME_NOTIFICATION_DATA;"},"AudioClient3ActivationParams":{"comment":"","exp":"","file":"Audioclient.h","line":681,"type":"Struct","value":"typedef struct AudioClient3ActivationParams\\r\\n    {\\r\\n    GUID tracingContextId;\\r\\n    } \\tAudioClient3ActivationParams;"},"AudioClientProperties":{"comment":"","exp":"","file":"Audioclient.h","line":171,"type":"Struct","value":"typedef struct AudioClientProperties\\r\\n{\\r\\n    UINT32                  cbSize;\\r\\n    BOOL                    bIsOffload;\\r\\n    AUDIO_STREAM_CATEGORY   eCategory;\\r\\n} AudioClientProperties;"},"AudioObjectType":{"comment":"","exp":"","file":"SpatialAudioClient.h","line":109,"type":"Enum","value":"typedef\\r\\nenum AudioObjectType\\r\\n    {\\r\\n        AudioObjectType_None\\t= 0,\\r\\n        AudioObjectType_Dynamic\\t= ( 1 << 0 ) ,\\r\\n        AudioObjectType_FrontLeft\\t= ( 1 << 1 ) ,\\r\\n        AudioObjectType_FrontRight\\t= ( 1 << 2 ) ,\\r\\n        AudioObjectType_FrontCenter\\t= ( 1 << 3 ) ,\\r\\n        AudioObjectType_LowFrequency\\t= ( 1 << 4 ) ,\\r\\n        AudioObjectType_SideLeft\\t= ( 1 << 5 ) ,\\r\\n        AudioObjectType_SideRight\\t= ( 1 << 6 ) ,\\r\\n        AudioObjectType_BackLeft\\t= ( 1 << 7 ) ,\\r\\n        AudioObjectType_BackRight\\t= ( 1 << 8 ) ,\\r\\n        AudioObjectType_TopFrontLeft\\t= ( 1 << 9 ) ,\\r\\n        AudioObjectType_TopFrontRight\\t= ( 1 << 10 ) ,\\r\\n        AudioObjectType_TopBackLeft\\t= ( 1 << 11 ) ,\\r\\n        AudioObjectType_TopBackRight\\t= ( 1 << 12 ) ,\\r\\n        AudioObjectType_BottomFrontLeft\\t= ( 1 << 13 ) ,\\r\\n        AudioObjectType_BottomFrontRight\\t= ( 1 << 14 ) ,\\r\\n        AudioObjectType_BottomBackLeft\\t= ( 1 << 15 ) ,\\r\\n        AudioObjectType_BottomBackRight\\t= ( 1 << 16 ) ,\\r\\n        AudioObjectType_BackCenter\\t= ( 1 << 17 ) \\r\\n    } \\tAudioObjectType;"},"AudioSessionDisconnectReason":{"comment":"","exp":"","file":"audiopolicy.h","line":116,"type":"Enum","value":"typedef\\r\\nenum AudioSessionDisconnectReason\\r\\n    {\\r\\n        DisconnectReasonDeviceRemoval\\t= 0,\\r\\n        DisconnectReasonServerShutdown\\t= ( DisconnectReasonDeviceRemoval + 1 ) ,\\r\\n        DisconnectReasonFormatChanged\\t= ( DisconnectReasonServerShutdown + 1 ) ,\\r\\n        DisconnectReasonSessionLogoff\\t= ( DisconnectReasonFormatChanged + 1 ) ,\\r\\n        DisconnectReasonSessionDisconnected\\t= ( DisconnectReasonSessionLogoff + 1 ) ,\\r\\n        DisconnectReasonExclusiveModeOverride\\t= ( DisconnectReasonSessionDisconnected + 1 ) \\r\\n    } \\tAudioSessionDisconnectReason;"},"DEVICE_STATEMASK_ALL":{"comment":"","exp":"0x0000000f","file":"mmdeviceapi.h","line":131,"type":"Integer","value":15},"DEVICE_STATE_ACTIVE":{"comment":"","exp":"0x00000001","file":"mmdeviceapi.h","line":127,"type":"Integer","value":1},"DEVICE_STATE_DISABLED":{"comment":"","exp":"0x00000002","file":"mmdeviceapi.h","line":128,"type":"Integer","value":2},"DEVICE_STATE_NOTPRESENT":{"comment":"","exp":"0x00000004","file":"mmdeviceapi.h","line":129,"type":"Integer","value":4},"DEVICE_STATE_UNPLUGGED":{"comment":"","exp":"0x00000008","file":"mmdeviceapi.h","line":130,"type":"Integer","value":8},"DEVINTERFACE_AUDIOENDPOINTPLUGIN":{"comment":"","exp":"DEFINE_GUIDNAMED(DEVINTERFACE_AUDIOENDPOINTPLUGIN)","file":"AudioEngineEndpoint.h","line":1463,"type":"Other","value":"DEFINE_GUIDNAMED(DEVINTERFACE_AUDIOENDPOINTPLUGIN)"},"DEVTOPO_HARDWARE_INITIATED_EVENTCONTEXT":{"comment":"","exp":"'draH'","file":"devicetopology.h","line":358,"type":"String","value":"'draH'"},"EAudioConstriction":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":223,"type":"Enum","value":"typedef\\r\\nenum EAudioConstriction\\r\\n    {\\r\\n        eAudioConstrictionOff\\t= 0,\\r\\n        eAudioConstriction48_16\\t= ( eAudioConstrictionOff + 1 ) ,\\r\\n        eAudioConstriction44_16\\t= ( eAudioConstriction48_16 + 1 ) ,\\r\\n        eAudioConstriction14_14\\t= ( eAudioConstriction44_16 + 1 ) ,\\r\\n        eAudioConstrictionMute\\t= ( eAudioConstriction14_14 + 1 ) \\r\\n    } \\tEAudioConstriction;"},"ENDPOINT_FORMAT_RESET_MIX_ONLY":{"comment":"","exp":"0x00000001","file":"audioendpoints.h","line":63,"type":"Integer","value":1},"ENDPOINT_HARDWARE_SUPPORT_METER":{"comment":"","exp":"0x00000004","file":"endpointvolume.h","line":98,"type":"Integer","value":4},"ENDPOINT_HARDWARE_SUPPORT_MUTE":{"comment":"","exp":"0x00000002","file":"endpointvolume.h","line":97,"type":"Integer","value":2},"ENDPOINT_HARDWARE_SUPPORT_VOLUME":{"comment":"","exp":"0x00000001","file":"endpointvolume.h","line":96,"type":"Integer","value":1},"ENDPOINT_SYSFX_DISABLED":{"comment":"\/\/ System Effects are disabled.","exp":"0x00000001","file":"mmdeviceapi.h","line":147,"type":"Integer","value":1},"ENDPOINT_SYSFX_ENABLED":{"comment":"\/\/ System Effects are enabled.","exp":"0x00000000","file":"mmdeviceapi.h","line":146,"type":"Integer","value":0},"E_NOTFOUND":{"comment":"","exp":"HRESULT_FROM_WIN32(ERROR_NOT_FOUND)","file":"devicetopology.h","line":350,"type":"Integer","value":2147943568},"E_UNSUPPORTED_TYPE":{"comment":"","exp":"HRESULT_FROM_WIN32(ERROR_UNSUPPORTED_TYPE)","file":"mmdeviceapi.h","line":126,"type":"Integer","value":2147944030},"HDMI":{"comment":"","exp":"DigitalAudioDisplayDevice","file":"mmdeviceapi.h","line":204,"type":"Unknown","value":"DigitalAudioDisplayDevice"},"IActivateAudioInterfaceAsyncOperationVtbl":{"comment":"","exp":"","file":"mmdeviceapi.h","line":1072,"type":"Struct","value":"typedef struct IActivateAudioInterfaceAsyncOperationVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IActivateAudioInterfaceAsyncOperation * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IActivateAudioInterfaceAsyncOperation * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IActivateAudioInterfaceAsyncOperation * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetActivateResult )( \\r\\n            IActivateAudioInterfaceAsyncOperation * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  HRESULT *activateResult,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_maybenull_  IUnknown **activatedInterface);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IActivateAudioInterfaceAsyncOperationVtbl;"},"IActivateAudioInterfaceCompletionHandlerVtbl":{"comment":"","exp":"","file":"mmdeviceapi.h","line":988,"type":"Struct","value":"typedef struct IActivateAudioInterfaceCompletionHandlerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IActivateAudioInterfaceCompletionHandler * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IActivateAudioInterfaceCompletionHandler * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IActivateAudioInterfaceCompletionHandler * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateCompleted )( \\r\\n            IActivateAudioInterfaceCompletionHandler * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IActivateAudioInterfaceAsyncOperation *activateOperation);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IActivateAudioInterfaceCompletionHandlerVtbl;"},"IAudioAmbisonicsControlVtbl":{"comment":"","exp":"","file":"Audioclient.h","line":1877,"type":"Struct","value":"typedef struct IAudioAmbisonicsControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IAudioAmbisonicsControl * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IAudioAmbisonicsControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IAudioAmbisonicsControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetData )( \\r\\n            __RPC__in IAudioAmbisonicsControl * This,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbAmbisonicsParams) const AMBISONICS_PARAMS *pAmbisonicsParams,\\r\\n            \/* [in] *\/ UINT32 cbAmbisonicsParams);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetHeadTracking )( \\r\\n            __RPC__in IAudioAmbisonicsControl * This,\\r\\n            \/* [in] *\/ BOOL bEnableHeadTracking);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetHeadTracking )( \\r\\n            __RPC__in IAudioAmbisonicsControl * This,\\r\\n            \/* [out] *\/ __RPC__out BOOL *pbEnableHeadTracking);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetRotation )( \\r\\n            __RPC__in IAudioAmbisonicsControl * This,\\r\\n            \/* [in] *\/ float X,\\r\\n            \/* [in] *\/ float Y,\\r\\n            \/* [in] *\/ float Z,\\r\\n            \/* [in] *\/ float W);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioAmbisonicsControlVtbl;"},"IAudioAutoGainControlVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":1915,"type":"Struct","value":"typedef struct IAudioAutoGainControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioAutoGainControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioAutoGainControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioAutoGainControl * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetEnabled )( \\r\\n            IAudioAutoGainControl * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pbEnabled);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetEnabled )( \\r\\n            IAudioAutoGainControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL bEnable,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioAutoGainControlVtbl;"},"IAudioBassVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":1494,"type":"Struct","value":"typedef struct IAudioBassVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioBass * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioBass * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioBass * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( \\r\\n            IAudioBass * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pcChannels);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLevelRange )( \\r\\n            IAudioBass * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfMinLevelDB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfMaxLevelDB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfStepping);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLevel )( \\r\\n            IAudioBass * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevelDB);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevel )( \\r\\n            IAudioBass * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevelUniform )( \\r\\n            IAudioBass * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevelAllChannels )( \\r\\n            IAudioBass * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(cChannels)  float aLevelsDB[  ],\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG cChannels,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioBassVtbl;"},"IAudioCaptureClientVtbl":{"comment":"","exp":"","file":"Audioclient.h","line":1112,"type":"Struct","value":"typedef struct IAudioCaptureClientVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioCaptureClient * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioCaptureClient * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioCaptureClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            IAudioCaptureClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_buffer_(_Inexpressible_(\"*pNumFramesToRead * pFormat->nBlockAlign\"))  BYTE **ppData,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pNumFramesToRead,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwFlags,\\r\\n            \/* [annotation][unique][out] *\/ \\r\\n            _Out_opt_  UINT64 *pu64DevicePosition,\\r\\n            \/* [annotation][unique][out] *\/ \\r\\n            _Out_opt_  UINT64 *pu64QPCPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReleaseBuffer )( \\r\\n            IAudioCaptureClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 NumFramesRead);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNextPacketSize )( \\r\\n            IAudioCaptureClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pNumFramesInNextPacket);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioCaptureClientVtbl;"},"IAudioChannelConfigVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":1016,"type":"Struct","value":"typedef struct IAudioChannelConfigVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioChannelConfig * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioChannelConfig * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioChannelConfig * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetChannelConfig )( \\r\\n            IAudioChannelConfig * This,\\r\\n            \/* [in] *\/ DWORD dwConfig,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelConfig )( \\r\\n            IAudioChannelConfig * This,\\r\\n            \/* [retval][out] *\/ DWORD *pdwConfig);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioChannelConfigVtbl;"},"IAudioClient2Vtbl":{"comment":"","exp":"","file":"Audioclient.h","line":468,"type":"Struct","value":"typedef struct IAudioClient2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioClient2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioClient2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Initialize )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AUDCLNT_SHAREMODE ShareMode,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD StreamFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFERENCE_TIME hnsBufferDuration,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFERENCE_TIME hnsPeriodicity,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *pFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCGUID AudioSessionGuid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferSize )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pNumBufferFrames);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamLatency )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  REFERENCE_TIME *phnsLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentPadding )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pNumPaddingFrames);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsFormatSupported )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AUDCLNT_SHAREMODE ShareMode,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *pFormat,\\r\\n            \/* [unique][annotation][out] *\/ \\r\\n            _Out_opt_  WAVEFORMATEX **ppClosestMatch);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMixFormat )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  WAVEFORMATEX **ppDeviceFormat);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevicePeriod )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  REFERENCE_TIME *phnsDefaultDevicePeriod,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  REFERENCE_TIME *phnsMinimumDevicePeriod);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            IAudioClient2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            IAudioClient2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            IAudioClient2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventHandle )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [in] *\/ HANDLE eventHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Out_  void **ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsOffloadCapable )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AUDIO_STREAM_CATEGORY Category,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pbOffloadCapable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetClientProperties )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const AudioClientProperties *pProperties);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferSizeLimits )( \\r\\n            IAudioClient2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *pFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL bEventDriven,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  REFERENCE_TIME *phnsMinBufferDuration,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  REFERENCE_TIME *phnsMaxBufferDuration);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioClient2Vtbl;"},"IAudioClient3Vtbl":{"comment":"","exp":"","file":"Audioclient.h","line":739,"type":"Struct","value":"typedef struct IAudioClient3Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioClient3 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioClient3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Initialize )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AUDCLNT_SHAREMODE ShareMode,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD StreamFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFERENCE_TIME hnsBufferDuration,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFERENCE_TIME hnsPeriodicity,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *pFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCGUID AudioSessionGuid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferSize )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pNumBufferFrames);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamLatency )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  REFERENCE_TIME *phnsLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentPadding )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pNumPaddingFrames);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsFormatSupported )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AUDCLNT_SHAREMODE ShareMode,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *pFormat,\\r\\n            \/* [unique][annotation][out] *\/ \\r\\n            _Out_opt_  WAVEFORMATEX **ppClosestMatch);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMixFormat )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  WAVEFORMATEX **ppDeviceFormat);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevicePeriod )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  REFERENCE_TIME *phnsDefaultDevicePeriod,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  REFERENCE_TIME *phnsMinimumDevicePeriod);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            IAudioClient3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            IAudioClient3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            IAudioClient3 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventHandle )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [in] *\/ HANDLE eventHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Out_  void **ppv);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsOffloadCapable )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AUDIO_STREAM_CATEGORY Category,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pbOffloadCapable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetClientProperties )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const AudioClientProperties *pProperties);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferSizeLimits )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *pFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL bEventDriven,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  REFERENCE_TIME *phnsMinBufferDuration,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  REFERENCE_TIME *phnsMaxBufferDuration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSharedModeEnginePeriod )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *pFormat,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pDefaultPeriodInFrames,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pFundamentalPeriodInFrames,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pMinPeriodInFrames,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pMaxPeriodInFrames);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentSharedModeEnginePeriod )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [unique][annotation][out] *\/ \\r\\n            _Out_  WAVEFORMATEX **ppFormat,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pCurrentPeriodInFrames);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *InitializeSharedAudioStream )( \\r\\n            IAudioClient3 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD StreamFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 PeriodInFrames,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *pFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCGUID AudioSessionGuid);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioClient3Vtbl;"},"IAudioClientVtbl":{"comment":"","exp":"","file":"Audioclient.h","line":271,"type":"Struct","value":"typedef struct IAudioClientVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioClient * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioClient * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Initialize )( \\r\\n            IAudioClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AUDCLNT_SHAREMODE ShareMode,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD StreamFlags,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFERENCE_TIME hnsBufferDuration,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFERENCE_TIME hnsPeriodicity,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *pFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCGUID AudioSessionGuid);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBufferSize )( \\r\\n            IAudioClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pNumBufferFrames);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStreamLatency )( \\r\\n            IAudioClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  REFERENCE_TIME *phnsLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCurrentPadding )( \\r\\n            IAudioClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pNumPaddingFrames);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsFormatSupported )( \\r\\n            IAudioClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AUDCLNT_SHAREMODE ShareMode,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *pFormat,\\r\\n            \/* [unique][annotation][out] *\/ \\r\\n            _Out_opt_  WAVEFORMATEX **ppClosestMatch);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMixFormat )( \\r\\n            IAudioClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  WAVEFORMATEX **ppDeviceFormat);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevicePeriod )( \\r\\n            IAudioClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  REFERENCE_TIME *phnsDefaultDevicePeriod,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_opt_  REFERENCE_TIME *phnsMinimumDevicePeriod);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            IAudioClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            IAudioClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            IAudioClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventHandle )( \\r\\n            IAudioClient * This,\\r\\n            \/* [in] *\/ HANDLE eventHandle);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            IAudioClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Out_  void **ppv);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioClientVtbl;"},"IAudioClock2Vtbl":{"comment":"","exp":"","file":"Audioclient.h","line":1348,"type":"Struct","value":"typedef struct IAudioClock2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioClock2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioClock2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioClock2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDevicePosition )( \\r\\n            IAudioClock2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT64 *DevicePosition,\\r\\n            \/* [annotation][unique][out] *\/ \\r\\n            _Out_opt_  UINT64 *QPCPosition);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioClock2Vtbl;"},"IAudioClockAdjustmentVtbl":{"comment":"","exp":"","file":"Audioclient.h","line":1441,"type":"Struct","value":"typedef struct IAudioClockAdjustmentVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioClockAdjustment * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioClockAdjustment * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioClockAdjustment * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetSampleRate )( \\r\\n            IAudioClockAdjustment * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float flSampleRate);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioClockAdjustmentVtbl;"},"IAudioClockVtbl":{"comment":"","exp":"","file":"Audioclient.h","line":1237,"type":"Struct","value":"typedef struct IAudioClockVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioClock * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioClock * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioClock * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrequency )( \\r\\n            IAudioClock * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT64 *pu64Frequency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetPosition )( \\r\\n            IAudioClock * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT64 *pu64Position,\\r\\n            \/* [annotation][unique][out] *\/ \\r\\n            _Out_opt_  UINT64 *pu64QPCPosition);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( \\r\\n            IAudioClock * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwCharacteristics);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioClockVtbl;"},"IAudioDeviceEndpointVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":657,"type":"Struct","value":"typedef struct IAudioDeviceEndpointVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioDeviceEndpoint * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioDeviceEndpoint * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioDeviceEndpoint * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetBuffer )( \\r\\n            IAudioDeviceEndpoint * This,\\r\\n            \/* [in] *\/ HNSTIME MaxPeriod,\\r\\n            \/* [in] *\/ UINT32 u32LatencyCoefficient);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRTCaps )( \\r\\n            IAudioDeviceEndpoint * This,\\r\\n            \/* [out] *\/ BOOL *pbIsRTCapable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEventDrivenCapable )( \\r\\n            IAudioDeviceEndpoint * This,\\r\\n            \/* [out] *\/ BOOL *pbisEventCapable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WriteExclusiveModeParametersToSharedMemory )( \\r\\n            IAudioDeviceEndpoint * This,\\r\\n            \/* [in] *\/ UINT_PTR hTargetProcess,\\r\\n            \/* [in] *\/ HNSTIME hnsPeriod,\\r\\n            \/* [in] *\/ HNSTIME hnsBufferDuration,\\r\\n            \/* [in] *\/ UINT32 u32LatencyCoefficient,\\r\\n            \/* [out] *\/ UINT32 *pu32SharedMemorySize,\\r\\n            \/* [out] *\/ UINT_PTR *phSharedMemory);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioDeviceEndpointVtbl;"},"IAudioDeviceModulesClientVtbl":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":722,"type":"Struct","value":"typedef struct IAudioDeviceModulesClientVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioDeviceModulesClient * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioDeviceModulesClient * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioDeviceModulesClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAudioDeviceModulesManager )( \\r\\n            IAudioDeviceModulesClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IUnknown *pAudioDeviceModulesManager);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioDeviceModulesClientVtbl;"},"IAudioEndpointControlVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":1389,"type":"Struct","value":"typedef struct IAudioEndpointControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IAudioEndpointControl * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IAudioEndpointControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IAudioEndpointControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            __RPC__in IAudioEndpointControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            __RPC__in IAudioEndpointControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            __RPC__in IAudioEndpointControl * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioEndpointControlVtbl;"},"IAudioEndpointFormatControlVtbl":{"comment":"","exp":"","file":"audioendpoints.h","line":93,"type":"Struct","value":"typedef struct IAudioEndpointFormatControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioEndpointFormatControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioEndpointFormatControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioEndpointFormatControl * This);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *ResetToDefault )( \\r\\n            IAudioEndpointFormatControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD ResetFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioEndpointFormatControlVtbl;"},"IAudioEndpointLastBufferControlVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":1056,"type":"Struct","value":"typedef struct IAudioEndpointLastBufferControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioEndpointLastBufferControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioEndpointLastBufferControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioEndpointLastBufferControl * This);\\r\\n        \\r\\n        BOOL ( STDMETHODCALLTYPE *IsLastBufferControlSupported )( \\r\\n            IAudioEndpointLastBufferControl * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseOutputDataPointerForLastBuffer )( \\r\\n            IAudioEndpointLastBufferControl * This,\\r\\n            \/* [in] *\/ const APO_CONNECTION_PROPERTY *pConnectionProperty);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioEndpointLastBufferControlVtbl;"},"IAudioEndpointOffloadStreamMeterVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":966,"type":"Struct","value":"typedef struct IAudioEndpointOffloadStreamMeterVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioEndpointOffloadStreamMeter * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioEndpointOffloadStreamMeter * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioEndpointOffloadStreamMeter * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMeterChannelCount )( \\r\\n            IAudioEndpointOffloadStreamMeter * This,\\r\\n            \/* [out] *\/ UINT32 *pu32ChannelCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMeteringData )( \\r\\n            IAudioEndpointOffloadStreamMeter * This,\\r\\n            \/* [in] *\/ UINT32 u32ChannelCount,\\r\\n            \/* [out] *\/ FLOAT32 *pf32PeakValues);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioEndpointOffloadStreamMeterVtbl;"},"IAudioEndpointOffloadStreamMuteVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":875,"type":"Struct","value":"typedef struct IAudioEndpointOffloadStreamMuteVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioEndpointOffloadStreamMute * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioEndpointOffloadStreamMute * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioEndpointOffloadStreamMute * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMute )( \\r\\n            IAudioEndpointOffloadStreamMute * This,\\r\\n            \/* [in] *\/ boolean bMuted);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMute )( \\r\\n            IAudioEndpointOffloadStreamMute * This,\\r\\n            \/* [out] *\/ boolean *pbMuted);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioEndpointOffloadStreamMuteVtbl;"},"IAudioEndpointOffloadStreamVolumeVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":774,"type":"Struct","value":"typedef struct IAudioEndpointOffloadStreamVolumeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioEndpointOffloadStreamVolume * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioEndpointOffloadStreamVolume * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioEndpointOffloadStreamVolume * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetVolumeChannelCount )( \\r\\n            IAudioEndpointOffloadStreamVolume * This,\\r\\n            \/* [out] *\/ UINT32 *pu32ChannelCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetChannelVolumes )( \\r\\n            IAudioEndpointOffloadStreamVolume * This,\\r\\n            \/* [in] *\/ UINT32 u32ChannelCount,\\r\\n            \/* [in] *\/ FLOAT32 *pf32Volumes,\\r\\n            \/* [in] *\/ AUDIO_CURVE_TYPE u32CurveType,\\r\\n            \/* [in] *\/ HNSTIME *pCurveDuration);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetChannelVolumes )( \\r\\n            IAudioEndpointOffloadStreamVolume * This,\\r\\n            \/* [in] *\/ UINT32 u32ChannelCount,\\r\\n            \/* [out] *\/ FLOAT32 *pf32Volumes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioEndpointOffloadStreamVolumeVtbl;"},"IAudioEndpointRTVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":341,"type":"Struct","value":"typedef struct IAudioEndpointRTVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioEndpointRT * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioEndpointRT * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioEndpointRT * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetCurrentPadding )( \\r\\n            IAudioEndpointRT * This,\\r\\n            \/* [out] *\/ HNSTIME *pPadding,\\r\\n            \/* [out] *\/ AE_CURRENT_POSITION *pAeCurrentPosition);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ProcessingComplete )( \\r\\n            IAudioEndpointRT * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPinInactive )( \\r\\n            IAudioEndpointRT * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPinActive )( \\r\\n            IAudioEndpointRT * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioEndpointRTVtbl;"},"IAudioEndpointVolumeCallbackVtbl":{"comment":"","exp":"","file":"endpointvolume.h","line":127,"type":"Struct","value":"typedef struct IAudioEndpointVolumeCallbackVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioEndpointVolumeCallback * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioEndpointVolumeCallback * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioEndpointVolumeCallback * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnNotify )( \\r\\n            IAudioEndpointVolumeCallback * This,\\r\\n            PAUDIO_VOLUME_NOTIFICATION_DATA pNotify);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioEndpointVolumeCallbackVtbl;"},"IAudioEndpointVolumeExVtbl":{"comment":"","exp":"","file":"endpointvolume.h","line":541,"type":"Struct","value":"typedef struct IAudioEndpointVolumeExVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioEndpointVolumeEx * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioEndpointVolumeEx * This);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *RegisterControlChangeNotify )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IAudioEndpointVolumeCallback *pNotify);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *UnregisterControlChangeNotify )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IAudioEndpointVolumeCallback *pNotify);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pnChannelCount);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *SetMasterVolumeLevel )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *SetMasterVolumeLevelScalar )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevel,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetMasterVolumeLevel )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevelDB);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetMasterVolumeLevelScalar )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevel);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *SetChannelVolumeLevel )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            float fLevelDB,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *SetChannelVolumeLevelScalar )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            float fLevel,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelVolumeLevel )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevelDB);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelVolumeLevelScalar )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevel);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *SetMute )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL bMute,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetMute )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pbMute);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetVolumeStepInfo )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pnStep,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pnStepCount);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *VolumeStepUp )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *VolumeStepDown )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *QueryHardwareSupport )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwHardwareSupportMask);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetVolumeRange )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflVolumeMindB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflVolumeMaxdB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflVolumeIncrementdB);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetVolumeRangeChannel )( \\r\\n            IAudioEndpointVolumeEx * This,\\r\\n            \/* [in] *\/ UINT iChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflVolumeMindB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflVolumeMaxdB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflVolumeIncrementdB);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioEndpointVolumeExVtbl;"},"IAudioEndpointVolumeVtbl":{"comment":"","exp":"","file":"endpointvolume.h","line":291,"type":"Struct","value":"typedef struct IAudioEndpointVolumeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioEndpointVolume * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioEndpointVolume * This);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *RegisterControlChangeNotify )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IAudioEndpointVolumeCallback *pNotify);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *UnregisterControlChangeNotify )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IAudioEndpointVolumeCallback *pNotify);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pnChannelCount);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *SetMasterVolumeLevel )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *SetMasterVolumeLevelScalar )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevel,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetMasterVolumeLevel )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevelDB);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetMasterVolumeLevelScalar )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevel);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *SetChannelVolumeLevel )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            float fLevelDB,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *SetChannelVolumeLevelScalar )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            float fLevel,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelVolumeLevel )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevelDB);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelVolumeLevelScalar )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevel);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *SetMute )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL bMute,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetMute )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pbMute);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetVolumeStepInfo )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pnStep,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pnStepCount);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *VolumeStepUp )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *VolumeStepDown )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [unique][in] *\/ LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *QueryHardwareSupport )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwHardwareSupportMask);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetVolumeRange )( \\r\\n            IAudioEndpointVolume * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflVolumeMindB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflVolumeMaxdB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pflVolumeIncrementdB);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioEndpointVolumeVtbl;"},"IAudioEndpointVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":226,"type":"Struct","value":"typedef struct IAudioEndpointVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioEndpoint * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioEndpoint * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioEndpoint * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameFormat )( \\r\\n            IAudioEndpoint * This,\\r\\n            \/* [out] *\/ WAVEFORMATEX **ppFormat);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFramesPerPacket )( \\r\\n            IAudioEndpoint * This,\\r\\n            \/* [out] *\/ UINT32 *pFramesPerPacket);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLatency )( \\r\\n            IAudioEndpoint * This,\\r\\n            \/* [out] *\/ HNSTIME *pLatency);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetStreamFlags )( \\r\\n            IAudioEndpoint * This,\\r\\n            \/* [in] *\/ DWORD streamFlags);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEventHandle )( \\r\\n            IAudioEndpoint * This,\\r\\n            \/* [in] *\/ HANDLE eventHandle);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioEndpointVtbl;"},"IAudioFormatEnumeratorVtbl":{"comment":"","exp":"","file":"SpatialAudioClient.h","line":185,"type":"Struct","value":"typedef struct IAudioFormatEnumeratorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioFormatEnumerator * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioFormatEnumerator * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioFormatEnumerator * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IAudioFormatEnumerator * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *count);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFormat )( \\r\\n            IAudioFormatEnumerator * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 index,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  WAVEFORMATEX **format);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioFormatEnumeratorVtbl;"},"IAudioInputEndpointRTVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":447,"type":"Struct","value":"typedef struct IAudioInputEndpointRTVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioInputEndpointRT * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioInputEndpointRT * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioInputEndpointRT * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *GetInputDataPointer )( \\r\\n            IAudioInputEndpointRT * This,\\r\\n            \/* [out][in] *\/ APO_CONNECTION_PROPERTY *pConnectionProperty,\\r\\n            \/* [out][in] *\/ AE_CURRENT_POSITION *pAeTimeStamp);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseInputDataPointer )( \\r\\n            IAudioInputEndpointRT * This,\\r\\n            \/* [in] *\/ UINT32 u32FrameCount,\\r\\n            \/* [in] *\/ UINT_PTR pDataPointer);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *PulseEndpoint )( \\r\\n            IAudioInputEndpointRT * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioInputEndpointRTVtbl;"},"IAudioInputSelectorVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":1210,"type":"Struct","value":"typedef struct IAudioInputSelectorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioInputSelector * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioInputSelector * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioInputSelector * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetSelection )( \\r\\n            IAudioInputSelector * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pnIdSelected);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetSelection )( \\r\\n            IAudioInputSelector * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nIdSelect,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioInputSelectorVtbl;"},"IAudioLfxControlVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":1145,"type":"Struct","value":"typedef struct IAudioLfxControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioLfxControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioLfxControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioLfxControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetLocalEffectsState )( \\r\\n            IAudioLfxControl * This,\\r\\n            \/* [in] *\/ BOOL bEnabled);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLocalEffectsState )( \\r\\n            IAudioLfxControl * This,\\r\\n            \/* [out] *\/ BOOL *pbEnabled);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioLfxControlVtbl;"},"IAudioLoudnessVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":1112,"type":"Struct","value":"typedef struct IAudioLoudnessVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioLoudness * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioLoudness * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioLoudness * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetEnabled )( \\r\\n            IAudioLoudness * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pbEnabled);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetEnabled )( \\r\\n            IAudioLoudness * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL bEnable,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioLoudnessVtbl;"},"IAudioMeterInformationVtbl":{"comment":"","exp":"","file":"endpointvolume.h","line":811,"type":"Struct","value":"typedef struct IAudioMeterInformationVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioMeterInformation * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioMeterInformation * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioMeterInformation * This);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetPeakValue )( \\r\\n            IAudioMeterInformation * This,\\r\\n            \/* [out] *\/ float *pfPeak);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetMeteringChannelCount )( \\r\\n            IAudioMeterInformation * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pnChannelCount);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelsPeakValues )( \\r\\n            IAudioMeterInformation * This,\\r\\n            \/* [in] *\/ UINT32 u32ChannelCount,\\r\\n            \/* [size_is][out] *\/ float *afPeakValues);\\r\\n        \\r\\n        \/* [helpstring] *\/ HRESULT ( STDMETHODCALLTYPE *QueryHardwareSupport )( \\r\\n            IAudioMeterInformation * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwHardwareSupportMask);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioMeterInformationVtbl;"},"IAudioMidrangeVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":1631,"type":"Struct","value":"typedef struct IAudioMidrangeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioMidrange * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioMidrange * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioMidrange * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( \\r\\n            IAudioMidrange * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pcChannels);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLevelRange )( \\r\\n            IAudioMidrange * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfMinLevelDB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfMaxLevelDB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfStepping);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLevel )( \\r\\n            IAudioMidrange * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevelDB);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevel )( \\r\\n            IAudioMidrange * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevelUniform )( \\r\\n            IAudioMidrange * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevelAllChannels )( \\r\\n            IAudioMidrange * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(cChannels)  float aLevelsDB[  ],\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG cChannels,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioMidrangeVtbl;"},"IAudioMuteVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":1406,"type":"Struct","value":"typedef struct IAudioMuteVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioMute * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioMute * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioMute * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetMute )( \\r\\n            IAudioMute * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL bMuted,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetMute )( \\r\\n            IAudioMute * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pbMuted);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioMuteVtbl;"},"IAudioOutputEndpointRTVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":548,"type":"Struct","value":"typedef struct IAudioOutputEndpointRTVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioOutputEndpointRT * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioOutputEndpointRT * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioOutputEndpointRT * This);\\r\\n        \\r\\n        UINT_PTR ( STDMETHODCALLTYPE *GetOutputDataPointer )( \\r\\n            IAudioOutputEndpointRT * This,\\r\\n            \/* [in] *\/ UINT32 u32FrameCount,\\r\\n            \/* [in] *\/ AE_CURRENT_POSITION *pAeTimeStamp);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *ReleaseOutputDataPointer )( \\r\\n            IAudioOutputEndpointRT * This,\\r\\n            \/* [in] *\/ const APO_CONNECTION_PROPERTY *pConnectionProperty);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *PulseEndpoint )( \\r\\n            IAudioOutputEndpointRT * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioOutputEndpointRTVtbl;"},"IAudioOutputSelectorVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":1308,"type":"Struct","value":"typedef struct IAudioOutputSelectorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioOutputSelector * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioOutputSelector * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioOutputSelector * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetSelection )( \\r\\n            IAudioOutputSelector * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pnIdSelected);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetSelection )( \\r\\n            IAudioOutputSelector * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nIdSelect,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioOutputSelectorVtbl;"},"IAudioPeakMeterVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":2013,"type":"Struct","value":"typedef struct IAudioPeakMeterVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioPeakMeter * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioPeakMeter * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioPeakMeter * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( \\r\\n            IAudioPeakMeter * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pcChannels);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLevel )( \\r\\n            IAudioPeakMeter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevel);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioPeakMeterVtbl;"},"IAudioProcessingObjectConfigurationVtbl":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":480,"type":"Struct","value":"typedef struct IAudioProcessingObjectConfigurationVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioProcessingObjectConfiguration * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioProcessingObjectConfiguration * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioProcessingObjectConfiguration * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *LockForProcess )( \\r\\n            IAudioProcessingObjectConfiguration * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 u32NumInputConnections,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  APO_CONNECTION_DESCRIPTOR **ppInputConnections,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 u32NumOutputConnections,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  APO_CONNECTION_DESCRIPTOR **ppOutputConnections);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnlockForProcess )( \\r\\n            IAudioProcessingObjectConfiguration * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioProcessingObjectConfigurationVtbl;"},"IAudioProcessingObjectRTVtbl":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":275,"type":"Struct","value":"typedef struct IAudioProcessingObjectRTVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioProcessingObjectRT * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioProcessingObjectRT * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioProcessingObjectRT * This);\\r\\n        \\r\\n        void ( STDMETHODCALLTYPE *APOProcess )( \\r\\n            IAudioProcessingObjectRT * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 u32NumInputConnections,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  APO_CONNECTION_PROPERTY **ppInputConnections,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 u32NumOutputConnections,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  APO_CONNECTION_PROPERTY **ppOutputConnections);\\r\\n        \\r\\n        UINT32 ( STDMETHODCALLTYPE *CalcInputFrames )( \\r\\n            IAudioProcessingObjectRT * This,\\r\\n            \/* [in] *\/ UINT32 u32OutputFrameCount);\\r\\n        \\r\\n        UINT32 ( STDMETHODCALLTYPE *CalcOutputFrames )( \\r\\n            IAudioProcessingObjectRT * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 u32InputFrameCount);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioProcessingObjectRTVtbl;"},"IAudioProcessingObjectVBRVtbl":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":382,"type":"Struct","value":"typedef struct IAudioProcessingObjectVBRVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IAudioProcessingObjectVBR * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IAudioProcessingObjectVBR * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IAudioProcessingObjectVBR * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CalcMaxInputFrames )( \\r\\n            __RPC__in IAudioProcessingObjectVBR * This,\\r\\n            \/* [in] *\/ UINT32 u32MaxOutputFrameCount,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pu32InputFrameCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CalcMaxOutputFrames )( \\r\\n            __RPC__in IAudioProcessingObjectVBR * This,\\r\\n            \/* [in] *\/ UINT32 u32MaxInputFrameCount,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pu32OutputFrameCount);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioProcessingObjectVBRVtbl;"},"IAudioProcessingObjectVtbl":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":595,"type":"Struct","value":"typedef struct IAudioProcessingObjectVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IAudioProcessingObject * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IAudioProcessingObject * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IAudioProcessingObject * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            __RPC__in IAudioProcessingObject * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetLatency )( \\r\\n            __RPC__in IAudioProcessingObject * This,\\r\\n            \/* [out] *\/ __RPC__out HNSTIME *pTime);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetRegistrationProperties )( \\r\\n            __RPC__in IAudioProcessingObject * This,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt APO_REG_PROPERTIES **ppRegProps);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Initialize )( \\r\\n            __RPC__in IAudioProcessingObject * This,\\r\\n            \/* [in] *\/ UINT32 cbDataSize,\\r\\n            \/* [size_is][in] *\/ __RPC__in_ecount_full(cbDataSize) BYTE *pbyData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsInputFormatSupported )( \\r\\n            __RPC__in IAudioProcessingObject * This,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt IAudioMediaType *pOppositeFormat,\\r\\n            \/* [in] *\/ __RPC__in_opt IAudioMediaType *pRequestedInputFormat,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IAudioMediaType **ppSupportedInputFormat);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsOutputFormatSupported )( \\r\\n            __RPC__in IAudioProcessingObject * This,\\r\\n            \/* [unique][in] *\/ __RPC__in_opt IAudioMediaType *pOppositeFormat,\\r\\n            \/* [in] *\/ __RPC__in_opt IAudioMediaType *pRequestedOutputFormat,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IAudioMediaType **ppSupportedOutputFormat);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInputChannelCount )( \\r\\n            __RPC__in IAudioProcessingObject * This,\\r\\n            \/* [out] *\/ __RPC__out UINT32 *pu32ChannelCount);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioProcessingObjectVtbl;"},"IAudioRenderClientVtbl":{"comment":"","exp":"","file":"Audioclient.h","line":1002,"type":"Struct","value":"typedef struct IAudioRenderClientVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioRenderClient * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioRenderClient * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioRenderClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            IAudioRenderClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 NumFramesRequested,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_buffer_(_Inexpressible_(\"NumFramesRequested * pFormat->nBlockAlign\"))  BYTE **ppData);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReleaseBuffer )( \\r\\n            IAudioRenderClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 NumFramesWritten,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwFlags);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioRenderClientVtbl;"},"IAudioSessionControl2Vtbl":{"comment":"","exp":"","file":"audiopolicy.h","line":541,"type":"Struct","value":"typedef struct IAudioSessionControl2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioSessionControl2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioSessionControl2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetState )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  AudioSessionState *pRetVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][string][out] *\/ \\r\\n            _Out_  LPWSTR *pRetVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisplayName )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][string][in] *\/ \\r\\n            _In_  LPCWSTR Value,\\r\\n            \/* [unique][in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIconPath )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][string][out] *\/ \\r\\n            _Out_  LPWSTR *pRetVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetIconPath )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][string][in] *\/ \\r\\n            _In_  LPCWSTR Value,\\r\\n            \/* [unique][in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGroupingParam )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *pRetVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGroupingParam )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCGUID Override,\\r\\n            \/* [unique][in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterAudioSessionNotification )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IAudioSessionEvents *NewNotifications);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnregisterAudioSessionNotification )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IAudioSessionEvents *NewNotifications);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSessionIdentifier )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][string][out] *\/ \\r\\n            _Out_  LPWSTR *pRetVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSessionInstanceIdentifier )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][string][out] *\/ \\r\\n            _Out_  LPWSTR *pRetVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetProcessId )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pRetVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsSystemSoundsSession )( \\r\\n            IAudioSessionControl2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDuckingPreference )( \\r\\n            IAudioSessionControl2 * This,\\r\\n            \/* [in] *\/ BOOL optOut);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioSessionControl2Vtbl;"},"IAudioSessionControlVtbl":{"comment":"","exp":"","file":"audiopolicy.h","line":367,"type":"Struct","value":"typedef struct IAudioSessionControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioSessionControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioSessionControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioSessionControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetState )( \\r\\n            IAudioSessionControl * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  AudioSessionState *pRetVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( \\r\\n            IAudioSessionControl * This,\\r\\n            \/* [annotation][string][out] *\/ \\r\\n            _Out_  LPWSTR *pRetVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDisplayName )( \\r\\n            IAudioSessionControl * This,\\r\\n            \/* [annotation][string][in] *\/ \\r\\n            _In_  LPCWSTR Value,\\r\\n            \/* [unique][in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetIconPath )( \\r\\n            IAudioSessionControl * This,\\r\\n            \/* [annotation][string][out] *\/ \\r\\n            _Out_  LPWSTR *pRetVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetIconPath )( \\r\\n            IAudioSessionControl * This,\\r\\n            \/* [annotation][string][in] *\/ \\r\\n            _In_  LPCWSTR Value,\\r\\n            \/* [unique][in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGroupingParam )( \\r\\n            IAudioSessionControl * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *pRetVal);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGroupingParam )( \\r\\n            IAudioSessionControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCGUID Override,\\r\\n            \/* [unique][in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterAudioSessionNotification )( \\r\\n            IAudioSessionControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IAudioSessionEvents *NewNotifications);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnregisterAudioSessionNotification )( \\r\\n            IAudioSessionControl * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IAudioSessionEvents *NewNotifications);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioSessionControlVtbl;"},"IAudioSessionEnumeratorVtbl":{"comment":"","exp":"","file":"audiopolicy.h","line":1013,"type":"Struct","value":"typedef struct IAudioSessionEnumeratorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioSessionEnumerator * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioSessionEnumerator * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioSessionEnumerator * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IAudioSessionEnumerator * This,\\r\\n            \/* [out] *\/ int *SessionCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSession )( \\r\\n            IAudioSessionEnumerator * This,\\r\\n            \/* [in] *\/ int SessionCount,\\r\\n            \/* [out] *\/ IAudioSessionControl **Session);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioSessionEnumeratorVtbl;"},"IAudioSessionEventsVtbl":{"comment":"","exp":"","file":"audiopolicy.h","line":191,"type":"Struct","value":"typedef struct IAudioSessionEventsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioSessionEvents * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioSessionEvents * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioSessionEvents * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnDisplayNameChanged )( \\r\\n            IAudioSessionEvents * This,\\r\\n            \/* [annotation][string][in] *\/ \\r\\n            _In_  LPCWSTR NewDisplayName,\\r\\n            \/* [in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnIconPathChanged )( \\r\\n            IAudioSessionEvents * This,\\r\\n            \/* [annotation][string][in] *\/ \\r\\n            _In_  LPCWSTR NewIconPath,\\r\\n            \/* [in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnSimpleVolumeChanged )( \\r\\n            IAudioSessionEvents * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float NewVolume,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL NewMute,\\r\\n            \/* [in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnChannelVolumeChanged )( \\r\\n            IAudioSessionEvents * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD ChannelCount,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(ChannelCount)  float NewChannelVolumeArray[  ],\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD ChangedChannel,\\r\\n            \/* [in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnGroupingParamChanged )( \\r\\n            IAudioSessionEvents * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCGUID NewGroupingParam,\\r\\n            \/* [in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnStateChanged )( \\r\\n            IAudioSessionEvents * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AudioSessionState NewState);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnSessionDisconnected )( \\r\\n            IAudioSessionEvents * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AudioSessionDisconnectReason DisconnectReason);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioSessionEventsVtbl;"},"IAudioSessionManager2Vtbl":{"comment":"","exp":"","file":"audiopolicy.h","line":1116,"type":"Struct","value":"typedef struct IAudioSessionManager2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioSessionManager2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioSessionManager2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioSessionManager2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAudioSessionControl )( \\r\\n            IAudioSessionManager2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCGUID AudioSessionGuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD StreamFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IAudioSessionControl **SessionControl);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSimpleAudioVolume )( \\r\\n            IAudioSessionManager2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCGUID AudioSessionGuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD StreamFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  ISimpleAudioVolume **AudioVolume);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSessionEnumerator )( \\r\\n            IAudioSessionManager2 * This,\\r\\n            \/* [retval][out] *\/ IAudioSessionEnumerator **SessionEnum);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterSessionNotification )( \\r\\n            IAudioSessionManager2 * This,\\r\\n            IAudioSessionNotification *SessionNotification);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnregisterSessionNotification )( \\r\\n            IAudioSessionManager2 * This,\\r\\n            IAudioSessionNotification *SessionNotification);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *RegisterDuckNotification )( \\r\\n            IAudioSessionManager2 * This,\\r\\n            \/* [string][in] *\/ LPCWSTR sessionID,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IAudioVolumeDuckNotification *duckNotification);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *UnregisterDuckNotification )( \\r\\n            IAudioSessionManager2 * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IAudioVolumeDuckNotification *duckNotification);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioSessionManager2Vtbl;"},"IAudioSessionManagerVtbl":{"comment":"","exp":"","file":"audiopolicy.h","line":740,"type":"Struct","value":"typedef struct IAudioSessionManagerVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioSessionManager * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioSessionManager * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioSessionManager * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAudioSessionControl )( \\r\\n            IAudioSessionManager * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCGUID AudioSessionGuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD StreamFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IAudioSessionControl **SessionControl);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSimpleAudioVolume )( \\r\\n            IAudioSessionManager * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  LPCGUID AudioSessionGuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD StreamFlags,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  ISimpleAudioVolume **AudioVolume);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioSessionManagerVtbl;"},"IAudioSessionNotificationVtbl":{"comment":"","exp":"","file":"audiopolicy.h","line":929,"type":"Struct","value":"typedef struct IAudioSessionNotificationVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioSessionNotification * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioSessionNotification * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioSessionNotification * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnSessionCreated )( \\r\\n            IAudioSessionNotification * This,\\r\\n            \/* [in] *\/ IAudioSessionControl *NewSession);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioSessionNotificationVtbl;"},"IAudioStreamVolumeVtbl":{"comment":"","exp":"","file":"Audioclient.h","line":1687,"type":"Struct","value":"typedef struct IAudioStreamVolumeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioStreamVolume * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioStreamVolume * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioStreamVolume * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( \\r\\n            IAudioStreamVolume * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pdwCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetChannelVolume )( \\r\\n            IAudioStreamVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 dwIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const float fLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetChannelVolume )( \\r\\n            IAudioStreamVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAllVolumes )( \\r\\n            IAudioStreamVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 dwCount,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(dwCount)  const float *pfVolumes);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllVolumes )( \\r\\n            IAudioStreamVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 dwCount,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(dwCount)  float *pfVolumes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioStreamVolumeVtbl;"},"IAudioSystemEffects2Vtbl":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":896,"type":"Struct","value":"typedef struct IAudioSystemEffects2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioSystemEffects2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioSystemEffects2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioSystemEffects2 * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEffectsList )( \\r\\n            IAudioSystemEffects2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_buffer_maybenull_(*pcEffects)  LPGUID *ppEffectsIds,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pcEffects,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  HANDLE Event);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioSystemEffects2Vtbl;"},"IAudioSystemEffectsCustomFormatsVtbl":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":990,"type":"Struct","value":"typedef struct IAudioSystemEffectsCustomFormatsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IAudioSystemEffectsCustomFormats * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IAudioSystemEffectsCustomFormats * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IAudioSystemEffectsCustomFormats * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFormatCount )( \\r\\n            __RPC__in IAudioSystemEffectsCustomFormats * This,\\r\\n            \/* [out] *\/ __RPC__out UINT *pcFormats);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFormat )( \\r\\n            __RPC__in IAudioSystemEffectsCustomFormats * This,\\r\\n            \/* [in] *\/ UINT nFormat,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt IAudioMediaType **ppFormat);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFormatRepresentation )( \\r\\n            __RPC__in IAudioSystemEffectsCustomFormats * This,\\r\\n            \/* [in] *\/ UINT nFormat,\\r\\n            \/* [out] *\/ __RPC__deref_out_opt LPWSTR *ppwstrFormatRep);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioSystemEffectsCustomFormatsVtbl;"},"IAudioSystemEffectsVtbl":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":818,"type":"Struct","value":"typedef struct IAudioSystemEffectsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            __RPC__in IAudioSystemEffects * This,\\r\\n            \/* [in] *\/ __RPC__in REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            __RPC__in IAudioSystemEffects * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            __RPC__in IAudioSystemEffects * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioSystemEffectsVtbl;"},"IAudioTrebleVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":1768,"type":"Struct","value":"typedef struct IAudioTrebleVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioTreble * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioTreble * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioTreble * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( \\r\\n            IAudioTreble * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pcChannels);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLevelRange )( \\r\\n            IAudioTreble * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfMinLevelDB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfMaxLevelDB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfStepping);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLevel )( \\r\\n            IAudioTreble * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevelDB);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevel )( \\r\\n            IAudioTreble * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevelUniform )( \\r\\n            IAudioTreble * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevelAllChannels )( \\r\\n            IAudioTreble * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(cChannels)  float aLevelsDB[  ],\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG cChannels,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioTrebleVtbl;"},"IAudioVolumeDuckNotificationVtbl":{"comment":"","exp":"","file":"audiopolicy.h","line":841,"type":"Struct","value":"typedef struct IAudioVolumeDuckNotificationVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioVolumeDuckNotification * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioVolumeDuckNotification * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioVolumeDuckNotification * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnVolumeDuckNotification )( \\r\\n            IAudioVolumeDuckNotification * This,\\r\\n            \/* [in] *\/ LPCWSTR sessionID,\\r\\n            \/* [in] *\/ UINT32 countCommunicationSessions);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnVolumeUnduckNotification )( \\r\\n            IAudioVolumeDuckNotification * This,\\r\\n            \/* [in] *\/ LPCWSTR sessionID);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioVolumeDuckNotificationVtbl;"},"IAudioVolumeLevelVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":871,"type":"Struct","value":"typedef struct IAudioVolumeLevelVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IAudioVolumeLevel * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IAudioVolumeLevel * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IAudioVolumeLevel * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( \\r\\n            IAudioVolumeLevel * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pcChannels);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLevelRange )( \\r\\n            IAudioVolumeLevel * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfMinLevelDB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfMaxLevelDB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfStepping);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLevel )( \\r\\n            IAudioVolumeLevel * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevelDB);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevel )( \\r\\n            IAudioVolumeLevel * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevelUniform )( \\r\\n            IAudioVolumeLevel * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevelAllChannels )( \\r\\n            IAudioVolumeLevel * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(cChannels)  float aLevelsDB[  ],\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG cChannels,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IAudioVolumeLevelVtbl;"},"IChannelAudioVolumeVtbl":{"comment":"","exp":"","file":"Audioclient.h","line":2021,"type":"Struct","value":"typedef struct IChannelAudioVolumeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IChannelAudioVolume * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IChannelAudioVolume * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IChannelAudioVolume * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( \\r\\n            IChannelAudioVolume * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *pdwCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetChannelVolume )( \\r\\n            IChannelAudioVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 dwIndex,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const float fLevel,\\r\\n            \/* [unique][in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetChannelVolume )( \\r\\n            IChannelAudioVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 dwIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetAllVolumes )( \\r\\n            IChannelAudioVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 dwCount,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(dwCount)  const float *pfVolumes,\\r\\n            \/* [unique][in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAllVolumes )( \\r\\n            IChannelAudioVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 dwCount,\\r\\n            \/* [annotation][size_is][out] *\/ \\r\\n            _Out_writes_(dwCount)  float *pfVolumes);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IChannelAudioVolumeVtbl;"},"IConnectorVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":3059,"type":"Struct","value":"typedef struct IConnectorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IConnector * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IConnector * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IConnector * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetType )( \\r\\n            IConnector * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  ConnectorType *pType);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetDataFlow )( \\r\\n            IConnector * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DataFlow *pFlow);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *ConnectTo )( \\r\\n            IConnector * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IConnector *pConnectTo);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *Disconnect )( \\r\\n            IConnector * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *IsConnected )( \\r\\n            IConnector * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pbConnected);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetConnectedTo )( \\r\\n            IConnector * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IConnector **ppConTo);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetConnectorIdConnectedTo )( \\r\\n            IConnector * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *ppwstrConnectorId);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetDeviceIdConnectedTo )( \\r\\n            IConnector * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *ppwstrDeviceId);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IConnectorVtbl;"},"IControlChangeNotifyVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":3361,"type":"Struct","value":"typedef struct IControlChangeNotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IControlChangeNotify * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IControlChangeNotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IControlChangeNotify * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *OnNotify )( \\r\\n            IControlChangeNotify * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwSenderProcessId,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IControlChangeNotifyVtbl;"},"IControlInterfaceVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":3269,"type":"Struct","value":"typedef struct IControlInterfaceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IControlInterface * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IControlInterface * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IControlInterface * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetName )( \\r\\n            IControlInterface * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *ppwstrName);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetIID )( \\r\\n            IControlInterface * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *pIID);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IControlInterfaceVtbl;"},"IDeviceSpecificPropertyVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":2126,"type":"Struct","value":"typedef struct IDeviceSpecificPropertyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDeviceSpecificProperty * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDeviceSpecificProperty * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDeviceSpecificProperty * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetType )( \\r\\n            IDeviceSpecificProperty * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  VARTYPE *pVType);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetValue )( \\r\\n            IDeviceSpecificProperty * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  void *pvValue,\\r\\n            \/* [annotation][out][in] *\/ \\r\\n            _Inout_  DWORD *pcbValue);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetValue )( \\r\\n            IDeviceSpecificProperty * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  void *pvValue,\\r\\n            \/* [in] *\/ DWORD cbValue,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *Get4BRange )( \\r\\n            IDeviceSpecificProperty * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONG *plMin,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONG *plMax,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  LONG *plStepping);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDeviceSpecificPropertyVtbl;"},"IDeviceTopologyVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":3481,"type":"Struct","value":"typedef struct IDeviceTopologyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IDeviceTopology * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IDeviceTopology * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IDeviceTopology * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetConnectorCount )( \\r\\n            IDeviceTopology * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pCount);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetConnector )( \\r\\n            IDeviceTopology * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IConnector **ppConnector);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetSubunitCount )( \\r\\n            IDeviceTopology * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pCount);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetSubunit )( \\r\\n            IDeviceTopology * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  ISubunit **ppSubunit);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetPartById )( \\r\\n            IDeviceTopology * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nId,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IPart **ppPart);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetDeviceId )( \\r\\n            IDeviceTopology * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *ppwstrDeviceId);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetSignalPath )( \\r\\n            IDeviceTopology * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IPart *pIPartFrom,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IPart *pIPartTo,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL bRejectMixedPaths,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  IPartsList **ppParts);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IDeviceTopologyVtbl;"},"IHardwareAudioEngineBaseVtbl":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":1261,"type":"Struct","value":"typedef struct IHardwareAudioEngineBaseVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IHardwareAudioEngineBase * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IHardwareAudioEngineBase * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IHardwareAudioEngineBase * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAvailableOffloadConnectorCount )( \\r\\n            IHardwareAudioEngineBase * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPWSTR _pwstrDeviceId,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 _uConnectorId,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *_pAvailableConnectorInstanceCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetEngineFormat )( \\r\\n            IHardwareAudioEngineBase * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMMDevice *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL _bRequestDeviceFormat,\\r\\n            \/* [out] *\/ WAVEFORMATEX **_ppwfxFormat);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEngineDeviceFormat )( \\r\\n            IHardwareAudioEngineBase * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMMDevice *pDevice,\\r\\n            \/* [in] *\/ WAVEFORMATEX *_pwfxFormat);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGfxState )( \\r\\n            IHardwareAudioEngineBase * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMMDevice *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BOOL _bEnable);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetGfxState )( \\r\\n            IHardwareAudioEngineBase * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMMDevice *pDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *_pbEnable);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IHardwareAudioEngineBaseVtbl;"},"IKsControlVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":590,"type":"Struct","value":"typedef struct IKsControlVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IKsControl * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IKsControl * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IKsControl * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *KsProperty )( \\r\\n            IKsControl * This,\\r\\n            \/* [in] *\/ PKSPROPERTY Property,\\r\\n            \/* [in] *\/ ULONG PropertyLength,\\r\\n            \/* [out][in] *\/ void *PropertyData,\\r\\n            \/* [in] *\/ ULONG DataLength,\\r\\n            \/* [out] *\/ ULONG *BytesReturned);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *KsMethod )( \\r\\n            IKsControl * This,\\r\\n            \/* [in] *\/ PKSMETHOD Method,\\r\\n            \/* [in] *\/ ULONG MethodLength,\\r\\n            \/* [out][in] *\/ void *MethodData,\\r\\n            \/* [in] *\/ ULONG DataLength,\\r\\n            \/* [out] *\/ ULONG *BytesReturned);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *KsEvent )( \\r\\n            IKsControl * This,\\r\\n            \/* [in] *\/ PKSEVENT Event,\\r\\n            \/* [in] *\/ ULONG EventLength,\\r\\n            \/* [out][in] *\/ void *EventData,\\r\\n            \/* [in] *\/ ULONG DataLength,\\r\\n            \/* [out] *\/ ULONG *BytesReturned);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IKsControlVtbl;"},"IKsFormatSupportVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":2247,"type":"Struct","value":"typedef struct IKsFormatSupportVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IKsFormatSupport * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IKsFormatSupport * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IKsFormatSupport * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *IsFormatSupported )( \\r\\n            IKsFormatSupport * This,\\r\\n            \/* [size_is][in] *\/ PKSDATAFORMAT pKsFormat,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD cbFormat,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pbSupported);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetDevicePreferredFormat )( \\r\\n            IKsFormatSupport * This,\\r\\n            \/* [out] *\/ PKSDATAFORMAT *ppKsFormat);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IKsFormatSupportVtbl;"},"IKsJackContainerIdVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":2613,"type":"Struct","value":"typedef struct IKsJackContainerIdVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IKsJackContainerId * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IKsJackContainerId * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IKsJackContainerId * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetJackContainerId )( \\r\\n            IKsJackContainerId * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  GUID *pJackContainerId);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IKsJackContainerIdVtbl;"},"IKsJackDescription2Vtbl":{"comment":"","exp":"","file":"devicetopology.h","line":2440,"type":"Struct","value":"typedef struct IKsJackDescription2Vtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IKsJackDescription2 * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IKsJackDescription2 * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IKsJackDescription2 * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetJackCount )( \\r\\n            IKsJackDescription2 * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pcJacks);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetJackDescription2 )( \\r\\n            IKsJackDescription2 * This,\\r\\n            \/* [in] *\/ UINT nJack,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  KSJACK_DESCRIPTION2 *pDescription2);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IKsJackDescription2Vtbl;"},"IKsJackDescriptionVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":2344,"type":"Struct","value":"typedef struct IKsJackDescriptionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IKsJackDescription * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IKsJackDescription * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IKsJackDescription * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetJackCount )( \\r\\n            IKsJackDescription * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pcJacks);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetJackDescription )( \\r\\n            IKsJackDescription * This,\\r\\n            \/* [in] *\/ UINT nJack,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  KSJACK_DESCRIPTION *pDescription);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IKsJackDescriptionVtbl;"},"IKsJackSinkInformationVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":2531,"type":"Struct","value":"typedef struct IKsJackSinkInformationVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IKsJackSinkInformation * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IKsJackSinkInformation * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IKsJackSinkInformation * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetJackSinkInformation )( \\r\\n            IKsJackSinkInformation * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  KSJACK_SINK_INFORMATION *pJackSinkInformation);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IKsJackSinkInformationVtbl;"},"IMMDeviceActivatorVtbl":{"comment":"","exp":"","file":"mmdeviceapi.h","line":886,"type":"Struct","value":"typedef struct IMMDeviceActivatorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMMDeviceActivator * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMMDeviceActivator * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMMDeviceActivator * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *Activate )( \\r\\n            IMMDeviceActivator * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID iid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMMDevice *pDevice,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  PROPVARIANT *pActivationParams,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Out_  void **ppInterface);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMMDeviceActivatorVtbl;"},"IMMDeviceCollectionVtbl":{"comment":"","exp":"","file":"mmdeviceapi.h","line":543,"type":"Struct","value":"typedef struct IMMDeviceCollectionVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMMDeviceCollection * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMMDeviceCollection * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMMDeviceCollection * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IMMDeviceCollection * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pcDevices);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *Item )( \\r\\n            IMMDeviceCollection * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nDevice,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMMDevice **ppDevice);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMMDeviceCollectionVtbl;"},"IMMDeviceEnumeratorVtbl":{"comment":"","exp":"","file":"mmdeviceapi.h","line":743,"type":"Struct","value":"typedef struct IMMDeviceEnumeratorVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMMDeviceEnumerator * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMMDeviceEnumerator * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMMDeviceEnumerator * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *EnumAudioEndpoints )( \\r\\n            IMMDeviceEnumerator * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  EDataFlow dataFlow,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwStateMask,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMMDeviceCollection **ppDevices);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetDefaultAudioEndpoint )( \\r\\n            IMMDeviceEnumerator * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  EDataFlow dataFlow,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ERole role,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMMDevice **ppEndpoint);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetDevice )( \\r\\n            IMMDeviceEnumerator * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pwstrId,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IMMDevice **ppDevice);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *RegisterEndpointNotificationCallback )( \\r\\n            IMMDeviceEnumerator * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMMNotificationClient *pClient);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *UnregisterEndpointNotificationCallback )( \\r\\n            IMMDeviceEnumerator * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IMMNotificationClient *pClient);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMMDeviceEnumeratorVtbl;"},"IMMDeviceVtbl":{"comment":"","exp":"","file":"mmdeviceapi.h","line":423,"type":"Struct","value":"typedef struct IMMDeviceVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMMDevice * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMMDevice * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMMDevice * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *Activate )( \\r\\n            IMMDevice * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID iid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwClsCtx,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  PROPVARIANT *pActivationParams,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Out_  void **ppInterface);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *OpenPropertyStore )( \\r\\n            IMMDevice * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD stgmAccess,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IPropertyStore **ppProperties);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetId )( \\r\\n            IMMDevice * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *ppstrId);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetState )( \\r\\n            IMMDevice * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  DWORD *pdwState);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMMDeviceVtbl;"},"IMMEndpointVtbl":{"comment":"","exp":"","file":"mmdeviceapi.h","line":635,"type":"Struct","value":"typedef struct IMMEndpointVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMMEndpoint * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMMEndpoint * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMMEndpoint * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetDataFlow )( \\r\\n            IMMEndpoint * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  EDataFlow *pDataFlow);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMMEndpointVtbl;"},"IMMNotificationClientVtbl":{"comment":"","exp":"","file":"mmdeviceapi.h","line":281,"type":"Struct","value":"typedef struct IMMNotificationClientVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IMMNotificationClient * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IMMNotificationClient * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IMMNotificationClient * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *OnDeviceStateChanged )( \\r\\n            IMMNotificationClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pwstrDeviceId,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwNewState);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *OnDeviceAdded )( \\r\\n            IMMNotificationClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pwstrDeviceId);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *OnDeviceRemoved )( \\r\\n            IMMNotificationClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pwstrDeviceId);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *OnDefaultDeviceChanged )( \\r\\n            IMMNotificationClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  EDataFlow flow,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ERole role,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pwstrDefaultDeviceId);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *OnPropertyValueChanged )( \\r\\n            IMMNotificationClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LPCWSTR pwstrDeviceId,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const PROPERTYKEY key);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IMMNotificationClientVtbl;"},"IPartVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":2848,"type":"Struct","value":"typedef struct IPartVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IPart * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IPart * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IPart * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetName )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *ppwstrName);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLocalId )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pnId);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetGlobalId )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_  LPWSTR *ppwstrGlobalId);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetPartType )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  PartType *pPartType);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetSubType )( \\r\\n            IPart * This,\\r\\n            \/* [out] *\/ GUID *pSubType);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetControlInterfaceCount )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pCount);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetControlInterface )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IControlInterface **ppInterfaceDesc);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *EnumPartsIncoming )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IPartsList **ppParts);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *EnumPartsOutgoing )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IPartsList **ppParts);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetTopologyObject )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IDeviceTopology **ppTopology);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *Activate )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  DWORD dwClsContext,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID refiid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _Out_opt_  void **ppvObject);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *RegisterControlChangeCallback )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFGUID riid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IControlChangeNotify *pNotify);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *UnregisterControlChangeCallback )( \\r\\n            IPart * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  IControlChangeNotify *pNotify);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IPartVtbl;"},"IPartsListVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":2701,"type":"Struct","value":"typedef struct IPartsListVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IPartsList * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IPartsList * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IPartsList * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetCount )( \\r\\n            IPartsList * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pCount);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetPart )( \\r\\n            IPartsList * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nIndex,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  IPart **ppPart);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IPartsListVtbl;"},"IPerChannelDbLevelVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":735,"type":"Struct","value":"typedef struct IPerChannelDbLevelVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            IPerChannelDbLevel * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            IPerChannelDbLevel * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            IPerChannelDbLevel * This);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( \\r\\n            IPerChannelDbLevel * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT *pcChannels);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLevelRange )( \\r\\n            IPerChannelDbLevel * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfMinLevelDB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfMaxLevelDB,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfStepping);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *GetLevel )( \\r\\n            IPerChannelDbLevel * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevelDB);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevel )( \\r\\n            IPerChannelDbLevel * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT nChannel,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevelUniform )( \\r\\n            IPerChannelDbLevel * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevelDB,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        \/* [helpstring][id] *\/ HRESULT ( STDMETHODCALLTYPE *SetLevelAllChannels )( \\r\\n            IPerChannelDbLevel * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_(cChannels)  float aLevelsDB[  ],\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ULONG cChannels,\\r\\n            \/* [annotation][unique][in] *\/ \\r\\n            _In_opt_  LPCGUID pguidEventContext);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } IPerChannelDbLevelVtbl;"},"ISimpleAudioVolumeVtbl":{"comment":"","exp":"","file":"Audioclient.h","line":1546,"type":"Struct","value":"typedef struct ISimpleAudioVolumeVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISimpleAudioVolume * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISimpleAudioVolume * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISimpleAudioVolume * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMasterVolume )( \\r\\n            ISimpleAudioVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float fLevel,\\r\\n            \/* [unique][in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMasterVolume )( \\r\\n            ISimpleAudioVolume * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *pfLevel);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetMute )( \\r\\n            ISimpleAudioVolume * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const BOOL bMute,\\r\\n            \/* [unique][in] *\/ LPCGUID EventContext);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMute )( \\r\\n            ISimpleAudioVolume * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *pbMute);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISimpleAudioVolumeVtbl;"},"ISpatialAudioClientVtbl":{"comment":"","exp":"","file":"SpatialAudioClient.h","line":953,"type":"Struct","value":"typedef struct ISpatialAudioClientVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioClient * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioClient * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetStaticObjectPosition )( \\r\\n            ISpatialAudioClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AudioObjectType type,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *x,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *y,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  float *z);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetNativeStaticObjectTypeMask )( \\r\\n            ISpatialAudioClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  AudioObjectType *mask);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaxDynamicObjectCount )( \\r\\n            ISpatialAudioClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSupportedAudioObjectFormatEnumerator )( \\r\\n            ISpatialAudioClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  IAudioFormatEnumerator **enumerator);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaxFrameCount )( \\r\\n            ISpatialAudioClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *objectFormat,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *frameCountPerBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsAudioObjectFormatSupported )( \\r\\n            ISpatialAudioClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const WAVEFORMATEX *objectFormat);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsSpatialAudioStreamAvailable )( \\r\\n            ISpatialAudioClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID streamUuid,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_opt_  const PROPVARIANT *auxiliaryInfo);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateSpatialAudioStream )( \\r\\n            ISpatialAudioClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const PROPVARIANT *activationParams,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **stream);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioClientVtbl;"},"ISpatialAudioMetadataClientVtbl":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":830,"type":"Struct","value":"typedef struct ISpatialAudioMetadataClientVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioMetadataClient * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioMetadataClient * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioMetadataClient * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateSpatialAudioMetadataItems )( \\r\\n            ISpatialAudioMetadataClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT16 maxItemCount,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT16 frameCount,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_opt_result_nullonfailure_  ISpatialAudioMetadataItemsBuffer **metadataItemsBuffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_nullonfailure_  ISpatialAudioMetadataItems **metadataItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSpatialAudioMetadataItemsBufferLength )( \\r\\n            ISpatialAudioMetadataClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT16 maxItemCount,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *bufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateSpatialAudioMetadataWriter )( \\r\\n            ISpatialAudioMetadataClient * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  SpatialAudioMetadataWriterOverflowMode overflowMode,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_nullonfailure_  ISpatialAudioMetadataWriter **metadataWriter);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateSpatialAudioMetadataCopier )( \\r\\n            ISpatialAudioMetadataClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_nullonfailure_  ISpatialAudioMetadataCopier **metadataCopier);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateSpatialAudioMetadataReader )( \\r\\n            ISpatialAudioMetadataClient * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_nullonfailure_  ISpatialAudioMetadataReader **metadataReader);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioMetadataClientVtbl;"},"ISpatialAudioMetadataCopierVtbl":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":592,"type":"Struct","value":"typedef struct ISpatialAudioMetadataCopierVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioMetadataCopier * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioMetadataCopier * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioMetadataCopier * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Open )( \\r\\n            ISpatialAudioMetadataCopier * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ISpatialAudioMetadataItems *metadataItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *CopyMetadataForFrames )( \\r\\n            ISpatialAudioMetadataCopier * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT16 copyFrameCount,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  SpatialAudioMetadataCopyMode copyMode,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ISpatialAudioMetadataItems *dstMetadataItems,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT16 *itemsCopied);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            ISpatialAudioMetadataCopier * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioMetadataCopierVtbl;"},"ISpatialAudioMetadataItemsBufferVtbl":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":704,"type":"Struct","value":"typedef struct ISpatialAudioMetadataItemsBufferVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioMetadataItemsBuffer * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioMetadataItemsBuffer * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioMetadataItemsBuffer * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AttachToBuffer )( \\r\\n            ISpatialAudioMetadataItemsBuffer * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _Out_writes_bytes_(bufferLength)  BYTE *buffer,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 bufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *AttachToPopulatedBuffer )( \\r\\n            ISpatialAudioMetadataItemsBuffer * This,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _Out_writes_bytes_(bufferLength)  BYTE *buffer,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 bufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *DetachBuffer )( \\r\\n            ISpatialAudioMetadataItemsBuffer * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioMetadataItemsBufferVtbl;"},"ISpatialAudioMetadataItemsVtbl":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":214,"type":"Struct","value":"typedef struct ISpatialAudioMetadataItemsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioMetadataItems * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioMetadataItems * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioMetadataItems * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetFrameCount )( \\r\\n            ISpatialAudioMetadataItems * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT16 *frameCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetItemCount )( \\r\\n            ISpatialAudioMetadataItems * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT16 *itemCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaxItemCount )( \\r\\n            ISpatialAudioMetadataItems * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT16 *maxItemCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetMaxValueBufferLength )( \\r\\n            ISpatialAudioMetadataItems * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *maxValueBufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetInfo )( \\r\\n            ISpatialAudioMetadataItems * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  SpatialAudioMetadataItemsInfo *info);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioMetadataItemsVtbl;"},"ISpatialAudioMetadataReaderVtbl":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":468,"type":"Struct","value":"typedef struct ISpatialAudioMetadataReaderVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioMetadataReader * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioMetadataReader * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioMetadataReader * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Open )( \\r\\n            ISpatialAudioMetadataReader * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ISpatialAudioMetadataItems *metadataItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReadNextItem )( \\r\\n            ISpatialAudioMetadataReader * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT8 *commandCount,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT16 *frameOffset);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ReadNextItemCommand )( \\r\\n            ISpatialAudioMetadataReader * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BYTE *commandID,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _Out_writes_bytes_(maxValueBufferLength)  void *valueBuffer,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 maxValueBufferLength,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *valueBufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            ISpatialAudioMetadataReader * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioMetadataReaderVtbl;"},"ISpatialAudioMetadataWriterVtbl":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":342,"type":"Struct","value":"typedef struct ISpatialAudioMetadataWriterVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioMetadataWriter * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioMetadataWriter * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioMetadataWriter * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Open )( \\r\\n            ISpatialAudioMetadataWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ISpatialAudioMetadataItems *metadataItems);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WriteNextItem )( \\r\\n            ISpatialAudioMetadataWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT16 frameOffset);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WriteNextItemCommand )( \\r\\n            ISpatialAudioMetadataWriter * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BYTE commandID,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_bytes_opt_(valueBufferLength)  const void *valueBuffer,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 valueBufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Close )( \\r\\n            ISpatialAudioMetadataWriter * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioMetadataWriterVtbl;"},"ISpatialAudioObjectBaseVtbl":{"comment":"","exp":"","file":"SpatialAudioClient.h","line":291,"type":"Struct","value":"typedef struct ISpatialAudioObjectBaseVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioObjectBase * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioObjectBase * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioObjectBase * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            ISpatialAudioObjectBase * This,\\r\\n            \/* [annotation][size_is][size_is][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*bufferLength)  BYTE **buffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *bufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEndOfStream )( \\r\\n            ISpatialAudioObjectBase * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 frameCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsActive )( \\r\\n            ISpatialAudioObjectBase * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *isActive);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAudioObjectType )( \\r\\n            ISpatialAudioObjectBase * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  AudioObjectType *audioObjectType);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioObjectBaseVtbl;"},"ISpatialAudioObjectForHrtfVtbl":{"comment":"","exp":"","file":"SpatialAudioHrtf.h","line":207,"type":"Struct","value":"typedef struct ISpatialAudioObjectForHrtfVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioObjectForHrtf * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioObjectForHrtf * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioObjectForHrtf * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            ISpatialAudioObjectForHrtf * This,\\r\\n            \/* [annotation][size_is][size_is][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*bufferLength)  BYTE **buffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *bufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEndOfStream )( \\r\\n            ISpatialAudioObjectForHrtf * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 frameCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsActive )( \\r\\n            ISpatialAudioObjectForHrtf * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *isActive);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAudioObjectType )( \\r\\n            ISpatialAudioObjectForHrtf * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  AudioObjectType *audioObjectType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPosition )( \\r\\n            ISpatialAudioObjectForHrtf * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float x,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float y,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float z);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetGain )( \\r\\n            ISpatialAudioObjectForHrtf * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float gain);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetOrientation )( \\r\\n            ISpatialAudioObjectForHrtf * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  const SpatialAudioHrtfOrientation *orientation);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEnvironment )( \\r\\n            ISpatialAudioObjectForHrtf * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  SpatialAudioHrtfEnvironmentType environment);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDistanceDecay )( \\r\\n            ISpatialAudioObjectForHrtf * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  SpatialAudioHrtfDistanceDecay *distanceDecay);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetDirectivity )( \\r\\n            ISpatialAudioObjectForHrtf * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  SpatialAudioHrtfDirectivityUnion *directivity);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioObjectForHrtfVtbl;"},"ISpatialAudioObjectForMetadataCommandsVtbl":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":958,"type":"Struct","value":"typedef struct ISpatialAudioObjectForMetadataCommandsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioObjectForMetadataCommands * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioObjectForMetadataCommands * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioObjectForMetadataCommands * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            ISpatialAudioObjectForMetadataCommands * This,\\r\\n            \/* [annotation][size_is][size_is][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*bufferLength)  BYTE **buffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *bufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEndOfStream )( \\r\\n            ISpatialAudioObjectForMetadataCommands * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 frameCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsActive )( \\r\\n            ISpatialAudioObjectForMetadataCommands * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *isActive);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAudioObjectType )( \\r\\n            ISpatialAudioObjectForMetadataCommands * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  AudioObjectType *audioObjectType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *WriteNextMetadataCommand )( \\r\\n            ISpatialAudioObjectForMetadataCommands * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  BYTE commandID,\\r\\n            \/* [annotation][size_is][in] *\/ \\r\\n            _In_reads_bytes_opt_(valueBufferLength)  void *valueBuffer,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 valueBufferLength);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioObjectForMetadataCommandsVtbl;"},"ISpatialAudioObjectForMetadataItemsVtbl":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":1079,"type":"Struct","value":"typedef struct ISpatialAudioObjectForMetadataItemsVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioObjectForMetadataItems * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioObjectForMetadataItems * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioObjectForMetadataItems * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            ISpatialAudioObjectForMetadataItems * This,\\r\\n            \/* [annotation][size_is][size_is][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*bufferLength)  BYTE **buffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *bufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEndOfStream )( \\r\\n            ISpatialAudioObjectForMetadataItems * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 frameCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsActive )( \\r\\n            ISpatialAudioObjectForMetadataItems * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *isActive);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAudioObjectType )( \\r\\n            ISpatialAudioObjectForMetadataItems * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  AudioObjectType *audioObjectType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetSpatialAudioMetadataItems )( \\r\\n            ISpatialAudioObjectForMetadataItems * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Outptr_result_nullonfailure_  ISpatialAudioMetadataItems **metadataItems);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioObjectForMetadataItemsVtbl;"},"ISpatialAudioObjectRenderStreamBaseVtbl":{"comment":"","exp":"","file":"SpatialAudioClient.h","line":556,"type":"Struct","value":"typedef struct ISpatialAudioObjectRenderStreamBaseVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioObjectRenderStreamBase * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioObjectRenderStreamBase * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioObjectRenderStreamBase * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAvailableDynamicObjectCount )( \\r\\n            ISpatialAudioObjectRenderStreamBase * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            ISpatialAudioObjectRenderStreamBase * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **service);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            ISpatialAudioObjectRenderStreamBase * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            ISpatialAudioObjectRenderStreamBase * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ISpatialAudioObjectRenderStreamBase * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginUpdatingAudioObjects )( \\r\\n            ISpatialAudioObjectRenderStreamBase * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *availableDynamicObjectCount,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *frameCountPerBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndUpdatingAudioObjects )( \\r\\n            ISpatialAudioObjectRenderStreamBase * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioObjectRenderStreamBaseVtbl;"},"ISpatialAudioObjectRenderStreamForHrtfVtbl":{"comment":"","exp":"","file":"SpatialAudioHrtf.h","line":370,"type":"Struct","value":"typedef struct ISpatialAudioObjectRenderStreamForHrtfVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioObjectRenderStreamForHrtf * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioObjectRenderStreamForHrtf * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioObjectRenderStreamForHrtf * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAvailableDynamicObjectCount )( \\r\\n            ISpatialAudioObjectRenderStreamForHrtf * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            ISpatialAudioObjectRenderStreamForHrtf * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **service);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            ISpatialAudioObjectRenderStreamForHrtf * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            ISpatialAudioObjectRenderStreamForHrtf * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ISpatialAudioObjectRenderStreamForHrtf * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginUpdatingAudioObjects )( \\r\\n            ISpatialAudioObjectRenderStreamForHrtf * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *availableDynamicObjectCount,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *frameCountPerBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndUpdatingAudioObjects )( \\r\\n            ISpatialAudioObjectRenderStreamForHrtf * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateSpatialAudioObjectForHrtf )( \\r\\n            ISpatialAudioObjectRenderStreamForHrtf * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AudioObjectType type,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  ISpatialAudioObjectForHrtf **audioObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioObjectRenderStreamForHrtfVtbl;"},"ISpatialAudioObjectRenderStreamForMetadataVtbl":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":1204,"type":"Struct","value":"typedef struct ISpatialAudioObjectRenderStreamForMetadataVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAvailableDynamicObjectCount )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **service);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginUpdatingAudioObjects )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *availableDynamicObjectCount,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *frameCountPerBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndUpdatingAudioObjects )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateSpatialAudioObjectForMetadataCommands )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AudioObjectType type,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  ISpatialAudioObjectForMetadataCommands **audioObject);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateSpatialAudioObjectForMetadataItems )( \\r\\n            ISpatialAudioObjectRenderStreamForMetadata * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AudioObjectType type,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  ISpatialAudioObjectForMetadataItems **audioObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioObjectRenderStreamForMetadataVtbl;"},"ISpatialAudioObjectRenderStreamNotifyVtbl":{"comment":"","exp":"","file":"SpatialAudioClient.h","line":825,"type":"Struct","value":"typedef struct ISpatialAudioObjectRenderStreamNotifyVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioObjectRenderStreamNotify * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioObjectRenderStreamNotify * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioObjectRenderStreamNotify * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *OnAvailableDynamicObjectCountChange )( \\r\\n            ISpatialAudioObjectRenderStreamNotify * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  ISpatialAudioObjectRenderStreamBase *sender,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  LONGLONG hnsComplianceDeadlineTime,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 availableDynamicObjectCountChange);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioObjectRenderStreamNotifyVtbl;"},"ISpatialAudioObjectRenderStreamVtbl":{"comment":"","exp":"","file":"SpatialAudioClient.h","line":684,"type":"Struct","value":"typedef struct ISpatialAudioObjectRenderStreamVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioObjectRenderStream * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioObjectRenderStream * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioObjectRenderStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAvailableDynamicObjectCount )( \\r\\n            ISpatialAudioObjectRenderStream * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *value);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetService )( \\r\\n            ISpatialAudioObjectRenderStream * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **service);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Start )( \\r\\n            ISpatialAudioObjectRenderStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Stop )( \\r\\n            ISpatialAudioObjectRenderStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *Reset )( \\r\\n            ISpatialAudioObjectRenderStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *BeginUpdatingAudioObjects )( \\r\\n            ISpatialAudioObjectRenderStream * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *availableDynamicObjectCount,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *frameCountPerBuffer);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *EndUpdatingAudioObjects )( \\r\\n            ISpatialAudioObjectRenderStream * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *ActivateSpatialAudioObject )( \\r\\n            ISpatialAudioObjectRenderStream * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  AudioObjectType type,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _COM_Outptr_  ISpatialAudioObject **audioObject);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioObjectRenderStreamVtbl;"},"ISpatialAudioObjectVtbl":{"comment":"","exp":"","file":"SpatialAudioClient.h","line":407,"type":"Struct","value":"typedef struct ISpatialAudioObjectVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISpatialAudioObject * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISpatialAudioObject * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISpatialAudioObject * This);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( \\r\\n            ISpatialAudioObject * This,\\r\\n            \/* [annotation][size_is][size_is][out] *\/ \\r\\n            _Outptr_result_bytebuffer_(*bufferLength)  BYTE **buffer,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  UINT32 *bufferLength);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetEndOfStream )( \\r\\n            ISpatialAudioObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  UINT32 frameCount);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *IsActive )( \\r\\n            ISpatialAudioObject * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  BOOL *isActive);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *GetAudioObjectType )( \\r\\n            ISpatialAudioObject * This,\\r\\n            \/* [annotation][out] *\/ \\r\\n            _Out_  AudioObjectType *audioObjectType);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetPosition )( \\r\\n            ISpatialAudioObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float x,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float y,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float z);\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *SetVolume )( \\r\\n            ISpatialAudioObject * This,\\r\\n            \/* [annotation][in] *\/ \\r\\n            _In_  float volume);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISpatialAudioObjectVtbl;"},"ISubunitVtbl":{"comment":"","exp":"","file":"devicetopology.h","line":3191,"type":"Struct","value":"typedef struct ISubunitVtbl\\r\\n    {\\r\\n        BEGIN_INTERFACE\\r\\n        \\r\\n        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \\r\\n            ISubunit * This,\\r\\n            \/* [in] *\/ REFIID riid,\\r\\n            \/* [annotation][iid_is][out] *\/ \\r\\n            _COM_Outptr_  void **ppvObject);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *AddRef )( \\r\\n            ISubunit * This);\\r\\n        \\r\\n        ULONG ( STDMETHODCALLTYPE *Release )( \\r\\n            ISubunit * This);\\r\\n        \\r\\n        END_INTERFACE\\r\\n    } ISubunitVtbl;"},"MIDL_ANYSIZE_ARRAY":{"comment":"","exp":"ANYSIZE_ARRAY","file":"AudioSessionTypes.h","line":20,"type":"Integer","value":1},"MIDL_STRING":{"comment":"","exp":"[string]","file":"AudioSessionTypes.h","line":15,"type":"Unknown","value":"[string]"},"SPATIAL_AUDIO_POSITION":{"comment":"","exp":"(SPATIAL_AUDIO_STANDARD_COMMANDS_START)","file":"SpatialAudioMetadata.h","line":124,"type":"Integer","value":200},"SPATIAL_AUDIO_POSITION_BYTE_COUNT":{"comment":"\/\/ 3 (XYZ) 32-Bit Floats","exp":"(sizeof(float) * 3)","file":"SpatialAudioMetadata.h","line":125,"type":"Unknown","value":"(sizeof * 3)"},"SPATIAL_AUDIO_STANDARD_COMMANDS_START":{"comment":"\/\/ 200 and above is reserved","exp":"200","file":"SpatialAudioMetadata.h","line":123,"type":"Integer","value":200},"SPTLAUDCLNT_E_DESTROYED":{"comment":"","exp":"AUDCLNT_ERR(0x0100)","file":"SpatialAudioClient.h","line":1116,"type":"Integer","value":2290680064},"SPTLAUDCLNT_E_ERRORS_IN_OBJECT_CALLS":{"comment":"","exp":"AUDCLNT_ERR(0x0105)","file":"SpatialAudioClient.h","line":1121,"type":"Integer","value":2290680069},"SPTLAUDCLNT_E_INTERNAL":{"comment":"","exp":"AUDCLNT_ERR(0x010d)","file":"SpatialAudioClient.h","line":1128,"type":"Integer","value":2290680077},"SPTLAUDCLNT_E_INVALID_LICENSE":{"comment":"","exp":"AUDCLNT_ERR(0x0108)","file":"SpatialAudioClient.h","line":1124,"type":"Integer","value":2290680072},"SPTLAUDCLNT_E_METADATA_FORMAT_NOT_SUPPORTED":{"comment":"","exp":"AUDCLNT_ERR(0x0106)","file":"SpatialAudioClient.h","line":1122,"type":"Integer","value":2290680070},"SPTLAUDCLNT_E_NO_MORE_OBJECTS":{"comment":"","exp":"AUDCLNT_ERR(0x0103)","file":"SpatialAudioClient.h","line":1119,"type":"Integer","value":2290680067},"SPTLAUDCLNT_E_OBJECT_ALREADY_ACTIVE":{"comment":"","exp":"AUDCLNT_ERR(0x010c)","file":"SpatialAudioClient.h","line":1127,"type":"Integer","value":2290680076},"SPTLAUDCLNT_E_OUT_OF_ORDER":{"comment":"","exp":"AUDCLNT_ERR(0x0101)","file":"SpatialAudioClient.h","line":1117,"type":"Integer","value":2290680065},"SPTLAUDCLNT_E_PROPERTY_NOT_SUPPORTED":{"comment":"","exp":"AUDCLNT_ERR(0x0104)","file":"SpatialAudioClient.h","line":1120,"type":"Integer","value":2290680068},"SPTLAUDCLNT_E_RESOURCES_INVALIDATED":{"comment":"","exp":"AUDCLNT_ERR(0x0102)","file":"SpatialAudioClient.h","line":1118,"type":"Integer","value":2290680066},"SPTLAUDCLNT_E_STATIC_OBJECT_NOT_AVAILABLE":{"comment":"","exp":"AUDCLNT_ERR(0x010b)","file":"SpatialAudioClient.h","line":1126,"type":"Integer","value":2290680075},"SPTLAUDCLNT_E_STREAM_NOT_AVAILABLE":{"comment":"","exp":"AUDCLNT_ERR(0x0107)","file":"SpatialAudioClient.h","line":1123,"type":"Integer","value":2290680071},"SPTLAUDCLNT_E_STREAM_NOT_STOPPED":{"comment":"","exp":"AUDCLNT_ERR(0x010a)","file":"SpatialAudioClient.h","line":1125,"type":"Integer","value":2290680074},"SPTLAUD_MD_CLNT_E_ATTACH_FAILED_INTERNAL_BUFFER":{"comment":"","exp":"AUDCLNT_ERR(0x0214)","file":"SpatialAudioMetadata.h","line":1344,"type":"Integer","value":2290680340},"SPTLAUD_MD_CLNT_E_BUFFER_ALREADY_ATTACHED":{"comment":"","exp":"AUDCLNT_ERR(0x0207)","file":"SpatialAudioMetadata.h","line":1337,"type":"Integer","value":2290680327},"SPTLAUD_MD_CLNT_E_BUFFER_NOT_ATTACHED":{"comment":"","exp":"AUDCLNT_ERR(0x0208)","file":"SpatialAudioMetadata.h","line":1338,"type":"Integer","value":2290680328},"SPTLAUD_MD_CLNT_E_BUFFER_STILL_ATTACHED":{"comment":"","exp":"AUDCLNT_ERR(0x0224)","file":"SpatialAudioMetadata.h","line":1354,"type":"Integer","value":2290680356},"SPTLAUD_MD_CLNT_E_COMMAND_ALREADY_WRITTEN":{"comment":"","exp":"AUDCLNT_ERR(0x0222)","file":"SpatialAudioMetadata.h","line":1352,"type":"Integer","value":2290680354},"SPTLAUD_MD_CLNT_E_COMMAND_NOT_FOUND":{"comment":"","exp":"AUDCLNT_ERR(0x0200)","file":"SpatialAudioMetadata.h","line":1330,"type":"Integer","value":2290680320},"SPTLAUD_MD_CLNT_E_DETACH_FAILED_INTERNAL_BUFFER":{"comment":"","exp":"AUDCLNT_ERR(0x0215)","file":"SpatialAudioMetadata.h","line":1345,"type":"Integer","value":2290680341},"SPTLAUD_MD_CLNT_E_FORMAT_MISMATCH":{"comment":"","exp":"AUDCLNT_ERR(0x0223)","file":"SpatialAudioMetadata.h","line":1353,"type":"Integer","value":2290680355},"SPTLAUD_MD_CLNT_E_FRAMECOUNT_OUT_OF_RANGE":{"comment":"","exp":"AUDCLNT_ERR(0x0209)","file":"SpatialAudioMetadata.h","line":1339,"type":"Integer","value":2290680329},"SPTLAUD_MD_CLNT_E_FRAMEOFFSET_OUT_OF_RANGE":{"comment":"","exp":"AUDCLNT_ERR(0x0218)","file":"SpatialAudioMetadata.h","line":1348,"type":"Integer","value":2290680344},"SPTLAUD_MD_CLNT_E_INVALID_ARGS":{"comment":"","exp":"AUDCLNT_ERR(0x0202)","file":"SpatialAudioMetadata.h","line":1332,"type":"Integer","value":2290680322},"SPTLAUD_MD_CLNT_E_ITEMS_ALREADY_OPEN":{"comment":"","exp":"AUDCLNT_ERR(0x0213)","file":"SpatialAudioMetadata.h","line":1343,"type":"Integer","value":2290680339},"SPTLAUD_MD_CLNT_E_ITEMS_LOCKED_FOR_WRITING":{"comment":"","exp":"AUDCLNT_ERR(0x0225)","file":"SpatialAudioMetadata.h","line":1355,"type":"Integer","value":2290680357},"SPTLAUD_MD_CLNT_E_ITEM_COPY_OVERFLOW":{"comment":"","exp":"AUDCLNT_ERR(0x0211)","file":"SpatialAudioMetadata.h","line":1341,"type":"Integer","value":2290680337},"SPTLAUD_MD_CLNT_E_ITEM_MUST_HAVE_COMMANDS":{"comment":"","exp":"AUDCLNT_ERR(0x0219)","file":"SpatialAudioMetadata.h","line":1349,"type":"Integer","value":2290680345},"SPTLAUD_MD_CLNT_E_MEMORY_BOUNDS":{"comment":"","exp":"AUDCLNT_ERR(0x0205)","file":"SpatialAudioMetadata.h","line":1335,"type":"Integer","value":2290680325},"SPTLAUD_MD_CLNT_E_METADATA_FORMAT_NOT_FOUND":{"comment":"","exp":"AUDCLNT_ERR(0x0203)","file":"SpatialAudioMetadata.h","line":1333,"type":"Integer","value":2290680323},"SPTLAUD_MD_CLNT_E_NO_BUFFER_ATTACHED":{"comment":"","exp":"AUDCLNT_ERR(0x0216)","file":"SpatialAudioMetadata.h","line":1346,"type":"Integer","value":2290680342},"SPTLAUD_MD_CLNT_E_NO_ITEMOFFSET_WRITTEN":{"comment":"","exp":"AUDCLNT_ERR(0x0220)","file":"SpatialAudioMetadata.h","line":1350,"type":"Integer","value":2290680352},"SPTLAUD_MD_CLNT_E_NO_ITEMS_FOUND":{"comment":"","exp":"AUDCLNT_ERR(0x0210)","file":"SpatialAudioMetadata.h","line":1340,"type":"Integer","value":2290680336},"SPTLAUD_MD_CLNT_E_NO_ITEMS_OPEN":{"comment":"","exp":"AUDCLNT_ERR(0x0212)","file":"SpatialAudioMetadata.h","line":1342,"type":"Integer","value":2290680338},"SPTLAUD_MD_CLNT_E_NO_ITEMS_WRITTEN":{"comment":"","exp":"AUDCLNT_ERR(0x0221)","file":"SpatialAudioMetadata.h","line":1351,"type":"Integer","value":2290680353},"SPTLAUD_MD_CLNT_E_NO_MORE_COMMANDS":{"comment":"","exp":"AUDCLNT_ERR(0x0206)","file":"SpatialAudioMetadata.h","line":1336,"type":"Integer","value":2290680326},"SPTLAUD_MD_CLNT_E_NO_MORE_ITEMS":{"comment":"","exp":"AUDCLNT_ERR(0x0217)","file":"SpatialAudioMetadata.h","line":1347,"type":"Integer","value":2290680343},"SPTLAUD_MD_CLNT_E_OBJECT_NOT_INITIALIZED":{"comment":"","exp":"AUDCLNT_ERR(0x0201)","file":"SpatialAudioMetadata.h","line":1331,"type":"Integer","value":2290680321},"SPTLAUD_MD_CLNT_E_VALUE_BUFFER_INCORRECT_SIZE":{"comment":"","exp":"AUDCLNT_ERR(0x0204)","file":"SpatialAudioMetadata.h","line":1334,"type":"Integer","value":2290680324},"STATIC_DEVINTERFACE_AUDIOENDPOINTPLUGIN":{"comment":"","exp":"0X9F2F7B66l, 0X65AC, 0X4FA6, 0X8A, 0XE4, 0X12, 0X3C, 0X78, 0XB8, 0X93, 0X13","file":"AudioEngineEndpoint.h","line":1460,"type":"Other","value":"0X9F2F7B66l, 0X65AC, 0X4FA6, 0X8A, 0XE4, 0X12, 0X3C, 0X78, 0XB8, 0X93, 0X13"},"SpatialAudioClientActivationParams":{"comment":"","exp":"","file":"SpatialAudioClient.h","line":1106,"type":"Struct","value":"typedef struct SpatialAudioClientActivationParams\\r\\n    {\\r\\n    GUID tracingContextId;\\r\\n    GUID appId;\\r\\n    int majorVersion;\\r\\n    int minorVersion1;\\r\\n    int minorVersion2;\\r\\n    int minorVersion3;\\r\\n    } \\tSpatialAudioClientActivationParams;"},"SpatialAudioHrtfActivationParams":{"comment":"","exp":"","file":"SpatialAudioHrtf.h","line":137,"type":"Struct","value":"typedef struct SpatialAudioHrtfActivationParams\\r\\n    {\\r\\n    const WAVEFORMATEX *ObjectFormat;\\r\\n    AudioObjectType StaticObjectTypeMask;\\r\\n    UINT32 MinDynamicObjectCount;\\r\\n    UINT32 MaxDynamicObjectCount;\\r\\n    AUDIO_STREAM_CATEGORY Category;\\r\\n    HANDLE EventHandle;\\r\\n    ISpatialAudioObjectRenderStreamNotify *NotifyObject;\\r\\n    SpatialAudioHrtfDistanceDecay *DistanceDecay;\\r\\n    SpatialAudioHrtfDirectivityUnion *Directivity;\\r\\n    SpatialAudioHrtfEnvironmentType *Environment;\\r\\n    SpatialAudioHrtfOrientation *Orientation;\\r\\n    } \\tSpatialAudioHrtfActivationParams;"},"SpatialAudioHrtfDirectivity":{"comment":"","exp":"","file":"SpatialAudioHrtf.h","line":100,"type":"Struct","value":"typedef struct SpatialAudioHrtfDirectivity\\r\\n    {\\r\\n    SpatialAudioHrtfDirectivityType Type;\\r\\n    float Scaling;\\r\\n    } \\tSpatialAudioHrtfDirectivity;"},"SpatialAudioHrtfDirectivityCardioid":{"comment":"","exp":"","file":"SpatialAudioHrtf.h","line":106,"type":"Struct","value":"typedef struct SpatialAudioHrtfDirectivityCardioid\\r\\n    {\\r\\n    SpatialAudioHrtfDirectivity directivity;\\r\\n    float Order;\\r\\n    } \\tSpatialAudioHrtfDirectivityCardioid;"},"SpatialAudioHrtfDirectivityCone":{"comment":"","exp":"","file":"SpatialAudioHrtf.h","line":112,"type":"Struct","value":"typedef struct SpatialAudioHrtfDirectivityCone\\r\\n    {\\r\\n    SpatialAudioHrtfDirectivity directivity;\\r\\n    float InnerAngle;\\r\\n    float OuterAngle;\\r\\n    } \\tSpatialAudioHrtfDirectivityCone;"},"SpatialAudioHrtfDirectivityType":{"comment":"","exp":"","file":"SpatialAudioHrtf.h","line":73,"type":"Enum","value":"typedef\\r\\nenum SpatialAudioHrtfDirectivityType\\r\\n    {\\r\\n        SpatialAudioHrtfDirectivity_OmniDirectional\\t= 0,\\r\\n        SpatialAudioHrtfDirectivity_Cardioid\\t= ( SpatialAudioHrtfDirectivity_OmniDirectional + 1 ) ,\\r\\n        SpatialAudioHrtfDirectivity_Cone\\t= ( SpatialAudioHrtfDirectivity_Cardioid + 1 ) \\r\\n    } \\tSpatialAudioHrtfDirectivityType;"},"SpatialAudioHrtfDistanceDecay":{"comment":"","exp":"","file":"SpatialAudioHrtf.h","line":126,"type":"Struct","value":"typedef struct SpatialAudioHrtfDistanceDecay\\r\\n    {\\r\\n    SpatialAudioHrtfDistanceDecayType Type;\\r\\n    float MaxGain;\\r\\n    float MinGain;\\r\\n    float UnityGainDistance;\\r\\n    float CutoffDistance;\\r\\n    } \\tSpatialAudioHrtfDistanceDecay;"},"SpatialAudioHrtfDistanceDecayType":{"comment":"","exp":"","file":"SpatialAudioHrtf.h","line":91,"type":"Enum","value":"typedef\\r\\nenum SpatialAudioHrtfDistanceDecayType\\r\\n    {\\r\\n        SpatialAudioHrtfDistanceDecay_NaturalDecay\\t= 0,\\r\\n        SpatialAudioHrtfDistanceDecay_CustomDecay\\t= ( SpatialAudioHrtfDistanceDecay_NaturalDecay + 1 ) \\r\\n    } \\tSpatialAudioHrtfDistanceDecayType;"},"SpatialAudioHrtfEnvironmentType":{"comment":"","exp":"","file":"SpatialAudioHrtf.h","line":81,"type":"Enum","value":"typedef\\r\\nenum SpatialAudioHrtfEnvironmentType\\r\\n    {\\r\\n        SpatialAudioHrtfEnvironment_Small\\t= 0,\\r\\n        SpatialAudioHrtfEnvironment_Medium\\t= ( SpatialAudioHrtfEnvironment_Small + 1 ) ,\\r\\n        SpatialAudioHrtfEnvironment_Large\\t= ( SpatialAudioHrtfEnvironment_Medium + 1 ) ,\\r\\n        SpatialAudioHrtfEnvironment_Outdoors\\t= ( SpatialAudioHrtfEnvironment_Large + 1 ) ,\\r\\n        SpatialAudioHrtfEnvironment_Average\\t= ( SpatialAudioHrtfEnvironment_Outdoors + 1 ) \\r\\n    } \\tSpatialAudioHrtfEnvironmentType;"},"SpatialAudioMetadataCopyMode":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":134,"type":"Enum","value":"typedef\\r\\nenum SpatialAudioMetadataCopyMode\\r\\n    {\\r\\n        SpatialAudioMetadataCopy_Overwrite\\t= 0,\\r\\n        SpatialAudioMetadataCopy_Append\\t= ( SpatialAudioMetadataCopy_Overwrite + 1 ) ,\\r\\n        SpatialAudioMetadataCopy_AppendMergeWithLast\\t= ( SpatialAudioMetadataCopy_Append + 1 ) ,\\r\\n        SpatialAudioMetadataCopy_AppendMergeWithFirst\\t= ( SpatialAudioMetadataCopy_AppendMergeWithLast + 1 ) \\r\\n    } \\tSpatialAudioMetadataCopyMode;"},"SpatialAudioMetadataItemsInfo":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":145,"type":"Struct","value":"typedef struct SpatialAudioMetadataItemsInfo\\r\\n    {\\r\\n    UINT16 FrameCount;\\r\\n    UINT16 ItemCount;\\r\\n    UINT16 MaxItemCount;\\r\\n    UINT32 MaxValueBufferLength;\\r\\n    } \\tSpatialAudioMetadataItemsInfo;"},"SpatialAudioMetadataWriterOverflowMode":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":126,"type":"Enum","value":"typedef\\r\\nenum SpatialAudioMetadataWriterOverflowMode\\r\\n    {\\r\\n        SpatialAudioMetadataWriterOverflow_Fail\\t= 0,\\r\\n        SpatialAudioMetadataWriterOverflow_MergeWithNew\\t= ( SpatialAudioMetadataWriterOverflow_Fail + 1 ) ,\\r\\n        SpatialAudioMetadataWriterOverflow_MergeWithLast\\t= ( SpatialAudioMetadataWriterOverflow_MergeWithNew + 1 ) \\r\\n    } \\tSpatialAudioMetadataWriterOverflowMode;"},"SpatialAudioObjectRenderStreamActivationParams":{"comment":"","exp":"","file":"SpatialAudioClient.h","line":137,"type":"Struct","value":"typedef struct SpatialAudioObjectRenderStreamActivationParams\\r\\n    {\\r\\n    const WAVEFORMATEX *ObjectFormat;\\r\\n    AudioObjectType StaticObjectTypeMask;\\r\\n    UINT32 MinDynamicObjectCount;\\r\\n    UINT32 MaxDynamicObjectCount;\\r\\n    AUDIO_STREAM_CATEGORY Category;\\r\\n    HANDLE EventHandle;\\r\\n    ISpatialAudioObjectRenderStreamNotify *NotifyObject;\\r\\n    } \\tSpatialAudioObjectRenderStreamActivationParams;"},"SpatialAudioObjectRenderStreamForMetadataActivationParams":{"comment":"","exp":"","file":"SpatialAudioMetadata.h","line":153,"type":"Struct","value":"typedef struct SpatialAudioObjectRenderStreamForMetadataActivationParams\\r\\n    {\\r\\n    const WAVEFORMATEX *ObjectFormat;\\r\\n    AudioObjectType StaticObjectTypeMask;\\r\\n    UINT32 MinDynamicObjectCount;\\r\\n    UINT32 MaxDynamicObjectCount;\\r\\n    AUDIO_STREAM_CATEGORY Category;\\r\\n    HANDLE EventHandle;\\r\\n    GUID MetadataFormatId;\\r\\n    UINT16 MaxMetadataItemCount;\\r\\n    const PROPVARIANT *MetadataActivationParams;\\r\\n    ISpatialAudioObjectRenderStreamNotify *NotifyObject;\\r\\n    } \\tSpatialAudioObjectRenderStreamForMetadataActivationParams;"},"_AUDCLNT_BUFFERFLAGS":{"comment":"","exp":"","file":"Audioclient.h","line":154,"type":"Enum","value":"enum _AUDCLNT_BUFFERFLAGS\\r\\n    {\\r\\n        AUDCLNT_BUFFERFLAGS_DATA_DISCONTINUITY\\t= 0x1,\\r\\n        AUDCLNT_BUFFERFLAGS_SILENT\\t= 0x2,\\r\\n        AUDCLNT_BUFFERFLAGS_TIMESTAMP_ERROR\\t= 0x4\\r\\n    } ;"},"_AUDCLNT_SHAREMODE":{"comment":"","exp":"","file":"AudioSessionTypes.h","line":32,"type":"Enum","value":"typedef enum _AUDCLNT_SHAREMODE\\r\\n{ \\r\\n    AUDCLNT_SHAREMODE_SHARED, \\r\\n    AUDCLNT_SHAREMODE_EXCLUSIVE \\r\\n} AUDCLNT_SHAREMODE;"},"_AUDIO_STREAM_CATEGORY":{"comment":"","exp":"","file":"AudioSessionTypes.h","line":54,"type":"Enum","value":"typedef enum _AUDIO_STREAM_CATEGORY\\r\\n{\\r\\n    AudioCategory_Other = 0,\\r\\n    AudioCategory_ForegroundOnlyMedia = 1,\\r\\n#if NTDDI_VERSION < NTDDI_WINTHRESHOLD\\r\\n    AudioCategory_BackgroundCapableMedia = 2,\\r\\n#endif\\r\\n    AudioCategory_Communications = 3,\\r\\n    AudioCategory_Alerts = 4,\\r\\n    AudioCategory_SoundEffects = 5,\\r\\n    AudioCategory_GameEffects = 6,\\r\\n    AudioCategory_GameMedia = 7,\\r\\n    AudioCategory_GameChat = 8,\\r\\n    AudioCategory_Speech = 9,\\r\\n    AudioCategory_Movie = 10,\\r\\n    AudioCategory_Media = 11,\\r\\n} AUDIO_STREAM_CATEGORY;"},"_AudioSessionState":{"comment":"","exp":"","file":"AudioSessionTypes.h","line":143,"type":"Enum","value":"typedef enum _AudioSessionState\\r\\n{\\r\\n    AudioSessionStateInactive = 0,\\r\\n    AudioSessionStateActive = 1,\\r\\n    AudioSessionStateExpired = 2\\r\\n} AudioSessionState;"},"_LUID":{"comment":"","exp":"","file":"devicetopology.h","line":474,"type":"Struct","value":"typedef struct _LUID\\r\\n    {\\r\\n    DWORD LowPart;\\r\\n    LONG HighPart;\\r\\n    } \\tLUID;"},"__MIDL___MIDL_itf_audioenginebaseapo_0000_0008_0001":{"comment":"","exp":"","file":"audioenginebaseapo.h","line":1088,"type":"Struct","value":"typedef struct __MIDL___MIDL_itf_audioenginebaseapo_0000_0008_0001\\r\\n    {\\r\\n    LPARAM AddPageParam;\\r\\n    LPWSTR pwstrEndpointID;\\r\\n    IPropertyStore *pFxProperties;\\r\\n    } \\tAudioFXExtensionParams;"},"__MIDL___MIDL_itf_audioengineendpoint_0000_0000_0001":{"comment":"","exp":"","file":"AudioEngineEndpoint.h","line":145,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_audioengineendpoint_0000_0000_0001\\r\\n    {\\r\\n        eHostProcessConnector\\t= 0,\\r\\n        eOffloadConnector\\t= ( eHostProcessConnector + 1 ) ,\\r\\n        eLoopbackConnector\\t= ( eOffloadConnector + 1 ) ,\\r\\n        eKeywordDetectorConnector\\t= ( eLoopbackConnector + 1 ) ,\\r\\n        eConnectorCount\\t= ( eKeywordDetectorConnector + 1 ) \\r\\n    } \\tEndpointConnectorType;"},"__MIDL___MIDL_itf_devicetopology_0000_0000_0001":{"comment":"","exp":"","file":"devicetopology.h","line":365,"type":"Struct","value":"typedef struct __MIDL___MIDL_itf_devicetopology_0000_0000_0001\\r\\n    {\\r\\n    ULONG FormatSize;\\r\\n    ULONG Flags;\\r\\n    ULONG SampleSize;\\r\\n    ULONG Reserved;\\r\\n    GUID MajorFormat;\\r\\n    GUID SubFormat;\\r\\n    GUID Specifier;\\r\\n    } \\tKSDATAFORMAT;"},"__MIDL___MIDL_itf_devicetopology_0000_0000_0002":{"comment":"","exp":"","file":"devicetopology.h","line":378,"type":"Struct","value":"typedef struct __MIDL___MIDL_itf_devicetopology_0000_0000_0002\\r\\n    {\\r\\n    union \\r\\n        {\\r\\n        struct \\r\\n            {\\r\\n            GUID Set;\\r\\n            ULONG Id;\\r\\n            ULONG Flags;\\r\\n            } \\t;\\r\\n        LONGLONG Alignment;\\r\\n        } \\t;\\r\\n    } \\tKSIDENTIFIER;"},"__MIDL___MIDL_itf_devicetopology_0000_0000_0005":{"comment":"","exp":"","file":"devicetopology.h","line":406,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_devicetopology_0000_0000_0005\\r\\n    {\\r\\n        eConnTypeUnknown\\t= 0,\\r\\n        eConnType3Point5mm\\t= ( eConnTypeUnknown + 1 ) ,\\r\\n        eConnTypeQuarter\\t= ( eConnType3Point5mm + 1 ) ,\\r\\n        eConnTypeAtapiInternal\\t= ( eConnTypeQuarter + 1 ) ,\\r\\n        eConnTypeRCA\\t= ( eConnTypeAtapiInternal + 1 ) ,\\r\\n        eConnTypeOptical\\t= ( eConnTypeRCA + 1 ) ,\\r\\n        eConnTypeOtherDigital\\t= ( eConnTypeOptical + 1 ) ,\\r\\n        eConnTypeOtherAnalog\\t= ( eConnTypeOtherDigital + 1 ) ,\\r\\n        eConnTypeMultichannelAnalogDIN\\t= ( eConnTypeOtherAnalog + 1 ) ,\\r\\n        eConnTypeXlrProfessional\\t= ( eConnTypeMultichannelAnalogDIN + 1 ) ,\\r\\n        eConnTypeRJ11Modem\\t= ( eConnTypeXlrProfessional + 1 ) ,\\r\\n        eConnTypeCombination\\t= ( eConnTypeRJ11Modem + 1 ) \\r\\n    } \\tEPcxConnectionType;"},"__MIDL___MIDL_itf_devicetopology_0000_0000_0006":{"comment":"","exp":"","file":"devicetopology.h","line":423,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_devicetopology_0000_0000_0006\\r\\n    {\\r\\n        eGeoLocRear\\t= 0x1,\\r\\n        eGeoLocFront\\t= ( eGeoLocRear + 1 ) ,\\r\\n        eGeoLocLeft\\t= ( eGeoLocFront + 1 ) ,\\r\\n        eGeoLocRight\\t= ( eGeoLocLeft + 1 ) ,\\r\\n        eGeoLocTop\\t= ( eGeoLocRight + 1 ) ,\\r\\n        eGeoLocBottom\\t= ( eGeoLocTop + 1 ) ,\\r\\n        eGeoLocRearPanel\\t= ( eGeoLocBottom + 1 ) ,\\r\\n        eGeoLocRiser\\t= ( eGeoLocRearPanel + 1 ) ,\\r\\n        eGeoLocInsideMobileLid\\t= ( eGeoLocRiser + 1 ) ,\\r\\n        eGeoLocDrivebay\\t= ( eGeoLocInsideMobileLid + 1 ) ,\\r\\n        eGeoLocHDMI\\t= ( eGeoLocDrivebay + 1 ) ,\\r\\n        eGeoLocOutsideMobileLid\\t= ( eGeoLocHDMI + 1 ) ,\\r\\n        eGeoLocATAPI\\t= ( eGeoLocOutsideMobileLid + 1 ) ,\\r\\n        eGeoLocNotApplicable\\t= ( eGeoLocATAPI + 1 ) ,\\r\\n        eGeoLocReserved6\\t= ( eGeoLocNotApplicable + 1 ) \\r\\n    } \\tEPcxGeoLocation;"},"__MIDL___MIDL_itf_devicetopology_0000_0000_0007":{"comment":"","exp":"","file":"devicetopology.h","line":443,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_devicetopology_0000_0000_0007\\r\\n    {\\r\\n        eGenLocPrimaryBox\\t= 0,\\r\\n        eGenLocInternal\\t= ( eGenLocPrimaryBox + 1 ) ,\\r\\n        eGenLocSeparate\\t= ( eGenLocInternal + 1 ) ,\\r\\n        eGenLocOther\\t= ( eGenLocSeparate + 1 ) \\r\\n    } \\tEPcxGenLocation;"},"__MIDL___MIDL_itf_devicetopology_0000_0000_0008":{"comment":"","exp":"","file":"devicetopology.h","line":452,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_devicetopology_0000_0000_0008\\r\\n    {\\r\\n        ePortConnJack\\t= 0,\\r\\n        ePortConnIntegratedDevice\\t= ( ePortConnJack + 1 ) ,\\r\\n        ePortConnBothIntegratedAndJack\\t= ( ePortConnIntegratedDevice + 1 ) ,\\r\\n        ePortConnUnknown\\t= ( ePortConnBothIntegratedAndJack + 1 ) \\r\\n    } \\tEPxcPortConnection;"},"__MIDL___MIDL_itf_devicetopology_0000_0000_0009":{"comment":"","exp":"","file":"devicetopology.h","line":461,"type":"Struct","value":"typedef struct __MIDL___MIDL_itf_devicetopology_0000_0000_0009\\r\\n    {\\r\\n    DWORD ChannelMapping;\\r\\n    COLORREF Color;\\r\\n    EPcxConnectionType ConnectionType;\\r\\n    EPcxGeoLocation GeoLocation;\\r\\n    EPcxGenLocation GenLocation;\\r\\n    EPxcPortConnection PortConnection;\\r\\n    BOOL IsConnected;\\r\\n    } \\tKSJACK_DESCRIPTION;"},"__MIDL___MIDL_itf_devicetopology_0000_0000_0010":{"comment":"","exp":"","file":"devicetopology.h","line":482,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_devicetopology_0000_0000_0010\\r\\n    {\\r\\n        KSJACK_SINK_CONNECTIONTYPE_HDMI\\t= 0,\\r\\n        KSJACK_SINK_CONNECTIONTYPE_DISPLAYPORT\\t= ( KSJACK_SINK_CONNECTIONTYPE_HDMI + 1 ) \\r\\n    } \\tKSJACK_SINK_CONNECTIONTYPE;"},"__MIDL___MIDL_itf_devicetopology_0000_0000_0011":{"comment":"","exp":"","file":"devicetopology.h","line":519,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_devicetopology_0000_0000_0011\\r\\n    {\\r\\n        In\\t= 0,\\r\\n        Out\\t= ( In + 1 ) \\r\\n    } \\tDataFlow;"},"__MIDL___MIDL_itf_devicetopology_0000_0000_0012":{"comment":"","exp":"","file":"devicetopology.h","line":526,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_devicetopology_0000_0000_0012\\r\\n    {\\r\\n        Connector\\t= 0,\\r\\n        Subunit\\t= ( Connector + 1 ) \\r\\n    } \\tPartType;"},"__MIDL___MIDL_itf_devicetopology_0000_0000_0013":{"comment":"","exp":"","file":"devicetopology.h","line":533,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_devicetopology_0000_0000_0013\\r\\n    {\\r\\n        Unknown_Connector\\t= 0,\\r\\n        Physical_Internal\\t= ( Unknown_Connector + 1 ) ,\\r\\n        Physical_External\\t= ( Physical_Internal + 1 ) ,\\r\\n        Software_IO\\t= ( Physical_External + 1 ) ,\\r\\n        Software_Fixed\\t= ( Software_IO + 1 ) ,\\r\\n        Network\\t= ( Software_Fixed + 1 ) \\r\\n    } \\tConnectorType;"},"__MIDL___MIDL_itf_mmdeviceapi_0000_0000_0001":{"comment":"","exp":"","file":"mmdeviceapi.h","line":169,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0001\\r\\n    {\\r\\n        eRender\\t= 0,\\r\\n        eCapture\\t= ( eRender + 1 ) ,\\r\\n        eAll\\t= ( eCapture + 1 ) ,\\r\\n        EDataFlow_enum_count\\t= ( eAll + 1 ) \\r\\n    } \\tEDataFlow;"},"__MIDL___MIDL_itf_mmdeviceapi_0000_0000_0002":{"comment":"","exp":"","file":"mmdeviceapi.h","line":178,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0002\\r\\n    {\\r\\n        eConsole\\t= 0,\\r\\n        eMultimedia\\t= ( eConsole + 1 ) ,\\r\\n        eCommunications\\t= ( eMultimedia + 1 ) ,\\r\\n        ERole_enum_count\\t= ( eCommunications + 1 ) \\r\\n    } \\tERole;"},"__MIDL___MIDL_itf_mmdeviceapi_0000_0000_0003":{"comment":"","exp":"","file":"mmdeviceapi.h","line":187,"type":"Enum","value":"typedef\\r\\nenum __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0003\\r\\n    {\\r\\n        RemoteNetworkDevice\\t= 0,\\r\\n        Speakers\\t= ( RemoteNetworkDevice + 1 ) ,\\r\\n        LineLevel\\t= ( Speakers + 1 ) ,\\r\\n        Headphones\\t= ( LineLevel + 1 ) ,\\r\\n        Microphone\\t= ( Headphones + 1 ) ,\\r\\n        Headset\\t= ( Microphone + 1 ) ,\\r\\n        Handset\\t= ( Headset + 1 ) ,\\r\\n        UnknownDigitalPassthrough\\t= ( Handset + 1 ) ,\\r\\n        SPDIF\\t= ( UnknownDigitalPassthrough + 1 ) ,\\r\\n        DigitalAudioDisplayDevice\\t= ( SPDIF + 1 ) ,\\r\\n        UnknownFormFactor\\t= ( DigitalAudioDisplayDevice + 1 ) ,\\r\\n        EndpointFormFactor_enum_count\\t= ( UnknownFormFactor + 1 ) \\r\\n    } \\tEndpointFormFactor;"},"__MIDL___MIDL_itf_mmdeviceapi_0000_0008_0001":{"comment":"","exp":"","file":"mmdeviceapi.h","line":1156,"type":"Struct","value":"typedef struct __MIDL___MIDL_itf_mmdeviceapi_0000_0008_0001\\r\\n    {\\r\\n    LPARAM AddPageParam;\\r\\n    IMMDevice *pEndpoint;\\r\\n    IMMDevice *pPnpInterface;\\r\\n    IMMDevice *pPnpDevnode;\\r\\n    } \\tAudioExtensionParams;"},"__REQUIRED_RPCNDR_H_VERSION__":{"comment":"","exp":"500","file":"Audioclient.h","line":13,"type":"Integer","value":500},"__REQUIRED_RPCSAL_H_VERSION__":{"comment":"","exp":"100","file":"Audioclient.h","line":18,"type":"Integer","value":100},"_tagKSJACK_DESCRIPTION2":{"comment":"","exp":"","file":"devicetopology.h","line":502,"type":"Struct","value":"typedef struct _tagKSJACK_DESCRIPTION2\\r\\n    {\\r\\n    DWORD DeviceStateInfo;\\r\\n    DWORD JackCapabilities;\\r\\n    } \\tKSJACK_DESCRIPTION2;"},"_tagKSJACK_SINK_INFORMATION":{"comment":"","exp":"","file":"devicetopology.h","line":489,"type":"Struct","value":"typedef struct _tagKSJACK_SINK_INFORMATION\\r\\n    {\\r\\n    KSJACK_SINK_CONNECTIONTYPE ConnType;\\r\\n    WORD ManufacturerId;\\r\\n    WORD ProductId;\\r\\n    WORD AudioLatency;\\r\\n    BOOL HDCPCapable;\\r\\n    BOOL AICapable;\\r\\n    UCHAR SinkDescriptionLength;\\r\\n    WCHAR SinkDescription[ 32 ];\\r\\n    LUID PortId;\\r\\n    } \\tKSJACK_SINK_INFORMATION;"},"tagDIRECTX_AUDIO_ACTIVATION_PARAMS":{"comment":"","exp":"","file":"mmdeviceapi.h","line":159,"type":"Struct","value":"typedef struct tagDIRECTX_AUDIO_ACTIVATION_PARAMS\\r\\n    {\\r\\n    DWORD cbDirectXAudioActivationParams;\\r\\n    GUID guidAudioSession;\\r\\n    DWORD dwAudioStreamFlags;\\r\\n    } \\tDIRECTX_AUDIO_ACTIVATION_PARAMS;"}},"__includes_list":{"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|AudioEngineEndpoint.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["oaidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OAIdl.h"],["ocidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OCIdl.h"],["propidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\PropIdl.h"],["audioapotypes.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\AudioAPOTypes.h"],["mmreg.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\mmreg.h"],["mmdeviceapi.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mmdeviceapi.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|AudioSessionTypes.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|Audioclient.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["wtypes.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\wtypes.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["mmreg.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\mmreg.h"],["AudioSessionTypes.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\AudioSessionTypes.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["ks.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ks.h"],["ksmedia.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ksmedia.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|SpatialAudioClient.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["wtypes.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\wtypes.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["hstring.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\winrt\\hstring.h"],["AudioClient.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Audioclient.h"],["propsys.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\propsys.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|SpatialAudioHrtf.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["wtypes.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\wtypes.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["hstring.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\winrt\\hstring.h"],["SpatialAudioClient.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\SpatialAudioClient.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|SpatialAudioMetadata.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["wtypes.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\wtypes.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["hstring.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\winrt\\hstring.h"],["propidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\PropIdl.h"],["SpatialAudioClient.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\SpatialAudioClient.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|audioendpoints.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|audioenginebaseapo.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["oaidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OAIdl.h"],["ocidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OCIdl.h"],["mmdeviceapi.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\mmdeviceapi.h"],["audiomediatype.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\audiomediatype.h"],["AudioAPOTypes.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\AudioAPOTypes.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|audiopolicy.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["oaidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OAIdl.h"],["ocidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OCIdl.h"],["propidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\PropIdl.h"],["AudioSessionTypes.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\AudioSessionTypes.h"],["AudioClient.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Audioclient.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|devicetopology.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["oaidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OAIdl.h"],["ocidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OCIdl.h"],["propidl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\PropIdl.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["ks.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ks.h"],["ksmedia.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\ksmedia.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|endpointvolume.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["devicetopology.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\devicetopology.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|mmdeviceapi.h":[["rpc.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpc.h"],["rpcndr.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\rpcndr.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["unknwn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Unknwn.h"],["propsys.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\propsys.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]]}}