{"__const_list":{"CLFSUSER_API":{"comment":"","exp":"__declspec(dllimport)","file":"clfs.h","line":39,"type":"Unknown","value":"__declspec(dllimport)"},"CLFS_BASELOG_EXTENSION":{"comment":"","exp":"L\".blf\"","file":"clfs.h","line":95,"type":"String","value":"L\".blf\""},"CLFS_CONTAINER_RELATIVE_PREFIX":{"comment":"","exp":"L\"%BLF%\\\\\"","file":"clfs.h","line":296,"type":"String","value":"L\"%BLF%\\\\\""},"CLFS_CONTAINER_STREAM_PREFIX":{"comment":"","exp":"L\"%BLF%:\"","file":"clfs.h","line":277,"type":"String","value":"L\"%BLF%:\""},"CLFS_FLAG_FILTER_INTERMEDIATE_LEVEL":{"comment":"","exp":"CLFS_FLAG_NON_REENTRANT_FILTER","file":"clfs.h","line":123,"type":"Integer","value":16},"CLFS_FLAG_FILTER_TOP_LEVEL":{"comment":"","exp":"CLFS_FLAG_REENTRANT_FILTER","file":"clfs.h","line":129,"type":"Integer","value":32},"CLFS_FLAG_FORCE_APPEND":{"comment":"\/\/ Flag to force an append to log queue","exp":"0x00000001","file":"clfs.h","line":102,"type":"Integer","value":1},"CLFS_FLAG_FORCE_FLUSH":{"comment":"\/\/ Flag to force a log flush","exp":"0x00000002","file":"clfs.h","line":103,"type":"Integer","value":2},"CLFS_FLAG_HIDDEN_SYSTEM_LOG":{"comment":"\/\/ Kernel mode create flag indicating the log and containers should be marked hidden & system.","exp":"0x00000200","file":"clfs.h","line":111,"type":"Integer","value":512},"CLFS_FLAG_IGNORE_SHARE_ACCESS":{"comment":"\/\/ Kernel mode create flag indicating IO_IGNORE_SHARE_ACCESS_CHECK semantics.","exp":"0x00000040","file":"clfs.h","line":108,"type":"Integer","value":64},"CLFS_FLAG_MINIFILTER_LEVEL":{"comment":"\/\/ Kernel mode create flag indicating mini-filter target.","exp":"0x00000100","file":"clfs.h","line":110,"type":"Integer","value":256},"CLFS_FLAG_NON_REENTRANT_FILTER":{"comment":"\/\/ Kernel mode create flag indicating non-reentrant filter.","exp":"0x00000010","file":"clfs.h","line":106,"type":"Integer","value":16},"CLFS_FLAG_NO_FLAGS":{"comment":"\/\/ No flags.","exp":"0x00000000","file":"clfs.h","line":101,"type":"Integer","value":0},"CLFS_FLAG_READ_IN_PROGRESS":{"comment":"\/\/ Flag indicating read in progress and not completed.","exp":"0x00000080","file":"clfs.h","line":109,"type":"Integer","value":128},"CLFS_FLAG_REENTRANT_FILE_SYSTEM":{"comment":"\/\/ Kernel mode create flag indicating a re-entrant file system.","exp":"0x00000008","file":"clfs.h","line":105,"type":"Integer","value":8},"CLFS_FLAG_REENTRANT_FILTER":{"comment":"\/\/ Kernel mode create flag indicating reentrant filter.","exp":"0x00000020","file":"clfs.h","line":107,"type":"Integer","value":32},"CLFS_FLAG_USE_RESERVATION":{"comment":"\/\/ Flag to charge a data append to reservation","exp":"0x00000004","file":"clfs.h","line":104,"type":"Integer","value":4},"CLFS_LOG_SIZE_MAXIMUM":{"comment":"","exp":"((ULONGLONG)(-1))","file":"clfsmgmt.h","line":73,"type":"Integer","value":-1},"CLFS_LOG_SIZE_MINIMUM":{"comment":"","exp":"((ULONGLONG)(0))","file":"clfsmgmt.h","line":72,"type":"Integer","value":0},"CLFS_MARSHALLING_FLAG_DISABLE_BUFF_INIT":{"comment":"\/\/ Flag to disable mashalling buffer intialization","exp":"0x00000001","file":"clfs.h","line":117,"type":"Integer","value":1},"CLFS_MARSHALLING_FLAG_NONE":{"comment":"\/\/ No flags","exp":"0x00000000","file":"clfs.h","line":116,"type":"Integer","value":0},"CLFS_MAX_CONTAINER_INFO":{"comment":"","exp":"(256)","file":"clfs.h","line":578,"type":"Integer","value":256},"CLFS_MGMT_CLIENT_REGISTRATION_VERSION":{"comment":"","exp":"(0x1)","file":"clfsmgmt.h","line":358,"type":"Integer","value":1},"CLFS_MGMT_NUM_POLICIES":{"comment":"","exp":"((ULONG)ClfsMgmtPolicyInvalid)","file":"clfsmgmt.h","line":64,"type":"Unknown","value":"(ClfsMgmtPolicyInvalid)"},"CLFS_MGMT_POLICY_VERSION":{"comment":"","exp":"(0x01)","file":"clfsmgmt.h","line":81,"type":"Integer","value":1},"CLFS_SCAN_BACKWARD":{"comment":"","exp":"0x04","file":"clfs.h","line":748,"type":"Integer","value":4},"CLFS_SCAN_BUFFERED":{"comment":"","exp":"0x20","file":"clfs.h","line":751,"type":"Integer","value":32},"CLFS_SCAN_CLOSE":{"comment":"","exp":"0x08","file":"clfs.h","line":749,"type":"Integer","value":8},"CLFS_SCAN_FORWARD":{"comment":"","exp":"0x02","file":"clfs.h","line":747,"type":"Integer","value":2},"CLFS_SCAN_INIT":{"comment":"","exp":"0x01","file":"clfs.h","line":746,"type":"Integer","value":1},"CLFS_SCAN_INITIALIZED":{"comment":"","exp":"0x10","file":"clfs.h","line":750,"type":"Integer","value":16},"CREATE_ALWAYS":{"comment":"","exp":"2","file":"fileapi.h","line":32,"type":"Integer","value":2},"CREATE_NEW":{"comment":"","exp":"1","file":"fileapi.h","line":31,"type":"Integer","value":1},"CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO":{"comment":"","exp":"0x00000002","file":"ktmtypes.h","line":70,"type":"Integer","value":2},"CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY":{"comment":"","exp":"0x00000001","file":"ktmtypes.h","line":69,"type":"Integer","value":1},"CRM_PROTOCOL_MAXIMUM_OPTION":{"comment":"","exp":"0x00000003","file":"ktmtypes.h","line":71,"type":"Integer","value":3},"CSC_CACHE_AUTO_REINT":{"comment":"\/\/ File by file reintegration is OK","exp":"0x0010","file":"LMShare.h","line":364,"type":"Integer","value":16},"CSC_CACHE_MANUAL_REINT":{"comment":"\/\/ No automatic file by file reintegration","exp":"0x0000","file":"LMShare.h","line":363,"type":"Integer","value":0},"CSC_CACHE_NONE":{"comment":"\/\/ no CSC for this share","exp":"0x0030","file":"LMShare.h","line":366,"type":"Integer","value":48},"CSC_CACHE_VDO":{"comment":"\/\/ no need to flow opens","exp":"0x0020","file":"LMShare.h","line":365,"type":"Integer","value":32},"CSC_MASK":{"comment":"\/\/ Used to mask off the following states","exp":"0x0030","file":"LMShare.h","line":361,"type":"Integer","value":48},"CSC_MASK_EXT":{"comment":"\/\/ Used to mask off the following states (including SHI1005_FLAGS_ENABLE_HASH)","exp":"0x2030","file":"LMShare.h","line":360,"type":"Integer","value":8240},"ClfsClientRecord":{"comment":"","exp":"(ClfsDataRecord|ClfsRestartRecord)","file":"clfs.h","line":259,"type":"Integer","value":3},"ClfsContainerActive":{"comment":"","exp":"0x04","file":"clfs.h","line":556,"type":"Integer","value":4},"ClfsContainerActivePendingDelete":{"comment":"","exp":"0x08","file":"clfs.h","line":557,"type":"Integer","value":8},"ClfsContainerInactive":{"comment":"","exp":"0x02","file":"clfs.h","line":555,"type":"Integer","value":2},"ClfsContainerInitializing":{"comment":"","exp":"0x01","file":"clfs.h","line":554,"type":"Integer","value":1},"ClfsContainerPendingArchive":{"comment":"","exp":"0x10","file":"clfs.h","line":558,"type":"Integer","value":16},"ClfsContainerPendingArchiveAndDelete":{"comment":"","exp":"0x20","file":"clfs.h","line":559,"type":"Integer","value":32},"ClfsDataRecord":{"comment":"\/\/ Client data record.","exp":"0x01","file":"clfs.h","line":253,"type":"Integer","value":1},"ClfsNullRecord":{"comment":"\/\/ Null record type.","exp":"0x00","file":"clfs.h","line":252,"type":"Integer","value":0},"ClfsRestartRecord":{"comment":"\/\/ Restart record.","exp":"0x02","file":"clfs.h","line":254,"type":"Integer","value":2},"ClsContainerActive":{"comment":"","exp":"0x04","file":"clfs.h","line":549,"type":"Integer","value":4},"ClsContainerActivePendingDelete":{"comment":"","exp":"0x08","file":"clfs.h","line":550,"type":"Integer","value":8},"ClsContainerInactive":{"comment":"","exp":"0x02","file":"clfs.h","line":548,"type":"Integer","value":2},"ClsContainerInitializing":{"comment":"","exp":"0x01","file":"clfs.h","line":547,"type":"Integer","value":1},"ClsContainerPendingArchive":{"comment":"","exp":"0x10","file":"clfs.h","line":551,"type":"Integer","value":16},"ClsContainerPendingArchiveAndDelete":{"comment":"","exp":"0x20","file":"clfs.h","line":552,"type":"Integer","value":32},"CreateDirectory":{"comment":"","dupe":[{"comment":"","exp":"CreateDirectoryA","file":"fileapi.h","line":69,"type":"Other","value":"CreateDirectoryA"}],"exp":"CreateDirectoryW","file":"fileapi.h","line":67,"type":"Other","value":"CreateDirectoryW"},"CreateFile":{"comment":"","dupe":[{"comment":"","exp":"CreateFileA","file":"fileapi.h","line":107,"type":"Other","value":"CreateFileA"}],"exp":"CreateFileW","file":"fileapi.h","line":105,"type":"Other","value":"CreateFileW"},"CreateNtmsMedia":{"comment":"","dupe":[{"comment":"","exp":"CreateNtmsMediaA","file":"NTMSAPI.h","line":84,"type":"Other","value":"CreateNtmsMediaA"}],"exp":"CreateNtmsMediaW","file":"NTMSAPI.h","line":69,"type":"Other","value":"CreateNtmsMediaW"},"CreateNtmsMediaPool":{"comment":"","dupe":[{"comment":"","exp":"CreateNtmsMediaPoolA","file":"NTMSAPI.h","line":77,"type":"Other","value":"CreateNtmsMediaPoolA"}],"exp":"CreateNtmsMediaPoolW","file":"NTMSAPI.h","line":62,"type":"Other","value":"CreateNtmsMediaPoolW"},"DISKQUOTA_FILESTATE_INCOMPLETE":{"comment":"","exp":"0x00000100","file":"DskQuota.h","line":76,"type":"Integer","value":256},"DISKQUOTA_FILESTATE_MASK":{"comment":"","exp":"0x00000300","file":"DskQuota.h","line":78,"type":"Integer","value":768},"DISKQUOTA_FILESTATE_REBUILDING":{"comment":"","exp":"0x00000200","file":"DskQuota.h","line":77,"type":"Integer","value":512},"DISKQUOTA_LOGFLAG_USER_LIMIT":{"comment":"","exp":"0x00000002","file":"DskQuota.h","line":115,"type":"Integer","value":2},"DISKQUOTA_LOGFLAG_USER_THRESHOLD":{"comment":"","exp":"0x00000001","file":"DskQuota.h","line":114,"type":"Integer","value":1},"DISKQUOTA_STATE_DISABLED":{"comment":"","exp":"0x00000000","file":"DskQuota.h","line":72,"type":"Integer","value":0},"DISKQUOTA_STATE_ENFORCE":{"comment":"","exp":"0x00000002","file":"DskQuota.h","line":74,"type":"Integer","value":2},"DISKQUOTA_STATE_MASK":{"comment":"","exp":"0x00000003","file":"DskQuota.h","line":75,"type":"Integer","value":3},"DISKQUOTA_STATE_TRACK":{"comment":"","exp":"0x00000001","file":"DskQuota.h","line":73,"type":"Integer","value":1},"DISKQUOTA_USERNAME_RESOLVE_ASYNC":{"comment":"","exp":"2","file":"DskQuota.h","line":155,"type":"Integer","value":2},"DISKQUOTA_USERNAME_RESOLVE_NONE":{"comment":"","exp":"0","file":"DskQuota.h","line":153,"type":"Integer","value":0},"DISKQUOTA_USERNAME_RESOLVE_SYNC":{"comment":"","exp":"1","file":"DskQuota.h","line":154,"type":"Integer","value":1},"DISKQUOTA_USER_ACCOUNT_DELETED":{"comment":"","exp":"2","file":"DskQuota.h","line":162,"type":"Integer","value":2},"DISKQUOTA_USER_ACCOUNT_INVALID":{"comment":"","exp":"3","file":"DskQuota.h","line":163,"type":"Integer","value":3},"DISKQUOTA_USER_ACCOUNT_RESOLVED":{"comment":"","exp":"0","file":"DskQuota.h","line":160,"type":"Integer","value":0},"DISKQUOTA_USER_ACCOUNT_UNAVAILABLE":{"comment":"","exp":"1","file":"DskQuota.h","line":161,"type":"Integer","value":1},"DISKQUOTA_USER_ACCOUNT_UNKNOWN":{"comment":"","exp":"4","file":"DskQuota.h","line":164,"type":"Integer","value":4},"DISKQUOTA_USER_ACCOUNT_UNRESOLVED":{"comment":"","exp":"5","file":"DskQuota.h","line":165,"type":"Integer","value":5},"DISK_SPACE_INFORMATION":{"comment":"","exp":"","file":"fileapi.h","line":466,"type":"Struct","value":"typedef struct DISK_SPACE_INFORMATION {\\r\\n    \/\/\\r\\n    \/\/  AllocationUnits are actually file system clusters.\\r\\n    \/\/  AllocationUnits * SectorsPerAllocationUnit * BytesPerSector\\r\\n    \/\/  will get you the sizes in bytes.\\r\\n    \/\/\\r\\n    \/\/\\r\\n    \/\/  The Actual*AllocationUnits are volume sizes without considering Quota\\r\\n    \/\/  setting.\\r\\n    \/\/  ActualPoolUnavailableAllocationUnits is the unavailable space for the\\r\\n    \/\/  volume due to insufficient free pool space (PoolAvailableAllocationUnits).\\r\\n    \/\/  Be aware AllocationUnits are mesured in clusters, see comments at the beginning.\\r\\n    \/\/\\r\\n    \/\/  ActualTotalAllocationUnits = ActualAvailableAllocationUnits +\\r\\n    \/\/                               ActualPoolUnavailableAllocationUnits +\\r\\n    \/\/                               UsedAllocationUnits +\\r\\n    \/\/                               TotalReservedAllocationUnits\\r\\n    \/\/\\r\\n    ULONGLONG ActualTotalAllocationUnits;\\r\\n    ULONGLONG ActualAvailableAllocationUnits;\\r\\n    ULONGLONG ActualPoolUnavailableAllocationUnits;\\r\\n    \/\/\\r\\n    \/\/  The Caller*AllocationUnits are limited by Quota setting.\\r\\n    \/\/  CallerAvailableAllocationUnits is the unavailable space for the\\r\\n    \/\/  volume due to insufficient free pool space (PoolAvailableAllocationUnits).\\r\\n    \/\/  Be aware AllocationUnits are mesured in clusters, see comments at the beginning.\\r\\n    \/\/\\r\\n    \/\/  CallerTotalAllocationUnits = CallerAvailableAllocationUnits +\\r\\n    \/\/                               CallerPoolUnavailableAllocationUnits +\\r\\n    \/\/                               UsedAllocationUnits +\\r\\n    \/\/                               TotalReservedAllocationUnits\\r\\n    \/\/\\r\\n    ULONGLONG CallerTotalAllocationUnits;\\r\\n    ULONGLONG CallerAvailableAllocationUnits;\\r\\n    ULONGLONG CallerPoolUnavailableAllocationUnits;\\r\\n    \/\/\\r\\n    \/\/  The used space (in clusters) of the volume.\\r\\n    \/\/\\r\\n    ULONGLONG UsedAllocationUnits;\\r\\n    \/\/\\r\\n    \/\/  Total reserved space (in clusters).\\r\\n    \/\/\\r\\n    ULONGLONG TotalReservedAllocationUnits;\\r\\n    \/\/\\r\\n    \/\/  A special type of reserved space (in clusters) for per-volume storage\\r\\n    \/\/  reserve and this is included in the above TotalReservedAllocationUnits.\\r\\n    \/\/\\r\\n    ULONGLONG VolumeStorageReserveAllocationUnits;\\r\\n    \/\/\\r\\n    \/\/  This refers to the space (in clusters) that has been committed by\\r\\n    \/\/  storage pool but has not been allocated by file system.\\r\\n    \/\/\\r\\n    \/\/  s1 = (ActualTotalAllocationUnits - UsedAllocationUnits - TotalReservedAllocationUnits)\\r\\n    \/\/  s2 = (AvailableCommittedAllocationUnits + PoolAvailableAllocationUnits)\\r\\n    \/\/  ActualAvailableAllocationUnits = min( s1, s2 )\\r\\n    \/\/\\r\\n    \/\/  When s1 >= s2, ActualPoolUnavailableAllocationUnits = 0\\r\\n    \/\/  When s1 < s2, ActualPoolUnavailableAllocationUnits = s2 - s1.\\r\\n    \/\/\\r\\n    ULONGLONG AvailableCommittedAllocationUnits;\\r\\n    \/\/\\r\\n    \/\/  Available space (in clusters) in corresponding storage pool. If the volume\\r\\n    \/\/  is not a spaces volume, the PoolAvailableAllocationUnits is set to zero.\\r\\n    \/\/\\r\\n    ULONGLONG PoolAvailableAllocationUnits;\\r\\n    DWORD SectorsPerAllocationUnit;\\r\\n    DWORD BytesPerSector;\\r\\n} DISK_SPACE_INFORMATION;"},"DefineDosDevice":{"comment":"","exp":"DefineDosDeviceW","file":"fileapi.h","line":127,"type":"Other","value":"DefineDosDeviceW"},"DeleteFile":{"comment":"","dupe":[{"comment":"","exp":"DeleteFileA","file":"fileapi.h","line":153,"type":"Other","value":"DeleteFileA"}],"exp":"DeleteFileW","file":"fileapi.h","line":151,"type":"Other","value":"DeleteFileW"},"DeleteVolumeMountPoint":{"comment":"","exp":"DeleteVolumeMountPointW","file":"fileapi.h","line":171,"type":"Other","value":"DeleteVolumeMountPointW"},"DiskQuotaUserInformation":{"comment":"","exp":"","file":"DskQuota.h","line":138,"type":"Struct","value":"typedef struct DiskQuotaUserInformation {\\r\\n    LONGLONG QuotaUsed;\\r\\n    LONGLONG QuotaThreshold;\\r\\n    LONGLONG QuotaLimit;\\r\\n} DISKQUOTA_USER_INFORMATION, *PDISKQUOTA_USER_INFORMATION;"},"EA_CONTAINER_NAME":{"comment":"","exp":"\"ContainerName\"","file":"clfs.h","line":88,"type":"String","value":"\"ContainerName\""},"EA_CONTAINER_SIZE":{"comment":"","exp":"\"ContainerSize\"","file":"clfs.h","line":89,"type":"String","value":"\"ContainerSize\""},"EFS_COMPATIBILITY_VERSION_NCRYPT_PROTECTOR":{"comment":"","exp":"5","file":"winefs.h","line":172,"type":"Integer","value":5},"EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR":{"comment":"","exp":"6","file":"winefs.h","line":178,"type":"Integer","value":6},"EFS_EFS_SUBVER_EFS_CERT":{"comment":"","exp":"1","file":"winefs.h","line":186,"type":"Integer","value":1},"EFS_METADATA_ADD_USER":{"comment":"","exp":"0x00000001","file":"winefs.h","line":275,"type":"Integer","value":1},"EFS_METADATA_GENERAL_OP":{"comment":"","exp":"0x00000008","file":"winefs.h","line":278,"type":"Integer","value":8},"EFS_METADATA_REMOVE_USER":{"comment":"","exp":"0x00000002","file":"winefs.h","line":276,"type":"Integer","value":2},"EFS_METADATA_REPLACE_USER":{"comment":"","exp":"0x00000004","file":"winefs.h","line":277,"type":"Integer","value":4},"EFS_PFILE_SUBVER_APPX":{"comment":"","exp":"3","file":"winefs.h","line":189,"type":"Integer","value":3},"EFS_PFILE_SUBVER_RMS":{"comment":"","exp":"2","file":"winefs.h","line":188,"type":"Integer","value":2},"EFS_SUBVER_UNKNOWN":{"comment":"","exp":"0","file":"winefs.h","line":184,"type":"Integer","value":0},"ENLISTMENT_MAXIMUM_OPTION":{"comment":"","exp":"0x00000001","file":"ktmtypes.h","line":79,"type":"Integer","value":1},"ENLISTMENT_OBJECT_NAME_LENGTH_IN_BYTES":{"comment":"","exp":"(sizeof(ENLISTMENT_OBJECT_PATH)+(38*sizeof(WCHAR)))","file":"ktmtypes.h","line":133,"type":"String","value":"(sizeof(ENLISTMENT_OBJECT_PATH)+(38*sizeof(WCHAR)))"},"ENLISTMENT_OBJECT_PATH":{"comment":"","exp":"L\"\\\\Enlistment\\\\\"","file":"ktmtypes.h","line":123,"type":"String","value":"L\"\\\\Enlistment\\\\\""},"ENLISTMENT_SUPERIOR":{"comment":"","exp":"0x00000001","file":"ktmtypes.h","line":78,"type":"Integer","value":1},"EjectDiskFromSADrive":{"comment":"","dupe":[{"comment":"","exp":"EjectDiskFromSADriveA","file":"NTMSAPI.h","line":85,"type":"Other","value":"EjectDiskFromSADriveA"}],"exp":"EjectDiskFromSADriveW","file":"NTMSAPI.h","line":70,"type":"Other","value":"EjectDiskFromSADriveW"},"FILE_ATTRIBUTE_DEDICATED":{"comment":"","exp":"FILE_ATTRIBUTE_TEMPORARY","file":"clfs.h","line":82,"type":"Integer","value":256},"FILE_PROVIDER_COMPRESSION_LZX":{"comment":"","exp":"(0x00000001)","file":"wofapi.h","line":206,"type":"Integer","value":1},"FILE_PROVIDER_COMPRESSION_XPRESS16K":{"comment":"","exp":"(0x00000003)","file":"wofapi.h","line":208,"type":"Integer","value":3},"FILE_PROVIDER_COMPRESSION_XPRESS4K":{"comment":"","exp":"(0x00000000)","file":"wofapi.h","line":205,"type":"Integer","value":0},"FILE_PROVIDER_COMPRESSION_XPRESS8K":{"comment":"","exp":"(0x00000002)","file":"wofapi.h","line":207,"type":"Integer","value":2},"FindFirstChangeNotification":{"comment":"","dupe":[{"comment":"","exp":"FindFirstChangeNotificationA","file":"fileapi.h","line":239,"type":"Other","value":"FindFirstChangeNotificationA"}],"exp":"FindFirstChangeNotificationW","file":"fileapi.h","line":237,"type":"Other","value":"FindFirstChangeNotificationW"},"FindFirstFile":{"comment":"","dupe":[{"comment":"","exp":"FindFirstFileA","file":"fileapi.h","line":267,"type":"Other","value":"FindFirstFileA"}],"exp":"FindFirstFileW","file":"fileapi.h","line":265,"type":"Other","value":"FindFirstFileW"},"FindFirstFileEx":{"comment":"","dupe":[{"comment":"","exp":"FindFirstFileExA","file":"fileapi.h","line":299,"type":"Other","value":"FindFirstFileExA"}],"exp":"FindFirstFileExW","file":"fileapi.h","line":297,"type":"Other","value":"FindFirstFileExW"},"FindFirstVolume":{"comment":"","exp":"FindFirstVolumeW","file":"fileapi.h","line":320,"type":"Other","value":"FindFirstVolumeW"},"FindNextFile":{"comment":"","dupe":[{"comment":"","exp":"FindNextFileA","file":"fileapi.h","line":356,"type":"Other","value":"FindNextFileA"}],"exp":"FindNextFileW","file":"fileapi.h","line":354,"type":"Other","value":"FindNextFileW"},"FindNextVolume":{"comment":"","exp":"FindNextVolumeW","file":"fileapi.h","line":376,"type":"Other","value":"FindNextVolumeW"},"GetCompressedFileSize":{"comment":"","dupe":[{"comment":"","exp":"GetCompressedFileSizeA","file":"fileapi.h","line":1349,"type":"Other","value":"GetCompressedFileSizeA"}],"exp":"GetCompressedFileSizeW","file":"fileapi.h","line":1347,"type":"Other","value":"GetCompressedFileSizeW"},"GetDiskFreeSpace":{"comment":"","dupe":[{"comment":"","exp":"GetDiskFreeSpaceA","file":"fileapi.h","line":426,"type":"Other","value":"GetDiskFreeSpaceA"}],"exp":"GetDiskFreeSpaceW","file":"fileapi.h","line":424,"type":"Other","value":"GetDiskFreeSpaceW"},"GetDiskFreeSpaceEx":{"comment":"","dupe":[{"comment":"","exp":"GetDiskFreeSpaceExA","file":"fileapi.h","line":452,"type":"Other","value":"GetDiskFreeSpaceExA"}],"exp":"GetDiskFreeSpaceExW","file":"fileapi.h","line":450,"type":"Other","value":"GetDiskFreeSpaceExW"},"GetDiskSpaceInformation":{"comment":"","dupe":[{"comment":"","exp":"GetDiskSpaceInformationA","file":"fileapi.h","line":571,"type":"Other","value":"GetDiskSpaceInformationA"}],"exp":"GetDiskSpaceInformationW","file":"fileapi.h","line":569,"type":"Other","value":"GetDiskSpaceInformationW"},"GetDriveType":{"comment":"","dupe":[{"comment":"","exp":"GetDriveTypeA","file":"fileapi.h","line":597,"type":"Other","value":"GetDriveTypeA"}],"exp":"GetDriveTypeW","file":"fileapi.h","line":595,"type":"Other","value":"GetDriveTypeW"},"GetExpandedName":{"comment":"","dupe":[{"comment":"","exp":"GetExpandedNameA","file":"lzexpand.h","line":110,"type":"Other","value":"GetExpandedNameA"}],"exp":"GetExpandedNameW","file":"lzexpand.h","line":108,"type":"Other","value":"GetExpandedNameW"},"GetFileAttributes":{"comment":"","dupe":[{"comment":"","exp":"GetFileAttributesA","file":"fileapi.h","line":626,"type":"Other","value":"GetFileAttributesA"}],"exp":"GetFileAttributesW","file":"fileapi.h","line":624,"type":"Other","value":"GetFileAttributesW"},"GetFileAttributesEx":{"comment":"","dupe":[{"comment":"","exp":"GetFileAttributesExA","file":"fileapi.h","line":650,"type":"Other","value":"GetFileAttributesExA"}],"exp":"GetFileAttributesExW","file":"fileapi.h","line":648,"type":"Other","value":"GetFileAttributesExW"},"GetFinalPathNameByHandle":{"comment":"","dupe":[{"comment":"","exp":"GetFinalPathNameByHandleA","file":"fileapi.h","line":738,"type":"Other","value":"GetFinalPathNameByHandleA"}],"exp":"GetFinalPathNameByHandleW","file":"fileapi.h","line":736,"type":"Other","value":"GetFinalPathNameByHandleW"},"GetFullPathName":{"comment":"","dupe":[{"comment":"","exp":"GetFullPathNameA","file":"fileapi.h","line":783,"type":"Other","value":"GetFullPathNameA"}],"exp":"GetFullPathNameW","file":"fileapi.h","line":767,"type":"Other","value":"GetFullPathNameW"},"GetLogicalDriveStrings":{"comment":"","exp":"GetLogicalDriveStringsW","file":"fileapi.h","line":810,"type":"Other","value":"GetLogicalDriveStringsW"},"GetLongPathName":{"comment":"","dupe":[{"comment":"","exp":"GetLongPathNameW","file":"fileapi.h","line":846,"type":"Other","value":"GetLongPathNameW"}],"exp":"GetLongPathNameA","file":"fileapi.h","line":831,"type":"Other","value":"GetLongPathNameA"},"GetNtmsDeviceName":{"comment":"","dupe":[{"comment":"","exp":"GetNtmsDeviceNameA","file":"NTMSAPI.h","line":74,"type":"Other","value":"GetNtmsDeviceNameA"}],"exp":"GetNtmsDeviceNameW","file":"NTMSAPI.h","line":59,"type":"Other","value":"GetNtmsDeviceNameW"},"GetNtmsMediaPoolName":{"comment":"","dupe":[{"comment":"","exp":"GetNtmsMediaPoolNameA","file":"NTMSAPI.h","line":78,"type":"Other","value":"GetNtmsMediaPoolNameA"}],"exp":"GetNtmsMediaPoolNameW","file":"NTMSAPI.h","line":63,"type":"Other","value":"GetNtmsMediaPoolNameW"},"GetNtmsObjectAttribute":{"comment":"","dupe":[{"comment":"","exp":"GetNtmsObjectAttributeA","file":"NTMSAPI.h","line":79,"type":"Other","value":"GetNtmsObjectAttributeA"}],"exp":"GetNtmsObjectAttributeW","file":"NTMSAPI.h","line":64,"type":"Other","value":"GetNtmsObjectAttributeW"},"GetNtmsObjectInformation":{"comment":"","dupe":[{"comment":"","exp":"GetNtmsObjectInformationA","file":"NTMSAPI.h","line":75,"type":"Other","value":"GetNtmsObjectInformationA"}],"exp":"GetNtmsObjectInformationW","file":"NTMSAPI.h","line":60,"type":"Other","value":"GetNtmsObjectInformationW"},"GetNtmsUIOptions":{"comment":"","dupe":[{"comment":"","exp":"GetNtmsUIOptionsA","file":"NTMSAPI.h","line":81,"type":"Other","value":"GetNtmsUIOptionsA"}],"exp":"GetNtmsUIOptionsW","file":"NTMSAPI.h","line":66,"type":"Other","value":"GetNtmsUIOptionsW"},"GetShortPathName":{"comment":"","exp":"GetShortPathNameW","file":"fileapi.h","line":867,"type":"Other","value":"GetShortPathNameW"},"GetSystemWow64Directory":{"comment":"","dupe":[{"comment":"","exp":"GetSystemWow64DirectoryA","file":"wow64apiset.h","line":103,"type":"Other","value":"GetSystemWow64DirectoryA"}],"exp":"GetSystemWow64DirectoryW","file":"wow64apiset.h","line":101,"type":"Other","value":"GetSystemWow64DirectoryW"},"GetSystemWow64Directory2":{"comment":"","dupe":[{"comment":"","exp":"GetSystemWow64Directory2A","file":"wow64apiset.h","line":174,"type":"Other","value":"GetSystemWow64Directory2A"}],"exp":"GetSystemWow64Directory2W","file":"wow64apiset.h","line":172,"type":"Other","value":"GetSystemWow64Directory2W"},"GetTempFileName":{"comment":"","dupe":[{"comment":"","exp":"GetTempFileNameA","file":"fileapi.h","line":1499,"type":"Other","value":"GetTempFileNameA"}],"exp":"GetTempFileNameW","file":"fileapi.h","line":888,"type":"Other","value":"GetTempFileNameW"},"GetTempPath":{"comment":"","dupe":[{"comment":"","exp":"GetTempPathA","file":"fileapi.h","line":1422,"type":"Other","value":"GetTempPathA"}],"exp":"GetTempPathW","file":"fileapi.h","line":1229,"type":"Other","value":"GetTempPathW"},"GetVolumeInformation":{"comment":"","dupe":[{"comment":"","exp":"GetVolumeInformationA","file":"fileapi.h","line":1478,"type":"Other","value":"GetVolumeInformationA"}],"exp":"GetVolumeInformationW","file":"fileapi.h","line":932,"type":"Other","value":"GetVolumeInformationW"},"GetVolumeNameForVolumeMountPoint":{"comment":"","exp":"GetVolumeNameForVolumeMountPointW","file":"fileapi.h","line":1249,"type":"Other","value":"GetVolumeNameForVolumeMountPointW"},"GetVolumePathName":{"comment":"","exp":"GetVolumePathNameW","file":"fileapi.h","line":946,"type":"Other","value":"GetVolumePathNameW"},"GetVolumePathNamesForVolumeName":{"comment":"","exp":"GetVolumePathNamesForVolumeNameW","file":"fileapi.h","line":1272,"type":"Other","value":"GetVolumePathNamesForVolumeNameW"},"GetVolumesFromDrive":{"comment":"","dupe":[{"comment":"","exp":"GetVolumesFromDriveA","file":"NTMSAPI.h","line":86,"type":"Other","value":"GetVolumesFromDriveA"}],"exp":"GetVolumesFromDriveW","file":"NTMSAPI.h","line":71,"type":"Other","value":"GetVolumesFromDriveW"},"INTERFACE":{"comment":"","dupe":[{"comment":"","exp":"IEnumDiskQuotaUsers","file":"DskQuota.h","line":244,"type":"Unknown","value":"IEnumDiskQuotaUsers"},{"comment":"","exp":"IDiskQuotaUserBatch","file":"DskQuota.h","line":269,"type":"Unknown","value":"IDiskQuotaUserBatch"},{"comment":"","exp":"IDiskQuotaControl","file":"DskQuota.h","line":291,"type":"Unknown","value":"IDiskQuotaControl"},{"comment":"","exp":"IDiskQuotaEvents","file":"DskQuota.h","line":374,"type":"Unknown","value":"IDiskQuotaEvents"}],"exp":"IDiskQuotaUser","file":"DskQuota.h","line":174,"type":"Unknown","value":"IDiskQuotaUser"},"INVALID_FILE_ATTRIBUTES":{"comment":"","exp":"((DWORD)-1)","file":"fileapi.h","line":39,"type":"Integer","value":-1},"INVALID_FILE_SIZE":{"comment":"","exp":"((DWORD)0xFFFFFFFF)","file":"fileapi.h","line":37,"type":"Integer","value":4294967295},"INVALID_SET_FILE_POINTER":{"comment":"","exp":"((DWORD)-1)","file":"fileapi.h","line":38,"type":"Integer","value":-1},"KTM_MARSHAL_BLOB_VERSION_MAJOR":{"comment":"","exp":"1","file":"ktmtypes.h","line":177,"type":"Integer","value":1},"KTM_MARSHAL_BLOB_VERSION_MINOR":{"comment":"","exp":"1","file":"ktmtypes.h","line":178,"type":"Integer","value":1},"LOG_POLICY_OVERWRITE":{"comment":"","exp":"(0x01)","file":"clfsmgmt.h","line":95,"type":"Integer","value":1},"LOG_POLICY_PERSIST":{"comment":"","exp":"(0x02)","file":"clfsmgmt.h","line":96,"type":"Integer","value":2},"LPNTMS_OBJECTINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"LPNTMS_OBJECTINFORMATIONA","file":"NTMSAPI.h","line":1018,"type":"Other","value":"LPNTMS_OBJECTINFORMATIONA"}],"exp":"LPNTMS_OBJECTINFORMATIONW","file":"NTMSAPI.h","line":1014,"type":"Other","value":"LPNTMS_OBJECTINFORMATIONW"},"LZERROR_BADINHANDLE":{"comment":"\/* invalid input handle *\/","exp":"(-1)","file":"lzexpand.h","line":36,"type":"Integer","value":-1},"LZERROR_BADOUTHANDLE":{"comment":"\/* invalid output handle *\/","exp":"(-2)","file":"lzexpand.h","line":37,"type":"Integer","value":-2},"LZERROR_BADVALUE":{"comment":"\/* input parameter out of acceptable range*\/","exp":"(-7)","file":"lzexpand.h","line":42,"type":"Integer","value":-7},"LZERROR_GLOBALLOC":{"comment":"\/* insufficient memory for LZFile struct *\/","exp":"(-5)","file":"lzexpand.h","line":40,"type":"Integer","value":-5},"LZERROR_GLOBLOCK":{"comment":"\/* bad global handle *\/","exp":"(-6)","file":"lzexpand.h","line":41,"type":"Integer","value":-6},"LZERROR_READ":{"comment":"\/* corrupt compressed file format *\/","exp":"(-3)","file":"lzexpand.h","line":38,"type":"Integer","value":-3},"LZERROR_UNKNOWNALG":{"comment":"\/* compression algorithm not recognized *\/","exp":"(-8)","file":"lzexpand.h","line":43,"type":"Integer","value":-8},"LZERROR_WRITE":{"comment":"\/* out of space for output file *\/","exp":"(-4)","file":"lzexpand.h","line":39,"type":"Integer","value":-4},"LZOpenFile":{"comment":"","dupe":[{"comment":"","exp":"LZOpenFileA","file":"lzexpand.h","line":134,"type":"Other","value":"LZOpenFileA"}],"exp":"LZOpenFileW","file":"lzexpand.h","line":132,"type":"Other","value":"LZOpenFileW"},"MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH":{"comment":"","exp":"64","file":"ktmtypes.h","line":181,"type":"Integer","value":64},"MAX_SID_SIZE":{"comment":"","exp":"256","file":"winefs.h","line":233,"type":"Integer","value":256},"MAX_TRANSACTION_DESCRIPTION_LENGTH":{"comment":"","exp":"64","file":"ktmtypes.h","line":180,"type":"Integer","value":64},"NTMSMLI_MAXAPPDESCR":{"comment":"","exp":"256","file":"NTMSMli.h","line":38,"type":"Integer","value":256},"NTMSMLI_MAXIDSIZE":{"comment":"","exp":"256","file":"NTMSMli.h","line":37,"type":"Integer","value":256},"NTMSMLI_MAXTYPE":{"comment":"","exp":"64","file":"NTMSMli.h","line":36,"type":"Integer","value":64},"NTMS_APPLICATIONNAME_LENGTH":{"comment":"","exp":"64","file":"NTMSAPI.h","line":435,"type":"Integer","value":64},"NTMS_BARCODE_LENGTH":{"comment":"","exp":"64","file":"NTMSAPI.h","line":430,"type":"Integer","value":64},"NTMS_CHANGERINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_CHANGERINFORMATIONA","file":"NTMSAPI.h","line":562,"type":"Other","value":"NTMS_CHANGERINFORMATIONA"}],"exp":"NTMS_CHANGERINFORMATIONW","file":"NTMSAPI.h","line":559,"type":"Other","value":"NTMS_CHANGERINFORMATIONW"},"NTMS_CHANGERTYPEINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_CHANGERTYPEINFORMATIONA","file":"NTMSAPI.h","line":822,"type":"Other","value":"NTMS_CHANGERTYPEINFORMATIONA"}],"exp":"NTMS_CHANGERTYPEINFORMATIONW","file":"NTMSAPI.h","line":819,"type":"Other","value":"NTMS_CHANGERTYPEINFORMATIONW"},"NTMS_COMPUTERNAME_LENGTH":{"comment":"","exp":"64","file":"NTMSAPI.h","line":436,"type":"Integer","value":64},"NTMS_DESCRIPTION_LENGTH":{"comment":"","exp":"127","file":"NTMSAPI.h","line":426,"type":"Integer","value":127},"NTMS_DEVICENAME_LENGTH":{"comment":"","exp":"64","file":"NTMSAPI.h","line":427,"type":"Integer","value":64},"NTMS_DRIVEINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_DRIVEINFORMATIONA","file":"NTMSAPI.h","line":464,"type":"Other","value":"NTMS_DRIVEINFORMATIONA"}],"exp":"NTMS_DRIVEINFORMATIONW","file":"NTMSAPI.h","line":461,"type":"Other","value":"NTMS_DRIVEINFORMATIONW"},"NTMS_DRIVETYPEINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_DRIVETYPEINFORMATIONA","file":"NTMSAPI.h","line":800,"type":"Other","value":"NTMS_DRIVETYPEINFORMATIONA"}],"exp":"NTMS_DRIVETYPEINFORMATIONW","file":"NTMSAPI.h","line":797,"type":"Other","value":"NTMS_DRIVETYPEINFORMATIONW"},"NTMS_GENERIC_ALL":{"comment":"","exp":"(NTMS_USE_ACCESS | NTMS_MODIFY_ACCESS | NTMS_CONTROL_ACCESS)","file":"NTMSAPI.h","line":1690,"type":"Integer","value":7},"NTMS_GENERIC_EXECUTE":{"comment":"","exp":"(NTMS_USE_ACCESS | NTMS_MODIFY_ACCESS | NTMS_CONTROL_ACCESS)","file":"NTMSAPI.h","line":1689,"type":"Integer","value":7},"NTMS_GENERIC_READ":{"comment":"","exp":"NTMS_USE_ACCESS","file":"NTMSAPI.h","line":1687,"type":"Integer","value":1},"NTMS_GENERIC_WRITE":{"comment":"","exp":"(NTMS_USE_ACCESS | NTMS_MODIFY_ACCESS)","file":"NTMSAPI.h","line":1688,"type":"Integer","value":3},"NTMS_I1_LIBREQUESTINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_I1_LIBREQUESTINFORMATIONA","file":"NTMSAPI.h","line":1147,"type":"Other","value":"NTMS_I1_LIBREQUESTINFORMATIONA"}],"exp":"NTMS_I1_LIBREQUESTINFORMATIONW","file":"NTMSAPI.h","line":1141,"type":"Other","value":"NTMS_I1_LIBREQUESTINFORMATIONW"},"NTMS_I1_MESSAGE_LENGTH":{"comment":"","exp":"127","file":"NTMSAPI.h","line":437,"type":"Integer","value":127},"NTMS_I1_OBJECTINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_I1_OBJECTINFORMATIONA","file":"NTMSAPI.h","line":1151,"type":"Other","value":"NTMS_I1_OBJECTINFORMATIONA"}],"exp":"NTMS_I1_OBJECTINFORMATIONW","file":"NTMSAPI.h","line":1145,"type":"Other","value":"NTMS_I1_OBJECTINFORMATIONW"},"NTMS_I1_OPREQUESTINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_I1_OPREQUESTINFORMATIONA","file":"NTMSAPI.h","line":1150,"type":"Other","value":"NTMS_I1_OPREQUESTINFORMATIONA"}],"exp":"NTMS_I1_OPREQUESTINFORMATIONW","file":"NTMSAPI.h","line":1144,"type":"Other","value":"NTMS_I1_OPREQUESTINFORMATIONW"},"NTMS_I1_PARTITIONINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_I1_PARTITIONINFORMATIONA","file":"NTMSAPI.h","line":1148,"type":"Other","value":"NTMS_I1_PARTITIONINFORMATIONA"}],"exp":"NTMS_I1_PARTITIONINFORMATIONW","file":"NTMSAPI.h","line":1142,"type":"Other","value":"NTMS_I1_PARTITIONINFORMATIONW"},"NTMS_I1_PMIDINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_I1_PMIDINFORMATIONA","file":"NTMSAPI.h","line":1149,"type":"Other","value":"NTMS_I1_PMIDINFORMATIONA"}],"exp":"NTMS_I1_PMIDINFORMATIONW","file":"NTMSAPI.h","line":1143,"type":"Other","value":"NTMS_I1_PMIDINFORMATIONW"},"NTMS_LIBREQUESTINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_LIBREQUESTINFORMATIONA","file":"NTMSAPI.h","line":886,"type":"Other","value":"NTMS_LIBREQUESTINFORMATIONA"}],"exp":"NTMS_LIBREQUESTINFORMATIONW","file":"NTMSAPI.h","line":883,"type":"Other","value":"NTMS_LIBREQUESTINFORMATIONW"},"NTMS_MAXATTR_LENGTH":{"comment":"","exp":"0x10000","file":"NTMSAPI.h","line":1693,"type":"Integer","value":65536},"NTMS_MAXATTR_NAMELEN":{"comment":"","exp":"32","file":"NTMSAPI.h","line":1696,"type":"Integer","value":32},"NTMS_MESSAGE_LENGTH":{"comment":"","exp":"256","file":"NTMSAPI.h","line":438,"type":"Integer","value":256},"NTMS_NULLGUID":{"comment":"","exp":"{0,0,0,{0,0,0,0,0,0,0,0}}","file":"NTMSAPI.h","line":46,"type":"Other","value":"{0,0,0,{0,0,0,0,0,0,0,0}}"},"NTMS_OBJECTINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_OBJECTINFORMATIONA","file":"NTMSAPI.h","line":1017,"type":"Other","value":"NTMS_OBJECTINFORMATIONA"}],"exp":"NTMS_OBJECTINFORMATIONW","file":"NTMSAPI.h","line":1013,"type":"Other","value":"NTMS_OBJECTINFORMATIONW"},"NTMS_OBJECTNAME_LENGTH":{"comment":"","exp":"64","file":"NTMSAPI.h","line":425,"type":"Integer","value":64},"NTMS_OMIDLABELID_LENGTH":{"comment":"","exp":"255","file":"NTMSAPI.h","line":440,"type":"Integer","value":255},"NTMS_OMIDLABELINFO_LENGTH":{"comment":"","exp":"256","file":"NTMSAPI.h","line":442,"type":"Integer","value":256},"NTMS_OMIDLABELTYPE_LENGTH":{"comment":"","exp":"64","file":"NTMSAPI.h","line":441,"type":"Integer","value":64},"NTMS_OMID_TYPE_FILESYSTEM_INFO":{"comment":"","exp":"0x02","file":"NTMSAPI.h","line":1554,"type":"Integer","value":2},"NTMS_OMID_TYPE_RAW_LABEL":{"comment":"","exp":"0x01","file":"NTMSAPI.h","line":1553,"type":"Integer","value":1},"NTMS_OPREQUESTINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_OPREQUESTINFORMATIONA","file":"NTMSAPI.h","line":950,"type":"Other","value":"NTMS_OPREQUESTINFORMATIONA"}],"exp":"NTMS_OPREQUESTINFORMATIONW","file":"NTMSAPI.h","line":947,"type":"Other","value":"NTMS_OPREQUESTINFORMATIONW"},"NTMS_PARTITIONINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_PARTITIONINFORMATIONA","file":"NTMSAPI.h","line":722,"type":"Other","value":"NTMS_PARTITIONINFORMATIONA"}],"exp":"NTMS_PARTITIONINFORMATIONW","file":"NTMSAPI.h","line":719,"type":"Other","value":"NTMS_PARTITIONINFORMATIONW"},"NTMS_PARTSTATE_NEW":{"comment":"","exp":"NTMS_PARTSTATE_UNKNOWN","file":"NTMSAPI.h","line":715,"type":"Integer","value":0},"NTMS_PMIDINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"NTMS_PMIDINFORMATIONA","file":"NTMSAPI.h","line":659,"type":"Other","value":"NTMS_PMIDINFORMATIONA"}],"exp":"NTMS_PMIDINFORMATIONW","file":"NTMSAPI.h","line":656,"type":"Other","value":"NTMS_PMIDINFORMATIONW"},"NTMS_POOLHIERARCHY_LENGTH":{"comment":"","exp":"512","file":"NTMSAPI.h","line":439,"type":"Integer","value":512},"NTMS_PRODUCTNAME_LENGTH":{"comment":"","exp":"128","file":"NTMSAPI.h","line":433,"type":"Integer","value":128},"NTMS_REVISION_LENGTH":{"comment":"","exp":"32","file":"NTMSAPI.h","line":429,"type":"Integer","value":32},"NTMS_SEQUENCE_LENGTH":{"comment":"","exp":"32","file":"NTMSAPI.h","line":431,"type":"Integer","value":32},"NTMS_SERIALNUMBER_LENGTH":{"comment":"","exp":"32","file":"NTMSAPI.h","line":428,"type":"Integer","value":32},"NTMS_USERNAME_LENGTH":{"comment":"","exp":"64","file":"NTMSAPI.h","line":434,"type":"Integer","value":64},"NTMS_VENDORNAME_LENGTH":{"comment":"","exp":"128","file":"NTMSAPI.h","line":432,"type":"Integer","value":128},"NtmsAccessMask":{"comment":"","exp":"","file":"NTMSAPI.h","line":1680,"type":"Enum","value":"enum NtmsAccessMask {\\r\\n    NTMS_USE_ACCESS                 = 0x1,\\r\\n    NTMS_MODIFY_ACCESS              = 0x2,\\r\\n    NTMS_CONTROL_ACCESS             = 0x4\\r\\n};"},"NtmsAllocateOptions":{"comment":"","exp":"","file":"NTMSAPI.h","line":251,"type":"Enum","value":"enum NtmsAllocateOptions {\\r\\n    NTMS_ALLOCATE_NEW               = 0x0001,\\r\\n    NTMS_ALLOCATE_NEXT              = 0x0002,\\r\\n    NTMS_ALLOCATE_ERROR_IF_UNAVAILABLE = 0x0004\\r\\n};"},"NtmsAllocationPolicy":{"comment":"","exp":"","file":"NTMSAPI.h","line":761,"type":"Enum","value":"enum NtmsAllocationPolicy {\\r\\n    NTMS_ALLOCATE_FROMSCRATCH       = 1\\r\\n};"},"NtmsAsyncOperations":{"comment":"","exp":"","file":"NTMSAPI.h","line":142,"type":"Enum","value":"enum NtmsAsyncOperations {\\r\\n    NTMS_ASYNCOP_MOUNT              = 1     \/\/ mount operation\\r\\n};"},"NtmsAsyncStatus":{"comment":"","exp":"","file":"NTMSAPI.h","line":134,"type":"Enum","value":"enum NtmsAsyncStatus {\\r\\n    NTMS_ASYNCSTATE_QUEUED          = 0,    \/\/ initial state is queued\\r\\n    NTMS_ASYNCSTATE_WAIT_RESOURCE,\\r\\n    NTMS_ASYNCSTATE_WAIT_OPERATOR,\\r\\n    NTMS_ASYNCSTATE_INPROCESS,\\r\\n    NTMS_ASYNCSTATE_COMPLETE                \/\/ complete, check result code\\r\\n};"},"NtmsBarCodeState":{"comment":"","exp":"","file":"NTMSAPI.h","line":638,"type":"Enum","value":"enum NtmsBarCodeState {\\r\\n    NTMS_BARCODESTATE_OK            = 1,\\r\\n    NTMS_BARCODESTATE_UNREADABLE    = 2\\r\\n};"},"NtmsCreateNtmsMediaOptions":{"comment":"","exp":"","file":"NTMSAPI.h","line":1400,"type":"Enum","value":"enum NtmsCreateNtmsMediaOptions {\\r\\n    NTMS_ERROR_ON_DUPLICATE         = 0x0001\\r\\n};"},"NtmsCreateOptions":{"comment":"","exp":"","file":"NTMSAPI.h","line":343,"type":"Enum","value":"enum NtmsCreateOptions {\\r\\n    NTMS_OPEN_EXISTING              = 0x0001,\\r\\n    NTMS_CREATE_NEW                 = 0x0002,\\r\\n    NTMS_OPEN_ALWAYS                = 0x0003\\r\\n};"},"NtmsDeallocationPolicy":{"comment":"","exp":"","file":"NTMSAPI.h","line":765,"type":"Enum","value":"enum NtmsDeallocationPolicy {\\r\\n    NTMS_DEALLOCATE_TOSCRATCH       = 1\\r\\n};"},"NtmsDismountOptions":{"comment":"","exp":"","file":"NTMSAPI.h","line":193,"type":"Enum","value":"enum NtmsDismountOptions {\\r\\n    NTMS_DISMOUNT_DEFERRED          = 0x0001,\\r\\n    NTMS_DISMOUNT_IMMEDIATE         = 0x0002\\r\\n};"},"NtmsDoorState":{"comment":"","exp":"","file":"NTMSAPI.h","line":605,"type":"Enum","value":"enum NtmsDoorState {\\r\\n    NTMS_DOORSTATE_UNKNOWN          = 0,\\r\\n    NTMS_DOORSTATE_CLOSED           = 1,\\r\\n    NTMS_DOORSTATE_OPEN             = 2\\r\\n};"},"NtmsDriveState":{"comment":"","exp":"","file":"NTMSAPI.h","line":450,"type":"Enum","value":"enum NtmsDriveState {\\r\\n    NTMS_DRIVESTATE_DISMOUNTED      = 0,\\r\\n    NTMS_DRIVESTATE_MOUNTED         = 1,\\r\\n    NTMS_DRIVESTATE_LOADED          = 2,\\r\\n    NTMS_DRIVESTATE_UNLOADED        = 5,\\r\\n    NTMS_DRIVESTATE_BEING_CLEANED   = 6,\\r\\n    NTMS_DRIVESTATE_DISMOUNTABLE    = 7\\r\\n};"},"NtmsDriveType":{"comment":"","exp":"","file":"NTMSAPI.h","line":1642,"type":"Enum","value":"enum NtmsDriveType {\\r\\n    NTMS_UNKNOWN_DRIVE              = 0\\r\\n};"},"NtmsEjectOperation":{"comment":"","exp":"","file":"NTMSAPI.h","line":1494,"type":"Enum","value":"enum NtmsEjectOperation {\\r\\n    NTMS_EJECT_START                = 0,\\r\\n    NTMS_EJECT_STOP                 = 1,\\r\\n    NTMS_EJECT_QUEUE                = 2,\\r\\n    NTMS_EJECT_FORCE                = 3,\\r\\n    NTMS_EJECT_IMMEDIATE            = 4,\\r\\n    NTMS_EJECT_ASK_USER             = 5\\r\\n};"},"NtmsEnumerateOption":{"comment":"","exp":"","file":"NTMSAPI.h","line":1468,"type":"Enum","value":"enum NtmsEnumerateOption {\\r\\n    NTMS_ENUM_DEFAULT                   = 0,\\r\\n    NTMS_ENUM_ROOTPOOL                  = 1\\r\\n    };"},"NtmsInjectOperation":{"comment":"","exp":"","file":"NTMSAPI.h","line":1510,"type":"Enum","value":"enum NtmsInjectOperation {\\r\\n    NTMS_INJECT_START               = 0,\\r\\n    NTMS_INJECT_STOP                = 1,\\r\\n    NTMS_INJECT_RETRACT             = 2,\\r\\n    NTMS_INJECT_STARTMANY           = 3\\r\\n};"},"NtmsInventoryMethod":{"comment":"","exp":"","file":"NTMSAPI.h","line":521,"type":"Enum","value":"enum NtmsInventoryMethod {\\r\\n    NTMS_INVENTORY_NONE             = 0,\\r\\n    NTMS_INVENTORY_FAST             = 1,\\r\\n    NTMS_INVENTORY_OMID             = 2,\\r\\n    NTMS_INVENTORY_DEFAULT          = 3,\\r\\n    NTMS_INVENTORY_SLOT             = 4,\\r\\n    NTMS_INVENTORY_STOP             = 5,\\r\\n    NTMS_INVENTORY_MAX\\r\\n};"},"NtmsLibRequestFlags":{"comment":"","exp":"","file":"NTMSAPI.h","line":990,"type":"Enum","value":"enum NtmsLibRequestFlags {\\r\\n    NTMS_LIBREQFLAGS_NOAUTOPURGE    = 0x01,\\r\\n    NTMS_LIBREQFLAGS_NOFAILEDPURGE  = 0x02\\r\\n};"},"NtmsLibraryFlags":{"comment":"","exp":"","file":"NTMSAPI.h","line":513,"type":"Enum","value":"enum NtmsLibraryFlags {\\r\\n    NTMS_LIBRARYFLAG_FIXEDOFFLINE     = 0x01,\\r\\n    NTMS_LIBRARYFLAG_CLEANERPRESENT   = 0x02,\\r\\n    NTMS_LIBRARYFLAG_AUTODETECTCHANGE = 0x04,\\r\\n    NTMS_LIBRARYFLAG_IGNORECLEANERUSESREMAINING = 0x08,\\r\\n    NTMS_LIBRARYFLAG_RECOGNIZECLEANERBARCODE = 0x10\\r\\n};"},"NtmsLibraryType":{"comment":"","exp":"","file":"NTMSAPI.h","line":505,"type":"Enum","value":"enum NtmsLibraryType {\\r\\n    NTMS_LIBRARYTYPE_UNKNOWN        = 0,\\r\\n    NTMS_LIBRARYTYPE_OFFLINE        = 1,\\r\\n    NTMS_LIBRARYTYPE_ONLINE         = 2,\\r\\n    NTMS_LIBRARYTYPE_STANDALONE     = 3\\r\\n};"},"NtmsLmOperation":{"comment":"","exp":"","file":"NTMSAPI.h","line":840,"type":"Enum","value":"enum NtmsLmOperation {\\r\\n    NTMS_LM_REMOVE                  = 0,\\r\\n    NTMS_LM_DISABLECHANGER          = 1,\\r\\n    NTMS_LM_DISABLELIBRARY          = 1,\\r\\n    NTMS_LM_ENABLECHANGER           = 2,\\r\\n    NTMS_LM_ENABLELIBRARY           = 2,\\r\\n    NTMS_LM_DISABLEDRIVE            = 3,\\r\\n    NTMS_LM_ENABLEDRIVE             = 4,\\r\\n    NTMS_LM_DISABLEMEDIA            = 5,\\r\\n    NTMS_LM_ENABLEMEDIA             = 6,\\r\\n    NTMS_LM_UPDATEOMID              = 7,\\r\\n    NTMS_LM_INVENTORY               = 8,\\r\\n    NTMS_LM_DOORACCESS              = 9,\\r\\n    NTMS_LM_EJECT                   = 10,\\r\\n    NTMS_LM_EJECTCLEANER            = 11,\\r\\n    NTMS_LM_INJECT                  = 12,\\r\\n    NTMS_LM_INJECTCLEANER           = 13,\\r\\n    NTMS_LM_PROCESSOMID             = 14,\\r\\n    NTMS_LM_CLEANDRIVE              = 15,\\r\\n    NTMS_LM_DISMOUNT                = 16,\\r\\n    NTMS_LM_MOUNT                   = 17,\\r\\n    NTMS_LM_WRITESCRATCH            = 18,\\r\\n    NTMS_LM_CLASSIFY                = 19,\\r\\n    NTMS_LM_RESERVECLEANER          = 20,\\r\\n    NTMS_LM_RELEASECLEANER          = 21,\\r\\n    NTMS_LM_MAXWORKITEM\\r\\n};"},"NtmsLmState":{"comment":"","exp":"","file":"NTMSAPI.h","line":868,"type":"Enum","value":"enum NtmsLmState {\\r\\n    NTMS_LM_QUEUED                  = 0,\\r\\n    NTMS_LM_INPROCESS               = 1,\\r\\n    NTMS_LM_PASSED                  = 2,\\r\\n    NTMS_LM_FAILED                  = 3,\\r\\n    NTMS_LM_INVALID                 = 4,\\r\\n    NTMS_LM_WAITING                 = 5,\\r\\n    NTMS_LM_DEFERRED                = 6,\\r\\n    NTMS_LM_DEFFERED                = 6,  \/\/ DO NOT USE.  Maintained for backward compatiblity\\r\\n    NTMS_LM_CANCELLED               = 7,\\r\\n    NTMS_LM_STOPPED                 = 8\\r\\n};"},"NtmsMediaPoolPolicy":{"comment":"","exp":"","file":"NTMSAPI.h","line":1004,"type":"Enum","value":"enum NtmsMediaPoolPolicy {\\r\\n    \/\/ purge offline scratch media.  By default we keep offline scratch media\\r\\n    \/\/ in the fixed offline media pool\\r\\n    NTMS_POOLPOLICY_PURGEOFFLINESCRATCH = 0x01,\\r\\n    NTMS_POOLPOLICY_KEEPOFFLINEIMPORT   = 0x02\\r\\n};"},"NtmsMediaState":{"comment":"","exp":"","file":"NTMSAPI.h","line":643,"type":"Enum","value":"enum NtmsMediaState {\\r\\n    NTMS_MEDIASTATE_IDLE            = 0,\\r\\n    NTMS_MEDIASTATE_INUSE           = 1,\\r\\n    NTMS_MEDIASTATE_MOUNTED         = 2,\\r\\n    NTMS_MEDIASTATE_LOADED          = 3,\\r\\n    NTMS_MEDIASTATE_UNLOADED        = 4,\\r\\n    NTMS_MEDIASTATE_OPERROR         = 5,\\r\\n    \/\/ media is waiting for operator request servicing\\r\\n    NTMS_MEDIASTATE_OPREQ           = 6\\r\\n};"},"NtmsMountOptions":{"comment":"","exp":"","file":"NTMSAPI.h","line":182,"type":"Enum","value":"enum NtmsMountOptions {\\r\\n    NTMS_MOUNT_READ                 = 0x0001,\\r\\n    NTMS_MOUNT_WRITE                = 0x0002,\\r\\n    NTMS_MOUNT_ERROR_NOT_AVAILABLE  = 0x0004,\\r\\n    NTMS_MOUNT_ERROR_IF_UNAVAILABLE = 0x0004,\\r\\n    NTMS_MOUNT_ERROR_OFFLINE        = 0x0008,\\r\\n    NTMS_MOUNT_ERROR_IF_OFFLINE     = 0x0008,\\r\\n    NTMS_MOUNT_SPECIFIC_DRIVE       = 0x0010,\\r\\n    NTMS_MOUNT_NOWAIT               = 0x0020\\r\\n};"},"NtmsMountPriority":{"comment":"","exp":"","file":"NTMSAPI.h","line":198,"type":"Enum","value":"enum NtmsMountPriority {\\r\\n    NTMS_PRIORITY_DEFAULT           = 0,\\r\\n    NTMS_PRIORITY_HIGHEST           = 15,\\r\\n    NTMS_PRIORITY_HIGH              = 7,\\r\\n    NTMS_PRIORITY_NORMAL            = 0,\\r\\n    NTMS_PRIORITY_LOW               = -7,\\r\\n    NTMS_PRIORITY_LOWEST            = -15\\r\\n};"},"NtmsNotificationOperations":{"comment":"","exp":"","file":"NTMSAPI.h","line":1828,"type":"Enum","value":"enum NtmsNotificationOperations {\\r\\n    NTMS_OBJ_UPDATE                 = 1,\\r\\n    NTMS_OBJ_INSERT                 = 2,\\r\\n    NTMS_OBJ_DELETE                 = 3,\\r\\n    NTMS_EVENT_SIGNAL               = 4,\\r\\n    NTMS_EVENT_COMPLETE             = 5\\r\\n};"},"NtmsObjectsTypes":{"comment":"","exp":"","file":"NTMSAPI.h","line":95,"type":"Enum","value":"enum NtmsObjectsTypes {\\r\\n    NTMS_UNKNOWN                    = 0,\\r\\n    NTMS_OBJECT,\\r\\n    NTMS_CHANGER,\\r\\n    NTMS_CHANGER_TYPE,\\r\\n    NTMS_COMPUTER,\\r\\n    NTMS_DRIVE,\\r\\n    NTMS_DRIVE_TYPE,\\r\\n    NTMS_IEDOOR,\\r\\n    NTMS_IEPORT,\\r\\n    NTMS_LIBRARY,\\r\\n    NTMS_LIBREQUEST,\\r\\n    NTMS_LOGICAL_MEDIA,\\r\\n    NTMS_MEDIA_POOL,\\r\\n    NTMS_MEDIA_TYPE,\\r\\n    NTMS_PARTITION,\\r\\n    NTMS_PHYSICAL_MEDIA,\\r\\n    NTMS_STORAGESLOT,\\r\\n    NTMS_OPREQUEST,\\r\\n    NTMS_UI_DESTINATION,\\r\\n    NTMS_NUMBER_OF_OBJECT_TYPES\\r\\n};"},"NtmsOpRequestFlags":{"comment":"","exp":"","file":"NTMSAPI.h","line":996,"type":"Enum","value":"enum NtmsOpRequestFlags {\\r\\n    NTMS_OPREQFLAGS_NOAUTOPURGE     = 0x01,\\r\\n    NTMS_OPREQFLAGS_NOFAILEDPURGE   = 0x02,\\r\\n    NTMS_OPREQFLAGS_NOALERTS        = 0x10,\\r\\n    NTMS_OPREQFLAGS_NOTRAYICON      = 0x20\\r\\n};"},"NtmsOperationalState":{"comment":"","exp":"","file":"NTMSAPI.h","line":1021,"type":"Enum","value":"enum NtmsOperationalState {\\r\\n    NTMS_READY                      = 0,\\r\\n    NTMS_INITIALIZING               = 10,\\r\\n    NTMS_NEEDS_SERVICE              = 20,\\r\\n    NTMS_NOT_PRESENT                = 21\\r\\n};"},"NtmsOpreqCommand":{"comment":"","exp":"","file":"NTMSAPI.h","line":927,"type":"Enum","value":"enum NtmsOpreqCommand {\\r\\n    NTMS_OPREQ_UNKNOWN              = 0,\\r\\n    NTMS_OPREQ_NEWMEDIA             = 1,\\r\\n    NTMS_OPREQ_CLEANER              = 2,\\r\\n    NTMS_OPREQ_DEVICESERVICE        = 3,\\r\\n    NTMS_OPREQ_MOVEMEDIA            = 4,\\r\\n    NTMS_OPREQ_MESSAGE              = 5\\r\\n};"},"NtmsOpreqState":{"comment":"","exp":"","file":"NTMSAPI.h","line":936,"type":"Enum","value":"enum NtmsOpreqState {\\r\\n    NTMS_OPSTATE_UNKNOWN            = 0,\\r\\n    NTMS_OPSTATE_SUBMITTED          = 1,\\r\\n    NTMS_OPSTATE_ACTIVE             = 2,\\r\\n    NTMS_OPSTATE_INPROGRESS         = 3,\\r\\n    NTMS_OPSTATE_REFUSED            = 4,\\r\\n    NTMS_OPSTATE_COMPLETE           = 5\\r\\n};"},"NtmsPartitionState":{"comment":"","exp":"","file":"NTMSAPI.h","line":701,"type":"Enum","value":"enum NtmsPartitionState {\\r\\n    NTMS_PARTSTATE_UNKNOWN          = 0,\\r\\n    NTMS_PARTSTATE_UNPREPARED       = 1,\\r\\n    NTMS_PARTSTATE_INCOMPATIBLE     = 2,\\r\\n    NTMS_PARTSTATE_DECOMMISSIONED   = 3,\\r\\n    NTMS_PARTSTATE_AVAILABLE        = 4,\\r\\n    NTMS_PARTSTATE_ALLOCATED        = 5,\\r\\n    NTMS_PARTSTATE_COMPLETE         = 6,\\r\\n    NTMS_PARTSTATE_FOREIGN          = 7,\\r\\n    NTMS_PARTSTATE_IMPORT           = 8,\\r\\n    NTMS_PARTSTATE_RESERVED         = 9\\r\\n};"},"NtmsPoolType":{"comment":"","exp":"","file":"NTMSAPI.h","line":753,"type":"Enum","value":"enum NtmsPoolType {\\r\\n    NTMS_POOLTYPE_UNKNOWN           = 0,\\r\\n    NTMS_POOLTYPE_SCRATCH           = 1,\\r\\n    NTMS_POOLTYPE_FOREIGN           = 2,\\r\\n    NTMS_POOLTYPE_IMPORT            = 3,\\r\\n    NTMS_POOLTYPE_APPLICATION       = 1000\\r\\n};"},"NtmsPortContent":{"comment":"","exp":"","file":"NTMSAPI.h","line":624,"type":"Enum","value":"enum NtmsPortContent {\\r\\n    NTMS_PORTCONTENT_UNKNOWN        = 0,\\r\\n    NTMS_PORTCONTENT_FULL           = 1,\\r\\n    NTMS_PORTCONTENT_EMPTY          = 2\\r\\n};"},"NtmsPortPosition":{"comment":"","exp":"","file":"NTMSAPI.h","line":618,"type":"Enum","value":"enum NtmsPortPosition {\\r\\n    NTMS_PORTPOSITION_UNKNOWN       = 0,\\r\\n    NTMS_PORTPOSITION_EXTENDED      = 1,\\r\\n    NTMS_PORTPOSITION_RETRACTED     = 2\\r\\n};"},"NtmsReadWriteCharacteristics":{"comment":"","exp":"","file":"NTMSAPI.h","line":781,"type":"Enum","value":"enum NtmsReadWriteCharacteristics {\\r\\n    NTMS_MEDIARW_UNKNOWN            = 0,\\r\\n    NTMS_MEDIARW_REWRITABLE         = 1,\\r\\n    NTMS_MEDIARW_WRITEONCE          = 2,\\r\\n    NTMS_MEDIARW_READONLY           = 3\\r\\n};"},"NtmsSessionOptions":{"comment":"","exp":"","file":"NTMSAPI.h","line":154,"type":"Enum","value":"enum NtmsSessionOptions {\\r\\n    NTMS_SESSION_QUERYEXPEDITE      = 0x1\\r\\n};"},"NtmsSlotState":{"comment":"","exp":"","file":"NTMSAPI.h","line":591,"type":"Enum","value":"enum NtmsSlotState {\\r\\n    NTMS_SLOTSTATE_UNKNOWN          = 0,\\r\\n    NTMS_SLOTSTATE_FULL             = 1,\\r\\n    NTMS_SLOTSTATE_EMPTY            = 2,\\r\\n    NTMS_SLOTSTATE_NOTPRESENT       = 3,\\r\\n    NTMS_SLOTSTATE_NEEDSINVENTORY   = 4\\r\\n};"},"NtmsUIOperations":{"comment":"","exp":"","file":"NTMSAPI.h","line":1744,"type":"Enum","value":"enum NtmsUIOperations {\\r\\n    NTMS_UIDEST_ADD                 = 1,\\r\\n    NTMS_UIDEST_DELETE,\\r\\n    NTMS_UIDEST_DELETEALL,\\r\\n    NTMS_UIOPERATION_MAX\\r\\n};"},"NtmsUITypes":{"comment":"","exp":"","file":"NTMSAPI.h","line":1736,"type":"Enum","value":"enum NtmsUITypes {\\r\\n    NTMS_UITYPE_INVALID             = 0,\\r\\n    NTMS_UITYPE_INFO,\\r\\n    NTMS_UITYPE_REQ,\\r\\n    NTMS_UITYPE_ERR,\\r\\n    NTMS_UITYPE_MAX\\r\\n};"},"OPEN_ALWAYS":{"comment":"","exp":"4","file":"fileapi.h","line":34,"type":"Integer","value":4},"OPEN_EXISTING":{"comment":"","exp":"3","file":"fileapi.h","line":33,"type":"Integer","value":3},"OpenNtmsSession":{"comment":"","dupe":[{"comment":"","exp":"OpenNtmsSessionA","file":"NTMSAPI.h","line":73,"type":"Other","value":"OpenNtmsSessionA"}],"exp":"OpenNtmsSessionW","file":"NTMSAPI.h","line":58,"type":"Other","value":"OpenNtmsSessionW"},"PERM_FILE_CREATE":{"comment":"\/\/ user has create access","exp":"0x4","file":"LMShare.h","line":666,"type":"Integer","value":4},"PERM_FILE_READ":{"comment":"\/\/ user has read access","exp":"0x1","file":"LMShare.h","line":664,"type":"Integer","value":1},"PERM_FILE_WRITE":{"comment":"\/\/ user has write access","exp":"0x2","file":"LMShare.h","line":665,"type":"Integer","value":2},"QueryDosDevice":{"comment":"","exp":"QueryDosDeviceW","file":"fileapi.h","line":1000,"type":"Other","value":"QueryDosDeviceW"},"RESOURCE_MANAGER_COMMUNICATION":{"comment":"","exp":"0x00000002","file":"ktmtypes.h","line":61,"type":"Integer","value":2},"RESOURCE_MANAGER_MAXIMUM_OPTION":{"comment":"","exp":"0x00000003","file":"ktmtypes.h","line":62,"type":"Integer","value":3},"RESOURCE_MANAGER_OBJECT_NAME_LENGTH_IN_BYTES":{"comment":"","exp":"(sizeof(RESOURCE_MANAGER_OBJECT_PATH)+(38*sizeof(WCHAR)))","file":"ktmtypes.h","line":134,"type":"String","value":"(sizeof(RESOURCE_MANAGER_OBJECT_PATH)+(38*sizeof(WCHAR)))"},"RESOURCE_MANAGER_OBJECT_PATH":{"comment":"","exp":"L\"\\\\ResourceManager\\\\\"","file":"ktmtypes.h","line":124,"type":"String","value":"L\"\\\\ResourceManager\\\\\""},"RESOURCE_MANAGER_VOLATILE":{"comment":"","exp":"0x00000001","file":"ktmtypes.h","line":60,"type":"Integer","value":1},"RemoveDirectory":{"comment":"","dupe":[{"comment":"","exp":"RemoveDirectoryA","file":"fileapi.h","line":1065,"type":"Other","value":"RemoveDirectoryA"}],"exp":"RemoveDirectoryW","file":"fileapi.h","line":1063,"type":"Other","value":"RemoveDirectoryW"},"SESI1_NUM_ELEMENTS":{"comment":"","exp":"8","file":"LMShare.h","line":513,"type":"Integer","value":8},"SESI2_NUM_ELEMENTS":{"comment":"","exp":"9","file":"LMShare.h","line":514,"type":"Integer","value":9},"SESS_GUEST":{"comment":"\/\/ session is logged on as a guest","exp":"0x00000001","file":"LMShare.h","line":510,"type":"Integer","value":1},"SESS_NOENCRYPTION":{"comment":"\/\/ session is not using encryption","exp":"0x00000002","file":"LMShare.h","line":511,"type":"Integer","value":2},"SHARE_CURRENT_USES_PARMNUM":{"comment":"","exp":"7","file":"LMShare.h","line":310,"type":"Integer","value":7},"SHARE_FILE_SD_INFOLEVEL":{"comment":"","exp":"(PARMNUM_BASE_INFOLEVEL + SHARE_FILE_SD_PARMNUM)","file":"LMShare.h","line":324,"type":"Integer","value":1501},"SHARE_FILE_SD_PARMNUM":{"comment":"","exp":"501","file":"LMShare.h","line":313,"type":"Integer","value":501},"SHARE_MAX_USES_INFOLEVEL":{"comment":"","exp":"(PARMNUM_BASE_INFOLEVEL + SHARE_MAX_USES_PARMNUM)","file":"LMShare.h","line":322,"type":"Integer","value":1006},"SHARE_MAX_USES_PARMNUM":{"comment":"","exp":"6","file":"LMShare.h","line":309,"type":"Integer","value":6},"SHARE_NETNAME_PARMNUM":{"comment":"","exp":"1","file":"LMShare.h","line":305,"type":"Integer","value":1},"SHARE_PASSWD_PARMNUM":{"comment":"","exp":"9","file":"LMShare.h","line":312,"type":"Integer","value":9},"SHARE_PATH_PARMNUM":{"comment":"","exp":"8","file":"LMShare.h","line":311,"type":"Integer","value":8},"SHARE_PERMISSIONS_PARMNUM":{"comment":"","exp":"5","file":"LMShare.h","line":308,"type":"Integer","value":5},"SHARE_REMARK_INFOLEVEL":{"comment":"","exp":"(PARMNUM_BASE_INFOLEVEL + SHARE_REMARK_PARMNUM)","file":"LMShare.h","line":320,"type":"Integer","value":1004},"SHARE_REMARK_PARMNUM":{"comment":"","exp":"4","file":"LMShare.h","line":307,"type":"Integer","value":4},"SHARE_SERVER_PARMNUM":{"comment":"","exp":"503","file":"LMShare.h","line":314,"type":"Integer","value":503},"SHARE_TYPE_PARMNUM":{"comment":"","exp":"3","file":"LMShare.h","line":306,"type":"Integer","value":3},"SHI1005_FLAGS_ACCESS_BASED_DIRECTORY_ENUM":{"comment":"\/\/ Trim visible files in enumerations based on access","exp":"0x00800","file":"LMShare.h","line":371,"type":"Integer","value":2048},"SHI1005_FLAGS_ALLOW_NAMESPACE_CACHING":{"comment":"\/\/ The clients may cache the namespace","exp":"0x00400","file":"LMShare.h","line":370,"type":"Integer","value":1024},"SHI1005_FLAGS_CLUSTER_MANAGED":{"comment":"\/\/ Used to prevent share from being modified by users","exp":"0x80000","file":"LMShare.h","line":379,"type":"Integer","value":524288},"SHI1005_FLAGS_DFS":{"comment":"\/\/ Share is in the DFS","exp":"0x0001","file":"LMShare.h","line":357,"type":"Integer","value":1},"SHI1005_FLAGS_DFS_ROOT":{"comment":"\/\/ Share is root of DFS","exp":"0x0002","file":"LMShare.h","line":358,"type":"Integer","value":2},"SHI1005_FLAGS_DISABLE_CLIENT_BUFFERING":{"comment":"\/\/ Used to set the allowed client buffering","exp":"0x20000","file":"LMShare.h","line":377,"type":"Integer","value":131072},"SHI1005_FLAGS_ENABLE_CA":{"comment":"\/\/ Enable continuously available","exp":"0x04000","file":"LMShare.h","line":374,"type":"Integer","value":16384},"SHI1005_FLAGS_ENABLE_HASH":{"comment":"\/\/ Enable hash generation and retrieval requests from share","exp":"0x02000","file":"LMShare.h","line":373,"type":"Integer","value":8192},"SHI1005_FLAGS_ENCRYPT_DATA":{"comment":"\/\/ Require encryption","exp":"0x08000","file":"LMShare.h","line":375,"type":"Integer","value":32768},"SHI1005_FLAGS_FORCE_LEVELII_OPLOCK":{"comment":"\/\/ Only issue level2 oplock","exp":"0x01000","file":"LMShare.h","line":372,"type":"Integer","value":4096},"SHI1005_FLAGS_FORCE_SHARED_DELETE":{"comment":"\/\/ Used to allows force shared delete","exp":"0x00200","file":"LMShare.h","line":369,"type":"Integer","value":512},"SHI1005_FLAGS_IDENTITY_REMOTING":{"comment":"\/\/ Allows auth tunneling","exp":"0x40000","file":"LMShare.h","line":378,"type":"Integer","value":262144},"SHI1005_FLAGS_RESERVED":{"comment":"\/\/ Reserved for internal use","exp":"0x10000","file":"LMShare.h","line":376,"type":"Integer","value":65536},"SHI1005_FLAGS_RESTRICT_EXCLUSIVE_OPENS":{"comment":"\/\/ Used to disallow read-deny read behavior","exp":"0x00100","file":"LMShare.h","line":368,"type":"Integer","value":256},"SHI1005_VALID_FLAGS_SET":{"comment":"","exp":"(CSC_MASK| SHI1005_FLAGS_RESTRICT_EXCLUSIVE_OPENS| SHI1005_FLAGS_FORCE_SHARED_DELETE| SHI1005_FLAGS_ALLOW_NAMESPACE_CACHING| SHI1005_FLAGS_ACCESS_BASED_DIRECTORY_ENUM| SHI1005_FLAGS_FORCE_LEVELII_OPLOCK| SHI1005_FLAGS_ENABLE_HASH| SHI1005_FLAGS_ENABLE_CA | SHI1005_FLAGS_ENCRYPT_DATA | SHI1005_FLAGS_DISABLE_CLIENT_BUFFERING | SHI1005_FLAGS_IDENTITY_REMOTING | SHI1005_FLAGS_CLUSTER_MANAGED | SHI1005_FLAGS_RESERVED)","file":"LMShare.h","line":385,"type":"Integer","value":1048368},"SHI1_NUM_ELEMENTS":{"comment":"","exp":"4","file":"LMShare.h","line":327,"type":"Integer","value":4},"SHI2_NUM_ELEMENTS":{"comment":"","exp":"10","file":"LMShare.h","line":328,"type":"Integer","value":10},"SHI_USES_UNLIMITED":{"comment":"","exp":"(DWORD)-1","file":"LMShare.h","line":352,"type":"Integer","value":-1},"STATSOPT_CLR":{"comment":"","exp":"1","file":"lmstats.h","line":186,"type":"Integer","value":1},"STATS_NO_VALUE":{"comment":"","exp":"((unsigned long) -1L)","file":"lmstats.h","line":187,"type":"Integer","value":-1},"STATS_OVERFLOW":{"comment":"","exp":"((unsigned long) -2L)","file":"lmstats.h","line":188,"type":"Integer","value":-2},"STYPE_DEVICE":{"comment":"","exp":"2","file":"LMShare.h","line":337,"type":"Integer","value":2},"STYPE_DISKTREE":{"comment":"","exp":"0","file":"LMShare.h","line":335,"type":"Integer","value":0},"STYPE_IPC":{"comment":"","exp":"3","file":"LMShare.h","line":338,"type":"Integer","value":3},"STYPE_MASK":{"comment":"\/\/ AND with shi_type to","exp":"0x000000FF","file":"LMShare.h","line":340,"type":"Integer","value":255},"STYPE_PRINTQ":{"comment":"","exp":"1","file":"LMShare.h","line":336,"type":"Integer","value":1},"STYPE_RESERVED1":{"comment":"\/\/ Reserved for internal processing","exp":"0x01000000","file":"LMShare.h","line":342,"type":"Integer","value":16777216},"STYPE_RESERVED2":{"comment":"","exp":"0x02000000","file":"LMShare.h","line":343,"type":"Integer","value":33554432},"STYPE_RESERVED3":{"comment":"","exp":"0x04000000","file":"LMShare.h","line":344,"type":"Integer","value":67108864},"STYPE_RESERVED4":{"comment":"","exp":"0x08000000","file":"LMShare.h","line":345,"type":"Integer","value":134217728},"STYPE_RESERVED5":{"comment":"","exp":"0x00100000","file":"LMShare.h","line":346,"type":"Integer","value":1048576},"STYPE_RESERVED_ALL":{"comment":"","exp":"0x3FFFFF00","file":"LMShare.h","line":347,"type":"Integer","value":1073741568},"STYPE_SPECIAL":{"comment":"","exp":"0x80000000","file":"LMShare.h","line":350,"type":"Integer","value":2147483648},"STYPE_TEMPORARY":{"comment":"","exp":"0x40000000","file":"LMShare.h","line":349,"type":"Integer","value":1073741824},"SetFileAttributes":{"comment":"","dupe":[{"comment":"","exp":"SetFileAttributesA","file":"fileapi.h","line":1095,"type":"Other","value":"SetFileAttributesA"}],"exp":"SetFileAttributesW","file":"fileapi.h","line":1093,"type":"Other","value":"SetFileAttributesW"},"SetNtmsObjectAttribute":{"comment":"","dupe":[{"comment":"","exp":"SetNtmsObjectAttributeA","file":"NTMSAPI.h","line":80,"type":"Other","value":"SetNtmsObjectAttributeA"}],"exp":"SetNtmsObjectAttributeW","file":"NTMSAPI.h","line":65,"type":"Other","value":"SetNtmsObjectAttributeW"},"SetNtmsObjectInformation":{"comment":"","dupe":[{"comment":"","exp":"SetNtmsObjectInformationA","file":"NTMSAPI.h","line":76,"type":"Other","value":"SetNtmsObjectInformationA"}],"exp":"SetNtmsObjectInformationW","file":"NTMSAPI.h","line":61,"type":"Other","value":"SetNtmsObjectInformationW"},"SetNtmsUIOptions":{"comment":"","dupe":[{"comment":"","exp":"SetNtmsUIOptionsA","file":"NTMSAPI.h","line":82,"type":"Other","value":"SetNtmsUIOptionsA"}],"exp":"SetNtmsUIOptionsW","file":"NTMSAPI.h","line":67,"type":"Other","value":"SetNtmsUIOptionsW"},"SubmitNtmsOperatorRequest":{"comment":"","dupe":[{"comment":"","exp":"SubmitNtmsOperatorRequestA","file":"NTMSAPI.h","line":83,"type":"Other","value":"SubmitNtmsOperatorRequestA"}],"exp":"SubmitNtmsOperatorRequestW","file":"NTMSAPI.h","line":68,"type":"Other","value":"SubmitNtmsOperatorRequestW"},"TRANSACTIONMANAGER_OBJECT_NAME_LENGTH_IN_BYTES":{"comment":"","exp":"(sizeof(TRANSACTIONMANAGER_OBJECT_PATH)+(38*sizeof(WCHAR)))","file":"ktmtypes.h","line":131,"type":"String","value":"(sizeof(TRANSACTIONMANAGER_OBJECT_PATH)+(38*sizeof(WCHAR)))"},"TRANSACTIONMANAGER_OBJECT_PATH":{"comment":"","exp":"L\"\\\\TransactionManager\\\\\"","file":"ktmtypes.h","line":121,"type":"String","value":"L\"\\\\TransactionManager\\\\\""},"TRANSACTION_DO_NOT_PROMOTE":{"comment":"","exp":"0x00000001","file":"ktmtypes.h","line":52,"type":"Integer","value":1},"TRANSACTION_MANAGER_COMMIT_DEFAULT":{"comment":"","exp":"0x00000000","file":"ktmtypes.h","line":39,"type":"Integer","value":0},"TRANSACTION_MANAGER_COMMIT_LOWEST":{"comment":"","exp":"0x00000008","file":"ktmtypes.h","line":42,"type":"Integer","value":8},"TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES":{"comment":"","exp":"0x00000004","file":"ktmtypes.h","line":41,"type":"Integer","value":4},"TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME":{"comment":"","exp":"0x00000002","file":"ktmtypes.h","line":40,"type":"Integer","value":2},"TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS":{"comment":"","exp":"0x00000020","file":"ktmtypes.h","line":44,"type":"Integer","value":32},"TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY":{"comment":"","exp":"0x00000010","file":"ktmtypes.h","line":43,"type":"Integer","value":16},"TRANSACTION_MANAGER_MAXIMUM_OPTION":{"comment":"","exp":"0x0000003F","file":"ktmtypes.h","line":45,"type":"Integer","value":63},"TRANSACTION_MANAGER_VOLATILE":{"comment":"","exp":"0x00000001","file":"ktmtypes.h","line":38,"type":"Integer","value":1},"TRANSACTION_MAXIMUM_OPTION":{"comment":"","exp":"0x00000001","file":"ktmtypes.h","line":53,"type":"Integer","value":1},"TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED":{"comment":"","exp":"0x1","file":"ktmtypes.h","line":149,"type":"Integer","value":1},"TRANSACTION_NOTIFY_COMMIT":{"comment":"","exp":"0x00000004","file":"ktmtypes.h","line":86,"type":"Integer","value":4},"TRANSACTION_NOTIFY_COMMIT_COMPLETE":{"comment":"","exp":"0x00000040","file":"ktmtypes.h","line":90,"type":"Integer","value":64},"TRANSACTION_NOTIFY_COMMIT_FINALIZE":{"comment":"","exp":"0x40000000","file":"ktmtypes.h","line":115,"type":"Integer","value":1073741824},"TRANSACTION_NOTIFY_COMMIT_REQUEST":{"comment":"","exp":"0x04000000","file":"ktmtypes.h","line":105,"type":"Integer","value":67108864},"TRANSACTION_NOTIFY_DELEGATE_COMMIT":{"comment":"","exp":"0x00000400","file":"ktmtypes.h","line":94,"type":"Integer","value":1024},"TRANSACTION_NOTIFY_ENLIST_MASK":{"comment":"","exp":"0x00040000","file":"ktmtypes.h","line":102,"type":"Integer","value":262144},"TRANSACTION_NOTIFY_ENLIST_PREPREPARE":{"comment":"","exp":"0x00001000","file":"ktmtypes.h","line":96,"type":"Integer","value":4096},"TRANSACTION_NOTIFY_INDOUBT":{"comment":"","exp":"0x00004000","file":"ktmtypes.h","line":98,"type":"Integer","value":16384},"TRANSACTION_NOTIFY_LAST_RECOVER":{"comment":"","exp":"0x00002000","file":"ktmtypes.h","line":97,"type":"Integer","value":8192},"TRANSACTION_NOTIFY_MARSHAL":{"comment":"","exp":"0x00020000","file":"ktmtypes.h","line":101,"type":"Integer","value":131072},"TRANSACTION_NOTIFY_MASK":{"comment":"","exp":"0x3FFFFFFF","file":"ktmtypes.h","line":83,"type":"Integer","value":1073741823},"TRANSACTION_NOTIFY_PREPARE":{"comment":"","exp":"0x00000002","file":"ktmtypes.h","line":85,"type":"Integer","value":2},"TRANSACTION_NOTIFY_PREPARE_COMPLETE":{"comment":"","exp":"0x00000020","file":"ktmtypes.h","line":89,"type":"Integer","value":32},"TRANSACTION_NOTIFY_PREPREPARE":{"comment":"","exp":"0x00000001","file":"ktmtypes.h","line":84,"type":"Integer","value":1},"TRANSACTION_NOTIFY_PREPREPARE_COMPLETE":{"comment":"","exp":"0x00000010","file":"ktmtypes.h","line":88,"type":"Integer","value":16},"TRANSACTION_NOTIFY_PROMOTE":{"comment":"","exp":"0x08000000","file":"ktmtypes.h","line":106,"type":"Integer","value":134217728},"TRANSACTION_NOTIFY_PROMOTE_NEW":{"comment":"","exp":"0x10000000","file":"ktmtypes.h","line":107,"type":"Integer","value":268435456},"TRANSACTION_NOTIFY_PROPAGATE_PULL":{"comment":"","exp":"0x00008000","file":"ktmtypes.h","line":99,"type":"Integer","value":32768},"TRANSACTION_NOTIFY_PROPAGATE_PUSH":{"comment":"","exp":"0x00010000","file":"ktmtypes.h","line":100,"type":"Integer","value":65536},"TRANSACTION_NOTIFY_RECOVER":{"comment":"","exp":"0x00000100","file":"ktmtypes.h","line":92,"type":"Integer","value":256},"TRANSACTION_NOTIFY_RECOVER_QUERY":{"comment":"","exp":"0x00000800","file":"ktmtypes.h","line":95,"type":"Integer","value":2048},"TRANSACTION_NOTIFY_REQUEST_OUTCOME":{"comment":"","exp":"0x20000000","file":"ktmtypes.h","line":108,"type":"Integer","value":536870912},"TRANSACTION_NOTIFY_RM_DISCONNECTED":{"comment":"","exp":"0x01000000","file":"ktmtypes.h","line":103,"type":"Integer","value":16777216},"TRANSACTION_NOTIFY_ROLLBACK":{"comment":"","exp":"0x00000008","file":"ktmtypes.h","line":87,"type":"Integer","value":8},"TRANSACTION_NOTIFY_ROLLBACK_COMPLETE":{"comment":"","exp":"0x00000080","file":"ktmtypes.h","line":91,"type":"Integer","value":128},"TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT":{"comment":"","exp":"0x00000200","file":"ktmtypes.h","line":93,"type":"Integer","value":512},"TRANSACTION_NOTIFY_TM_ONLINE":{"comment":"","exp":"0x02000000","file":"ktmtypes.h","line":104,"type":"Integer","value":33554432},"TRANSACTION_OBJECT_NAME_LENGTH_IN_BYTES":{"comment":"","exp":"(sizeof(TRANSACTION_OBJECT_PATH)+(38*sizeof(WCHAR)))","file":"ktmtypes.h","line":132,"type":"String","value":"(sizeof(TRANSACTION_OBJECT_PATH)+(38*sizeof(WCHAR)))"},"TRANSACTION_OBJECT_PATH":{"comment":"","exp":"L\"\\\\Transaction\\\\\"","file":"ktmtypes.h","line":122,"type":"String","value":"L\"\\\\Transaction\\\\\""},"TRUNCATE_EXISTING":{"comment":"","exp":"5","file":"fileapi.h","line":35,"type":"Integer","value":5},"TXFS_MINIVERSION_COMMITTED_VIEW":{"comment":"","exp":"(0x0000)","file":"txfw32.h","line":583,"type":"Integer","value":0},"TXFS_MINIVERSION_DEFAULT_VIEW":{"comment":"","exp":"(0xFFFE)","file":"txfw32.h","line":585,"type":"Integer","value":65534},"TXFS_MINIVERSION_DIRTY_VIEW":{"comment":"","exp":"(0xFFFF)","file":"txfw32.h","line":584,"type":"Integer","value":65535},"TXF_LOG_RECORD_GENERIC_TYPE_ABORT":{"comment":"","exp":"0x02","file":"txfw32.h","line":48,"type":"Integer","value":2},"TXF_LOG_RECORD_GENERIC_TYPE_COMMIT":{"comment":"","exp":"0x01","file":"txfw32.h","line":47,"type":"Integer","value":1},"TXF_LOG_RECORD_GENERIC_TYPE_DATA":{"comment":"","exp":"0x08","file":"txfw32.h","line":50,"type":"Integer","value":8},"TXF_LOG_RECORD_GENERIC_TYPE_PREPARE":{"comment":"","exp":"0x04","file":"txfw32.h","line":49,"type":"Integer","value":4},"TXF_LOG_RECORD_TYPE_AFFECTED_FILE":{"comment":"","exp":"0x04","file":"txfw32.h","line":45,"type":"Integer","value":4},"TXF_LOG_RECORD_TYPE_TRUNCATE":{"comment":"","exp":"0x02","file":"txfw32.h","line":44,"type":"Integer","value":2},"TXF_LOG_RECORD_TYPE_WRITE":{"comment":"","exp":"0x01","file":"txfw32.h","line":43,"type":"Integer","value":1},"WIM_BOOT_NOT_OS_WIM":{"comment":"","exp":"(0x00000000)","file":"wofapi.h","line":135,"type":"Integer","value":0},"WIM_BOOT_OS_WIM":{"comment":"","exp":"(0x00000001)","file":"wofapi.h","line":134,"type":"Integer","value":1},"WIM_ENTRY_FLAG_NOT_ACTIVE":{"comment":"","exp":"(0x00000001)","file":"wofapi.h","line":142,"type":"Integer","value":1},"WIM_ENTRY_FLAG_SUSPENDED":{"comment":"","exp":"(0x00000002)","file":"wofapi.h","line":143,"type":"Integer","value":2},"WIM_EXTERNAL_FILE_INFO_FLAG_NOT_ACTIVE":{"comment":"","exp":"WIM_ENTRY_FLAG_NOT_ACTIVE","file":"wofapi.h","line":145,"type":"Integer","value":1},"WIM_EXTERNAL_FILE_INFO_FLAG_SUSPENDED":{"comment":"","exp":"WIM_ENTRY_FLAG_SUSPENDED","file":"wofapi.h","line":146,"type":"Integer","value":2},"WIM_PROVIDER_HASH_SIZE":{"comment":"","exp":"20","file":"wofapi.h","line":122,"type":"Integer","value":20},"WINEFS_SETUSERKEY_SET_CAPABILITIES":{"comment":"","exp":"0x00000001","file":"winefs.h","line":36,"type":"Integer","value":1},"WOF_PROVIDER_FILE":{"comment":"","exp":"(0x00000002)","file":"wofapi.h","line":114,"type":"Integer","value":2},"WOF_PROVIDER_WIM":{"comment":"","exp":"(0x00000001)","file":"wofapi.h","line":113,"type":"Integer","value":1},"_BY_HANDLE_FILE_INFORMATION":{"comment":"","exp":"","file":"fileapi.h","line":653,"type":"Struct","value":"typedef struct _BY_HANDLE_FILE_INFORMATION {\\r\\n    DWORD dwFileAttributes;\\r\\n    FILETIME ftCreationTime;\\r\\n    FILETIME ftLastAccessTime;\\r\\n    FILETIME ftLastWriteTime;\\r\\n    DWORD dwVolumeSerialNumber;\\r\\n    DWORD nFileSizeHigh;\\r\\n    DWORD nFileSizeLow;\\r\\n    DWORD nNumberOfLinks;\\r\\n    DWORD nFileIndexHigh;\\r\\n    DWORD nFileIndexLow;\\r\\n} BY_HANDLE_FILE_INFORMATION, *PBY_HANDLE_FILE_INFORMATION, *LPBY_HANDLE_FILE_INFORMATION;"},"_CERTIFICATE_BLOB":{"comment":"","exp":"","file":"winefs.h","line":61,"type":"Struct","value":"typedef struct _CERTIFICATE_BLOB {\\r\\n    DWORD   dwCertEncodingType;\\r\\n#ifdef MIDL_PASS\\r\\n    [range(0,32768)] \\r\\n#endif \/\/ MIDL_PASS\\r\\n    DWORD   cbData;\\r\\n#ifdef MIDL_PASS\\r\\n    [size_is(cbData)]\\r\\n#endif \/\/ MIDL_PASS\\r\\n    PBYTE    pbData;\\r\\n} EFS_CERTIFICATE_BLOB, *PEFS_CERTIFICATE_BLOB;"},"_CLFS_CONTEXT_MODE":{"comment":"","exp":"","file":"clfs.h","line":334,"type":"Enum","value":"typedef enum _CLFS_CONTEXT_MODE\\r\\n{\\r\\n    ClfsContextNone = 0x00,\\r\\n    ClfsContextUndoNext,\\r\\n    ClfsContextPrevious,\\r\\n    ClfsContextForward\\r\\n} CLFS_CONTEXT_MODE, *PCLFS_CONTEXT_MODE, **PPCLFS_CONTEXT_MODE;"},"_CLFS_IOSTATS_CLASS":{"comment":"","exp":"","file":"clfs.h","line":672,"type":"Enum","value":"typedef enum _CLFS_IOSTATS_CLASS\\r\\n{\\r\\n    ClfsIoStatsDefault = 0x0000,\\r\\n    ClfsIoStatsMax     = 0xFFFF\\r\\n} CLFS_IOSTATS_CLASS, *PCLFS_IOSTATS_CLASS, **PPCLFS_IOSTATS_CLASS;"},"_CLFS_LOG_ARCHIVE_MODE":{"comment":"","exp":"","file":"clfs.h","line":891,"type":"Enum","value":"typedef enum _CLFS_LOG_ARCHIVE_MODE\\r\\n{\\r\\n    ClfsLogArchiveEnabled = 0x01,\\r\\n    ClfsLogArchiveDisabled = 0x02\\r\\n} CLFS_LOG_ARCHIVE_MODE, *PCLFS_LOG_ARCHIVE_MODE;"},"_CLFS_LOG_NAME_INFORMATION":{"comment":"","exp":"","file":"clfs.h","line":470,"type":"Struct","value":"typedef struct _CLFS_LOG_NAME_INFORMATION\\r\\n{\\r\\n    USHORT NameLengthInBytes;\\r\\n    WCHAR  Name[1];\\r\\n} CLFS_LOG_NAME_INFORMATION, *PCLFS_LOG_NAME_INFORMATION, **PPCLFS_LOG_NAME_INFORMATION;"},"_CLFS_MGMT_CLIENT_REGISTRATION":{"comment":"","exp":"","file":"clfsmgmt.h","line":360,"type":"Struct","value":"typedef struct _CLFS_MGMT_CLIENT_REGISTRATION {\\r\\n    \/\/\\r\\n    \/\/ Initialize Version to CLFS_MGMT_CLIENT_REGISTRATION_VERSION.\\r\\n    \/\/\\r\\n    ULONG   Version;  \\r\\n    PCLFS_CLIENT_ADVANCE_TAIL_CALLBACK AdvanceTailCallback;\\r\\n    PVOID                              AdvanceTailCallbackData;\\r\\n    PCLFS_CLIENT_LFF_HANDLER_COMPLETE_CALLBACK LogGrowthCompleteCallback;\\r\\n    PVOID                                      LogGrowthCompleteCallbackData;\\r\\n    PCLFS_CLIENT_LOG_UNPINNED_CALLBACK LogUnpinnedCallback;\\r\\n    PVOID                              LogUnpinnedCallbackData;\\r\\n} CLFS_MGMT_CLIENT_REGISTRATION, *PCLFS_MGMT_CLIENT_REGISTRATION;"},"_CLFS_MGMT_NOTIFICATION":{"comment":"","exp":"","file":"clfsmgmt.h","line":244,"type":"Struct","value":"typedef struct _CLFS_MGMT_NOTIFICATION\\r\\n{\\r\\n    \/\/\\r\\n    \/\/ Nature of the notification.\\r\\n    \/\/\\r\\n    CLFS_MGMT_NOTIFICATION_TYPE     Notification;\\r\\n    \\r\\n    \/\/\\r\\n    \/\/ Target LSN for base LSN advancement if the\\r\\n    \/\/ notification type is ClfsMgmtAdvanceTailNotification.\\r\\n    \/\/\\r\\n    CLFS_LSN                        Lsn;\\r\\n    \/\/\\r\\n    \/\/ TRUE if the log is pinned, FALSE otherwise.\\r\\n    \/\/ Especially meaningful when receiving an error\\r\\n    \/\/ status for ClfsMgmtLogFullHandlerNotification.\\r\\n    \/\/\\r\\n    USHORT                          LogIsPinned;\\r\\n} CLFS_MGMT_NOTIFICATION, *PCLFS_MGMT_NOTIFICATION;"},"_CLFS_MGMT_NOTIFICATION_TYPE":{"comment":"","exp":"","file":"clfsmgmt.h","line":203,"type":"Enum","value":"typedef enum _CLFS_MGMT_NOTIFICATION_TYPE\\r\\n{\\r\\n    \/\/\\r\\n    \/\/ Notification to advance base LSN.\\r\\n    \/\/\\r\\n    ClfsMgmtAdvanceTailNotification = 0,\\r\\n    \/\/\\r\\n    \/\/ Notification that a request to handle log full condition\\r\\n    \/\/ has completed.\\r\\n    \/\/\\r\\n    ClfsMgmtLogFullHandlerNotification,\\r\\n    \/\/\\r\\n    \/\/ Notification that a previously pinned log is now considered\\r\\n    \/\/ unpinned.\\r\\n    \/\/\\r\\n    ClfsMgmtLogUnpinnedNotification,\\r\\n    \/\/\\r\\n    \/\/ Notification that a non-zero number of bytes has been written\\r\\n    \/\/ to the log.\\r\\n    \/\/\\r\\n    ClfsMgmtLogWriteNotification\\r\\n} CLFS_MGMT_NOTIFICATION_TYPE, *PCLFS_MGMT_NOTIFICATION_TYPE;"},"_CLFS_MGMT_POLICY":{"comment":"","exp":"","file":"clfsmgmt.h","line":108,"type":"Struct","value":"typedef struct _CLFS_MGMT_POLICY {\\r\\n    \/\/\\r\\n    \/\/ Version of the structure.  Should be CLFS_MGMT_POLICY_VERSION.\\r\\n    \/\/\\r\\n    ULONG                   Version;\\r\\n    \/\/\\r\\n    \/\/ The entire length of the structure.\\r\\n    \/\/\\r\\n    ULONG                   LengthInBytes;\\r\\n    \/\/\\r\\n    \/\/ Flags which apply to all policies, such as LOG_POLICY_OVERWRITE\\r\\n    \/\/ and LOG_POLICY_PERSIST.\\r\\n    \/\/\\r\\n    ULONG                   PolicyFlags;\\r\\n    \/\/\\r\\n    \/\/ Determines how PolicyParameters union is interpreted.\\r\\n    \/\/\\r\\n    CLFS_MGMT_POLICY_TYPE   PolicyType;\\r\\n    \/\/\\r\\n    \/\/ The way to interpret the PolicyParameters union is\\r\\n    \/\/ determined by the value of PolicyType -- if it is\\r\\n    \/\/ ClfsMgmtPolicyMaximumSize, for instance, then the\\r\\n    \/\/ MaximumSize structure is the relevant one.\\r\\n    \/\/\\r\\n    union {\\r\\n        struct {\\r\\n            ULONG       Containers;\\r\\n        } MaximumSize;\\r\\n        struct {\\r\\n            ULONG       Containers;\\r\\n        } MinimumSize;\\r\\n        struct {\\r\\n            ULONG       SizeInBytes;\\r\\n        } NewContainerSize;\\r\\n        struct {\\r\\n            ULONG       AbsoluteGrowthInContainers;\\r\\n            ULONG       RelativeGrowthPercentage;\\r\\n        } GrowthRate;\\r\\n        struct {\\r\\n            ULONG       MinimumAvailablePercentage;\\r\\n            ULONG       MinimumAvailableContainers;\\r\\n        } LogTail;\\r\\n        struct {\\r\\n            ULONG       Percentage;\\r\\n        } AutoShrink;\\r\\n        struct {\\r\\n            ULONG       Enabled;\\r\\n        } AutoGrow;\\r\\n        struct {\\r\\n            USHORT      PrefixLengthInBytes;\\r\\n            WCHAR       PrefixString[1]; \/\/ dynamic in length depending on PrefixLength\\r\\n        } NewContainerPrefix;\\r\\n        struct {\\r\\n            ULONGLONG   NextContainerSuffix;\\r\\n        } NewContainerSuffix;\\r\\n        struct {\\r\\n            USHORT      ExtensionLengthInBytes;\\r\\n            WCHAR       ExtensionString[1]; \/\/ dynamic in length depending on ExtensionLengthInBytes\\r\\n        } NewContainerExtension;\\r\\n    } PolicyParameters;\\r\\n    \/\/\\r\\n    \/\/ Nothing will be added down here since the structure above\\r\\n    \/\/ can be of dynamic length.\\r\\n    \/\/\\r\\n} CLFS_MGMT_POLICY, *PCLFS_MGMT_POLICY;"},"_CLFS_MGMT_POLICY_TYPE":{"comment":"","exp":"","file":"clfsmgmt.h","line":45,"type":"Enum","value":"typedef enum _CLFS_MGMT_POLICY_TYPE {\\r\\n    ClfsMgmtPolicyMaximumSize = 0x0,\\r\\n    ClfsMgmtPolicyMinimumSize,\\r\\n    ClfsMgmtPolicyNewContainerSize,\\r\\n    ClfsMgmtPolicyGrowthRate,\\r\\n    ClfsMgmtPolicyLogTail,\\r\\n    ClfsMgmtPolicyAutoShrink,\\r\\n    ClfsMgmtPolicyAutoGrow,\\r\\n    ClfsMgmtPolicyNewContainerPrefix,\\r\\n    ClfsMgmtPolicyNewContainerSuffix,\\r\\n    ClfsMgmtPolicyNewContainerExtension,\\r\\n    ClfsMgmtPolicyInvalid\\r\\n} CLFS_MGMT_POLICY_TYPE, *PCLFS_MGMT_POLICY_TYPE;"},"_CLFS_NODE_ID":{"comment":"","exp":"","file":"clfs.h","line":354,"type":"Struct","value":"typedef struct _CLFS_NODE_ID\\r\\n{\\r\\n    ULONG   cType;                                      \/\/ CLFS node type.\\r\\n    ULONG   cbNode;                                     \/\/ CLFS node size.\\r\\n} CLFS_NODE_ID, *PCLFS_NODE_ID;"},"_CLFS_PHYSICAL_LSN_INFORMATION":{"comment":"","exp":"","file":"clfs.h","line":503,"type":"Struct","value":"typedef struct _CLFS_PHYSICAL_LSN_INFORMATION\\r\\n{\\r\\n    UCHAR          StreamIdentifier;\\r\\n    CLFS_LSN       VirtualLsn;\\r\\n    CLFS_LSN       PhysicalLsn;\\r\\n} CLFS_PHYSICAL_LSN_INFORMATION, *PCLFS_PHYSICAL_LSN_INFORMATION;"},"_CLFS_STREAM_ID_INFORMATION":{"comment":"","exp":"","file":"clfs.h","line":487,"type":"Struct","value":"typedef struct _CLFS_STREAM_ID_INFORMATION\\r\\n{\\r\\n    UCHAR StreamIdentifier;\\r\\n} CLFS_STREAM_ID_INFORMATION, *PCLFS_STREAM_ID_INFORMATION, **PPCLFS_STREAM_ID_INFORMATION;"},"_CLS_ARCHIVE_DESCRIPTOR":{"comment":"","exp":"","file":"clfs.h","line":850,"type":"Struct","value":"typedef struct _CLS_ARCHIVE_DESCRIPTOR\\r\\n{\\r\\n    ULONGLONG coffLow;\\r\\n    ULONGLONG coffHigh;\\r\\n    CLS_CONTAINER_INFORMATION infoContainer;\\r\\n} CLS_ARCHIVE_DESCRIPTOR, *PCLS_ARCHIVE_DESCRIPTOR, **PPCLS_ARCHIVE_DESCRIPTOR;"},"_CLS_CLIENT_INFORMATION":{"comment":"","exp":"","file":"clfs.h","line":442,"type":"Struct","value":"typedef struct _CLS_CLIENT_INFORMATION\\r\\n{\\r\\n    CLS_INFORMATION ClfsInfo;                           \/\/ Contains base log file information.\\r\\n    ULONG ClientAttributes;                             \/\/ Virtual log file attributes.\\r\\n    LONGLONG ClientUndoCommitment;                      \/\/ Max. undo commitment for client.\\r\\n    CLS_LSN ClientArchiveTailLsn;                       \/\/ Marks the client archive tail.\\r\\n    CLS_LSN ClientBaseLsn;                              \/\/ Min. client LSN in active log region.\\r\\n    CLS_LSN ClientLastLsn;                              \/\/ Max. client LSN in active log region.\\r\\n    CLS_LSN ClientRestartLsn;                           \/\/ Location of restart record.\\r\\n} CLS_CLIENT_INFORMATION, *PCLS_CLIENT_INFORMATION, **PPCLS_CLIENT_INFORMATION;"},"_CLS_CONTAINER_INFORMATION":{"comment":"","exp":"","file":"clfs.h","line":594,"type":"Struct","value":"typedef struct _CLS_CONTAINER_INFORMATION\\r\\n{\\r\\n    ULONG FileAttributes;                    \/\/ File system attribute flag.\\r\\n    ULONGLONG CreationTime;                  \/\/ File creation time.\\r\\n    ULONGLONG LastAccessTime;                \/\/ Last time container was read\/written.\\r\\n    ULONGLONG LastWriteTime;                 \/\/ Last time container was written.\\r\\n    LONGLONG ContainerSize;                  \/\/ Size of container in bytes.\\r\\n    ULONG FileNameActualLength;              \/\/ Length of the actual file name.\\r\\n    ULONG FileNameLength;                    \/\/ Length of file name in buffer\\r\\n    WCHAR FileName [CLFS_MAX_CONTAINER_INFO];\/\/ File system name for container.\\r\\n    CLFS_CONTAINER_STATE State;              \/\/ Current state of the container.\\r\\n    CLFS_CONTAINER_ID PhysicalContainerId;   \/\/ Physical container identifier.\\r\\n    CLFS_CONTAINER_ID LogicalContainerId;    \/\/ Logical container identifier.\\r\\n} CLS_CONTAINER_INFORMATION, *PCLS_CONTAINER_INFORMATION, **PPCLS_CONTAINER_INFORMATION;"},"_CLS_CONTEXT_MODE":{"comment":"","exp":"","file":"clfs.h","line":319,"type":"Enum","value":"typedef enum _CLS_CONTEXT_MODE\\r\\n{\\r\\n    ClsContextNone = 0x00,\\r\\n    ClsContextUndoNext,\\r\\n    ClsContextPrevious,\\r\\n    ClsContextForward\\r\\n} CLS_CONTEXT_MODE, *PCLS_CONTEXT_MODE, **PPCLS_CONTEXT_MODE;"},"_CLS_INFORMATION":{"comment":"","exp":"","file":"clfs.h","line":405,"type":"Struct","value":"typedef struct _CLS_INFORMATION\\r\\n{\\r\\n    LONGLONG TotalAvailable;                            \/\/ Total log data space available.\\r\\n    LONGLONG CurrentAvailable;                          \/\/ Usable space in the log file.\\r\\n    LONGLONG TotalReservation;                       \/\/ Space reserved for UNDO's (aggregate for physical log)\\r\\n    ULONGLONG BaseFileSize;                             \/\/ Size of the base log file.\\r\\n    ULONGLONG ContainerSize;                            \/\/ Uniform size of log containers.\\r\\n    ULONG TotalContainers;                              \/\/ Total number of containers.\\r\\n    ULONG FreeContainers;                               \/\/ Number of containers not in active log.\\r\\n    ULONG TotalClients;                                 \/\/ Total number of clients.\\r\\n    ULONG Attributes;                                   \/\/ Log file attributes.\\r\\n    ULONG FlushThreshold;                               \/\/ Log file flush threshold.\\r\\n    ULONG SectorSize;                                   \/\/ Underlying container sector size.\\r\\n    CLS_LSN MinArchiveTailLsn;                          \/\/ Marks the global archive tail.\\r\\n    CLS_LSN BaseLsn;                                    \/\/ Start of the active log region.\\r\\n    CLS_LSN LastFlushedLsn;                             \/\/ Last flushed LSN in active log.\\r\\n    CLS_LSN LastLsn;                                    \/\/ End of active log region.\\r\\n    CLS_LSN RestartLsn;                                 \/\/ Location of restart record.\\r\\n    GUID Identity;                                      \/\/ Unique identifier for the log.\\r\\n} CLS_INFORMATION, *PCLS_INFORMATION, *PPCLS_INFORMATION;"},"_CLS_IOSTATS_CLASS":{"comment":"","exp":"","file":"clfs.h","line":656,"type":"Enum","value":"typedef enum _CLS_IOSTATS_CLASS\\r\\n{\\r\\n    ClsIoStatsDefault = 0x0000,\\r\\n    ClsIoStatsMax     = 0xFFFF\\r\\n} CLS_IOSTATS_CLASS, *PCLS_IOSTATS_CLASS, **PPCLS_IOSTATS_CLASS;"},"_CLS_IO_STATISTICS":{"comment":"","exp":"","file":"clfs.h","line":710,"type":"Struct","value":"typedef struct _CLS_IO_STATISTICS\\r\\n{\\r\\n    CLS_IO_STATISTICS_HEADER hdrIoStats;    \/\/ Statistics buffer header.\\r\\n    ULONGLONG cFlush;                       \/\/ Flush count.\\r\\n    ULONGLONG cbFlush;                      \/\/ Cumulative number of bytes flushed.\\r\\n    ULONGLONG cMetaFlush;                   \/\/ Metadata flush count.\\r\\n    ULONGLONG cbMetaFlush;                  \/\/ Cumulative number of metadata bytes flushed.\\r\\n} CLS_IO_STATISTICS, *PCLS_IO_STATISTICS, **PPCLS_IO_STATISTICS;"},"_CLS_IO_STATISTICS_HEADER":{"comment":"","exp":"","file":"clfs.h","line":690,"type":"Struct","value":"typedef struct _CLS_IO_STATISTICS_HEADER\\r\\n{\\r\\n    UCHAR                ubMajorVersion;     \/\/ Major version of the statistics buffer.\\r\\n    UCHAR                ubMinorVersion;     \/\/ Minor version of the statistics buffer.\\r\\n    CLFS_IOSTATS_CLASS  eStatsClass;        \/\/ I\/O statistics class.\\r\\n    USHORT              cbLength;           \/\/ Length of the statistics buffer.                     \\r\\n    ULONG               coffData;           \/\/ Offset of statistics counters.\\r\\n} CLS_IO_STATISTICS_HEADER, *PCLS_IO_STATISTICS_HEADER, **PPCLS_IO_STATISTICS_HEADER;"},"_CLS_LOG_INFORMATION_CLASS":{"comment":"","exp":"","file":"clfs.h","line":627,"type":"Enum","value":"typedef enum _CLS_LOG_INFORMATION_CLASS\\r\\n{\\r\\n    ClfsLogBasicInformation = 0x00,         \/\/ For virtual or physical logs, indicates the respective basic information.\\r\\n    ClfsLogBasicInformationPhysical,        \/\/ Always indicates physical log basic information.\\r\\n    ClfsLogPhysicalNameInformation,         \/\/ Always indicates physical name information.\\r\\n    ClfsLogStreamIdentifierInformation,     \/\/ Virtual\/physical log agnostic.\\r\\n#if (NTDDI_VERSION >= NTDDI_VISTA) || (_WIN32_WINNT >= _WIN32_WINNT_LONGHORN)\\r\\n    ClfsLogSystemMarkingInformation,        \/\/ Count of system marking references.\\r\\n    ClfsLogPhysicalLsnInformation           \/\/ Maps virtual LSNs to physical LSNs; only valid for physical logs.\\r\\n#endif \/* NTDDI_VERSION || _WIN32_WINNT *\/\\r\\n} CLS_LOG_INFORMATION_CLASS, *PCLS_LOG_INFORMATION_CLASS, **PPCLS_LOG_INFORMATION_CLASS;"},"_CLS_LSN":{"comment":"","exp":"","file":"clfs.h","line":155,"type":"Struct","value":"typedef struct _CLS_LSN\\r\\n{\\r\\n    ULONGLONG               Internal;\\r\\n} CLS_LSN, *PCLS_LSN, **PPCLS_LSN;"},"_CLS_SCAN_CONTEXT":{"comment":"","exp":"","file":"clfs.h","line":788,"type":"Struct","value":"typedef struct _CLS_SCAN_CONTEXT\\r\\n{\\r\\n    CLFS_NODE_ID cidNode;\\r\\n    PLOG_FILE_OBJECT plfoLog;\\r\\n    __declspec(align(8)) ULONG cIndex;\\r\\n    __declspec(align(8)) ULONG cContainers;\\r\\n    __declspec(align(8)) ULONG cContainersReturned;\\r\\n    __declspec(align(8)) CLFS_SCAN_MODE eScanMode;\\r\\n    __declspec(align(8)) PCLS_CONTAINER_INFORMATION pinfoContainer;\\r\\n    \\r\\n} CLS_SCAN_CONTEXT, *PCLS_SCAN_CONTEXT, **PPCLS_SCAN_CONTEXT;"},"_CLS_WRITE_ENTRY":{"comment":"","exp":"","file":"clfs.h","line":371,"type":"Struct","value":"typedef struct _CLS_WRITE_ENTRY\\r\\n{\\r\\n    PVOID Buffer;\\r\\n    ULONG ByteLength;\\r\\n} CLS_WRITE_ENTRY, *PCLS_WRITE_ENTRY, **PPCLS_WRITE_ENTRY;"},"_CONNECTION_INFO_0":{"comment":"","exp":"","file":"LMShare.h","line":550,"type":"Struct","value":"typedef struct _CONNECTION_INFO_0 {\\r\\n    DWORD   coni0_id;\\r\\n} CONNECTION_INFO_0, *PCONNECTION_INFO_0, *LPCONNECTION_INFO_0;"},"_CONNECTION_INFO_1":{"comment":"","exp":"","file":"LMShare.h","line":554,"type":"Struct","value":"typedef struct _CONNECTION_INFO_1 {\\r\\n    DWORD   coni1_id;\\r\\n    DWORD   coni1_type;\\r\\n    DWORD   coni1_num_opens;\\r\\n    DWORD   coni1_num_users;\\r\\n    DWORD   coni1_time;\\r\\n    LMSTR   coni1_username;\\r\\n    LMSTR   coni1_netname;\\r\\n} CONNECTION_INFO_1, *PCONNECTION_INFO_1, *LPCONNECTION_INFO_1;"},"_CREATEFILE2_EXTENDED_PARAMETERS":{"comment":"","exp":"","file":"fileapi.h","line":1285,"type":"Struct","value":"typedef struct _CREATEFILE2_EXTENDED_PARAMETERS {\\r\\n    DWORD dwSize;\\r\\n    DWORD dwFileAttributes;\\r\\n    DWORD dwFileFlags;\\r\\n    DWORD dwSecurityQosFlags;\\r\\n    LPSECURITY_ATTRIBUTES lpSecurityAttributes;\\r\\n    HANDLE hTemplateFile;\\r\\n} CREATEFILE2_EXTENDED_PARAMETERS, *PCREATEFILE2_EXTENDED_PARAMETERS, *LPCREATEFILE2_EXTENDED_PARAMETERS;"},"_EFS_COMPATIBILITY_INFO":{"comment":"","exp":"","file":"winefs.h","line":162,"type":"Struct","value":"typedef struct _EFS_COMPATIBILITY_INFO {\\r\\n    DWORD EfsVersion;\\r\\n    \\r\\n} EFS_COMPATIBILITY_INFO, *PEFS_COMPATIBILITY_INFO;"},"_EFS_DECRYPTION_STATUS_INFO":{"comment":"","exp":"","file":"winefs.h","line":206,"type":"Struct","value":"typedef struct _EFS_DECRYPTION_STATUS_INFO {\\r\\n    DWORD   dwDecryptionError;\\r\\n    DWORD   dwHashOffset;\\r\\n    DWORD   cbHash;\\r\\n} EFS_DECRYPTION_STATUS_INFO, *PEFS_DECRYPTION_STATUS_INFO;"},"_EFS_ENCRYPTION_STATUS_INFO":{"comment":"","exp":"","file":"winefs.h","line":214,"type":"Struct","value":"typedef struct _EFS_ENCRYPTION_STATUS_INFO {\\r\\n    BOOL    bHasCurrentKey;\\r\\n    DWORD   dwEncryptionError;\\r\\n} EFS_ENCRYPTION_STATUS_INFO, *PEFS_ENCRYPTION_STATUS_INFO;"},"_EFS_HASH_BLOB":{"comment":"","exp":"","file":"winefs.h","line":82,"type":"Struct","value":"typedef struct _EFS_HASH_BLOB {\\r\\n#ifdef MIDL_PASS\\r\\n    [range(0,100)] \\r\\n#endif \/\/ MIDL_PASS\\r\\n    DWORD   cbData;\\r\\n#ifdef MIDL_PASS\\r\\n    [size_is(cbData)]\\r\\n#endif \/\/ MIDL_PASS\\r\\n    PBYTE    pbData;\\r\\n} EFS_HASH_BLOB, *PEFS_HASH_BLOB;"},"_EFS_KEY_INFO":{"comment":"","exp":"","file":"winefs.h","line":148,"type":"Struct","value":"typedef struct _EFS_KEY_INFO {\\r\\n    DWORD   dwVersion;\\r\\n    ULONG   Entropy;\\r\\n    ALG_ID  Algorithm;\\r\\n    ULONG   KeyLength;\\r\\n    \\r\\n} EFS_KEY_INFO, *PEFS_KEY_INFO;"},"_EFS_PIN_BLOB":{"comment":"","exp":"","file":"winefs.h","line":123,"type":"Struct","value":"typedef struct _EFS_PIN_BLOB {\\r\\n    \\r\\n#ifdef MIDL_PASS\\r\\n    [range(0,8)] \\r\\n#endif \/\/ MIDL_PASS  \\r\\n    DWORD   cbPadding; \\r\\n#ifdef MIDL_PASS\\r\\n    [range(0,2048)] \\r\\n#endif \/\/ MIDL_PASS\\r\\n    DWORD   cbData;\\r\\n#ifdef MIDL_PASS\\r\\n    [size_is(cbData+cbPadding)]\\r\\n#endif \/\/ MIDL_PASS\\r\\n    PBYTE    pbData;\\r\\n} EFS_PIN_BLOB, *PEFS_PIN_BLOB;"},"_EFS_RPC_BLOB":{"comment":"","exp":"","file":"winefs.h","line":104,"type":"Struct","value":"typedef struct _EFS_RPC_BLOB {\\r\\n#ifdef MIDL_PASS\\r\\n    [range(0,266240)] \\r\\n#endif \/\/ MIDL_PASS\\r\\n    DWORD   cbData;\\r\\n#ifdef MIDL_PASS\\r\\n    [size_is(cbData)]\\r\\n#endif \/\/ MIDL_PASS\\r\\n    PBYTE    pbData;\\r\\n} EFS_RPC_BLOB, *PEFS_RPC_BLOB;"},"_EFS_VERSION_INFO":{"comment":"","exp":"","file":"winefs.h","line":191,"type":"Struct","value":"typedef struct _EFS_VERSION_INFO {\\r\\n    DWORD EfsVersion;\\r\\n    DWORD SubVersion;\\r\\n} EFS_VERSION_INFO, *PEFS_VERSION_INFO;"},"_ENCRYPTED_FILE_METADATA_SIGNATURE":{"comment":"","exp":"","file":"winefs.h","line":280,"type":"Struct","value":"typedef struct _ENCRYPTED_FILE_METADATA_SIGNATURE {\\r\\n\\tDWORD\\t\\t\\t\\t\\t\\t\\t\\tdwEfsAccessType;\\t\\r\\n\\tPENCRYPTION_CERTIFICATE_HASH_LIST\\tpCertificatesAdded;\\r\\n    PENCRYPTION_CERTIFICATE\\t\\t\\t\\tpEncryptionCertificate;\\r\\n    PEFS_RPC_BLOB\\t\\t\\t\\t\\t\\tpEfsStreamSignature;\\r\\n} ENCRYPTED_FILE_METADATA_SIGNATURE, *PENCRYPTED_FILE_METADATA_SIGNATURE;"},"_ENCRYPTION_CERTIFICATE":{"comment":"","exp":"","file":"winefs.h","line":227,"type":"Struct","value":"typedef struct _ENCRYPTION_CERTIFICATE {\\r\\n    DWORD cbTotalLength;\\r\\n    SID * pUserSid;\\r\\n    PEFS_CERTIFICATE_BLOB pCertBlob;\\r\\n} ENCRYPTION_CERTIFICATE, *PENCRYPTION_CERTIFICATE;"},"_ENCRYPTION_CERTIFICATE_HASH":{"comment":"","exp":"","file":"winefs.h","line":236,"type":"Struct","value":"typedef struct _ENCRYPTION_CERTIFICATE_HASH {\\r\\n    DWORD cbTotalLength;\\r\\n    SID * pUserSid;\\r\\n    PEFS_HASH_BLOB  pHash;\\r\\n#ifdef MIDL_PASS\\r\\n    [string]\\r\\n#endif \/\/ MIDL_PASS\\r\\n    LPWSTR lpDisplayInformation;\\r\\n} ENCRYPTION_CERTIFICATE_HASH, *PENCRYPTION_CERTIFICATE_HASH;"},"_ENCRYPTION_CERTIFICATE_HASH_LIST":{"comment":"","exp":"","file":"winefs.h","line":248,"type":"Struct","value":"typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST {\\r\\n#ifdef MIDL_PASS\\r\\n    [range(0,500)] \\r\\n#endif \/\/ MIDL_PASS\\r\\n    DWORD nCert_Hash;\\r\\n#ifdef MIDL_PASS\\r\\n    [size_is(nCert_Hash)]\\r\\n#endif \/\/ MIDL_PASS\\r\\n     PENCRYPTION_CERTIFICATE_HASH * pUsers;\\r\\n} ENCRYPTION_CERTIFICATE_HASH_LIST, *PENCRYPTION_CERTIFICATE_HASH_LIST;"},"_ENCRYPTION_CERTIFICATE_LIST":{"comment":"","exp":"","file":"winefs.h","line":261,"type":"Struct","value":"typedef struct _ENCRYPTION_CERTIFICATE_LIST {\\r\\n#ifdef MIDL_PASS\\r\\n    [range(0,500)] \\r\\n#endif \/\/ MIDL_PASS\\r\\n    DWORD nUsers;\\r\\n#ifdef MIDL_PASS\\r\\n    [size_is(nUsers)]\\r\\n#endif \/\/ MIDL_PASS\\r\\n     PENCRYPTION_CERTIFICATE * pUsers;\\r\\n} ENCRYPTION_CERTIFICATE_LIST, *PENCRYPTION_CERTIFICATE_LIST;"},"_ENCRYPTION_PROTECTOR":{"comment":"","exp":"","file":"winefs.h","line":293,"type":"Struct","value":"typedef struct _ENCRYPTION_PROTECTOR{\\r\\n    DWORD cbTotalLength;\\r\\n    SID * pUserSid;\\r\\n#ifdef MIDL_PASS\\r\\n    [string]\\r\\n#endif \/\/ MIDL_PASS\\r\\n    LPWSTR lpProtectorDescriptor;\\r\\n} ENCRYPTION_PROTECTOR, *PENCRYPTION_PROTECTOR;"},"_ENCRYPTION_PROTECTOR_LIST":{"comment":"","exp":"","file":"winefs.h","line":302,"type":"Struct","value":"typedef struct _ENCRYPTION_PROTECTOR_LIST {\\r\\n    DWORD nProtectors;\\r\\n#ifdef MIDL_PASS\\r\\n    [size_is(nProtectors)]\\r\\n#endif \/\/ MIDL_PASS\\r\\n    PENCRYPTION_PROTECTOR *pProtectors;\\r\\n} ENCRYPTION_PROTECTOR_LIST, *PENCRYPTION_PROTECTOR_LIST;"},"_FILE_INFO_2":{"comment":"","exp":"","file":"LMShare.h","line":624,"type":"Struct","value":"typedef struct _FILE_INFO_2 {\\r\\n    DWORD     fi2_id;\\r\\n} FILE_INFO_2, *PFILE_INFO_2, *LPFILE_INFO_2;"},"_FILE_INFO_3":{"comment":"","exp":"","file":"LMShare.h","line":628,"type":"Struct","value":"typedef struct _FILE_INFO_3 {\\r\\n    DWORD     fi3_id;\\r\\n    DWORD     fi3_permissions;\\r\\n    DWORD     fi3_num_locks;\\r\\n    LMSTR     fi3_pathname;\\r\\n    LMSTR     fi3_username;\\r\\n} FILE_INFO_3, *PFILE_INFO_3, *LPFILE_INFO_3;"},"_KCRM_MARSHAL_HEADER":{"comment":"","exp":"","file":"ktmtypes.h","line":183,"type":"Struct","value":"typedef struct _KCRM_MARSHAL_HEADER {\\r\\n    ULONG              VersionMajor;\\r\\n    ULONG              VersionMinor;\\r\\n    ULONG              NumProtocols;\\r\\n    ULONG              Unused;        \/\/ for alignment purposes\\r\\n} KCRM_MARSHAL_HEADER, *PKCRM_MARSHAL_HEADER, *RESTRICTED_POINTER PRKCRM_MARSHAL_HEADER;"},"_KCRM_PROTOCOL_BLOB":{"comment":"","exp":"","file":"ktmtypes.h","line":199,"type":"Struct","value":"typedef struct _KCRM_PROTOCOL_BLOB {\\r\\n    CRM_PROTOCOL_ID    ProtocolId;\\r\\n    _Field_range_ (0,ULONG_MAX\/2) ULONG StaticInfoLength;\\r\\n    ULONG              TransactionIdInfoLength; \/\/??? ProtocolDynamicInfoLength;\\r\\n    ULONG              Unused1;        \/\/ for alignment purposes\\r\\n    ULONG              Unused2;        \/\/ for alignment purposes\\r\\n} KCRM_PROTOCOL_BLOB, *PKCRM_PROTOCOL_BLOB, *RESTRICTED_POINTER PRKCRM_PROTOCOL_BLOB;"},"_KCRM_TRANSACTION_BLOB":{"comment":"","exp":"","file":"ktmtypes.h","line":190,"type":"Struct","value":"typedef struct _KCRM_TRANSACTION_BLOB {\\r\\n    UOW                UOW;\\r\\n    GUID               TmIdentity;\\r\\n    ULONG              IsolationLevel;\\r\\n    ULONG              IsolationFlags;\\r\\n    ULONG              Timeout;\\r\\n    WCHAR              Description[MAX_TRANSACTION_DESCRIPTION_LENGTH];\\r\\n} KCRM_TRANSACTION_BLOB, *PKCRM_TRANSACTION_BLOB, *RESTRICTED_POINTER PRKCRM_TRANSACTION_BLOB;"},"_LOG_MANAGEMENT_CALLBACKS":{"comment":"","exp":"","file":"clfsmgmtw32.h","line":77,"type":"Struct","value":"typedef struct _LOG_MANAGEMENT_CALLBACKS\\r\\n{\\r\\n    PVOID   CallbackContext;\\r\\n    PLOG_TAIL_ADVANCE_CALLBACK AdvanceTailCallback;\\r\\n    PLOG_FULL_HANDLER_CALLBACK LogFullHandlerCallback;\\r\\n    PLOG_UNPINNED_CALLBACK     LogUnpinnedCallback;\\r\\n} LOG_MANAGEMENT_CALLBACKS, *PLOG_MANAGEMENT_CALLBACKS;"},"_NTMS_ALLOCATION_INFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":257,"type":"Struct","value":"typedef struct _NTMS_ALLOCATION_INFORMATION\\r\\n{\\r\\n    DWORD  dwSize;                      \/\/ size of structure\\r\\n#ifdef MIDL_PASS\\r\\n    [ptr]  LPNTMS_ASYNC_IO lpReserved;  \/\/ future async io control\\r\\n#else\\r\\n    LPVOID lpReserved;\\r\\n#endif\\r\\n    NTMS_GUID AllocatedFrom;            \/\/ original source of media (scratch pool, app pool, import etc).\\r\\n} NTMS_ALLOCATION_INFORMATION, *LPNTMS_ALLOCATION_INFORMATION;"},"_NTMS_ASYNC_IO":{"comment":"","exp":"","file":"NTMSAPI.h","line":120,"type":"Struct","value":"typedef struct _NTMS_ASYNC_IO {\\r\\n    NTMS_GUID   OperationId;                \/\/ reserved - do not use\\r\\n    NTMS_GUID   EventId;                    \/\/ reserved - do not use\\r\\n    DWORD       dwOperationType;            \/\/ reserved - do not use\\r\\n    DWORD       dwResult;                   \/\/ completion status\\r\\n    DWORD       dwAsyncState;               \/\/ current state of request\\r\\n#ifdef MIDL_PASS\\r\\n    NTMS_HANDLE hEvent;\\r\\n#else\\r\\n    HANDLE      hEvent;                     \/\/ event handle to signal on status change\\r\\n#endif                                      \/\/ or request completion\\r\\n    BOOL        bOnStateChange;             \/\/ indicate to signal on status change also\\r\\n} NTMS_ASYNC_IO, *LPNTMS_ASYNC_IO;"},"_NTMS_CHANGERINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"_NTMS_CHANGERINFORMATIONA","file":"NTMSAPI.h","line":561,"type":"Other","value":"_NTMS_CHANGERINFORMATIONA"}],"exp":"_NTMS_CHANGERINFORMATIONW","file":"NTMSAPI.h","line":558,"type":"Other","value":"_NTMS_CHANGERINFORMATIONW"},"_NTMS_CHANGERINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":565,"type":"Struct","value":"typedef struct _NTMS_CHANGERINFORMATIONA {\\r\\n    DWORD       Number;\\r\\n    NTMS_GUID   ChangerType;\\r\\n    CHAR        szSerialNumber[NTMS_SERIALNUMBER_LENGTH];\\r\\n    CHAR        szRevision[NTMS_REVISION_LENGTH];\\r\\n    CHAR        szDeviceName[NTMS_DEVICENAME_LENGTH];\\r\\n    WORD        ScsiPort;\\r\\n    WORD        ScsiBus;\\r\\n    WORD        ScsiTarget;\\r\\n    WORD        ScsiLun;\\r\\n    NTMS_GUID   Library;\\r\\n} NTMS_CHANGERINFORMATIONA;"},"_NTMS_CHANGERINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":578,"type":"Struct","value":"typedef struct _NTMS_CHANGERINFORMATIONW {\\r\\n    DWORD       Number;\\r\\n    NTMS_GUID   ChangerType;\\r\\n    WCHAR       szSerialNumber[NTMS_SERIALNUMBER_LENGTH];\\r\\n    WCHAR       szRevision[NTMS_REVISION_LENGTH];\\r\\n    WCHAR       szDeviceName[NTMS_DEVICENAME_LENGTH];\\r\\n    WORD        ScsiPort;\\r\\n    WORD        ScsiBus;\\r\\n    WORD        ScsiTarget;\\r\\n    WORD        ScsiLun;\\r\\n    NTMS_GUID   Library;\\r\\n} NTMS_CHANGERINFORMATIONW;"},"_NTMS_CHANGERTYPEINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"_NTMS_CHANGERTYPEINFORMATIONA","file":"NTMSAPI.h","line":821,"type":"Other","value":"_NTMS_CHANGERTYPEINFORMATIONA"}],"exp":"_NTMS_CHANGERTYPEINFORMATIONW","file":"NTMSAPI.h","line":818,"type":"Other","value":"_NTMS_CHANGERTYPEINFORMATIONW"},"_NTMS_CHANGERTYPEINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":825,"type":"Struct","value":"typedef struct _NTMS_CHANGERTYPEINFORMATIONA {\\r\\n    CHAR        szVendor[NTMS_VENDORNAME_LENGTH];\\r\\n    CHAR        szProduct[NTMS_PRODUCTNAME_LENGTH];\\r\\n    DWORD       DeviceType;\\r\\n} NTMS_CHANGERTYPEINFORMATIONA;"},"_NTMS_CHANGERTYPEINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":831,"type":"Struct","value":"typedef struct _NTMS_CHANGERTYPEINFORMATIONW {\\r\\n    WCHAR       szVendor[NTMS_VENDORNAME_LENGTH];\\r\\n    WCHAR       szProduct[NTMS_PRODUCTNAME_LENGTH];\\r\\n    DWORD       DeviceType;\\r\\n} NTMS_CHANGERTYPEINFORMATIONW;"},"_NTMS_COMPUTERINFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":981,"type":"Struct","value":"typedef struct _NTMS_COMPUTERINFORMATION {\\r\\n    DWORD       dwLibRequestPurgeTime;\\r\\n    DWORD       dwOpRequestPurgeTime;\\r\\n    DWORD       dwLibRequestFlags;\\r\\n    DWORD       dwOpRequestFlags;\\r\\n    DWORD       dwMediaPoolPolicy;\\r\\n} NTMS_COMPUTERINFORMATION;"},"_NTMS_DRIVEINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"_NTMS_DRIVEINFORMATIONA","file":"NTMSAPI.h","line":463,"type":"Other","value":"_NTMS_DRIVEINFORMATIONA"}],"exp":"_NTMS_DRIVEINFORMATIONW","file":"NTMSAPI.h","line":460,"type":"Other","value":"_NTMS_DRIVEINFORMATIONW"},"_NTMS_DRIVEINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":467,"type":"Struct","value":"typedef struct _NTMS_DRIVEINFORMATIONA {\\r\\n    DWORD       Number;\\r\\n    DWORD       State;\\r\\n    NTMS_GUID   DriveType;\\r\\n    CHAR        szDeviceName[NTMS_DEVICENAME_LENGTH];\\r\\n    CHAR        szSerialNumber[NTMS_SERIALNUMBER_LENGTH];\\r\\n    CHAR        szRevision[NTMS_REVISION_LENGTH];\\r\\n    WORD        ScsiPort;\\r\\n    WORD        ScsiBus;\\r\\n    WORD        ScsiTarget;\\r\\n    WORD        ScsiLun;\\r\\n    DWORD       dwMountCount;\\r\\n    SYSTEMTIME  LastCleanedTs;\\r\\n    NTMS_GUID   SavedPartitionId;\\r\\n    NTMS_GUID   Library;\\r\\n    GUID        Reserved;\\r\\n    DWORD       dwDeferDismountDelay;\\r\\n} NTMS_DRIVEINFORMATIONA;"},"_NTMS_DRIVEINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":486,"type":"Struct","value":"typedef struct _NTMS_DRIVEINFORMATIONW {\\r\\n    DWORD       Number;\\r\\n    DWORD       State;\\r\\n    NTMS_GUID   DriveType;\\r\\n    WCHAR       szDeviceName[NTMS_DEVICENAME_LENGTH];\\r\\n    WCHAR       szSerialNumber[NTMS_SERIALNUMBER_LENGTH];\\r\\n    WCHAR       szRevision[NTMS_REVISION_LENGTH];\\r\\n    WORD        ScsiPort;\\r\\n    WORD        ScsiBus;\\r\\n    WORD        ScsiTarget;\\r\\n    WORD        ScsiLun;\\r\\n    DWORD       dwMountCount;\\r\\n    SYSTEMTIME  LastCleanedTs;\\r\\n    NTMS_GUID   SavedPartitionId;\\r\\n    NTMS_GUID   Library;\\r\\n    GUID        Reserved;\\r\\n    DWORD       dwDeferDismountDelay;\\r\\n} NTMS_DRIVEINFORMATIONW;"},"_NTMS_DRIVETYPEINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"_NTMS_DRIVETYPEINFORMATIONA","file":"NTMSAPI.h","line":799,"type":"Other","value":"_NTMS_DRIVETYPEINFORMATIONA"}],"exp":"_NTMS_DRIVETYPEINFORMATIONW","file":"NTMSAPI.h","line":796,"type":"Other","value":"_NTMS_DRIVETYPEINFORMATIONW"},"_NTMS_DRIVETYPEINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":803,"type":"Struct","value":"typedef struct _NTMS_DRIVETYPEINFORMATIONA {\\r\\n    CHAR        szVendor[NTMS_VENDORNAME_LENGTH];\\r\\n    CHAR        szProduct[NTMS_PRODUCTNAME_LENGTH];\\r\\n    DWORD       NumberOfHeads;\\r\\n    DWORD       DeviceType;\\r\\n} NTMS_DRIVETYPEINFORMATIONA;"},"_NTMS_DRIVETYPEINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":810,"type":"Struct","value":"typedef struct _NTMS_DRIVETYPEINFORMATIONW {\\r\\n    WCHAR       szVendor[NTMS_VENDORNAME_LENGTH];\\r\\n    WCHAR       szProduct[NTMS_PRODUCTNAME_LENGTH];\\r\\n    DWORD       NumberOfHeads;\\r\\n    DWORD       DeviceType;\\r\\n} NTMS_DRIVETYPEINFORMATIONW;"},"_NTMS_I1_LIBRARYINFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":1154,"type":"Struct","value":"typedef struct _NTMS_I1_LIBRARYINFORMATION {\\r\\n    DWORD       LibraryType;\\r\\n    NTMS_GUID   CleanerSlot;\\r\\n    NTMS_GUID   CleanerSlotDefault;\\r\\n    BOOL        LibrarySupportsDriveCleaning;\\r\\n    BOOL        BarCodeReaderInstalled;\\r\\n    DWORD       InventoryMethod;\\r\\n    DWORD       dwCleanerUsesRemaining;\\r\\n    DWORD       FirstDriveNumber;\\r\\n    DWORD       dwNumberOfDrives;\\r\\n    DWORD       FirstSlotNumber;\\r\\n    DWORD       dwNumberOfSlots;\\r\\n    DWORD       FirstDoorNumber;\\r\\n    DWORD       dwNumberOfDoors;\\r\\n    DWORD       FirstPortNumber;\\r\\n    DWORD       dwNumberOfPorts;\\r\\n    DWORD       FirstChangerNumber;\\r\\n    DWORD       dwNumberOfChangers;\\r\\n    DWORD       dwNumberOfMedia;\\r\\n    DWORD       dwNumberOfMediaTypes;\\r\\n    DWORD       dwNumberOfLibRequests;\\r\\n    GUID        Reserved;\\r\\n} NTMS_I1_LIBRARYINFORMATION;"},"_NTMS_I1_LIBREQUESTINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":1178,"type":"Struct","value":"typedef struct _NTMS_I1_LIBREQUESTINFORMATIONA {\\r\\n    DWORD       OperationCode;\\r\\n    DWORD       OperationOption;\\r\\n    DWORD       State;\\r\\n    NTMS_GUID   PartitionId;\\r\\n    NTMS_GUID   DriveId;\\r\\n    NTMS_GUID   PhysMediaId;\\r\\n    NTMS_GUID   Library;\\r\\n    NTMS_GUID   SlotId;\\r\\n    SYSTEMTIME  TimeQueued;\\r\\n    SYSTEMTIME  TimeCompleted;\\r\\n    CHAR        szApplication[NTMS_APPLICATIONNAME_LENGTH];\\r\\n    CHAR        szUser[NTMS_USERNAME_LENGTH];\\r\\n    CHAR        szComputer[NTMS_COMPUTERNAME_LENGTH];\\r\\n} NTMS_I1_LIBREQUESTINFORMATIONA;"},"_NTMS_I1_LIBREQUESTINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":1194,"type":"Struct","value":"typedef struct _NTMS_I1_LIBREQUESTINFORMATIONW {\\r\\n    DWORD       OperationCode;\\r\\n    DWORD       OperationOption;\\r\\n    DWORD       State;\\r\\n    NTMS_GUID   PartitionId;\\r\\n    NTMS_GUID   DriveId;\\r\\n    NTMS_GUID   PhysMediaId;\\r\\n    NTMS_GUID   Library;\\r\\n    NTMS_GUID   SlotId;\\r\\n    SYSTEMTIME  TimeQueued;\\r\\n    SYSTEMTIME  TimeCompleted;\\r\\n    WCHAR       szApplication[NTMS_APPLICATIONNAME_LENGTH];\\r\\n    WCHAR       szUser[NTMS_USERNAME_LENGTH];\\r\\n    WCHAR       szComputer[NTMS_COMPUTERNAME_LENGTH];\\r\\n} NTMS_I1_LIBREQUESTINFORMATIONW;"},"_NTMS_I1_OBJECTINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":1292,"type":"Struct","value":"typedef struct _NTMS_I1_OBJECTINFORMATIONA {\\r\\n    DWORD       dwSize;\\r\\n    DWORD       dwType;\\r\\n    SYSTEMTIME  Created;\\r\\n    SYSTEMTIME  Modified;\\r\\n    NTMS_GUID   ObjectGuid;\\r\\n    BOOL        Enabled;\\r\\n    DWORD       dwOperationalState;\\r\\n    CHAR        szName[NTMS_OBJECTNAME_LENGTH];\\r\\n    CHAR        szDescription[NTMS_DESCRIPTION_LENGTH];\\r\\n#ifdef MIDL_PASS\\r\\n    [switch_is(dwType)] union {\\r\\n        [case(NTMS_DRIVE)]              NTMS_DRIVEINFORMATIONA Drive;\\r\\n        [case(NTMS_DRIVE_TYPE)]         NTMS_DRIVETYPEINFORMATIONA DriveType;\\r\\n        [case(NTMS_LIBRARY)]            NTMS_I1_LIBRARYINFORMATION Library;\\r\\n        [case(NTMS_CHANGER)]            NTMS_CHANGERINFORMATIONA Changer;\\r\\n        [case(NTMS_CHANGER_TYPE)]       NTMS_CHANGERTYPEINFORMATIONA ChangerType;\\r\\n        [case(NTMS_STORAGESLOT)]        NTMS_STORAGESLOTINFORMATION StorageSlot;\\r\\n        [case(NTMS_IEDOOR)]             NTMS_IEDOORINFORMATION IEDoor;\\r\\n        [case(NTMS_IEPORT)]             NTMS_IEPORTINFORMATION IEPort;\\r\\n        [case(NTMS_PHYSICAL_MEDIA)]     NTMS_I1_PMIDINFORMATIONA PhysicalMedia;\\r\\n        [case(NTMS_LOGICAL_MEDIA)]      NTMS_LMIDINFORMATION LogicalMedia;\\r\\n        [case(NTMS_PARTITION)]          NTMS_I1_PARTITIONINFORMATIONA Partition;\\r\\n        [case(NTMS_MEDIA_POOL)]         NTMS_MEDIAPOOLINFORMATION MediaPool;\\r\\n        [case(NTMS_MEDIA_TYPE)]         NTMS_MEDIATYPEINFORMATION MediaType;\\r\\n        [case(NTMS_LIBREQUEST)]         NTMS_I1_LIBREQUESTINFORMATIONA LibRequest;\\r\\n        [case(NTMS_OPREQUEST)]          NTMS_I1_OPREQUESTINFORMATIONA OpRequest;\\r\\n        [default]                                       ;\\r\\n    } Info;\\r\\n#else\\r\\n    union {\\r\\n        NTMS_DRIVEINFORMATIONA Drive;\\r\\n        NTMS_DRIVETYPEINFORMATIONA DriveType;\\r\\n        NTMS_I1_LIBRARYINFORMATION Library;\\r\\n        NTMS_CHANGERINFORMATIONA Changer;\\r\\n        NTMS_CHANGERTYPEINFORMATIONA ChangerType;\\r\\n        NTMS_STORAGESLOTINFORMATION StorageSlot;\\r\\n        NTMS_IEDOORINFORMATION IEDoor;\\r\\n        NTMS_IEPORTINFORMATION IEPort;\\r\\n        NTMS_I1_PMIDINFORMATIONA PhysicalMedia;\\r\\n        NTMS_LMIDINFORMATION LogicalMedia;\\r\\n        NTMS_I1_PARTITIONINFORMATIONA Partition;\\r\\n        NTMS_MEDIAPOOLINFORMATION MediaPool;\\r\\n        NTMS_MEDIATYPEINFORMATION MediaType;\\r\\n        NTMS_I1_LIBREQUESTINFORMATIONA LibRequest;\\r\\n        NTMS_I1_OPREQUESTINFORMATIONA OpRequest;\\r\\n    } Info;\\r\\n#endif  \/\/ MIDL_PASS\\r\\n} NTMS_I1_OBJECTINFORMATIONA, *LPNTMS_I1_OBJECTINFORMATIONA;"},"_NTMS_I1_OBJECTINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":1342,"type":"Struct","value":"typedef struct _NTMS_I1_OBJECTINFORMATIONW {\\r\\n    DWORD       dwSize;\\r\\n    DWORD       dwType;\\r\\n    SYSTEMTIME  Created;\\r\\n    SYSTEMTIME  Modified;\\r\\n    NTMS_GUID   ObjectGuid;\\r\\n    BOOL        Enabled;\\r\\n    DWORD       dwOperationalState;\\r\\n    WCHAR       szName[NTMS_OBJECTNAME_LENGTH];\\r\\n    WCHAR       szDescription[NTMS_DESCRIPTION_LENGTH];\\r\\n#ifdef MIDL_PASS\\r\\n    [switch_is(dwType)] union {\\r\\n        [case(NTMS_DRIVE)]              NTMS_DRIVEINFORMATIONW Drive;\\r\\n        [case(NTMS_DRIVE_TYPE)]         NTMS_DRIVETYPEINFORMATIONW DriveType;\\r\\n        [case(NTMS_LIBRARY)]            NTMS_I1_LIBRARYINFORMATION Library;\\r\\n        [case(NTMS_CHANGER)]            NTMS_CHANGERINFORMATIONW Changer;\\r\\n        [case(NTMS_CHANGER_TYPE)]       NTMS_CHANGERTYPEINFORMATIONW ChangerType;\\r\\n        [case(NTMS_STORAGESLOT)]        NTMS_STORAGESLOTINFORMATION StorageSlot;\\r\\n        [case(NTMS_IEDOOR)]             NTMS_IEDOORINFORMATION IEDoor;\\r\\n        [case(NTMS_IEPORT)]             NTMS_IEPORTINFORMATION IEPort;\\r\\n        [case(NTMS_PHYSICAL_MEDIA)]     NTMS_I1_PMIDINFORMATIONW PhysicalMedia;\\r\\n        [case(NTMS_LOGICAL_MEDIA)]      NTMS_LMIDINFORMATION LogicalMedia;\\r\\n        [case(NTMS_PARTITION)]          NTMS_I1_PARTITIONINFORMATIONW Partition;\\r\\n        [case(NTMS_MEDIA_POOL)]         NTMS_MEDIAPOOLINFORMATION MediaPool;\\r\\n        [case(NTMS_MEDIA_TYPE)]         NTMS_MEDIATYPEINFORMATION MediaType;\\r\\n        [case(NTMS_LIBREQUEST)]         NTMS_I1_LIBREQUESTINFORMATIONW LibRequest;\\r\\n        [case(NTMS_OPREQUEST)]          NTMS_I1_OPREQUESTINFORMATIONW OpRequest;\\r\\n        [default]                                       ;\\r\\n    } Info;\\r\\n#else\\r\\n    union {\\r\\n        NTMS_DRIVEINFORMATIONW Drive;\\r\\n        NTMS_DRIVETYPEINFORMATIONW DriveType;\\r\\n        NTMS_I1_LIBRARYINFORMATION Library;\\r\\n        NTMS_CHANGERINFORMATIONW Changer;\\r\\n        NTMS_CHANGERTYPEINFORMATIONW ChangerType;\\r\\n        NTMS_STORAGESLOTINFORMATION StorageSlot;\\r\\n        NTMS_IEDOORINFORMATION IEDoor;\\r\\n        NTMS_IEPORTINFORMATION IEPort;\\r\\n        NTMS_I1_PMIDINFORMATIONW PhysicalMedia;\\r\\n        NTMS_LMIDINFORMATION LogicalMedia;\\r\\n        NTMS_I1_PARTITIONINFORMATIONW Partition;\\r\\n        NTMS_MEDIAPOOLINFORMATION MediaPool;\\r\\n        NTMS_MEDIATYPEINFORMATION MediaType;\\r\\n        NTMS_I1_LIBREQUESTINFORMATIONW LibRequest;\\r\\n        NTMS_I1_OPREQUESTINFORMATIONW OpRequest;\\r\\n    } Info;\\r\\n#endif  \/\/ MIDL_PASS\\r\\n} NTMS_I1_OBJECTINFORMATIONW, *LPNTMS_I1_OBJECTINFORMATIONW;"},"_NTMS_I1_OPREQUESTINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":1264,"type":"Struct","value":"typedef struct _NTMS_I1_OPREQUESTINFORMATIONA {\\r\\n    DWORD       Request;\\r\\n    SYSTEMTIME  Submitted;\\r\\n    DWORD       State;\\r\\n    CHAR        szMessage[NTMS_I1_MESSAGE_LENGTH];\\r\\n    DWORD       Arg1Type;\\r\\n    NTMS_GUID   Arg1;\\r\\n    DWORD       Arg2Type;\\r\\n    NTMS_GUID   Arg2;\\r\\n    CHAR        szApplication[NTMS_APPLICATIONNAME_LENGTH];\\r\\n    CHAR        szUser[NTMS_USERNAME_LENGTH];\\r\\n    CHAR        szComputer[NTMS_COMPUTERNAME_LENGTH];\\r\\n} NTMS_I1_OPREQUESTINFORMATIONA;"},"_NTMS_I1_OPREQUESTINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":1278,"type":"Struct","value":"typedef struct _NTMS_I1_OPREQUESTINFORMATIONW {\\r\\n    DWORD       Request;\\r\\n    SYSTEMTIME  Submitted;\\r\\n    DWORD       State;\\r\\n    WCHAR       szMessage[NTMS_I1_MESSAGE_LENGTH];\\r\\n    DWORD       Arg1Type;\\r\\n    NTMS_GUID   Arg1;\\r\\n    DWORD       Arg2Type;\\r\\n    NTMS_GUID   Arg2;\\r\\n    WCHAR       szApplication[NTMS_APPLICATIONNAME_LENGTH];\\r\\n    WCHAR       szUser[NTMS_USERNAME_LENGTH];\\r\\n    WCHAR       szComputer[NTMS_COMPUTERNAME_LENGTH];\\r\\n} NTMS_I1_OPREQUESTINFORMATIONW;"},"_NTMS_I1_PARTITIONINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":1238,"type":"Struct","value":"typedef struct _NTMS_I1_PARTITIONINFORMATIONA {\\r\\n    NTMS_GUID   PhysicalMedia;\\r\\n    NTMS_GUID   LogicalMedia;\\r\\n    DWORD       State;\\r\\n    WORD        Side;\\r\\n    DWORD       dwOmidLabelIdLength;    \/\/ binary id\\r\\n    BYTE        OmidLabelId[255];\\r\\n    CHAR        szOmidLabelType[64];    \/\/ type string\\r\\n    CHAR        szOmidLabelInfo[256];   \/\/ info string\\r\\n    DWORD       dwMountCount;\\r\\n    DWORD       dwAllocateCount;\\r\\n} NTMS_I1_PARTITIONINFORMATIONA;"},"_NTMS_I1_PARTITIONINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":1251,"type":"Struct","value":"typedef struct _NTMS_I1_PARTITIONINFORMATIONW {\\r\\n    NTMS_GUID   PhysicalMedia;\\r\\n    NTMS_GUID   LogicalMedia;\\r\\n    DWORD       State;\\r\\n    WORD        Side;\\r\\n    DWORD       dwOmidLabelIdLength;    \/\/ binary id\\r\\n    BYTE        OmidLabelId[255];\\r\\n    WCHAR       szOmidLabelType[64];    \/\/ type string\\r\\n    WCHAR       szOmidLabelInfo[256];   \/\/ info string\\r\\n    DWORD       dwMountCount;\\r\\n    DWORD       dwAllocateCount;\\r\\n} NTMS_I1_PARTITIONINFORMATIONW;"},"_NTMS_I1_PMIDINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":1210,"type":"Struct","value":"typedef struct _NTMS_I1_PMIDINFORMATIONA {\\r\\n    NTMS_GUID   CurrentLibrary;                 \/\/ the current library\\r\\n    NTMS_GUID   MediaPool;                      \/\/ media pool that the media belongs to\\r\\n    NTMS_GUID   Location;                       \/\/ actual location of the media\\r\\n    DWORD       LocationType;\\r\\n    NTMS_GUID   MediaType;\\r\\n    NTMS_GUID   HomeSlot;                       \/\/ home slot for online media\\r\\n    CHAR        szBarCode[NTMS_BARCODE_LENGTH]; \/\/ bar code string\\r\\n    DWORD       BarCodeState;                   \/\/ current state of the bar code\\r\\n    CHAR        szSequenceNumber[NTMS_SEQUENCE_LENGTH];\\r\\n    DWORD       MediaState;                     \/\/ current media state\\r\\n    DWORD       dwNumberOfPartitions;\\r\\n} NTMS_I1_PMIDINFORMATIONA;"},"_NTMS_I1_PMIDINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":1224,"type":"Struct","value":"typedef struct _NTMS_I1_PMIDINFORMATIONW {\\r\\n    NTMS_GUID   CurrentLibrary;                 \/\/ the current library\\r\\n    NTMS_GUID   MediaPool;                      \/\/ media pool that the media belongs to\\r\\n    NTMS_GUID   Location;                       \/\/ actual location of the media\\r\\n    DWORD       LocationType;\\r\\n    NTMS_GUID   MediaType;\\r\\n    NTMS_GUID   HomeSlot;                       \/\/ home slot for online media\\r\\n    WCHAR       szBarCode[NTMS_BARCODE_LENGTH]; \/\/ bar code string\\r\\n    DWORD       BarCodeState;                   \/\/ current state of the bar code\\r\\n    WCHAR       szSequenceNumber[NTMS_SEQUENCE_LENGTH];\\r\\n    DWORD       MediaState;                     \/\/ current media state\\r\\n    DWORD       dwNumberOfPartitions;\\r\\n} NTMS_I1_PMIDINFORMATIONW;"},"_NTMS_IEDOORINFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":611,"type":"Struct","value":"typedef struct _NTMS_IEDOORINFORMATION {\\r\\n    DWORD       Number;\\r\\n    DWORD       State;\\r\\n    WORD        MaxOpenSecs;\\r\\n    NTMS_GUID   Library;\\r\\n} NTMS_IEDOORINFORMATION;"},"_NTMS_IEPORTINFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":630,"type":"Struct","value":"typedef struct _NTMS_IEPORTINFORMATION {\\r\\n    DWORD       Number;\\r\\n    DWORD       Content;\\r\\n    DWORD       Position;\\r\\n    WORD        MaxExtendSecs;\\r\\n    NTMS_GUID   Library;\\r\\n} NTMS_IEPORTINFORMATION;"},"_NTMS_LIBRARYINFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":531,"type":"Struct","value":"typedef struct _NTMS_LIBRARYINFORMATION {\\r\\n    DWORD       LibraryType;\\r\\n    NTMS_GUID   CleanerSlot;\\r\\n    NTMS_GUID   CleanerSlotDefault;\\r\\n    BOOL        LibrarySupportsDriveCleaning;\\r\\n    BOOL        BarCodeReaderInstalled;\\r\\n    DWORD       InventoryMethod;\\r\\n    DWORD       dwCleanerUsesRemaining;\\r\\n    DWORD       FirstDriveNumber;\\r\\n    DWORD       dwNumberOfDrives;\\r\\n    DWORD       FirstSlotNumber;\\r\\n    DWORD       dwNumberOfSlots;\\r\\n    DWORD       FirstDoorNumber;\\r\\n    DWORD       dwNumberOfDoors;\\r\\n    DWORD       FirstPortNumber;\\r\\n    DWORD       dwNumberOfPorts;\\r\\n    DWORD       FirstChangerNumber;\\r\\n    DWORD       dwNumberOfChangers;\\r\\n    DWORD       dwNumberOfMedia;\\r\\n    DWORD       dwNumberOfMediaTypes;\\r\\n    DWORD       dwNumberOfLibRequests;\\r\\n    GUID        Reserved;\\r\\n    BOOL        AutoRecovery;\\r\\n    DWORD       dwFlags;\\r\\n} NTMS_LIBRARYINFORMATION;"},"_NTMS_LIBREQUESTINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"_NTMS_LIBREQUESTINFORMATIONA","file":"NTMSAPI.h","line":885,"type":"Other","value":"_NTMS_LIBREQUESTINFORMATIONA"}],"exp":"_NTMS_LIBREQUESTINFORMATIONW","file":"NTMSAPI.h","line":882,"type":"Other","value":"_NTMS_LIBREQUESTINFORMATIONW"},"_NTMS_LIBREQUESTINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":889,"type":"Struct","value":"typedef struct _NTMS_LIBREQUESTINFORMATIONA {\\r\\n    DWORD       OperationCode;\\r\\n    DWORD       OperationOption;\\r\\n    DWORD       State;\\r\\n    NTMS_GUID   PartitionId;\\r\\n    NTMS_GUID   DriveId;\\r\\n    NTMS_GUID   PhysMediaId;\\r\\n    NTMS_GUID   Library;\\r\\n    NTMS_GUID   SlotId;\\r\\n    SYSTEMTIME  TimeQueued;\\r\\n    SYSTEMTIME  TimeCompleted;\\r\\n    CHAR        szApplication[NTMS_APPLICATIONNAME_LENGTH];\\r\\n    CHAR        szUser[NTMS_USERNAME_LENGTH];\\r\\n    CHAR        szComputer[NTMS_COMPUTERNAME_LENGTH];\\r\\n    DWORD       dwErrorCode;                    \/\/ error value if state = FAILED\\r\\n    NTMS_GUID   WorkItemId;                     \/\/ work item id for cancel and other requests that\\r\\n    DWORD       dwPriority;                     \/\/ require and associated work item\\r\\n} NTMS_LIBREQUESTINFORMATIONA;"},"_NTMS_LIBREQUESTINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":908,"type":"Struct","value":"typedef struct _NTMS_LIBREQUESTINFORMATIONW {\\r\\n    DWORD       OperationCode;\\r\\n    DWORD       OperationOption;\\r\\n    DWORD       State;\\r\\n    NTMS_GUID   PartitionId;\\r\\n    NTMS_GUID   DriveId;\\r\\n    NTMS_GUID   PhysMediaId;\\r\\n    NTMS_GUID   Library;\\r\\n    NTMS_GUID   SlotId;\\r\\n    SYSTEMTIME  TimeQueued;\\r\\n    SYSTEMTIME  TimeCompleted;\\r\\n    WCHAR       szApplication[NTMS_APPLICATIONNAME_LENGTH];\\r\\n    WCHAR       szUser[NTMS_USERNAME_LENGTH];\\r\\n    WCHAR       szComputer[NTMS_COMPUTERNAME_LENGTH];\\r\\n    DWORD       dwErrorCode;                    \/\/ error value if state = FAILED\\r\\n    NTMS_GUID   WorkItemId;                     \/\/ work item id for cancel and other requests that\\r\\n    DWORD       dwPriority;                     \/\/ require and associated work item\\r\\n} NTMS_LIBREQUESTINFORMATIONW;"},"_NTMS_LMIDINFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":696,"type":"Struct","value":"typedef struct _NTMS_LMIDINFORMATION {\\r\\n    NTMS_GUID   MediaPool;\\r\\n    DWORD       dwNumberOfPartitions;\\r\\n} NTMS_LMIDINFORMATION;"},"_NTMS_MEDIAPOOLINFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":769,"type":"Struct","value":"typedef struct _NTMS_MEDIAPOOLINFORMATION {\\r\\n     DWORD      PoolType;\\r\\n     NTMS_GUID  MediaType;\\r\\n     NTMS_GUID  Parent;\\r\\n     DWORD      AllocationPolicy;\\r\\n     DWORD      DeallocationPolicy;\\r\\n     DWORD      dwMaxAllocates;\\r\\n     DWORD      dwNumberOfPhysicalMedia;\\r\\n     DWORD      dwNumberOfLogicalMedia;\\r\\n     DWORD      dwNumberOfMediaPools;\\r\\n} NTMS_MEDIAPOOLINFORMATION;"},"_NTMS_MEDIATYPEINFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":788,"type":"Struct","value":"typedef struct _NTMS_MEDIATYPEINFORMATION {\\r\\n    DWORD       MediaType;      \/\/ MediaTypeCodes\\r\\n    DWORD       NumberOfSides;\\r\\n    DWORD       ReadWriteCharacteristics;\\r\\n    DWORD       DeviceType;\\r\\n} NTMS_MEDIATYPEINFORMATION;"},"_NTMS_MOUNT_INFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":207,"type":"Struct","value":"typedef struct _NTMS_MOUNT_INFORMATION\\r\\n{\\r\\n    DWORD  dwSize;                  \/\/ size of structure\\r\\n#ifdef MIDL_PASS\\r\\n    [ptr]  LPNTMS_ASYNC_IO lpReserved;\\r\\n#else\\r\\n    LPVOID lpReserved;\\r\\n#endif\\r\\n} NTMS_MOUNT_INFORMATION, *LPNTMS_MOUNT_INFORMATION;"},"_NTMS_NOTIFICATIONINFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":1837,"type":"Struct","value":"typedef struct _NTMS_NOTIFICATIONINFORMATION {\\r\\n    DWORD dwOperation;\\r\\n    NTMS_GUID ObjectId;\\r\\n} NTMS_NOTIFICATIONINFORMATION, *LPNTMS_NOTIFICATIONINFORMATION;"},"_NTMS_OBJECTINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"_NTMS_OBJECTINFORMATIONA","file":"NTMSAPI.h","line":1016,"type":"Other","value":"_NTMS_OBJECTINFORMATIONA"}],"exp":"_NTMS_OBJECTINFORMATIONW","file":"NTMSAPI.h","line":1012,"type":"Other","value":"_NTMS_OBJECTINFORMATIONW"},"_NTMS_OBJECTINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":1028,"type":"Struct","value":"typedef struct _NTMS_OBJECTINFORMATIONA {\\r\\n    DWORD       dwSize;\\r\\n    DWORD       dwType;\\r\\n    SYSTEMTIME  Created;\\r\\n    SYSTEMTIME  Modified;\\r\\n    NTMS_GUID   ObjectGuid;\\r\\n    BOOL        Enabled;\\r\\n    DWORD       dwOperationalState;\\r\\n    CHAR        szName[NTMS_OBJECTNAME_LENGTH];\\r\\n    CHAR        szDescription[NTMS_DESCRIPTION_LENGTH];\\r\\n#ifdef MIDL_PASS\\r\\n    [switch_is(dwType)] union {\\r\\n        [case(NTMS_DRIVE)]              NTMS_DRIVEINFORMATIONA Drive;\\r\\n        [case(NTMS_DRIVE_TYPE)]         NTMS_DRIVETYPEINFORMATIONA DriveType;\\r\\n        [case(NTMS_LIBRARY)]            NTMS_LIBRARYINFORMATION Library;\\r\\n        [case(NTMS_CHANGER)]            NTMS_CHANGERINFORMATIONA Changer;\\r\\n        [case(NTMS_CHANGER_TYPE)]       NTMS_CHANGERTYPEINFORMATIONA ChangerType;\\r\\n        [case(NTMS_STORAGESLOT)]        NTMS_STORAGESLOTINFORMATION StorageSlot;\\r\\n        [case(NTMS_IEDOOR)]             NTMS_IEDOORINFORMATION IEDoor;\\r\\n        [case(NTMS_IEPORT)]             NTMS_IEPORTINFORMATION IEPort;\\r\\n        [case(NTMS_PHYSICAL_MEDIA)]     NTMS_PMIDINFORMATIONA PhysicalMedia;\\r\\n        [case(NTMS_LOGICAL_MEDIA)]      NTMS_LMIDINFORMATION LogicalMedia;\\r\\n        [case(NTMS_PARTITION)]          NTMS_PARTITIONINFORMATIONA Partition;\\r\\n        [case(NTMS_MEDIA_POOL)]         NTMS_MEDIAPOOLINFORMATION MediaPool;\\r\\n        [case(NTMS_MEDIA_TYPE)]         NTMS_MEDIATYPEINFORMATION MediaType;\\r\\n        [case(NTMS_LIBREQUEST)]         NTMS_LIBREQUESTINFORMATIONA LibRequest;\\r\\n        [case(NTMS_OPREQUEST)]          NTMS_OPREQUESTINFORMATIONA OpRequest;\\r\\n        [case(NTMS_COMPUTER)]           NTMS_COMPUTERINFORMATION Computer;\\r\\n        [default]                                       ;\\r\\n    } Info;\\r\\n#else\\r\\n    union {\\r\\n        NTMS_DRIVEINFORMATIONA      Drive;\\r\\n        NTMS_DRIVETYPEINFORMATIONA  DriveType;\\r\\n        NTMS_LIBRARYINFORMATION     Library;\\r\\n        NTMS_CHANGERINFORMATIONA    Changer;\\r\\n        NTMS_CHANGERTYPEINFORMATIONA ChangerType;\\r\\n        NTMS_STORAGESLOTINFORMATION StorageSlot;\\r\\n        NTMS_IEDOORINFORMATION      IEDoor;\\r\\n        NTMS_IEPORTINFORMATION      IEPort;\\r\\n        NTMS_PMIDINFORMATIONA       PhysicalMedia;\\r\\n        NTMS_LMIDINFORMATION        LogicalMedia;\\r\\n        NTMS_PARTITIONINFORMATIONA  Partition;\\r\\n        NTMS_MEDIAPOOLINFORMATION   MediaPool;\\r\\n        NTMS_MEDIATYPEINFORMATION   MediaType;\\r\\n        NTMS_LIBREQUESTINFORMATIONA LibRequest;\\r\\n        NTMS_OPREQUESTINFORMATIONA  OpRequest;\\r\\n        NTMS_COMPUTERINFORMATION    Computer;\\r\\n    } Info;\\r\\n#endif  \/\/ MIDL_PASS\\r\\n} NTMS_OBJECTINFORMATIONA, *LPNTMS_OBJECTINFORMATIONA;"},"_NTMS_OBJECTINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":1080,"type":"Struct","value":"typedef struct _NTMS_OBJECTINFORMATIONW {\\r\\n    DWORD       dwSize;\\r\\n    DWORD       dwType;\\r\\n    SYSTEMTIME  Created;\\r\\n    SYSTEMTIME  Modified;\\r\\n    NTMS_GUID   ObjectGuid;\\r\\n    BOOL        Enabled;\\r\\n    DWORD       dwOperationalState;\\r\\n    WCHAR       szName[NTMS_OBJECTNAME_LENGTH];\\r\\n    WCHAR       szDescription[NTMS_DESCRIPTION_LENGTH];\\r\\n#ifdef MIDL_PASS\\r\\n    [switch_is(dwType)] union {\\r\\n        [case(NTMS_DRIVE)]              NTMS_DRIVEINFORMATIONW Drive;\\r\\n        [case(NTMS_DRIVE_TYPE)]         NTMS_DRIVETYPEINFORMATIONW DriveType;\\r\\n        [case(NTMS_LIBRARY)]            NTMS_LIBRARYINFORMATION Library;\\r\\n        [case(NTMS_CHANGER)]            NTMS_CHANGERINFORMATIONW Changer;\\r\\n        [case(NTMS_CHANGER_TYPE)]       NTMS_CHANGERTYPEINFORMATIONW ChangerType;\\r\\n        [case(NTMS_STORAGESLOT)]        NTMS_STORAGESLOTINFORMATION StorageSlot;\\r\\n        [case(NTMS_IEDOOR)]             NTMS_IEDOORINFORMATION IEDoor;\\r\\n        [case(NTMS_IEPORT)]             NTMS_IEPORTINFORMATION IEPort;\\r\\n        [case(NTMS_PHYSICAL_MEDIA)]     NTMS_PMIDINFORMATIONW PhysicalMedia;\\r\\n        [case(NTMS_LOGICAL_MEDIA)]      NTMS_LMIDINFORMATION LogicalMedia;\\r\\n        [case(NTMS_PARTITION)]          NTMS_PARTITIONINFORMATIONW Partition;\\r\\n        [case(NTMS_MEDIA_POOL)]         NTMS_MEDIAPOOLINFORMATION MediaPool;\\r\\n        [case(NTMS_MEDIA_TYPE)]         NTMS_MEDIATYPEINFORMATION MediaType;\\r\\n        [case(NTMS_LIBREQUEST)]         NTMS_LIBREQUESTINFORMATIONW LibRequest;\\r\\n        [case(NTMS_OPREQUEST)]          NTMS_OPREQUESTINFORMATIONW OpRequest;\\r\\n        [case(NTMS_COMPUTER)]           NTMS_COMPUTERINFORMATION Computer;\\r\\n        [default]                                       ;\\r\\n    } Info;\\r\\n#else\\r\\n    union {\\r\\n        NTMS_DRIVEINFORMATIONW Drive;\\r\\n        NTMS_DRIVETYPEINFORMATIONW DriveType;\\r\\n        NTMS_LIBRARYINFORMATION Library;\\r\\n        NTMS_CHANGERINFORMATIONW Changer;\\r\\n        NTMS_CHANGERTYPEINFORMATIONW ChangerType;\\r\\n        NTMS_STORAGESLOTINFORMATION StorageSlot;\\r\\n        NTMS_IEDOORINFORMATION IEDoor;\\r\\n        NTMS_IEPORTINFORMATION IEPort;\\r\\n        NTMS_PMIDINFORMATIONW PhysicalMedia;\\r\\n        NTMS_LMIDINFORMATION LogicalMedia;\\r\\n        NTMS_PARTITIONINFORMATIONW Partition;\\r\\n        NTMS_MEDIAPOOLINFORMATION MediaPool;\\r\\n        NTMS_MEDIATYPEINFORMATION MediaType;\\r\\n        NTMS_LIBREQUESTINFORMATIONW LibRequest;\\r\\n        NTMS_OPREQUESTINFORMATIONW OpRequest;\\r\\n        NTMS_COMPUTERINFORMATION Computer;\\r\\n    } Info;\\r\\n#endif  \/\/ MIDL_PASS\\r\\n} NTMS_OBJECTINFORMATIONW, *LPNTMS_OBJECTINFORMATIONW;"},"_NTMS_OPREQUESTINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"_NTMS_OPREQUESTINFORMATIONA","file":"NTMSAPI.h","line":949,"type":"Other","value":"_NTMS_OPREQUESTINFORMATIONA"}],"exp":"_NTMS_OPREQUESTINFORMATIONW","file":"NTMSAPI.h","line":946,"type":"Other","value":"_NTMS_OPREQUESTINFORMATIONW"},"_NTMS_OPREQUESTINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":953,"type":"Struct","value":"typedef struct _NTMS_OPREQUESTINFORMATIONA {\\r\\n    DWORD       Request;\\r\\n    SYSTEMTIME  Submitted;\\r\\n    DWORD       State;\\r\\n    CHAR        szMessage[NTMS_MESSAGE_LENGTH];\\r\\n    DWORD       Arg1Type;\\r\\n    NTMS_GUID   Arg1;\\r\\n    DWORD       Arg2Type;\\r\\n    NTMS_GUID   Arg2;\\r\\n    CHAR        szApplication[NTMS_APPLICATIONNAME_LENGTH];\\r\\n    CHAR        szUser[NTMS_USERNAME_LENGTH];\\r\\n    CHAR        szComputer[NTMS_COMPUTERNAME_LENGTH];\\r\\n} NTMS_OPREQUESTINFORMATIONA;"},"_NTMS_OPREQUESTINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":967,"type":"Struct","value":"typedef struct _NTMS_OPREQUESTINFORMATIONW {\\r\\n    DWORD       Request;\\r\\n    SYSTEMTIME  Submitted;\\r\\n    DWORD       State;\\r\\n    WCHAR       szMessage[NTMS_MESSAGE_LENGTH];\\r\\n    DWORD       Arg1Type;\\r\\n    NTMS_GUID   Arg1;\\r\\n    DWORD       Arg2Type;\\r\\n    NTMS_GUID   Arg2;\\r\\n    WCHAR       szApplication[NTMS_APPLICATIONNAME_LENGTH];\\r\\n    WCHAR       szUser[NTMS_USERNAME_LENGTH];\\r\\n    WCHAR       szComputer[NTMS_COMPUTERNAME_LENGTH];\\r\\n} NTMS_OPREQUESTINFORMATIONW;"},"_NTMS_PARTITIONINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"_NTMS_PARTITIONINFORMATIONA","file":"NTMSAPI.h","line":721,"type":"Other","value":"_NTMS_PARTITIONINFORMATIONA"}],"exp":"_NTMS_PARTITIONINFORMATIONW","file":"NTMSAPI.h","line":718,"type":"Other","value":"_NTMS_PARTITIONINFORMATIONW"},"_NTMS_PARTITIONINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":725,"type":"Struct","value":"typedef struct _NTMS_PARTITIONINFORMATIONA {\\r\\n    NTMS_GUID   PhysicalMedia;\\r\\n    NTMS_GUID   LogicalMedia;\\r\\n    DWORD       State;\\r\\n    WORD        Side;\\r\\n    DWORD       dwOmidLabelIdLength;    \/\/ binary id\\r\\n    BYTE        OmidLabelId[NTMS_OMIDLABELID_LENGTH];\\r\\n    CHAR        szOmidLabelType[NTMS_OMIDLABELTYPE_LENGTH];     \/\/ type string\\r\\n    CHAR        szOmidLabelInfo[NTMS_OMIDLABELINFO_LENGTH];     \/\/ info string\\r\\n    DWORD       dwMountCount;\\r\\n    DWORD       dwAllocateCount;\\r\\n    LARGE_INTEGER Capacity;\\r\\n} NTMS_PARTITIONINFORMATIONA;"},"_NTMS_PARTITIONINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":739,"type":"Struct","value":"typedef struct _NTMS_PARTITIONINFORMATIONW {\\r\\n    NTMS_GUID   PhysicalMedia;\\r\\n    NTMS_GUID   LogicalMedia;\\r\\n    DWORD       State;\\r\\n    WORD        Side;\\r\\n    DWORD       dwOmidLabelIdLength;    \/\/ binary id\\r\\n    BYTE        OmidLabelId[NTMS_OMIDLABELID_LENGTH];\\r\\n    WCHAR       szOmidLabelType[NTMS_OMIDLABELTYPE_LENGTH];     \/\/ type string\\r\\n    WCHAR       szOmidLabelInfo[NTMS_OMIDLABELINFO_LENGTH];     \/\/ info string\\r\\n    DWORD       dwMountCount;\\r\\n    DWORD       dwAllocateCount;\\r\\n    LARGE_INTEGER Capacity;\\r\\n} NTMS_PARTITIONINFORMATIONW;"},"_NTMS_PMIDINFORMATION":{"comment":"","dupe":[{"comment":"","exp":"_NTMS_PMIDINFORMATIONA","file":"NTMSAPI.h","line":658,"type":"Other","value":"_NTMS_PMIDINFORMATIONA"}],"exp":"_NTMS_PMIDINFORMATIONW","file":"NTMSAPI.h","line":655,"type":"Other","value":"_NTMS_PMIDINFORMATIONW"},"_NTMS_PMIDINFORMATIONA":{"comment":"","exp":"","file":"NTMSAPI.h","line":662,"type":"Struct","value":"typedef struct _NTMS_PMIDINFORMATIONA {\\r\\n    NTMS_GUID   CurrentLibrary;                 \/\/ the current library\\r\\n    NTMS_GUID   MediaPool;                      \/\/ media pool that the media belongs to\\r\\n    NTMS_GUID   Location;                       \/\/ actual location of the media\\r\\n    DWORD       LocationType;\\r\\n    NTMS_GUID   MediaType;\\r\\n    NTMS_GUID   HomeSlot;                       \/\/ home slot for online media\\r\\n    CHAR        szBarCode[NTMS_BARCODE_LENGTH]; \/\/ bar code string\\r\\n    DWORD       BarCodeState;                   \/\/ current state of the bar code\\r\\n    CHAR        szSequenceNumber[NTMS_SEQUENCE_LENGTH];\\r\\n    DWORD       MediaState;                     \/\/ current media state\\r\\n    DWORD       dwNumberOfPartitions;\\r\\n    DWORD       dwMediaTypeCode;\\r\\n    DWORD       dwDensityCode;\\r\\n    NTMS_GUID   MountedPartition;\\r\\n} NTMS_PMIDINFORMATIONA;"},"_NTMS_PMIDINFORMATIONW":{"comment":"","exp":"","file":"NTMSAPI.h","line":679,"type":"Struct","value":"typedef struct _NTMS_PMIDINFORMATIONW {\\r\\n    NTMS_GUID   CurrentLibrary;                 \/\/ the current library\\r\\n    NTMS_GUID   MediaPool;                      \/\/ media pool that the media belongs to\\r\\n    NTMS_GUID   Location;                       \/\/ actual location of the media\\r\\n    DWORD       LocationType;\\r\\n    NTMS_GUID   MediaType;\\r\\n    NTMS_GUID   HomeSlot;                       \/\/ home slot for online media\\r\\n    WCHAR       szBarCode[NTMS_BARCODE_LENGTH]; \/\/ bar code string\\r\\n    DWORD       BarCodeState;                   \/\/ current state of the bar code\\r\\n    WCHAR       szSequenceNumber[NTMS_SEQUENCE_LENGTH];\\r\\n    DWORD       MediaState;                     \/\/ current media state\\r\\n    DWORD       dwNumberOfPartitions;\\r\\n    DWORD       dwMediaTypeCode;\\r\\n    DWORD       dwDensityCode;\\r\\n    NTMS_GUID   MountedPartition;\\r\\n} NTMS_PMIDINFORMATIONW;"},"_NTMS_STORAGESLOTINFORMATION":{"comment":"","exp":"","file":"NTMSAPI.h","line":599,"type":"Struct","value":"typedef struct _NTMS_STORAGESLOTINFORMATION {\\r\\n    DWORD       Number;\\r\\n    DWORD       State;\\r\\n    NTMS_GUID   Library;\\r\\n} NTMS_STORAGESLOTINFORMATION;"},"_SERVER_ALIAS_INFO_0":{"comment":"","exp":"","file":"LMShare.h","line":290,"type":"Struct","value":"typedef struct _SERVER_ALIAS_INFO_0 {\\r\\n    LMSTR      srvai0_alias;\\r\\n    LMSTR      srvai0_target;\\r\\n    BOOLEAN    srvai0_default;\\r\\n    ULONG      srvai0_reserved;\\r\\n} SERVER_ALIAS_INFO_0, *PSERVER_ALIAS_INFO_0, *LPSERVER_ALIAS_INFO_0;"},"_SERVER_CERTIFICATE_INFO_0":{"comment":"","exp":"","file":"LMShare.h","line":643,"type":"Struct","value":"typedef struct _SERVER_CERTIFICATE_INFO_0 {\\r\\n    LMSTR      srvci0_name;\\r\\n    LMSTR      srvci0_subject;\\r\\n    LMSTR      srvci0_issuer;\\r\\n    LMSTR      srvci0_thumbprint;\\r\\n    LMSTR      srvci0_friendlyname;\\r\\n    LMSTR      srvci0_notbefore;\\r\\n    LMSTR      srvci0_notafter;\\r\\n    LMSTR      srvci0_storelocation;\\r\\n    LMSTR      srvci0_storename;\\r\\n    DWORD      srvci0_type;\\r\\n} SERVER_CERTIFICATE_INFO_0, *PSERVER_CERTIFICATE_INFO_0, *LPSERVER_CERTIFICATE_INFO_0;"},"_SERVER_CERTIFICATE_TYPE":{"comment":"","exp":"","file":"LMShare.h","line":639,"type":"Enum","value":"typedef enum _SERVER_CERTIFICATE_TYPE {\\r\\nQUIC\\r\\n} SERVER_CERTIFICATE_TYPE;"},"_SESSION_INFO_0":{"comment":"","exp":"","file":"LMShare.h","line":459,"type":"Struct","value":"typedef struct _SESSION_INFO_0 {\\r\\n    LMSTR     sesi0_cname;              \/\/ client name (no backslashes)\\r\\n} SESSION_INFO_0, *PSESSION_INFO_0, *LPSESSION_INFO_0;"},"_SESSION_INFO_1":{"comment":"","exp":"","file":"LMShare.h","line":463,"type":"Struct","value":"typedef struct _SESSION_INFO_1 {\\r\\n    LMSTR     sesi1_cname;              \/\/ client name (no backslashes)\\r\\n    LMSTR     sesi1_username;\\r\\n    DWORD     sesi1_num_opens;\\r\\n    DWORD     sesi1_time;\\r\\n    DWORD     sesi1_idle_time;\\r\\n    DWORD     sesi1_user_flags;\\r\\n} SESSION_INFO_1, *PSESSION_INFO_1, *LPSESSION_INFO_1;"},"_SESSION_INFO_10":{"comment":"","exp":"","file":"LMShare.h","line":482,"type":"Struct","value":"typedef struct _SESSION_INFO_10 {\\r\\n    LMSTR     sesi10_cname;             \/\/ client name (no backslashes)\\r\\n    LMSTR     sesi10_username;\\r\\n    DWORD     sesi10_time;\\r\\n    DWORD     sesi10_idle_time;\\r\\n} SESSION_INFO_10, *PSESSION_INFO_10, *LPSESSION_INFO_10;"},"_SESSION_INFO_2":{"comment":"","exp":"","file":"LMShare.h","line":472,"type":"Struct","value":"typedef struct _SESSION_INFO_2 {\\r\\n    LMSTR     sesi2_cname;              \/\/ client name (no backslashes)\\r\\n    LMSTR     sesi2_username;\\r\\n    DWORD     sesi2_num_opens;\\r\\n    DWORD     sesi2_time;\\r\\n    DWORD     sesi2_idle_time;\\r\\n    DWORD     sesi2_user_flags;\\r\\n    LMSTR     sesi2_cltype_name;\\r\\n} SESSION_INFO_2, *PSESSION_INFO_2, *LPSESSION_INFO_2;"},"_SESSION_INFO_502":{"comment":"","exp":"","file":"LMShare.h","line":489,"type":"Struct","value":"typedef struct _SESSION_INFO_502 {\\r\\n    LMSTR     sesi502_cname;             \/\/ client name (no backslashes)\\r\\n    LMSTR     sesi502_username;\\r\\n    DWORD     sesi502_num_opens;\\r\\n    DWORD     sesi502_time;\\r\\n    DWORD     sesi502_idle_time;\\r\\n    DWORD     sesi502_user_flags;\\r\\n    LMSTR     sesi502_cltype_name;\\r\\n    LMSTR     sesi502_transport;\\r\\n} SESSION_INFO_502, *PSESSION_INFO_502, *LPSESSION_INFO_502;"},"_SHARE_INFO_0":{"comment":"","exp":"","file":"LMShare.h","line":179,"type":"Struct","value":"typedef struct _SHARE_INFO_0 {\\r\\n    LMSTR   shi0_netname;\\r\\n} SHARE_INFO_0, *PSHARE_INFO_0, *LPSHARE_INFO_0;"},"_SHARE_INFO_1":{"comment":"","exp":"","file":"LMShare.h","line":183,"type":"Struct","value":"typedef struct _SHARE_INFO_1 {\\r\\n    LMSTR   shi1_netname;\\r\\n    DWORD   shi1_type;\\r\\n    LMSTR   shi1_remark;\\r\\n} SHARE_INFO_1, *PSHARE_INFO_1, *LPSHARE_INFO_1;"},"_SHARE_INFO_1004":{"comment":"","exp":"","file":"LMShare.h","line":234,"type":"Struct","value":"typedef struct _SHARE_INFO_1004 {\\r\\n    LMSTR   shi1004_remark;\\r\\n} SHARE_INFO_1004, *PSHARE_INFO_1004, *LPSHARE_INFO_1004;"},"_SHARE_INFO_1005":{"comment":"","exp":"","file":"LMShare.h","line":238,"type":"Struct","value":"typedef struct _SHARE_INFO_1005 {\\r\\n    DWORD  shi1005_flags;\\r\\n} SHARE_INFO_1005, *PSHARE_INFO_1005, *LPSHARE_INFO_1005;"},"_SHARE_INFO_1006":{"comment":"","exp":"","file":"LMShare.h","line":242,"type":"Struct","value":"typedef struct _SHARE_INFO_1006 {\\r\\n    DWORD   shi1006_max_uses;\\r\\n} SHARE_INFO_1006, *PSHARE_INFO_1006, *LPSHARE_INFO_1006;"},"_SHARE_INFO_1501":{"comment":"","exp":"","file":"LMShare.h","line":246,"type":"Struct","value":"typedef struct _SHARE_INFO_1501 {\\r\\n    DWORD   shi1501_reserved;\\r\\n    PSECURITY_DESCRIPTOR  shi1501_security_descriptor;\\r\\n} SHARE_INFO_1501, *PSHARE_INFO_1501, *LPSHARE_INFO_1501;"},"_SHARE_INFO_1503":{"comment":"","exp":"","file":"LMShare.h","line":251,"type":"Struct","value":"typedef struct _SHARE_INFO_1503 {\\r\\n    GUID shi1503_sharefilter;\\r\\n} SHARE_INFO_1503, *PSHARE_INFO_1503, *LPSHARE_INFO_1503;"},"_SHARE_INFO_2":{"comment":"","exp":"","file":"LMShare.h","line":189,"type":"Struct","value":"typedef struct _SHARE_INFO_2 {\\r\\n    LMSTR   shi2_netname;\\r\\n    DWORD   shi2_type;\\r\\n    LMSTR   shi2_remark;\\r\\n    DWORD   shi2_permissions;\\r\\n    DWORD   shi2_max_uses;\\r\\n    DWORD   shi2_current_uses;\\r\\n    LMSTR   shi2_path;\\r\\n    LMSTR   shi2_passwd;\\r\\n} SHARE_INFO_2, *PSHARE_INFO_2, *LPSHARE_INFO_2;"},"_SHARE_INFO_501":{"comment":"","exp":"","file":"LMShare.h","line":200,"type":"Struct","value":"typedef struct _SHARE_INFO_501 {\\r\\n    LMSTR   shi501_netname;\\r\\n    DWORD   shi501_type;\\r\\n    LMSTR   shi501_remark;\\r\\n    DWORD   shi501_flags;\\r\\n} SHARE_INFO_501, *PSHARE_INFO_501, *LPSHARE_INFO_501;"},"_SHARE_INFO_502":{"comment":"","exp":"","file":"LMShare.h","line":207,"type":"Struct","value":"typedef struct _SHARE_INFO_502 {\\r\\n    LMSTR     shi502_netname;\\r\\n    DWORD     shi502_type;\\r\\n    LMSTR     shi502_remark;\\r\\n    DWORD     shi502_permissions;\\r\\n    DWORD     shi502_max_uses;\\r\\n    DWORD     shi502_current_uses;\\r\\n    LMSTR     shi502_path;\\r\\n    LMSTR     shi502_passwd;\\r\\n    DWORD     shi502_reserved;\\r\\n    PSECURITY_DESCRIPTOR  shi502_security_descriptor;\\r\\n} SHARE_INFO_502, *PSHARE_INFO_502, *LPSHARE_INFO_502;"},"_SHARE_INFO_503":{"comment":"","exp":"","file":"LMShare.h","line":220,"type":"Struct","value":"typedef struct _SHARE_INFO_503 {\\r\\n    LMSTR     shi503_netname;\\r\\n    DWORD     shi503_type;\\r\\n    LMSTR     shi503_remark;\\r\\n    DWORD     shi503_permissions;\\r\\n    DWORD     shi503_max_uses;\\r\\n    DWORD     shi503_current_uses;\\r\\n    LMSTR     shi503_path;\\r\\n    LMSTR     shi503_passwd;\\r\\n    LMSTR     shi503_servername;\\r\\n    DWORD     shi503_reserved;\\r\\n    PSECURITY_DESCRIPTOR  shi503_security_descriptor;\\r\\n} SHARE_INFO_503, *PSHARE_INFO_503, *LPSHARE_INFO_503;"},"_STAT_SERVER_0":{"comment":"","exp":"","file":"lmstats.h","line":161,"type":"Struct","value":"typedef struct _STAT_SERVER_0 {\\r\\n     DWORD          sts0_start;\\r\\n     DWORD          sts0_fopens;\\r\\n     DWORD          sts0_devopens;\\r\\n     DWORD          sts0_jobsqueued;\\r\\n     DWORD          sts0_sopens;\\r\\n     DWORD          sts0_stimedout;\\r\\n     DWORD          sts0_serrorout;\\r\\n     DWORD          sts0_pwerrors;\\r\\n     DWORD          sts0_permerrors;\\r\\n     DWORD          sts0_syserrors;\\r\\n     DWORD          sts0_bytessent_low;\\r\\n     DWORD          sts0_bytessent_high;\\r\\n     DWORD          sts0_bytesrcvd_low;\\r\\n     DWORD          sts0_bytesrcvd_high;\\r\\n     DWORD          sts0_avresponse;\\r\\n     DWORD          sts0_reqbufneed;\\r\\n     DWORD          sts0_bigbufneed;\\r\\n} STAT_SERVER_0, *PSTAT_SERVER_0, *LPSTAT_SERVER_0;"},"_STAT_WORKSTATION_0":{"comment":"","exp":"","file":"lmstats.h","line":62,"type":"Struct","value":"typedef struct _STAT_WORKSTATION_0 {\\r\\n     DWORD          stw0_start;\\r\\n     DWORD          stw0_numNCB_r;\\r\\n     DWORD          stw0_numNCB_s;\\r\\n     DWORD          stw0_numNCB_a;\\r\\n     DWORD          stw0_fiNCB_r;\\r\\n     DWORD          stw0_fiNCB_s;\\r\\n     DWORD          stw0_fiNCB_a;\\r\\n     DWORD          stw0_fcNCB_r;\\r\\n     DWORD          stw0_fcNCB_s;\\r\\n     DWORD          stw0_fcNCB_a;\\r\\n     DWORD          stw0_sesstart;\\r\\n     DWORD          stw0_sessfailcon;\\r\\n     DWORD          stw0_sessbroke;\\r\\n     DWORD          stw0_uses;\\r\\n     DWORD          stw0_usefail;\\r\\n     DWORD          stw0_autorec;\\r\\n     DWORD          stw0_bytessent_r_lo;\\r\\n     DWORD          stw0_bytessent_r_hi;\\r\\n     DWORD          stw0_bytesrcvd_r_lo;\\r\\n     DWORD          stw0_bytesrcvd_r_hi;\\r\\n     DWORD          stw0_bytessent_s_lo;\\r\\n     DWORD          stw0_bytessent_s_hi;\\r\\n     DWORD          stw0_bytesrcvd_s_lo;\\r\\n     DWORD          stw0_bytesrcvd_s_hi;\\r\\n     DWORD          stw0_bytessent_a_lo;\\r\\n     DWORD          stw0_bytessent_a_hi;\\r\\n     DWORD          stw0_bytesrcvd_a_lo;\\r\\n     DWORD          stw0_bytesrcvd_a_hi;\\r\\n     DWORD          stw0_reqbufneed;\\r\\n     DWORD          stw0_bigbufneed;\\r\\n} STAT_WORKSTATION_0, *PSTAT_WORKSTATION_0, *LPSTAT_WORKSTATION_0;"},"_STREAM_INFO_LEVELS":{"comment":"","exp":"","file":"fileapi.h","line":1356,"type":"Enum","value":"typedef enum _STREAM_INFO_LEVELS {\\r\\n    FindStreamInfoStandard,\\r\\n    FindStreamInfoMaxInfoLevel\\r\\n} STREAM_INFO_LEVELS;"},"_TRANSACTION_NOTIFICATION":{"comment":"","exp":"","file":"ktmtypes.h","line":137,"type":"Struct","value":"typedef struct _TRANSACTION_NOTIFICATION {\\r\\n    PVOID         TransactionKey;\\r\\n    ULONG         TransactionNotification;\\r\\n    LARGE_INTEGER TmVirtualClock;\\r\\n    ULONG         ArgumentLength;\\r\\n} TRANSACTION_NOTIFICATION, *PTRANSACTION_NOTIFICATION;"},"_TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT":{"comment":"","exp":"","file":"ktmtypes.h","line":170,"type":"Struct","value":"typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT {\\r\\n    ULONG MarshalCookie;\\r\\n    GUID  UOW;\\r\\n} TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT, *PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;"},"_TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT":{"comment":"","exp":"","file":"ktmtypes.h","line":162,"type":"Struct","value":"typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT {\\r\\n    ULONG PropagationCookie;\\r\\n    GUID  UOW;\\r\\n    GUID  TmIdentity;\\r\\n    ULONG BufferLength;\\r\\n    \/\/ Bufferlength bytes of Buffer follow\\r\\n} TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT, *PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;"},"_TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT":{"comment":"","exp":"","file":"ktmtypes.h","line":144,"type":"Struct","value":"typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT {\\r\\n    GUID   EnlistmentId;\\r\\n    UOW    UOW;\\r\\n} TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT, *PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;"},"_TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT":{"comment":"","exp":"","file":"ktmtypes.h","line":158,"type":"Struct","value":"typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT {\\r\\n    SAVEPOINT_ID SavepointId;\\r\\n} TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT, *PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;"},"_TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT":{"comment":"","exp":"","file":"ktmtypes.h","line":151,"type":"Struct","value":"typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT {\\r\\n    GUID TmIdentity;\\r\\n    ULONG Flags;\\r\\n} TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT, *PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;"},"_TXF_ID":{"comment":"","exp":"","file":"txfw32.h","line":66,"type":"Struct","value":"typedef struct _TXF_ID {\\r\\n    struct {\\r\\n        LONGLONG LowPart;\\r\\n        LONGLONG HighPart;\\r\\n    };\\r\\n} TXF_ID, *PTXF_ID;"},"_TXF_LOG_RECORD_AFFECTED_FILE":{"comment":"","exp":"","file":"txfw32.h","line":247,"type":"Struct","value":"typedef struct _TXF_LOG_RECORD_AFFECTED_FILE {\\r\\n    \/\/\\r\\n    \/\/  This is a version identifier for the replication record generated by TXF.\\r\\n    \/\/\\r\\n    USHORT Version;\\r\\n    \/\/\\r\\n    \/\/  Length of this record in bytes.\\r\\n    \/\/\\r\\n    ULONG RecordLength;\\r\\n    \/\/\\r\\n    \/\/  Record flags.  (none currently defined)\\r\\n    \/\/\\r\\n    ULONG Flags;\\r\\n    \/\/\\r\\n    \/\/  TxfFileId for the file this record refers to.\\r\\n    \/\/\\r\\n    TXF_ID TxfFileId;\\r\\n    \/\/\\r\\n    \/\/  This is the KTM transaction GUID for this update.\\r\\n    \/\/\\r\\n    GUID KtmGuid;\\r\\n    \/\/\\r\\n    \/\/  Length of the file name, in bytes.\\r\\n    \/\/\\r\\n    ULONG FileNameLength;\\r\\n    \/\/\\r\\n    \/\/  Offset of the file name from the beginning of this record.\\r\\n    \/\/\\r\\n    ULONG FileNameByteOffsetInStructure;\\r\\n} TXF_LOG_RECORD_AFFECTED_FILE, *PTXF_LOG_RECORD_AFFECTED_FILE;"},"_TXF_LOG_RECORD_BASE":{"comment":"","exp":"","file":"txfw32.h","line":82,"type":"Struct","value":"typedef struct _TXF_LOG_RECORD_BASE {\\r\\n    \/\/\\r\\n    \/\/  This is a version identifier for the replication record generated by TXF.\\r\\n    \/\/\\r\\n    USHORT Version;\\r\\n    \/\/\\r\\n    \/\/  Type of record, defined above.\\r\\n    \/\/\\r\\n    USHORT RecordType;\\r\\n    \/\/\\r\\n    \/\/  Length of this record in bytes.\\r\\n    \/\/\\r\\n    ULONG RecordLength;\\r\\n} TXF_LOG_RECORD_BASE, *PTXF_LOG_RECORD_BASE;"},"_TXF_LOG_RECORD_TRUNCATE":{"comment":"","exp":"","file":"txfw32.h","line":184,"type":"Struct","value":"typedef struct _TXF_LOG_RECORD_TRUNCATE {\\r\\n    \/\/\\r\\n    \/\/  This is a version identifier for the replication record generated by TXF.\\r\\n    \/\/\\r\\n    USHORT Version;\\r\\n    \/\/\\r\\n    \/\/  Type of record, defined above.\\r\\n    \/\/\\r\\n    USHORT RecordType;\\r\\n    \/\/\\r\\n    \/\/  Length of this record in bytes.\\r\\n    \/\/\\r\\n    ULONG RecordLength;\\r\\n    \/\/\\r\\n    \/\/  Record flags.  (none currently defined)\\r\\n    \/\/\\r\\n    ULONG Flags;\\r\\n    \/\/\\r\\n    \/\/  TxfFileId for the file this record refers to.\\r\\n    \/\/\\r\\n    TXF_ID TxfFileId;\\r\\n    \/\/\\r\\n    \/\/  This is the KTM transaction GUID for this update.\\r\\n    \/\/\\r\\n    GUID KtmGuid;\\r\\n    \/\/\\r\\n    \/\/  New size of the file.\\r\\n    \/\/\\r\\n    LONGLONG NewFileSize;\\r\\n    \/\/\\r\\n    \/\/  Length of the file name, in bytes.\\r\\n    \/\/\\r\\n    ULONG FileNameLength;\\r\\n    \/\/\\r\\n    \/\/  Offset of the file name from the beginning of this record.\\r\\n    \/\/\\r\\n    ULONG FileNameByteOffsetInStructure;\\r\\n} TXF_LOG_RECORD_TRUNCATE, *PTXF_LOG_RECORD_TRUNCATE;"},"_TXF_LOG_RECORD_WRITE":{"comment":"","exp":"","file":"txfw32.h","line":109,"type":"Struct","value":"typedef struct _TXF_LOG_RECORD_WRITE {\\r\\n    \/\/\\r\\n    \/\/  This is a version identifier for the replication record generated by TXF.\\r\\n    \/\/\\r\\n    USHORT Version;\\r\\n    \/\/\\r\\n    \/\/  Type of record, defined above.\\r\\n    \/\/\\r\\n    USHORT RecordType;\\r\\n    \/\/\\r\\n    \/\/  Length of this record in bytes.\\r\\n    \/\/\\r\\n    ULONG RecordLength;\\r\\n    \/\/\\r\\n    \/\/  Record flags.  (none currently defined)\\r\\n    \/\/\\r\\n    ULONG Flags;\\r\\n    \/\/\\r\\n    \/\/  TxfFileId for the file this record refers to.\\r\\n    \/\/\\r\\n    TXF_ID TxfFileId;\\r\\n    \/\/\\r\\n    \/\/  This is the KTM transaction GUID for this update.\\r\\n    \/\/\\r\\n    GUID KtmGuid;\\r\\n    \/\/\\r\\n    \/\/  Beginning location of the write, as an offset from the beginning of the file.\\r\\n    \/\/\\r\\n    LONGLONG ByteOffsetInFile;\\r\\n    \/\/\\r\\n    \/\/  Number of bytes written.\\r\\n    \/\/\\r\\n    ULONG NumBytesWritten;\\r\\n    \/\/\\r\\n    \/\/  Offset of the redo data (bytes written) from the beginning of this record.\\r\\n    \/\/\\r\\n    ULONG ByteOffsetInStructure;\\r\\n    \/\/\\r\\n    \/\/  Length of the file name, in bytes.\\r\\n    \/\/\\r\\n    ULONG FileNameLength;\\r\\n    \/\/\\r\\n    \/\/  Offset of the file name from the beginning of this record.\\r\\n    \/\/\\r\\n    ULONG FileNameByteOffsetInStructure;\\r\\n} TXF_LOG_RECORD_WRITE, *PTXF_LOG_RECORD_WRITE;"},"_WIM_ENTRY_INFO":{"comment":"","exp":"","file":"wofapi.h","line":148,"type":"Struct","value":"typedef struct _WIM_ENTRY_INFO {\\r\\n    DWORD WimEntryInfoSize;\\r\\n    DWORD WimType;\\r\\n    LARGE_INTEGER DataSourceId;\\r\\n    GUID WimGuid;\\r\\n    PCWSTR WimPath;\\r\\n    DWORD WimIndex;\\r\\n    DWORD Flags;\\r\\n} WIM_ENTRY_INFO, *PWIM_ENTRY_INFO;"},"_WIM_EXTERNAL_FILE_INFO":{"comment":"","exp":"","file":"wofapi.h","line":158,"type":"Struct","value":"typedef struct _WIM_EXTERNAL_FILE_INFO {\\r\\n    LARGE_INTEGER DataSourceId;\\r\\n    UCHAR ResourceHash[WIM_PROVIDER_HASH_SIZE];\\r\\n    ULONG Flags;\\r\\n} WIM_EXTERNAL_FILE_INFO, *PWIM_EXTERNAL_FILE_INFO;"},"_WIN32_FILE_ATTRIBUTE_DATA":{"comment":"","exp":"","file":"fileapi.h","line":600,"type":"Struct","value":"typedef struct _WIN32_FILE_ATTRIBUTE_DATA {\\r\\n    DWORD dwFileAttributes;\\r\\n    FILETIME ftCreationTime;\\r\\n    FILETIME ftLastAccessTime;\\r\\n    FILETIME ftLastWriteTime;\\r\\n    DWORD nFileSizeHigh;\\r\\n    DWORD nFileSizeLow;\\r\\n} WIN32_FILE_ATTRIBUTE_DATA, *LPWIN32_FILE_ATTRIBUTE_DATA;"},"_WIN32_FIND_STREAM_DATA":{"comment":"","exp":"","file":"fileapi.h","line":1363,"type":"Struct","value":"typedef struct _WIN32_FIND_STREAM_DATA {\\r\\n    LARGE_INTEGER StreamSize;\\r\\n    WCHAR cStreamName[ MAX_PATH + 36 ];\\r\\n} WIN32_FIND_STREAM_DATA, *PWIN32_FIND_STREAM_DATA;"},"_WOF_FILE_COMPRESSION_INFO_V0":{"comment":"","exp":"","file":"wofapi.h","line":210,"type":"Struct","value":"typedef struct _WOF_FILE_COMPRESSION_INFO_V0 {\\r\\n    ULONG Algorithm;\\r\\n} WOF_FILE_COMPRESSION_INFO_V0, *PWOF_FILE_COMPRESSION_INFO_V0;"},"_WOF_FILE_COMPRESSION_INFO_V1":{"comment":"","exp":"","file":"wofapi.h","line":214,"type":"Struct","value":"typedef struct _WOF_FILE_COMPRESSION_INFO_V1 {\\r\\n    ULONG Algorithm;\\r\\n    ULONG Flags;\\r\\n} WOF_FILE_COMPRESSION_INFO_V1, *PWOF_FILE_COMPRESSION_INFO_V1;"}},"__includes_list":{"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|clfs.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["stdio.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\ucrt\\stdio.h"],["clfslsn.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\clfslsn.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|DskQuota.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["windows.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Windows.h"],["ole2.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\Ole2.h"],["olectl.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\OleCtl.h"],["initguid.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\initguid.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|LMShare.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["lmcons.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\lmcons.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|NTMSAPI.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|NTMSMli.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|clfsmgmt.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|clfsmgmtw32.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["clfsmgmt.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\clfsmgmt.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|clfsw32.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["clfs.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\clfs.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|fileapi.h":[["apiset.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\apiset.h"],["apisetcconv.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\apisetcconv.h"],["minwindef.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\minwindef.h"],["minwinbase.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\minwinbase.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|fileapifromapp.h":[["apiset.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\apiset.h"],["apisetcconv.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\apisetcconv.h"],["minwindef.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\minwindef.h"],["minwinbase.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\minwinbase.h"],["fileapi.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\fileapi.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|ktmw32.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|lmstats.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"],["lmcons.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\lmcons.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|lzexpand.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|txfw32.h":[["clfsw32.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\clfsw32.h"],["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|winefs.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|wofapi.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|wow64apiset.h":[["apiset.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\apiset.h"],["apisetcconv.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\apisetcconv.h"],["minwindef.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\minwindef.h"],["minwinbase.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\um\\minwinbase.h"]]}}