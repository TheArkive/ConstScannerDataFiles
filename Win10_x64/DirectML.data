{"__cache":0,"__const_list":{"DIRECTML_H":{"comment":"","critical":{},"dupe":[],"exp":"#define DIRECTML_H","file":"um\\DirectML.h","line":4,"type":"Other","value":""},"DML_ACTIVATION_ELU_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_ELU_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n} ;","file":"um\\DirectML.h","line":535,"type":"Struct","value":"struct DML_ACTIVATION_ELU_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n} ;"},"DML_ACTIVATION_HARDMAX_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_HARDMAX_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":542,"type":"Struct","value":"struct DML_ACTIVATION_HARDMAX_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ACTIVATION_HARD_SIGMOID_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_HARD_SIGMOID_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n} ;","file":"um\\DirectML.h","line":548,"type":"Struct","value":"struct DML_ACTIVATION_HARD_SIGMOID_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n} ;"},"DML_ACTIVATION_IDENTITY_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_IDENTITY_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":556,"type":"Struct","value":"struct DML_ACTIVATION_IDENTITY_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ACTIVATION_LEAKY_RELU_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_LEAKY_RELU_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n} ;","file":"um\\DirectML.h","line":562,"type":"Struct","value":"struct DML_ACTIVATION_LEAKY_RELU_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n} ;"},"DML_ACTIVATION_LINEAR_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_LINEAR_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n} ;","file":"um\\DirectML.h","line":569,"type":"Struct","value":"struct DML_ACTIVATION_LINEAR_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n} ;"},"DML_ACTIVATION_LOG_SOFTMAX_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_LOG_SOFTMAX_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":577,"type":"Struct","value":"struct DML_ACTIVATION_LOG_SOFTMAX_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ACTIVATION_PARAMETERIZED_RELU_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_PARAMETERIZED_RELU_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* SlopeTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":583,"type":"Struct","value":"struct DML_ACTIVATION_PARAMETERIZED_RELU_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* SlopeTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ACTIVATION_PARAMETRIC_SOFTPLUS_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_PARAMETRIC_SOFTPLUS_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n} ;","file":"um\\DirectML.h","line":590,"type":"Struct","value":"struct DML_ACTIVATION_PARAMETRIC_SOFTPLUS_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n} ;"},"DML_ACTIVATION_RELU_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_RELU_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":598,"type":"Struct","value":"struct DML_ACTIVATION_RELU_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ACTIVATION_SCALED_ELU_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_SCALED_ELU_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n    FLOAT Gamma;\r\n} ;","file":"um\\DirectML.h","line":604,"type":"Struct","value":"struct DML_ACTIVATION_SCALED_ELU_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n    FLOAT Gamma;\r\n} ;"},"DML_ACTIVATION_SCALED_TANH_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_SCALED_TANH_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n} ;","file":"um\\DirectML.h","line":612,"type":"Struct","value":"struct DML_ACTIVATION_SCALED_TANH_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n} ;"},"DML_ACTIVATION_SHRINK_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_SHRINK_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Bias;\r\n    FLOAT Threshold;\r\n} ;","file":"um\\DirectML.h","line":1022,"type":"Struct","value":"struct DML_ACTIVATION_SHRINK_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Bias;\r\n    FLOAT Threshold;\r\n} ;"},"DML_ACTIVATION_SIGMOID_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_SIGMOID_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":620,"type":"Struct","value":"struct DML_ACTIVATION_SIGMOID_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ACTIVATION_SOFTMAX_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_SOFTMAX_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":626,"type":"Struct","value":"struct DML_ACTIVATION_SOFTMAX_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ACTIVATION_SOFTPLUS_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_SOFTPLUS_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Steepness;\r\n} ;","file":"um\\DirectML.h","line":632,"type":"Struct","value":"struct DML_ACTIVATION_SOFTPLUS_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Steepness;\r\n} ;"},"DML_ACTIVATION_SOFTSIGN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_SOFTSIGN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":639,"type":"Struct","value":"struct DML_ACTIVATION_SOFTSIGN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ACTIVATION_TANH_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_TANH_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":645,"type":"Struct","value":"struct DML_ACTIVATION_TANH_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ACTIVATION_THRESHOLDED_RELU_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ACTIVATION_THRESHOLDED_RELU_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n} ;","file":"um\\DirectML.h","line":651,"type":"Struct","value":"struct DML_ACTIVATION_THRESHOLDED_RELU_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Alpha;\r\n} ;"},"DML_AVERAGE_POOLING_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_AVERAGE_POOLING_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT DimensionCount;\r\n    _Field_size_(DimensionCount) const UINT* Strides;\r\n    _Field_size_(DimensionCount) const UINT* WindowSize;\r\n    _Field_size_(DimensionCount) const UINT* StartPadding;\r\n    _Field_size_(DimensionCount) const UINT* EndPadding;\r\n    BOOL IncludePadding;\r\n} ;","file":"um\\DirectML.h","line":698,"type":"Struct","value":"struct DML_AVERAGE_POOLING_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT DimensionCount;\r\n    UINT* Strides;\r\n    UINT* WindowSize;\r\n    UINT* StartPadding;\r\n    UINT* EndPadding;\r\n    BOOL IncludePadding;\r\n} ;"},"DML_BATCH_NORMALIZATION_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_BATCH_NORMALIZATION_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* MeanTensor;\r\n    const DML_TENSOR_DESC* VarianceTensor;\r\n    const DML_TENSOR_DESC* ScaleTensor;\r\n    const DML_TENSOR_DESC* BiasTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    BOOL Spatial;\r\n    FLOAT Epsilon;\r\n    _Maybenull_ const DML_OPERATOR_DESC* FusedActivation;\r\n} ;","file":"um\\DirectML.h","line":854,"type":"Struct","value":"struct DML_BATCH_NORMALIZATION_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* MeanTensor;\r\n    DML_TENSOR_DESC* VarianceTensor;\r\n    DML_TENSOR_DESC* ScaleTensor;\r\n    DML_TENSOR_DESC* BiasTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    BOOL Spatial;\r\n    FLOAT Epsilon;\r\n    _Maybenull_  DML_OPERATOR_DESC* FusedActivation;\r\n} ;"},"DML_BINDING_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_BINDING_DESC {\r\n    DML_BINDING_TYPE Type;\r\n    _Field_size_opt_(_Inexpressible_(\"Dependent on binding type\")) const void* Desc;\r\n} ;","file":"um\\DirectML.h","line":1337,"type":"Struct","value":"struct DML_BINDING_DESC {\r\n    DML_BINDING_TYPE Type;\r\n    )  void* Desc;\r\n} ;"},"DML_BINDING_PROPERTIES":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_BINDING_PROPERTIES {\r\n    UINT RequiredDescriptorCount;\r\n    UINT64 TemporaryResourceSize;\r\n    UINT64 PersistentResourceSize;\r\n} ;","file":"um\\DirectML.h","line":1292,"type":"Struct","value":"struct DML_BINDING_PROPERTIES {\r\n    UINT RequiredDescriptorCount;\r\n    UINT64 TemporaryResourceSize;\r\n    UINT64 PersistentResourceSize;\r\n} ;"},"DML_BINDING_TABLE_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_BINDING_TABLE_DESC {\r\n    IDMLDispatchable* Dispatchable;\r\n    D3D12_CPU_DESCRIPTOR_HANDLE CPUDescriptorHandle;\r\n    D3D12_GPU_DESCRIPTOR_HANDLE GPUDescriptorHandle;\r\n    UINT SizeInDescriptors;\r\n} ;","file":"um\\DirectML.h","line":1124,"type":"Struct","value":"struct DML_BINDING_TABLE_DESC {\r\n    IDMLDispatchable* Dispatchable;\r\n    D3D12_CPU_DESCRIPTOR_HANDLE CPUDescriptorHandle;\r\n    D3D12_GPU_DESCRIPTOR_HANDLE GPUDescriptorHandle;\r\n    UINT SizeInDescriptors;\r\n} ;"},"DML_BINDING_TYPE":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_BINDING_TYPE {\r\n    DML_BINDING_TYPE_NONE,\r\n    DML_BINDING_TYPE_BUFFER,\r\n    DML_BINDING_TYPE_BUFFER_ARRAY\r\n} ;","file":"um\\DirectML.h","line":1330,"type":"Enum","value":"enum DML_BINDING_TYPE {\r\n    DML_BINDING_TYPE_NONE,\r\n    DML_BINDING_TYPE_BUFFER,\r\n    DML_BINDING_TYPE_BUFFER_ARRAY\r\n} ;"},"DML_BINDING_TYPE_BUFFER":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_BINDING_TYPE","file":"um\\DirectML.h","line":1330,"type":"Integer","value":1},"DML_BINDING_TYPE_BUFFER_ARRAY":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_BINDING_TYPE","file":"um\\DirectML.h","line":1330,"type":"Integer","value":2},"DML_BINDING_TYPE_NONE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_BINDING_TYPE","file":"um\\DirectML.h","line":1330,"type":"Integer","value":0},"DML_BUFFER_ARRAY_BINDING":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_BUFFER_ARRAY_BINDING {\r\n    UINT BindingCount;\r\n    _Field_size_(BindingCount) const DML_BUFFER_BINDING* Bindings;\r\n} ;","file":"um\\DirectML.h","line":1350,"type":"Struct","value":"struct DML_BUFFER_ARRAY_BINDING {\r\n    UINT BindingCount;\r\n    DML_BUFFER_BINDING* Bindings;\r\n} ;"},"DML_BUFFER_BINDING":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_BUFFER_BINDING {\r\n    _Maybenull_ ID3D12Resource* Buffer;\r\n    UINT64 Offset;\r\n    UINT64 SizeInBytes;\r\n} ;","file":"um\\DirectML.h","line":1343,"type":"Struct","value":"struct DML_BUFFER_BINDING {\r\n    _Maybenull_ ID3D12Resource* Buffer;\r\n    UINT64 Offset;\r\n    UINT64 SizeInBytes;\r\n} ;"},"DML_BUFFER_TENSOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_BUFFER_TENSOR_DESC {\r\n    DML_TENSOR_DATA_TYPE DataType;\r\n    DML_TENSOR_FLAGS Flags;\r\n    UINT DimensionCount;\r\n    _Field_size_(DimensionCount) const UINT* Sizes;\r\n    _Field_size_opt_(DimensionCount) const UINT* Strides;\r\n    UINT64 TotalTensorSizeInBytes;\r\n    UINT GuaranteedBaseOffsetAlignment;\r\n} ;","file":"um\\DirectML.h","line":75,"type":"Struct","value":"struct DML_BUFFER_TENSOR_DESC {\r\n    DML_TENSOR_DATA_TYPE DataType;\r\n    DML_TENSOR_FLAGS Flags;\r\n    UINT DimensionCount;\r\n    UINT* Sizes;\r\n    UINT* Strides;\r\n    UINT64 TotalTensorSizeInBytes;\r\n    UINT GuaranteedBaseOffsetAlignment;\r\n} ;"},"DML_CAST_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_CAST_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":764,"type":"Struct","value":"struct DML_CAST_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_CONVOLUTION_DIRECTION":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_CONVOLUTION_DIRECTION {\r\n    DML_CONVOLUTION_DIRECTION_FORWARD,\r\n    DML_CONVOLUTION_DIRECTION_BACKWARD\r\n} ;","file":"um\\DirectML.h","line":235,"type":"Enum","value":"enum DML_CONVOLUTION_DIRECTION {\r\n    DML_CONVOLUTION_DIRECTION_FORWARD,\r\n    DML_CONVOLUTION_DIRECTION_BACKWARD\r\n} ;"},"DML_CONVOLUTION_DIRECTION_BACKWARD":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_CONVOLUTION_DIRECTION","file":"um\\DirectML.h","line":235,"type":"Integer","value":1},"DML_CONVOLUTION_DIRECTION_FORWARD":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_CONVOLUTION_DIRECTION","file":"um\\DirectML.h","line":235,"type":"Integer","value":0},"DML_CONVOLUTION_MODE":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_CONVOLUTION_MODE {\r\n    DML_CONVOLUTION_MODE_CONVOLUTION,\r\n    DML_CONVOLUTION_MODE_CROSS_CORRELATION\r\n} ;","file":"um\\DirectML.h","line":229,"type":"Enum","value":"enum DML_CONVOLUTION_MODE {\r\n    DML_CONVOLUTION_MODE_CONVOLUTION,\r\n    DML_CONVOLUTION_MODE_CROSS_CORRELATION\r\n} ;"},"DML_CONVOLUTION_MODE_CONVOLUTION":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_CONVOLUTION_MODE","file":"um\\DirectML.h","line":229,"type":"Integer","value":0},"DML_CONVOLUTION_MODE_CROSS_CORRELATION":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_CONVOLUTION_MODE","file":"um\\DirectML.h","line":229,"type":"Integer","value":1},"DML_CONVOLUTION_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_CONVOLUTION_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* FilterTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* BiasTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    DML_CONVOLUTION_MODE Mode;\r\n    DML_CONVOLUTION_DIRECTION Direction;\r\n    UINT DimensionCount;\r\n    _Field_size_(DimensionCount) const UINT* Strides;\r\n    _Field_size_(DimensionCount) const UINT* Dilations;\r\n    _Field_size_(DimensionCount) const UINT* StartPadding;\r\n    _Field_size_(DimensionCount) const UINT* EndPadding;\r\n    _Field_size_(DimensionCount) const UINT* OutputPadding;\r\n    UINT GroupCount;\r\n    _Maybenull_ const DML_OPERATOR_DESC* FusedActivation;\r\n} ;","file":"um\\DirectML.h","line":658,"type":"Struct","value":"struct DML_CONVOLUTION_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* FilterTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* BiasTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    DML_CONVOLUTION_MODE Mode;\r\n    DML_CONVOLUTION_DIRECTION Direction;\r\n    UINT DimensionCount;\r\n    UINT* Strides;\r\n    UINT* Dilations;\r\n    UINT* StartPadding;\r\n    UINT* EndPadding;\r\n    UINT* OutputPadding;\r\n    UINT GroupCount;\r\n    _Maybenull_  DML_OPERATOR_DESC* FusedActivation;\r\n} ;"},"DML_CREATE_DEVICE_FLAGS":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_CREATE_DEVICE_FLAGS {\r\n    DML_CREATE_DEVICE_FLAG_NONE = 0,\r\n    DML_CREATE_DEVICE_FLAG_DEBUG = 0x1\r\n} ;","file":"um\\DirectML.h","line":1142,"type":"Enum","value":"enum DML_CREATE_DEVICE_FLAGS {\r\n    DML_CREATE_DEVICE_FLAG_NONE = 0,\r\n    DML_CREATE_DEVICE_FLAG_DEBUG = 0x1\r\n} ;"},"DML_CREATE_DEVICE_FLAG_DEBUG":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_CREATE_DEVICE_FLAGS","file":"um\\DirectML.h","line":1142,"type":"Integer","value":1},"DML_CREATE_DEVICE_FLAG_NONE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_CREATE_DEVICE_FLAGS","file":"um\\DirectML.h","line":1142,"type":"Integer","value":0},"DML_DECLARE_INTERFACE":{"comment":"","critical":{},"dupe":[],"exp":"#define DML_DECLARE_INTERFACE(iid) DECLSPEC_UUID(iid) DECLSPEC_NOVTABLE","file":"um\\DirectML.h","line":12,"type":"Macro","value":"DECLSPEC_UUID(iid) DECLSPEC_NOVTABLE"},"DML_DEPTH_TO_SPACE_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_DEPTH_TO_SPACE_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT BlockSize;\r\n} ;","file":"um\\DirectML.h","line":830,"type":"Struct","value":"struct DML_DEPTH_TO_SPACE_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT BlockSize;\r\n} ;"},"DML_DIAGONAL_MATRIX_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_DIAGONAL_MATRIX_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    INT Offset;\r\n    FLOAT Value;\r\n} ;","file":"um\\DirectML.h","line":1037,"type":"Struct","value":"struct DML_DIAGONAL_MATRIX_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    INT Offset;\r\n    FLOAT Value;\r\n} ;"},"DML_ELEMENT_WISE_ABS_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_ABS_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":290,"type":"Struct","value":"struct DML_ELEMENT_WISE_ABS_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_ACOSH_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_ACOSH_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":1000,"type":"Struct","value":"struct DML_ELEMENT_WISE_ACOSH_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_ACOS_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_ACOS_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":297,"type":"Struct","value":"struct DML_ELEMENT_WISE_ACOS_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_ADD1_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_ADD1_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_OPERATOR_DESC* FusedActivation;\r\n} ;","file":"um\\DirectML.h","line":311,"type":"Struct","value":"struct DML_ELEMENT_WISE_ADD1_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_OPERATOR_DESC* FusedActivation;\r\n} ;"},"DML_ELEMENT_WISE_ADD_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_ADD_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":304,"type":"Struct","value":"struct DML_ELEMENT_WISE_ADD_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_ASINH_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_ASINH_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":993,"type":"Struct","value":"struct DML_ELEMENT_WISE_ASINH_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_ASIN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_ASIN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":319,"type":"Struct","value":"struct DML_ELEMENT_WISE_ASIN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_ATANH_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_ATANH_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":1007,"type":"Struct","value":"struct DML_ELEMENT_WISE_ATANH_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_ATAN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_ATAN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":326,"type":"Struct","value":"struct DML_ELEMENT_WISE_ATAN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_CEIL_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_CEIL_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":333,"type":"Struct","value":"struct DML_ELEMENT_WISE_CEIL_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_CLIP_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_CLIP_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n    FLOAT Min;\r\n    FLOAT Max;\r\n} ;","file":"um\\DirectML.h","line":340,"type":"Struct","value":"struct DML_ELEMENT_WISE_CLIP_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n    FLOAT Min;\r\n    FLOAT Max;\r\n} ;"},"DML_ELEMENT_WISE_CONSTANT_POW_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_CONSTANT_POW_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n    FLOAT Exponent;\r\n} ;","file":"um\\DirectML.h","line":468,"type":"Struct","value":"struct DML_ELEMENT_WISE_CONSTANT_POW_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n    FLOAT Exponent;\r\n} ;"},"DML_ELEMENT_WISE_COSH_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_COSH_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":979,"type":"Struct","value":"struct DML_ELEMENT_WISE_COSH_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_COS_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_COS_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":349,"type":"Struct","value":"struct DML_ELEMENT_WISE_COS_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_DEQUANTIZE_LINEAR_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_DEQUANTIZE_LINEAR_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* ScaleTensor;\r\n    const DML_TENSOR_DESC* ZeroPointTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":527,"type":"Struct","value":"struct DML_ELEMENT_WISE_DEQUANTIZE_LINEAR_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* ScaleTensor;\r\n    DML_TENSOR_DESC* ZeroPointTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_DIVIDE_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_DIVIDE_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":356,"type":"Struct","value":"struct DML_ELEMENT_WISE_DIVIDE_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_ERF_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_ERF_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":965,"type":"Struct","value":"struct DML_ELEMENT_WISE_ERF_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_EXP_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_EXP_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":363,"type":"Struct","value":"struct DML_ELEMENT_WISE_EXP_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_FLOOR_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_FLOOR_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":370,"type":"Struct","value":"struct DML_ELEMENT_WISE_FLOOR_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_IDENTITY_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_IDENTITY_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":283,"type":"Struct","value":"struct DML_ELEMENT_WISE_IDENTITY_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_IF_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_IF_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ConditionTensor;\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":1014,"type":"Struct","value":"struct DML_ELEMENT_WISE_IF_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ConditionTensor;\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_IS_NAN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_IS_NAN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":959,"type":"Struct","value":"struct DML_ELEMENT_WISE_IS_NAN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_LOGICAL_AND_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_LOGICAL_AND_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":384,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_AND_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_LOGICAL_EQUALS_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_LOGICAL_EQUALS_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":391,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_EQUALS_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_LOGICAL_GREATER_THAN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_LOGICAL_GREATER_THAN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":398,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_GREATER_THAN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_LOGICAL_LESS_THAN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_LOGICAL_LESS_THAN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":405,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_LESS_THAN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_LOGICAL_NOT_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_LOGICAL_NOT_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":412,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_NOT_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_LOGICAL_OR_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_LOGICAL_OR_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":418,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_OR_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_LOGICAL_XOR_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_LOGICAL_XOR_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":425,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOGICAL_XOR_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_LOG_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_LOG_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":377,"type":"Struct","value":"struct DML_ELEMENT_WISE_LOG_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_MAX_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_MAX_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":432,"type":"Struct","value":"struct DML_ELEMENT_WISE_MAX_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_MEAN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_MEAN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":439,"type":"Struct","value":"struct DML_ELEMENT_WISE_MEAN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_MIN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_MIN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":446,"type":"Struct","value":"struct DML_ELEMENT_WISE_MIN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_MULTIPLY_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_MULTIPLY_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":453,"type":"Struct","value":"struct DML_ELEMENT_WISE_MULTIPLY_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_POW_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_POW_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* ExponentTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":460,"type":"Struct","value":"struct DML_ELEMENT_WISE_POW_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* ExponentTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_QUANTIZE_LINEAR_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_QUANTIZE_LINEAR_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* ScaleTensor;\r\n    const DML_TENSOR_DESC* ZeroPointTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":519,"type":"Struct","value":"struct DML_ELEMENT_WISE_QUANTIZE_LINEAR_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* ScaleTensor;\r\n    DML_TENSOR_DESC* ZeroPointTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_RECIP_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_RECIP_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":476,"type":"Struct","value":"struct DML_ELEMENT_WISE_RECIP_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_SIGN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_SIGN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":953,"type":"Struct","value":"struct DML_ELEMENT_WISE_SIGN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_SINH_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_SINH_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":972,"type":"Struct","value":"struct DML_ELEMENT_WISE_SINH_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_SIN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_SIN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":483,"type":"Struct","value":"struct DML_ELEMENT_WISE_SIN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_SQRT_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_SQRT_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":490,"type":"Struct","value":"struct DML_ELEMENT_WISE_SQRT_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_SUBTRACT_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_SUBTRACT_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":497,"type":"Struct","value":"struct DML_ELEMENT_WISE_SUBTRACT_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_ELEMENT_WISE_TANH_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_TANH_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":986,"type":"Struct","value":"struct DML_ELEMENT_WISE_TANH_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_TAN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_TAN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n} ;","file":"um\\DirectML.h","line":504,"type":"Struct","value":"struct DML_ELEMENT_WISE_TAN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n} ;"},"DML_ELEMENT_WISE_THRESHOLD_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ELEMENT_WISE_THRESHOLD_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_SCALE_BIAS* ScaleBias;\r\n    FLOAT Min;\r\n} ;","file":"um\\DirectML.h","line":511,"type":"Struct","value":"struct DML_ELEMENT_WISE_THRESHOLD_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_SCALE_BIAS* ScaleBias;\r\n    FLOAT Min;\r\n} ;"},"DML_EXECUTION_FLAGS":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_EXECUTION_FLAGS {\r\n    DML_EXECUTION_FLAG_NONE = 0,\r\n    DML_EXECUTION_FLAG_ALLOW_HALF_PRECISION_COMPUTATION = 0x1,\r\n    DML_EXECUTION_FLAG_DISABLE_META_COMMANDS = 0x2,\r\n    DML_EXECUTION_FLAG_DESCRIPTORS_VOLATILE = 0x4\r\n} ;","file":"um\\DirectML.h","line":1132,"type":"Enum","value":"enum DML_EXECUTION_FLAGS {\r\n    DML_EXECUTION_FLAG_NONE = 0,\r\n    DML_EXECUTION_FLAG_ALLOW_HALF_PRECISION_COMPUTATION = 0x1,\r\n    DML_EXECUTION_FLAG_DISABLE_META_COMMANDS = 0x2,\r\n    DML_EXECUTION_FLAG_DESCRIPTORS_VOLATILE = 0x4\r\n} ;"},"DML_EXECUTION_FLAG_ALLOW_HALF_PRECISION_COMPUTATION":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_EXECUTION_FLAGS","file":"um\\DirectML.h","line":1132,"type":"Integer","value":1},"DML_EXECUTION_FLAG_DESCRIPTORS_VOLATILE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_EXECUTION_FLAGS","file":"um\\DirectML.h","line":1132,"type":"Integer","value":4},"DML_EXECUTION_FLAG_DISABLE_META_COMMANDS":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_EXECUTION_FLAGS","file":"um\\DirectML.h","line":1132,"type":"Integer","value":2},"DML_EXECUTION_FLAG_NONE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_EXECUTION_FLAGS","file":"um\\DirectML.h","line":1132,"type":"Integer","value":0},"DML_FEATURE":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_FEATURE {\r\n    DML_FEATURE_TENSOR_DATA_TYPE_SUPPORT,\r\n    DML_FEATURE_FEATURE_LEVELS\r\n} ;","file":"um\\DirectML.h","line":1086,"type":"Enum","value":"enum DML_FEATURE {\r\n    DML_FEATURE_TENSOR_DATA_TYPE_SUPPORT,\r\n    DML_FEATURE_FEATURE_LEVELS\r\n} ;"},"DML_FEATURE_DATA_FEATURE_LEVELS":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_FEATURE_DATA_FEATURE_LEVELS {\r\n    DML_FEATURE_LEVEL MaxSupportedFeatureLevel;\r\n} ;","file":"um\\DirectML.h","line":1113,"type":"Struct","value":"struct DML_FEATURE_DATA_FEATURE_LEVELS {\r\n    DML_FEATURE_LEVEL MaxSupportedFeatureLevel;\r\n} ;"},"DML_FEATURE_DATA_TENSOR_DATA_TYPE_SUPPORT":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_FEATURE_DATA_TENSOR_DATA_TYPE_SUPPORT {\r\n    BOOL IsSupported;\r\n} ;","file":"um\\DirectML.h","line":1100,"type":"Struct","value":"struct DML_FEATURE_DATA_TENSOR_DATA_TYPE_SUPPORT {\r\n    BOOL IsSupported;\r\n} ;"},"DML_FEATURE_FEATURE_LEVELS":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_FEATURE","file":"um\\DirectML.h","line":1086,"type":"Integer","value":1},"DML_FEATURE_LEVEL":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_FEATURE_LEVEL {\r\n    DML_FEATURE_LEVEL_1_0 = 0x1000,\r\n    DML_FEATURE_LEVEL_2_0 = 0x2000\r\n} ;","file":"um\\DirectML.h","line":1078,"type":"Enum","value":"enum DML_FEATURE_LEVEL {\r\n    DML_FEATURE_LEVEL_1_0 = 0x1000,\r\n    DML_FEATURE_LEVEL_2_0 = 0x2000\r\n} ;"},"DML_FEATURE_LEVEL_1_0":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_FEATURE_LEVEL","file":"um\\DirectML.h","line":1078,"type":"Integer","value":4096},"DML_FEATURE_LEVEL_2_0":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_FEATURE_LEVEL","file":"um\\DirectML.h","line":1078,"type":"Integer","value":8192},"DML_FEATURE_QUERY_FEATURE_LEVELS":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_FEATURE_QUERY_FEATURE_LEVELS {\r\n    UINT RequestedFeatureLevelCount;\r\n    _Field_size_(RequestedFeatureLevelCount) const DML_FEATURE_LEVEL* RequestedFeatureLevels;\r\n} ;","file":"um\\DirectML.h","line":1107,"type":"Struct","value":"struct DML_FEATURE_QUERY_FEATURE_LEVELS {\r\n    UINT RequestedFeatureLevelCount;\r\n    DML_FEATURE_LEVEL* RequestedFeatureLevels;\r\n} ;"},"DML_FEATURE_QUERY_TENSOR_DATA_TYPE_SUPPORT":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_FEATURE_QUERY_TENSOR_DATA_TYPE_SUPPORT {\r\n    DML_TENSOR_DATA_TYPE DataType;\r\n} ;","file":"um\\DirectML.h","line":1095,"type":"Struct","value":"struct DML_FEATURE_QUERY_TENSOR_DATA_TYPE_SUPPORT {\r\n    DML_TENSOR_DATA_TYPE DataType;\r\n} ;"},"DML_FEATURE_TENSOR_DATA_TYPE_SUPPORT":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_FEATURE","file":"um\\DirectML.h","line":1086,"type":"Integer","value":0},"DML_GATHER_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_GATHER_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* IndicesTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT Axis;\r\n    UINT IndexDimensions;\r\n} ;","file":"um\\DirectML.h","line":814,"type":"Struct","value":"struct DML_GATHER_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* IndicesTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT Axis;\r\n    UINT IndexDimensions;\r\n} ;"},"DML_GEMM_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_GEMM_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* ATensor;\r\n    const DML_TENSOR_DESC* BTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* CTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    DML_MATRIX_TRANSFORM TransA;\r\n    DML_MATRIX_TRANSFORM TransB;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n    _Maybenull_ const DML_OPERATOR_DESC* FusedActivation;\r\n} ;","file":"um\\DirectML.h","line":676,"type":"Struct","value":"struct DML_GEMM_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* ATensor;\r\n    DML_TENSOR_DESC* BTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* CTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    DML_MATRIX_TRANSFORM TransA;\r\n    DML_MATRIX_TRANSFORM TransB;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n    _Maybenull_  DML_OPERATOR_DESC* FusedActivation;\r\n} ;"},"DML_GRU_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_GRU_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* WeightTensor;\r\n    const DML_TENSOR_DESC* RecurrenceTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* BiasTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* HiddenInitTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* SequenceLengthsTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* OutputSequenceTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* OutputSingleTensor;\r\n    UINT ActivationDescCount;\r\n    _Field_size_(ActivationDescCount) const DML_OPERATOR_DESC* ActivationDescs;\r\n    DML_RECURRENT_NETWORK_DIRECTION Direction;\r\n    BOOL LinearBeforeReset;\r\n} ;","file":"um\\DirectML.h","line":935,"type":"Struct","value":"struct DML_GRU_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* WeightTensor;\r\n    DML_TENSOR_DESC* RecurrenceTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* BiasTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* HiddenInitTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* SequenceLengthsTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* OutputSequenceTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* OutputSingleTensor;\r\n    UINT ActivationDescCount;\r\n    DML_OPERATOR_DESC* ActivationDescs;\r\n    DML_RECURRENT_NETWORK_DIRECTION Direction;\r\n    BOOL LinearBeforeReset;\r\n} ;"},"DML_INTERPOLATION_MODE":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_INTERPOLATION_MODE {\r\n    DML_INTERPOLATION_MODE_NEAREST_NEIGHBOR,\r\n    DML_INTERPOLATION_MODE_LINEAR\r\n} ;","file":"um\\DirectML.h","line":248,"type":"Enum","value":"enum DML_INTERPOLATION_MODE {\r\n    DML_INTERPOLATION_MODE_NEAREST_NEIGHBOR,\r\n    DML_INTERPOLATION_MODE_LINEAR\r\n} ;"},"DML_INTERPOLATION_MODE_LINEAR":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_INTERPOLATION_MODE","file":"um\\DirectML.h","line":248,"type":"Integer","value":1},"DML_INTERPOLATION_MODE_NEAREST_NEIGHBOR":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_INTERPOLATION_MODE","file":"um\\DirectML.h","line":248,"type":"Integer","value":0},"DML_JOIN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_JOIN_OPERATOR_DESC {\r\n    UINT InputCount;\r\n    _Field_size_(InputCount) const DML_TENSOR_DESC* InputTensors;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT Axis;\r\n} ;","file":"um\\DirectML.h","line":778,"type":"Struct","value":"struct DML_JOIN_OPERATOR_DESC {\r\n    UINT InputCount;\r\n    DML_TENSOR_DESC* InputTensors;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT Axis;\r\n} ;"},"DML_LOCAL_RESPONSE_NORMALIZATION_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_LOCAL_RESPONSE_NORMALIZATION_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    BOOL CrossChannel;\r\n    UINT LocalSize;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n    FLOAT Bias;\r\n} ;","file":"um\\DirectML.h","line":879,"type":"Struct","value":"struct DML_LOCAL_RESPONSE_NORMALIZATION_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    BOOL CrossChannel;\r\n    UINT LocalSize;\r\n    FLOAT Alpha;\r\n    FLOAT Beta;\r\n    FLOAT Bias;\r\n} ;"},"DML_LP_NORMALIZATION_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_LP_NORMALIZATION_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT Axis;\r\n    FLOAT Epsilon;\r\n    UINT P;\r\n} ;","file":"um\\DirectML.h","line":890,"type":"Struct","value":"struct DML_LP_NORMALIZATION_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT Axis;\r\n    FLOAT Epsilon;\r\n    UINT P;\r\n} ;"},"DML_LP_POOLING_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_LP_POOLING_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT DimensionCount;\r\n    _Field_size_(DimensionCount) const UINT* Strides;\r\n    _Field_size_(DimensionCount) const UINT* WindowSize;\r\n    _Field_size_(DimensionCount) const UINT* StartPadding;\r\n    _Field_size_(DimensionCount) const UINT* EndPadding;\r\n    UINT P;\r\n} ;","file":"um\\DirectML.h","line":710,"type":"Struct","value":"struct DML_LP_POOLING_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT DimensionCount;\r\n    UINT* Strides;\r\n    UINT* WindowSize;\r\n    UINT* StartPadding;\r\n    UINT* EndPadding;\r\n    UINT P;\r\n} ;"},"DML_LSTM_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_LSTM_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* WeightTensor;\r\n    const DML_TENSOR_DESC* RecurrenceTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* BiasTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* HiddenInitTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* CellMemInitTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* SequenceLengthsTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* PeepholeTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* OutputSequenceTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* OutputSingleTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* OutputCellSingleTensor;\r\n    UINT ActivationDescCount;\r\n    _Field_size_(ActivationDescCount) const DML_OPERATOR_DESC* ActivationDescs;\r\n    DML_RECURRENT_NETWORK_DIRECTION Direction;\r\n    float ClipThreshold;\r\n    BOOL UseClipThreshold;\r\n    BOOL CoupleInputForget;\r\n} ;","file":"um\\DirectML.h","line":914,"type":"Struct","value":"struct DML_LSTM_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* WeightTensor;\r\n    DML_TENSOR_DESC* RecurrenceTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* BiasTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* HiddenInitTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* CellMemInitTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* SequenceLengthsTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* PeepholeTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* OutputSequenceTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* OutputSingleTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* OutputCellSingleTensor;\r\n    UINT ActivationDescCount;\r\n    DML_OPERATOR_DESC* ActivationDescs;\r\n    DML_RECURRENT_NETWORK_DIRECTION Direction;\r\n    float ClipThreshold;\r\n    BOOL UseClipThreshold;\r\n    BOOL CoupleInputForget;\r\n} ;"},"DML_MATRIX_TRANSFORM":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_MATRIX_TRANSFORM {\r\n    DML_MATRIX_TRANSFORM_NONE,\r\n    DML_MATRIX_TRANSFORM_TRANSPOSE\r\n} ;","file":"um\\DirectML.h","line":223,"type":"Enum","value":"enum DML_MATRIX_TRANSFORM {\r\n    DML_MATRIX_TRANSFORM_NONE,\r\n    DML_MATRIX_TRANSFORM_TRANSPOSE\r\n} ;"},"DML_MATRIX_TRANSFORM_NONE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_MATRIX_TRANSFORM","file":"um\\DirectML.h","line":223,"type":"Integer","value":0},"DML_MATRIX_TRANSFORM_TRANSPOSE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_MATRIX_TRANSFORM","file":"um\\DirectML.h","line":223,"type":"Integer","value":1},"DML_MAX_POOLING1_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_MAX_POOLING1_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* OutputIndicesTensor;\r\n    UINT DimensionCount;\r\n    _Field_size_(DimensionCount) const UINT* Strides;\r\n    _Field_size_(DimensionCount) const UINT* WindowSize;\r\n    _Field_size_(DimensionCount) const UINT* StartPadding;\r\n    _Field_size_(DimensionCount) const UINT* EndPadding;\r\n} ;","file":"um\\DirectML.h","line":733,"type":"Struct","value":"struct DML_MAX_POOLING1_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* OutputIndicesTensor;\r\n    UINT DimensionCount;\r\n    UINT* Strides;\r\n    UINT* WindowSize;\r\n    UINT* StartPadding;\r\n    UINT* EndPadding;\r\n} ;"},"DML_MAX_POOLING_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_MAX_POOLING_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT DimensionCount;\r\n    _Field_size_(DimensionCount) const UINT* Strides;\r\n    _Field_size_(DimensionCount) const UINT* WindowSize;\r\n    _Field_size_(DimensionCount) const UINT* StartPadding;\r\n    _Field_size_(DimensionCount) const UINT* EndPadding;\r\n} ;","file":"um\\DirectML.h","line":722,"type":"Struct","value":"struct DML_MAX_POOLING_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT DimensionCount;\r\n    UINT* Strides;\r\n    UINT* WindowSize;\r\n    UINT* StartPadding;\r\n    UINT* EndPadding;\r\n} ;"},"DML_MAX_UNPOOLING_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_MAX_UNPOOLING_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* IndicesTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n} ;","file":"um\\DirectML.h","line":1030,"type":"Struct","value":"struct DML_MAX_UNPOOLING_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* IndicesTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n} ;"},"DML_MEAN_VARIANCE_NORMALIZATION_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_MEAN_VARIANCE_NORMALIZATION_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* ScaleTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* BiasTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    BOOL CrossChannel;\r\n    BOOL NormalizeVariance;\r\n    FLOAT Epsilon;\r\n    _Maybenull_ const DML_OPERATOR_DESC* FusedActivation;\r\n} ;","file":"um\\DirectML.h","line":867,"type":"Struct","value":"struct DML_MEAN_VARIANCE_NORMALIZATION_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* ScaleTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* BiasTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    BOOL CrossChannel;\r\n    BOOL NormalizeVariance;\r\n    FLOAT Epsilon;\r\n    _Maybenull_  DML_OPERATOR_DESC* FusedActivation;\r\n} ;"},"DML_ONE_HOT_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ONE_HOT_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* IndicesTensor;\r\n    const DML_TENSOR_DESC* ValuesTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT Axis;\r\n} ;","file":"um\\DirectML.h","line":1053,"type":"Struct","value":"struct DML_ONE_HOT_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* IndicesTensor;\r\n    DML_TENSOR_DESC* ValuesTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT Axis;\r\n} ;"},"DML_OPERATOR_ACTIVATION_ELU":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":35},"DML_OPERATOR_ACTIVATION_HARDMAX":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":36},"DML_OPERATOR_ACTIVATION_HARD_SIGMOID":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":37},"DML_OPERATOR_ACTIVATION_IDENTITY":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":38},"DML_OPERATOR_ACTIVATION_LEAKY_RELU":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":39},"DML_OPERATOR_ACTIVATION_LINEAR":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":40},"DML_OPERATOR_ACTIVATION_LOG_SOFTMAX":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":41},"DML_OPERATOR_ACTIVATION_PARAMETERIZED_RELU":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":42},"DML_OPERATOR_ACTIVATION_PARAMETRIC_SOFTPLUS":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":43},"DML_OPERATOR_ACTIVATION_RELU":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":44},"DML_OPERATOR_ACTIVATION_SCALED_ELU":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":45},"DML_OPERATOR_ACTIVATION_SCALED_TANH":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":46},"DML_OPERATOR_ACTIVATION_SHRINK":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":90},"DML_OPERATOR_ACTIVATION_SIGMOID":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":47},"DML_OPERATOR_ACTIVATION_SOFTMAX":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":48},"DML_OPERATOR_ACTIVATION_SOFTPLUS":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":49},"DML_OPERATOR_ACTIVATION_SOFTSIGN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":50},"DML_OPERATOR_ACTIVATION_TANH":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":51},"DML_OPERATOR_ACTIVATION_THRESHOLDED_RELU":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":52},"DML_OPERATOR_AVERAGE_POOLING":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":56},"DML_OPERATOR_BATCH_NORMALIZATION":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":72},"DML_OPERATOR_CAST":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":61},"DML_OPERATOR_CONVOLUTION":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":53},"DML_OPERATOR_DEPTH_TO_SPACE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":69},"DML_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_OPERATOR_DESC {\r\n    DML_OPERATOR_TYPE Type;\r\n    _Field_size_(_Inexpressible_(\"Dependent on operator type\")) const void* Desc;\r\n} ;","file":"um\\DirectML.h","line":277,"type":"Struct","value":"struct DML_OPERATOR_DESC {\r\n    DML_OPERATOR_TYPE Type;\r\n    )  void* Desc;\r\n} ;"},"DML_OPERATOR_DIAGONAL_MATRIX":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":93},"DML_OPERATOR_ELEMENT_WISE_ABS":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":2},"DML_OPERATOR_ELEMENT_WISE_ACOS":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":3},"DML_OPERATOR_ELEMENT_WISE_ACOSH":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":86},"DML_OPERATOR_ELEMENT_WISE_ADD":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":4},"DML_OPERATOR_ELEMENT_WISE_ADD1":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":89},"DML_OPERATOR_ELEMENT_WISE_ASIN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":5},"DML_OPERATOR_ELEMENT_WISE_ASINH":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":85},"DML_OPERATOR_ELEMENT_WISE_ATAN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":6},"DML_OPERATOR_ELEMENT_WISE_ATANH":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":87},"DML_OPERATOR_ELEMENT_WISE_CEIL":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":7},"DML_OPERATOR_ELEMENT_WISE_CLIP":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":8},"DML_OPERATOR_ELEMENT_WISE_CONSTANT_POW":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":26},"DML_OPERATOR_ELEMENT_WISE_COS":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":9},"DML_OPERATOR_ELEMENT_WISE_COSH":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":83},"DML_OPERATOR_ELEMENT_WISE_DEQUANTIZE_LINEAR":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":34},"DML_OPERATOR_ELEMENT_WISE_DIVIDE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":10},"DML_OPERATOR_ELEMENT_WISE_ERF":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":81},"DML_OPERATOR_ELEMENT_WISE_EXP":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":11},"DML_OPERATOR_ELEMENT_WISE_FLOOR":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":12},"DML_OPERATOR_ELEMENT_WISE_IDENTITY":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":1},"DML_OPERATOR_ELEMENT_WISE_IF":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":88},"DML_OPERATOR_ELEMENT_WISE_IS_NAN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":80},"DML_OPERATOR_ELEMENT_WISE_LOG":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":13},"DML_OPERATOR_ELEMENT_WISE_LOGICAL_AND":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":14},"DML_OPERATOR_ELEMENT_WISE_LOGICAL_EQUALS":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":15},"DML_OPERATOR_ELEMENT_WISE_LOGICAL_GREATER_THAN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":16},"DML_OPERATOR_ELEMENT_WISE_LOGICAL_LESS_THAN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":17},"DML_OPERATOR_ELEMENT_WISE_LOGICAL_NOT":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":18},"DML_OPERATOR_ELEMENT_WISE_LOGICAL_OR":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":19},"DML_OPERATOR_ELEMENT_WISE_LOGICAL_XOR":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":20},"DML_OPERATOR_ELEMENT_WISE_MAX":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":21},"DML_OPERATOR_ELEMENT_WISE_MEAN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":22},"DML_OPERATOR_ELEMENT_WISE_MIN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":23},"DML_OPERATOR_ELEMENT_WISE_MULTIPLY":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":24},"DML_OPERATOR_ELEMENT_WISE_POW":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":25},"DML_OPERATOR_ELEMENT_WISE_QUANTIZE_LINEAR":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":33},"DML_OPERATOR_ELEMENT_WISE_RECIP":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":27},"DML_OPERATOR_ELEMENT_WISE_SIGN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":79},"DML_OPERATOR_ELEMENT_WISE_SIN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":28},"DML_OPERATOR_ELEMENT_WISE_SINH":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":82},"DML_OPERATOR_ELEMENT_WISE_SQRT":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":29},"DML_OPERATOR_ELEMENT_WISE_SUBTRACT":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":30},"DML_OPERATOR_ELEMENT_WISE_TAN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":31},"DML_OPERATOR_ELEMENT_WISE_TANH":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":84},"DML_OPERATOR_ELEMENT_WISE_THRESHOLD":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":32},"DML_OPERATOR_GATHER":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":67},"DML_OPERATOR_GEMM":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":54},"DML_OPERATOR_GRU":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":78},"DML_OPERATOR_INVALID":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":0},"DML_OPERATOR_JOIN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":63},"DML_OPERATOR_LOCAL_RESPONSE_NORMALIZATION":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":74},"DML_OPERATOR_LP_NORMALIZATION":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":75},"DML_OPERATOR_LP_POOLING":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":57},"DML_OPERATOR_LSTM":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":77},"DML_OPERATOR_MAX_POOLING":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":58},"DML_OPERATOR_MAX_POOLING1":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":91},"DML_OPERATOR_MAX_UNPOOLING":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":92},"DML_OPERATOR_MEAN_VARIANCE_NORMALIZATION":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":73},"DML_OPERATOR_ONE_HOT":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":95},"DML_OPERATOR_PADDING":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":64},"DML_OPERATOR_REDUCE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":55},"DML_OPERATOR_RESAMPLE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":96},"DML_OPERATOR_RNN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":76},"DML_OPERATOR_ROI_POOLING":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":59},"DML_OPERATOR_SCATTER":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":94},"DML_OPERATOR_SLICE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":60},"DML_OPERATOR_SPACE_TO_DEPTH":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":68},"DML_OPERATOR_SPLIT":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":62},"DML_OPERATOR_TILE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":70},"DML_OPERATOR_TOP_K":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":71},"DML_OPERATOR_TYPE":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_OPERATOR_TYPE {\r\n    DML_OPERATOR_INVALID,\r\n    DML_OPERATOR_ELEMENT_WISE_IDENTITY,\r\n    DML_OPERATOR_ELEMENT_WISE_ABS,\r\n    DML_OPERATOR_ELEMENT_WISE_ACOS,\r\n    DML_OPERATOR_ELEMENT_WISE_ADD,\r\n    DML_OPERATOR_ELEMENT_WISE_ASIN,\r\n    DML_OPERATOR_ELEMENT_WISE_ATAN,\r\n    DML_OPERATOR_ELEMENT_WISE_CEIL,\r\n    DML_OPERATOR_ELEMENT_WISE_CLIP,\r\n    DML_OPERATOR_ELEMENT_WISE_COS,\r\n    DML_OPERATOR_ELEMENT_WISE_DIVIDE,\r\n    DML_OPERATOR_ELEMENT_WISE_EXP,\r\n    DML_OPERATOR_ELEMENT_WISE_FLOOR,\r\n    DML_OPERATOR_ELEMENT_WISE_LOG,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_AND,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_EQUALS,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_GREATER_THAN,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_LESS_THAN,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_NOT,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_OR,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_XOR,\r\n    DML_OPERATOR_ELEMENT_WISE_MAX,\r\n    DML_OPERATOR_ELEMENT_WISE_MEAN,\r\n    DML_OPERATOR_ELEMENT_WISE_MIN,\r\n    DML_OPERATOR_ELEMENT_WISE_MULTIPLY,\r\n    DML_OPERATOR_ELEMENT_WISE_POW,\r\n    DML_OPERATOR_ELEMENT_WISE_CONSTANT_POW,\r\n    DML_OPERATOR_ELEMENT_WISE_RECIP,\r\n    DML_OPERATOR_ELEMENT_WISE_SIN,\r\n    DML_OPERATOR_ELEMENT_WISE_SQRT,\r\n    DML_OPERATOR_ELEMENT_WISE_SUBTRACT,\r\n    DML_OPERATOR_ELEMENT_WISE_TAN,\r\n    DML_OPERATOR_ELEMENT_WISE_THRESHOLD,\r\n    DML_OPERATOR_ELEMENT_WISE_QUANTIZE_LINEAR,\r\n    DML_OPERATOR_ELEMENT_WISE_DEQUANTIZE_LINEAR,\r\n    DML_OPERATOR_ACTIVATION_ELU,\r\n    DML_OPERATOR_ACTIVATION_HARDMAX,\r\n    DML_OPERATOR_ACTIVATION_HARD_SIGMOID,\r\n    DML_OPERATOR_ACTIVATION_IDENTITY,\r\n    DML_OPERATOR_ACTIVATION_LEAKY_RELU,\r\n    DML_OPERATOR_ACTIVATION_LINEAR,\r\n    DML_OPERATOR_ACTIVATION_LOG_SOFTMAX,\r\n    DML_OPERATOR_ACTIVATION_PARAMETERIZED_RELU,\r\n    DML_OPERATOR_ACTIVATION_PARAMETRIC_SOFTPLUS,\r\n    DML_OPERATOR_ACTIVATION_RELU,\r\n    DML_OPERATOR_ACTIVATION_SCALED_ELU,\r\n    DML_OPERATOR_ACTIVATION_SCALED_TANH,\r\n    DML_OPERATOR_ACTIVATION_SIGMOID,\r\n    DML_OPERATOR_ACTIVATION_SOFTMAX,\r\n    DML_OPERATOR_ACTIVATION_SOFTPLUS,\r\n    DML_OPERATOR_ACTIVATION_SOFTSIGN,\r\n    DML_OPERATOR_ACTIVATION_TANH,\r\n    DML_OPERATOR_ACTIVATION_THRESHOLDED_RELU,\r\n    DML_OPERATOR_CONVOLUTION,\r\n    DML_OPERATOR_GEMM,\r\n    DML_OPERATOR_REDUCE,\r\n    DML_OPERATOR_AVERAGE_POOLING,\r\n    DML_OPERATOR_LP_POOLING,\r\n    DML_OPERATOR_MAX_POOLING,\r\n    DML_OPERATOR_ROI_POOLING,\r\n    DML_OPERATOR_SLICE,\r\n    DML_OPERATOR_CAST,\r\n    DML_OPERATOR_SPLIT,\r\n    DML_OPERATOR_JOIN,\r\n    DML_OPERATOR_PADDING,\r\n    DML_OPERATOR_VALUE_SCALE_2D,\r\n    DML_OPERATOR_UPSAMPLE_2D,\r\n    DML_OPERATOR_GATHER,\r\n    DML_OPERATOR_SPACE_TO_DEPTH,\r\n    DML_OPERATOR_DEPTH_TO_SPACE,\r\n    DML_OPERATOR_TILE,\r\n    DML_OPERATOR_TOP_K,\r\n    DML_OPERATOR_BATCH_NORMALIZATION,\r\n    DML_OPERATOR_MEAN_VARIANCE_NORMALIZATION,\r\n    DML_OPERATOR_LOCAL_RESPONSE_NORMALIZATION,\r\n    DML_OPERATOR_LP_NORMALIZATION,\r\n    DML_OPERATOR_RNN,\r\n    DML_OPERATOR_LSTM,\r\n    DML_OPERATOR_GRU,\r\n    DML_OPERATOR_ELEMENT_WISE_SIGN,\r\n    DML_OPERATOR_ELEMENT_WISE_IS_NAN,\r\n    DML_OPERATOR_ELEMENT_WISE_ERF,\r\n    DML_OPERATOR_ELEMENT_WISE_SINH,\r\n    DML_OPERATOR_ELEMENT_WISE_COSH,\r\n    DML_OPERATOR_ELEMENT_WISE_TANH,\r\n    DML_OPERATOR_ELEMENT_WISE_ASINH,\r\n    DML_OPERATOR_ELEMENT_WISE_ACOSH,\r\n    DML_OPERATOR_ELEMENT_WISE_ATANH,\r\n    DML_OPERATOR_ELEMENT_WISE_IF,\r\n    DML_OPERATOR_ELEMENT_WISE_ADD1,\r\n    DML_OPERATOR_ACTIVATION_SHRINK,\r\n    DML_OPERATOR_MAX_POOLING1,\r\n    DML_OPERATOR_MAX_UNPOOLING,\r\n    DML_OPERATOR_DIAGONAL_MATRIX,\r\n    DML_OPERATOR_SCATTER,\r\n    DML_OPERATOR_ONE_HOT,\r\n    DML_OPERATOR_RESAMPLE\r\n} ;","file":"um\\DirectML.h","line":97,"type":"Enum","value":"enum DML_OPERATOR_TYPE {\r\n    DML_OPERATOR_INVALID,\r\n    DML_OPERATOR_ELEMENT_WISE_IDENTITY,\r\n    DML_OPERATOR_ELEMENT_WISE_ABS,\r\n    DML_OPERATOR_ELEMENT_WISE_ACOS,\r\n    DML_OPERATOR_ELEMENT_WISE_ADD,\r\n    DML_OPERATOR_ELEMENT_WISE_ASIN,\r\n    DML_OPERATOR_ELEMENT_WISE_ATAN,\r\n    DML_OPERATOR_ELEMENT_WISE_CEIL,\r\n    DML_OPERATOR_ELEMENT_WISE_CLIP,\r\n    DML_OPERATOR_ELEMENT_WISE_COS,\r\n    DML_OPERATOR_ELEMENT_WISE_DIVIDE,\r\n    DML_OPERATOR_ELEMENT_WISE_EXP,\r\n    DML_OPERATOR_ELEMENT_WISE_FLOOR,\r\n    DML_OPERATOR_ELEMENT_WISE_LOG,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_AND,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_EQUALS,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_GREATER_THAN,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_LESS_THAN,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_NOT,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_OR,\r\n    DML_OPERATOR_ELEMENT_WISE_LOGICAL_XOR,\r\n    DML_OPERATOR_ELEMENT_WISE_MAX,\r\n    DML_OPERATOR_ELEMENT_WISE_MEAN,\r\n    DML_OPERATOR_ELEMENT_WISE_MIN,\r\n    DML_OPERATOR_ELEMENT_WISE_MULTIPLY,\r\n    DML_OPERATOR_ELEMENT_WISE_POW,\r\n    DML_OPERATOR_ELEMENT_WISE_CONSTANT_POW,\r\n    DML_OPERATOR_ELEMENT_WISE_RECIP,\r\n    DML_OPERATOR_ELEMENT_WISE_SIN,\r\n    DML_OPERATOR_ELEMENT_WISE_SQRT,\r\n    DML_OPERATOR_ELEMENT_WISE_SUBTRACT,\r\n    DML_OPERATOR_ELEMENT_WISE_TAN,\r\n    DML_OPERATOR_ELEMENT_WISE_THRESHOLD,\r\n    DML_OPERATOR_ELEMENT_WISE_QUANTIZE_LINEAR,\r\n    DML_OPERATOR_ELEMENT_WISE_DEQUANTIZE_LINEAR,\r\n    DML_OPERATOR_ACTIVATION_ELU,\r\n    DML_OPERATOR_ACTIVATION_HARDMAX,\r\n    DML_OPERATOR_ACTIVATION_HARD_SIGMOID,\r\n    DML_OPERATOR_ACTIVATION_IDENTITY,\r\n    DML_OPERATOR_ACTIVATION_LEAKY_RELU,\r\n    DML_OPERATOR_ACTIVATION_LINEAR,\r\n    DML_OPERATOR_ACTIVATION_LOG_SOFTMAX,\r\n    DML_OPERATOR_ACTIVATION_PARAMETERIZED_RELU,\r\n    DML_OPERATOR_ACTIVATION_PARAMETRIC_SOFTPLUS,\r\n    DML_OPERATOR_ACTIVATION_RELU,\r\n    DML_OPERATOR_ACTIVATION_SCALED_ELU,\r\n    DML_OPERATOR_ACTIVATION_SCALED_TANH,\r\n    DML_OPERATOR_ACTIVATION_SIGMOID,\r\n    DML_OPERATOR_ACTIVATION_SOFTMAX,\r\n    DML_OPERATOR_ACTIVATION_SOFTPLUS,\r\n    DML_OPERATOR_ACTIVATION_SOFTSIGN,\r\n    DML_OPERATOR_ACTIVATION_TANH,\r\n    DML_OPERATOR_ACTIVATION_THRESHOLDED_RELU,\r\n    DML_OPERATOR_CONVOLUTION,\r\n    DML_OPERATOR_GEMM,\r\n    DML_OPERATOR_REDUCE,\r\n    DML_OPERATOR_AVERAGE_POOLING,\r\n    DML_OPERATOR_LP_POOLING,\r\n    DML_OPERATOR_MAX_POOLING,\r\n    DML_OPERATOR_ROI_POOLING,\r\n    DML_OPERATOR_SLICE,\r\n    DML_OPERATOR_CAST,\r\n    DML_OPERATOR_SPLIT,\r\n    DML_OPERATOR_JOIN,\r\n    DML_OPERATOR_PADDING,\r\n    DML_OPERATOR_VALUE_SCALE_2D,\r\n    DML_OPERATOR_UPSAMPLE_2D,\r\n    DML_OPERATOR_GATHER,\r\n    DML_OPERATOR_SPACE_TO_DEPTH,\r\n    DML_OPERATOR_DEPTH_TO_SPACE,\r\n    DML_OPERATOR_TILE,\r\n    DML_OPERATOR_TOP_K,\r\n    DML_OPERATOR_BATCH_NORMALIZATION,\r\n    DML_OPERATOR_MEAN_VARIANCE_NORMALIZATION,\r\n    DML_OPERATOR_LOCAL_RESPONSE_NORMALIZATION,\r\n    DML_OPERATOR_LP_NORMALIZATION,\r\n    DML_OPERATOR_RNN,\r\n    DML_OPERATOR_LSTM,\r\n    DML_OPERATOR_GRU,\r\n    DML_OPERATOR_ELEMENT_WISE_SIGN,\r\n    DML_OPERATOR_ELEMENT_WISE_IS_NAN,\r\n    DML_OPERATOR_ELEMENT_WISE_ERF,\r\n    DML_OPERATOR_ELEMENT_WISE_SINH,\r\n    DML_OPERATOR_ELEMENT_WISE_COSH,\r\n    DML_OPERATOR_ELEMENT_WISE_TANH,\r\n    DML_OPERATOR_ELEMENT_WISE_ASINH,\r\n    DML_OPERATOR_ELEMENT_WISE_ACOSH,\r\n    DML_OPERATOR_ELEMENT_WISE_ATANH,\r\n    DML_OPERATOR_ELEMENT_WISE_IF,\r\n    DML_OPERATOR_ELEMENT_WISE_ADD1,\r\n    DML_OPERATOR_ACTIVATION_SHRINK,\r\n    DML_OPERATOR_MAX_POOLING1,\r\n    DML_OPERATOR_MAX_UNPOOLING,\r\n    DML_OPERATOR_DIAGONAL_MATRIX,\r\n    DML_OPERATOR_SCATTER,\r\n    DML_OPERATOR_ONE_HOT,\r\n    DML_OPERATOR_RESAMPLE\r\n} ;"},"DML_OPERATOR_UPSAMPLE_2D":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":66},"DML_OPERATOR_VALUE_SCALE_2D":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_OPERATOR_TYPE","file":"um\\DirectML.h","line":97,"type":"Integer","value":65},"DML_PADDING_MODE":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_PADDING_MODE {\r\n    DML_PADDING_MODE_CONSTANT,\r\n    DML_PADDING_MODE_EDGE,\r\n    DML_PADDING_MODE_REFLECTION\r\n} ;","file":"um\\DirectML.h","line":241,"type":"Enum","value":"enum DML_PADDING_MODE {\r\n    DML_PADDING_MODE_CONSTANT,\r\n    DML_PADDING_MODE_EDGE,\r\n    DML_PADDING_MODE_REFLECTION\r\n} ;"},"DML_PADDING_MODE_CONSTANT":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_PADDING_MODE","file":"um\\DirectML.h","line":241,"type":"Integer","value":0},"DML_PADDING_MODE_EDGE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_PADDING_MODE","file":"um\\DirectML.h","line":241,"type":"Integer","value":1},"DML_PADDING_MODE_REFLECTION":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_PADDING_MODE","file":"um\\DirectML.h","line":241,"type":"Integer","value":2},"DML_PADDING_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_PADDING_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    DML_PADDING_MODE PaddingMode;\r\n    FLOAT PaddingValue;\r\n    UINT DimensionCount;\r\n    _Field_size_(DimensionCount) const UINT* StartPadding;\r\n    _Field_size_(DimensionCount) const UINT* EndPadding;\r\n} ;","file":"um\\DirectML.h","line":786,"type":"Struct","value":"struct DML_PADDING_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    DML_PADDING_MODE PaddingMode;\r\n    FLOAT PaddingValue;\r\n    UINT DimensionCount;\r\n    UINT* StartPadding;\r\n    UINT* EndPadding;\r\n} ;"},"DML_RECURRENT_NETWORK_DIRECTION":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_RECURRENT_NETWORK_DIRECTION {\r\n    DML_RECURRENT_NETWORK_DIRECTION_FORWARD,\r\n    DML_RECURRENT_NETWORK_DIRECTION_BACKWARD,\r\n    DML_RECURRENT_NETWORK_DIRECTION_BIDIRECTIONAL\r\n} ;","file":"um\\DirectML.h","line":266,"type":"Enum","value":"enum DML_RECURRENT_NETWORK_DIRECTION {\r\n    DML_RECURRENT_NETWORK_DIRECTION_FORWARD,\r\n    DML_RECURRENT_NETWORK_DIRECTION_BACKWARD,\r\n    DML_RECURRENT_NETWORK_DIRECTION_BIDIRECTIONAL\r\n} ;"},"DML_RECURRENT_NETWORK_DIRECTION_BACKWARD":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_RECURRENT_NETWORK_DIRECTION","file":"um\\DirectML.h","line":266,"type":"Integer","value":1},"DML_RECURRENT_NETWORK_DIRECTION_BIDIRECTIONAL":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_RECURRENT_NETWORK_DIRECTION","file":"um\\DirectML.h","line":266,"type":"Integer","value":2},"DML_RECURRENT_NETWORK_DIRECTION_FORWARD":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_RECURRENT_NETWORK_DIRECTION","file":"um\\DirectML.h","line":266,"type":"Integer","value":0},"DML_REDUCE_FUNCTION":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_REDUCE_FUNCTION {\r\n    DML_REDUCE_FUNCTION_ARGMAX,\r\n    DML_REDUCE_FUNCTION_ARGMIN,\r\n    DML_REDUCE_FUNCTION_AVERAGE,\r\n    DML_REDUCE_FUNCTION_L1,\r\n    DML_REDUCE_FUNCTION_L2,\r\n    DML_REDUCE_FUNCTION_LOG_SUM,\r\n    DML_REDUCE_FUNCTION_LOG_SUM_EXP,\r\n    DML_REDUCE_FUNCTION_MAX,\r\n    DML_REDUCE_FUNCTION_MIN,\r\n    DML_REDUCE_FUNCTION_MULTIPLY,\r\n    DML_REDUCE_FUNCTION_SUM,\r\n    DML_REDUCE_FUNCTION_SUM_SQUARE\r\n} ;","file":"um\\DirectML.h","line":207,"type":"Enum","value":"enum DML_REDUCE_FUNCTION {\r\n    DML_REDUCE_FUNCTION_ARGMAX,\r\n    DML_REDUCE_FUNCTION_ARGMIN,\r\n    DML_REDUCE_FUNCTION_AVERAGE,\r\n    DML_REDUCE_FUNCTION_L1,\r\n    DML_REDUCE_FUNCTION_L2,\r\n    DML_REDUCE_FUNCTION_LOG_SUM,\r\n    DML_REDUCE_FUNCTION_LOG_SUM_EXP,\r\n    DML_REDUCE_FUNCTION_MAX,\r\n    DML_REDUCE_FUNCTION_MIN,\r\n    DML_REDUCE_FUNCTION_MULTIPLY,\r\n    DML_REDUCE_FUNCTION_SUM,\r\n    DML_REDUCE_FUNCTION_SUM_SQUARE\r\n} ;"},"DML_REDUCE_FUNCTION_ARGMAX":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":0},"DML_REDUCE_FUNCTION_ARGMIN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":1},"DML_REDUCE_FUNCTION_AVERAGE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":2},"DML_REDUCE_FUNCTION_L1":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":3},"DML_REDUCE_FUNCTION_L2":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":4},"DML_REDUCE_FUNCTION_LOG_SUM":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":5},"DML_REDUCE_FUNCTION_LOG_SUM_EXP":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":6},"DML_REDUCE_FUNCTION_MAX":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":7},"DML_REDUCE_FUNCTION_MIN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":8},"DML_REDUCE_FUNCTION_MULTIPLY":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":9},"DML_REDUCE_FUNCTION_SUM":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":10},"DML_REDUCE_FUNCTION_SUM_SQUARE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_REDUCE_FUNCTION","file":"um\\DirectML.h","line":207,"type":"Integer","value":11},"DML_REDUCE_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_REDUCE_OPERATOR_DESC {\r\n    DML_REDUCE_FUNCTION Function;\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT AxisCount;\r\n    _Field_size_(AxisCount) const UINT* Axes;\r\n} ;","file":"um\\DirectML.h","line":689,"type":"Struct","value":"struct DML_REDUCE_OPERATOR_DESC {\r\n    DML_REDUCE_FUNCTION Function;\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT AxisCount;\r\n    UINT* Axes;\r\n} ;"},"DML_RESAMPLE_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_RESAMPLE_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    DML_INTERPOLATION_MODE InterpolationMode;\r\n    UINT ScaleCount;\r\n    _Field_size_(ScaleCount) const FLOAT* Scales;\r\n} ;","file":"um\\DirectML.h","line":1061,"type":"Struct","value":"struct DML_RESAMPLE_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    DML_INTERPOLATION_MODE InterpolationMode;\r\n    UINT ScaleCount;\r\n    FLOAT* Scales;\r\n} ;"},"DML_RNN_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_RNN_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* WeightTensor;\r\n    const DML_TENSOR_DESC* RecurrenceTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* BiasTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* HiddenInitTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* SequenceLengthsTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* OutputSequenceTensor;\r\n    _Maybenull_ const DML_TENSOR_DESC* OutputSingleTensor;\r\n    UINT ActivationDescCount;\r\n    _Field_size_(ActivationDescCount) const DML_OPERATOR_DESC* ActivationDescs;\r\n    DML_RECURRENT_NETWORK_DIRECTION Direction;\r\n} ;","file":"um\\DirectML.h","line":899,"type":"Struct","value":"struct DML_RNN_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* WeightTensor;\r\n    DML_TENSOR_DESC* RecurrenceTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* BiasTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* HiddenInitTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* SequenceLengthsTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* OutputSequenceTensor;\r\n    _Maybenull_  DML_TENSOR_DESC* OutputSingleTensor;\r\n    UINT ActivationDescCount;\r\n    DML_OPERATOR_DESC* ActivationDescs;\r\n    DML_RECURRENT_NETWORK_DIRECTION Direction;\r\n} ;"},"DML_ROI_POOLING_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_ROI_POOLING_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* ROITensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT SpatialScale;\r\n    DML_SIZE_2D PooledSize;\r\n} ;","file":"um\\DirectML.h","line":745,"type":"Struct","value":"struct DML_ROI_POOLING_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* ROITensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT SpatialScale;\r\n    DML_SIZE_2D PooledSize;\r\n} ;"},"DML_SCALE_BIAS":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_SCALE_BIAS {\r\n    FLOAT Scale;\r\n    FLOAT Bias;\r\n} ;","file":"um\\DirectML.h","line":254,"type":"Struct","value":"struct DML_SCALE_BIAS {\r\n    FLOAT Scale;\r\n    FLOAT Bias;\r\n} ;"},"DML_SCATTER_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_SCATTER_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* IndicesTensor;\r\n    const DML_TENSOR_DESC* UpdatesTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT Axis;\r\n} ;","file":"um\\DirectML.h","line":1044,"type":"Struct","value":"struct DML_SCATTER_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* IndicesTensor;\r\n    DML_TENSOR_DESC* UpdatesTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT Axis;\r\n} ;"},"DML_SIZE_2D":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_SIZE_2D {\r\n    UINT Width;\r\n    UINT Height;\r\n} ;","file":"um\\DirectML.h","line":260,"type":"Struct","value":"struct DML_SIZE_2D {\r\n    UINT Width;\r\n    UINT Height;\r\n} ;"},"DML_SLICE_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_SLICE_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT DimensionCount;\r\n    _Field_size_(DimensionCount) const UINT* Offsets;\r\n    _Field_size_(DimensionCount) const UINT* Sizes;\r\n    _Field_size_(DimensionCount) const UINT* Strides;\r\n} ;","file":"um\\DirectML.h","line":754,"type":"Struct","value":"struct DML_SLICE_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT DimensionCount;\r\n    UINT* Offsets;\r\n    UINT* Sizes;\r\n    UINT* Strides;\r\n} ;"},"DML_SPACE_TO_DEPTH_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_SPACE_TO_DEPTH_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT BlockSize;\r\n} ;","file":"um\\DirectML.h","line":823,"type":"Struct","value":"struct DML_SPACE_TO_DEPTH_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT BlockSize;\r\n} ;"},"DML_SPLIT_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_SPLIT_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    UINT OutputCount;\r\n    _Field_size_(OutputCount) const DML_TENSOR_DESC* OutputTensors;\r\n    UINT Axis;\r\n} ;","file":"um\\DirectML.h","line":770,"type":"Struct","value":"struct DML_SPLIT_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    UINT OutputCount;\r\n    DML_TENSOR_DESC* OutputTensors;\r\n    UINT Axis;\r\n} ;"},"DML_TENSOR_DATA_TYPE":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_TENSOR_DATA_TYPE {\r\n    DML_TENSOR_DATA_TYPE_UNKNOWN,\r\n    DML_TENSOR_DATA_TYPE_FLOAT32,\r\n    DML_TENSOR_DATA_TYPE_FLOAT16,\r\n    DML_TENSOR_DATA_TYPE_UINT32,\r\n    DML_TENSOR_DATA_TYPE_UINT16,\r\n    DML_TENSOR_DATA_TYPE_UINT8,\r\n    DML_TENSOR_DATA_TYPE_INT32,\r\n    DML_TENSOR_DATA_TYPE_INT16,\r\n    DML_TENSOR_DATA_TYPE_INT8\r\n} ;","file":"um\\DirectML.h","line":47,"type":"Enum","value":"enum DML_TENSOR_DATA_TYPE {\r\n    DML_TENSOR_DATA_TYPE_UNKNOWN,\r\n    DML_TENSOR_DATA_TYPE_FLOAT32,\r\n    DML_TENSOR_DATA_TYPE_FLOAT16,\r\n    DML_TENSOR_DATA_TYPE_UINT32,\r\n    DML_TENSOR_DATA_TYPE_UINT16,\r\n    DML_TENSOR_DATA_TYPE_UINT8,\r\n    DML_TENSOR_DATA_TYPE_INT32,\r\n    DML_TENSOR_DATA_TYPE_INT16,\r\n    DML_TENSOR_DATA_TYPE_INT8\r\n} ;"},"DML_TENSOR_DATA_TYPE_FLOAT16":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_DATA_TYPE","file":"um\\DirectML.h","line":47,"type":"Integer","value":2},"DML_TENSOR_DATA_TYPE_FLOAT32":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_DATA_TYPE","file":"um\\DirectML.h","line":47,"type":"Integer","value":1},"DML_TENSOR_DATA_TYPE_INT16":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_DATA_TYPE","file":"um\\DirectML.h","line":47,"type":"Integer","value":7},"DML_TENSOR_DATA_TYPE_INT32":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_DATA_TYPE","file":"um\\DirectML.h","line":47,"type":"Integer","value":6},"DML_TENSOR_DATA_TYPE_INT8":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_DATA_TYPE","file":"um\\DirectML.h","line":47,"type":"Integer","value":8},"DML_TENSOR_DATA_TYPE_UINT16":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_DATA_TYPE","file":"um\\DirectML.h","line":47,"type":"Integer","value":4},"DML_TENSOR_DATA_TYPE_UINT32":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_DATA_TYPE","file":"um\\DirectML.h","line":47,"type":"Integer","value":3},"DML_TENSOR_DATA_TYPE_UINT8":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_DATA_TYPE","file":"um\\DirectML.h","line":47,"type":"Integer","value":5},"DML_TENSOR_DATA_TYPE_UNKNOWN":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_DATA_TYPE","file":"um\\DirectML.h","line":47,"type":"Integer","value":0},"DML_TENSOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_TENSOR_DESC {\r\n    DML_TENSOR_TYPE Type;\r\n    _Field_size_(_Inexpressible_(\"Dependent on tensor type\")) const void* Desc;\r\n} ;","file":"um\\DirectML.h","line":86,"type":"Struct","value":"struct DML_TENSOR_DESC {\r\n    DML_TENSOR_TYPE Type;\r\n    )  void* Desc;\r\n} ;"},"DML_TENSOR_FLAGS":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_TENSOR_FLAGS {\r\n    DML_TENSOR_FLAG_NONE = 0x0,\r\n    DML_TENSOR_FLAG_OWNED_BY_DML = 0x1\r\n} ;","file":"um\\DirectML.h","line":67,"type":"Enum","value":"enum DML_TENSOR_FLAGS {\r\n    DML_TENSOR_FLAG_NONE = 0x0,\r\n    DML_TENSOR_FLAG_OWNED_BY_DML = 0x1\r\n} ;"},"DML_TENSOR_FLAG_NONE":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_FLAGS","file":"um\\DirectML.h","line":67,"type":"Integer","value":0},"DML_TENSOR_FLAG_OWNED_BY_DML":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_FLAGS","file":"um\\DirectML.h","line":67,"type":"Integer","value":1},"DML_TENSOR_TYPE":{"comment":"","critical":{},"dupe":[],"exp":"enum DML_TENSOR_TYPE {\r\n    DML_TENSOR_TYPE_INVALID,\r\n    DML_TENSOR_TYPE_BUFFER\r\n} ;","file":"um\\DirectML.h","line":60,"type":"Enum","value":"enum DML_TENSOR_TYPE {\r\n    DML_TENSOR_TYPE_INVALID,\r\n    DML_TENSOR_TYPE_BUFFER\r\n} ;"},"DML_TENSOR_TYPE_BUFFER":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_TYPE","file":"um\\DirectML.h","line":60,"type":"Integer","value":1},"DML_TENSOR_TYPE_INVALID":{"comment":"","critical":{},"dupe":[],"exp":"From Enumeration: DML_TENSOR_TYPE","file":"um\\DirectML.h","line":60,"type":"Integer","value":0},"DML_TILE_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_TILE_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    UINT RepeatsCount;\r\n    _Field_size_(RepeatsCount) const UINT* Repeats;\r\n} ;","file":"um\\DirectML.h","line":837,"type":"Struct","value":"struct DML_TILE_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    UINT RepeatsCount;\r\n    UINT* Repeats;\r\n} ;"},"DML_TOP_K_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_TOP_K_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputValueTensor;\r\n    const DML_TENSOR_DESC* OutputIndexTensor;\r\n    UINT Axis;\r\n    UINT K;\r\n} ;","file":"um\\DirectML.h","line":845,"type":"Struct","value":"struct DML_TOP_K_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputValueTensor;\r\n    DML_TENSOR_DESC* OutputIndexTensor;\r\n    UINT Axis;\r\n    UINT K;\r\n} ;"},"DML_UPSAMPLE_2D_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_UPSAMPLE_2D_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    DML_SIZE_2D ScaleSize;\r\n    DML_INTERPOLATION_MODE InterpolationMode;\r\n} ;","file":"um\\DirectML.h","line":806,"type":"Struct","value":"struct DML_UPSAMPLE_2D_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    DML_SIZE_2D ScaleSize;\r\n    DML_INTERPOLATION_MODE InterpolationMode;\r\n} ;"},"DML_VALUE_SCALE_2D_OPERATOR_DESC":{"comment":"","critical":{},"dupe":[],"exp":"struct DML_VALUE_SCALE_2D_OPERATOR_DESC {\r\n    const DML_TENSOR_DESC* InputTensor;\r\n    const DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Scale;\r\n    UINT ChannelCount;\r\n    _Field_size_(ChannelCount) const FLOAT* Bias;\r\n} ;","file":"um\\DirectML.h","line":797,"type":"Struct","value":"struct DML_VALUE_SCALE_2D_OPERATOR_DESC {\r\n    DML_TENSOR_DESC* InputTensor;\r\n    DML_TENSOR_DESC* OutputTensor;\r\n    FLOAT Scale;\r\n    UINT ChannelCount;\r\n    FLOAT* Bias;\r\n} ;"}},"__includes_list":["um\\DirectML.h"],"__prof_name":"DirectML","__sizeof_list":{"ACCESS_MASK":"4","ACCESS_REASON":"4","APARTMENTID":"4","ATOM":"2","BCHAR":"2","BOOL":"4","BOOLEAN":"1","BSTR":8,"BYTE":"1","CALID":"4","CALTYPE":"4","CCHAR":"1","CHAR":"1","CLIPFORMAT":"2","COLOR16":"2","COLORREF":"4","CO_DEVICE_CATALOG_COOKIE":8,"CO_MTA_USAGE_COOKIE":8,"D3D12_GPU_VIRTUAL_ADDRESS":"8","DATE":"8","DISPID":"4","DLL_DIRECTORY_COOKIE":8,"DOUBLE":"8","DPI_AWARENESS_CONTEXT":8,"DWORD":"4","DWORD32":"4","DWORD64":"8","DWORDLONG":"8","DWORD_PTR":"8","EXECUTION_STATE":"4","FCHAR":"1","FLOAT":"4","FLONG":"4","FSHORT":"2","FXPT16DOT16":"4","FXPT2DOT30":"4","GEOCLASS":"4","GEOID":"4","GEOTYPE":"4","GLOBALHANDLE":8,"GUID":"16","HACCEL":8,"HALF_PTR":"4","HANDLE":8,"HANDLE_PTR":"8","HBITMAP":8,"HBRUSH":8,"HCOLORSPACE":8,"HCONTEXT":8,"HCURSOR":8,"HDC":8,"HDESK":8,"HDEVNOTIFY":8,"HDWP":8,"HELPPOLY":"4","HENHMETAFILE":8,"HFILE":"4","HFONT":8,"HGDIOBJ":8,"HGESTUREINFO":8,"HGLOBAL":8,"HGLRC":8,"HHANDLE":"8","HHOOK":8,"HICON":8,"HIMC":8,"HIMCC":8,"HINSTANCE":8,"HKEY":8,"HKL":8,"HLOCAL":8,"HLSURF":8,"HMENU":8,"HMETAFILE":8,"HMETAFILEPICT":8,"HMODULE":8,"HMONITOR":8,"HOLEMENU":8,"HPALETTE":8,"HPEN":8,"HPOWERNOTIFY":8,"HRAWINPUT":8,"HREFTYPE":"4","HRESULT":"4","HRGN":8,"HRSRC":8,"HSAVEDUILANGUAGES":8,"HSPRITE":8,"HSTR":8,"HSYNTHETICPOINTERDEVICE":8,"HTASK":8,"HTOUCHINPUT":8,"HUMPD":8,"HWINEVENTHOOK":8,"HWINSTA":8,"HWND":8,"INT":"4","INT16":"2","INT32":"4","INT64":"8","INT8":"1","INT_PTR":"8","I_RPC_HANDLE":8,"I_RPC_MUTEX":8,"KAFFINITY":"8","KSPIN_LOCK":"8","LANGID":"2","LCID":"4","LCSCSTYPE":"4","LCSGAMUTMATCH":"4","LCTYPE":"4","LGRPID":"4","LOCALHANDLE":8,"LONG":"4","LONG32":"4","LONG64":"8","LONGLONG":"8","LONG_PTR":"8","LP":8,"LPARAM":"8","LPBOOL":8,"LPBSTR":8,"LPBYTE":8,"LPCCH":8,"LPCH":8,"LPCLIPFORMAT":8,"LPCOLESTR":8,"LPCOLORREF":8,"LPCSTR":8,"LPCTCH":8,"LPCTSTR":8,"LPCUTSTR":8,"LPCUWCHAR":8,"LPCUWSTR":8,"LPCVOID":8,"LPCWCH":8,"LPCWCHAR":8,"LPCWSTR":8,"LPD3DINCLUDE":8,"LPDWORD":8,"LPFXPT16DOT16":8,"LPFXPT2DOT30":8,"LPHANDLE":8,"LPHKL":8,"LPINT":8,"LPLDT_ENTRY":8,"LPLONG":8,"LPMENUTEMPLATE":8,"LPMENUTEMPLATEA":8,"LPMENUTEMPLATEW":8,"LPOLESTR":8,"LPSC_HANDLE":8,"LPSTR":8,"LPTCH":8,"LPTSTR":8,"LPUINT":8,"LPUTSTR":8,"LPUWSTR":8,"LPVOID":8,"LPWCH":8,"LPWORD":8,"LPWSTR":8,"LRESULT":"8","LSTATUS":"4","MEMBERID":"4","NDR_CCONTEXT":8,"NLS_FUNCTION":"4","NOTIFICATION_MASK":"4","NPSTR":8,"NWPSTR":8,"OLECHAR":"2","OPERATION_ID":"4","PACCESS_MASK":8,"PACCESS_TOKEN":8,"PARAM_OFFSETTABLE":8,"PBAD_MEMORY_CALLBACK_ROUTINE":8,"PBOOL":8,"PBOOLEAN":8,"PBYTE":8,"PCCH":8,"PCH":8,"PCHAR":8,"PCLAIMS_BLOB":8,"PCNZCH":8,"PCNZTCH":8,"PCNZWCH":8,"PCSTR":8,"PCTCH":8,"PCTSTR":8,"PCUCSCHAR":8,"PCUCSSTR":8,"PCUNZTCH":8,"PCUNZWCH":8,"PCUTSTR":8,"PCUUCSCHAR":8,"PCUUCSSTR":8,"PCUWCHAR":8,"PCUWSTR":8,"PCUZZTSTR":8,"PCUZZWSTR":8,"PCWCH":8,"PCWCHAR":8,"PCWSTR":8,"PCZPCSTR":8,"PCZPCWSTR":8,"PCZPSTR":8,"PCZPWSTR":8,"PCZZSTR":8,"PCZZTSTR":8,"PCZZWSTR":8,"PDLL_DIRECTORY_COOKIE":8,"PDWORD":8,"PDWORD32":8,"PDWORD64":8,"PDWORDLONG":8,"PDWORD_PTR":8,"PEN_FLAGS":"4","PEN_MASK":"4","PEXCEPTION_ROUTINE":8,"PEXECUTION_STATE":8,"PFLOAT":8,"PFN_RPCNOTIFICATION_ROUTINE":8,"PFORMAT_STRING":8,"PGET_RUNTIME_FUNCTION_CALLBACK":8,"PHALF_PTR":8,"PHANDLE":8,"PHDEVNOTIFY":8,"PHKEY":8,"PHPOWERNOTIFY":8,"PINT":8,"PINT16":8,"PINT32":8,"PINT64":8,"PINT8":8,"PINT_PTR":8,"PKAFFINITY":8,"PKSPIN_LOCK":8,"PLCID":8,"PLONG":8,"PLONG32":8,"PLONG64":8,"PLONGLONG":8,"PLONG_PTR":8,"PLUID_AND_ATTRIBUTES_ARRAY":8,"PMIDL_XMIT_TYPE":8,"PNZCH":8,"PNZTCH":8,"PNZWCH":8,"POINTER_64_INT":"8","POINTER_FLAGS":"4","POINTER_INPUT_TYPE":"4","POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK":8,"PPARAM_OFFSETTABLE":8,"PQUERYHANDLER":8,"PROPID":"4","PROPVAR_PAD1":"2","PROPVAR_PAD2":"2","PROPVAR_PAD3":"2","PRPC_INTERFACE_GROUP":8,"PRTL_REFERENCE_COUNT":8,"PRTL_REFERENCE_COUNT32":8,"PRTL_UMS_SCHEDULER_ENTRY_POINT":8,"PSAVEPOINT_ID":8,"PSCODE":8,"PSC_NOTIFICATION_CALLBACK":8,"PSECURITY_ATTRIBUTES_OPAQUE":8,"PSECURITY_CONTEXT_TRACKING_MODE":8,"PSECURITY_DESCRIPTOR":8,"PSECURITY_DESCRIPTOR_CONTROL":8,"PSECURITY_INFORMATION":8,"PSE_SIGNING_LEVEL":8,"PSHORT":8,"PSID":8,"PSID_AND_ATTRIBUTES_ARRAY":8,"PSID_HASH_ENTRY":8,"PSIZE_T":8,"PSSIZE_T":8,"PSTR":8,"PSZ":8,"PTBYTE":8,"PTCH":8,"PTCHAR":8,"PTP_VERSION":8,"PTSTR":8,"PUCHAR":8,"PUCSCHAR":8,"PUCSSTR":8,"PUHALF_PTR":8,"PUINT":8,"PUINT16":8,"PUINT32":8,"PUINT64":8,"PUINT8":8,"PUINT_PTR":8,"PULONG":8,"PULONG32":8,"PULONG64":8,"PULONGLONG":8,"PULONG_PTR":8,"PUMS_COMPLETION_LIST":8,"PUMS_CONTEXT":8,"PUMS_SCHEDULER_ENTRY_POINT":8,"PUNZTCH":8,"PUNZWCH":8,"PUSHORT":8,"PUTSTR":8,"PUUCSCHAR":8,"PUUCSSTR":8,"PUWSTR":8,"PUWSTR_C":8,"PUZZTSTR":8,"PUZZWSTR":8,"PVOID":8,"PVOID64":8,"PWCH":8,"PWCHAR":8,"PWORD":8,"PWSTR":8,"PZPCSTR":8,"PZPCWSTR":8,"PZPSTR":8,"PZPTSTR":8,"PZPWSTR":8,"PZZSTR":8,"PZZTSTR":8,"PZZWSTR":8,"REGSAM":"4","RPCOLEDATAREP":"4","RPC_AUTHZ_HANDLE":8,"RPC_AUTH_IDENTITY_HANDLE":8,"RPC_BINDING_HANDLE":8,"RPC_BUFPTR":8,"RPC_CSTR":8,"RPC_CWSTR":8,"RPC_EP_INQ_HANDLE":8,"RPC_IF_HANDLE":8,"RPC_INTERFACE_GROUP":8,"RPC_LENGTH":"4","RPC_NS_HANDLE":8,"RPC_SS_THREAD_HANDLE":8,"RPC_STATUS":"4","RPC_WSTR":8,"RTL_REFERENCE_COUNT":"8","RTL_REFERENCE_COUNT32":"4","SAVEPOINT_ID":"4","SCODE":"4","SC_HANDLE":8,"SC_LOCK":8,"SECURITY_CONTEXT_TRACKING_MODE":"1","SECURITY_DESCRIPTOR_CONTROL":"2","SECURITY_INFORMATION":"4","SERVICE_STATUS_HANDLE":8,"SE_SIGNING_LEVEL":"1","SHANDLE_PTR":"8","SHORT":"2","SID_HASH_ENTRY":"8","SIZE_T":"8","SNB":8,"SPHANDLE":8,"SSIZE_T":"8","STGFMT":"4","TBYTE":"2","TCHAR":"2","TOUCH_FLAGS":"4","TOUCH_MASK":"4","TP_VERSION":"4","TP_WAIT_RESULT":"4","UCHAR":"1","UCSCHAR":"4","UHALF_PTR":"4","UINT":"4","UINT16":"2","UINT32":"4","UINT64":"8","UINT8":"1","UINT_PTR":"8","ULONG":"4","ULONG32":"4","ULONG64":"8","ULONGLONG":"8","ULONG_PTR":"8","USHORT":"2","USN":"8","VARIANT_BOOL":"2","VARTYPE":"2","WCHAR":"2","WORD":"2","WPARAM":"8","_Bool":"4","__crt_bool":"4","__int16":"2","__int32":"4","__int3264":"8","__int64":"8","__int8":"1","__time32_t":"4","__time64_t":"8","boolean":"1","byte":"1","char":"1","char16_t":"2","char32_t":"4","char8_t":"1","cs_byte":"1","double":"8","errno_t":"4","error_status_t":"4","float":"4","handle_t":8,"int":"4","long":"4","long double":"8","long int":"4","long long":"8","rsize_t":"8","short":"2","short int":"2","size_t":"8","time_t":"8","void":"0","wchar_t":"2","wctype_t":"2","wint_t":"2"},"__user_constants":"","__user_macros":""}