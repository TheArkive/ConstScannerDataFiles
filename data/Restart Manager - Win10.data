{"__const_list":{"CCH_RM_MAX_APP_NAME":{"comment":"","exp":"255","file":"RestartManager.h","line":28,"type":"Integer","value":255},"CCH_RM_MAX_SVC_NAME":{"comment":"","exp":"63","file":"RestartManager.h","line":30,"type":"Integer","value":63},"CCH_RM_SESSION_KEY":{"comment":"","exp":"RM_SESSION_KEY_LEN*2","file":"RestartManager.h","line":26,"type":"Unknown","value":"sizeof(GUID)*2"},"RM_INVALID_PROCESS":{"comment":"","exp":"-1","file":"RestartManager.h","line":34,"type":"Integer","value":-1},"RM_INVALID_TS_SESSION":{"comment":"","exp":"-1","file":"RestartManager.h","line":32,"type":"Integer","value":-1},"RM_SESSION_KEY_LEN":{"comment":"","exp":"sizeof(GUID)","file":"RestartManager.h","line":24,"type":"Unknown","value":"sizeof(GUID)"},"WINAPI_FAMILY":{"comment":"","exp":"WINAPI_FAMILY_DESKTOP_APP","file":"winapifamily.h","line":89,"type":"Integer","value":100},"WINAPI_FAMILY_APP":{"comment":"","exp":"WINAPI_FAMILY_PC_APP","file":"winapifamily.h","line":82,"type":"Integer","value":2},"WINAPI_FAMILY_DESKTOP_APP":{"comment":"\/* Windows Desktop Applications *\/","exp":"100","file":"winapifamily.h","line":73,"type":"Integer","value":100},"WINAPI_FAMILY_GAMES":{"comment":"\/* Windows Games and Applications *\/","exp":"6","file":"winapifamily.h","line":72,"type":"Integer","value":6},"WINAPI_FAMILY_PC_APP":{"comment":"\/* Windows Store Applications *\/","exp":"2","file":"winapifamily.h","line":68,"type":"Integer","value":2},"WINAPI_FAMILY_PHONE_APP":{"comment":"\/* Windows Phone Applications *\/","exp":"3","file":"winapifamily.h","line":69,"type":"Integer","value":3},"WINAPI_FAMILY_SERVER":{"comment":"\/* Windows Server Applications *\/","exp":"5","file":"winapifamily.h","line":71,"type":"Integer","value":5},"WINAPI_FAMILY_SYSTEM":{"comment":"\/* Windows Drivers and Tools *\/","exp":"4","file":"winapifamily.h","line":70,"type":"Integer","value":4},"WINAPI_PARTITION_APP":{"comment":"","exp":"(WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP || WINAPI_FAMILY == WINAPI_FAMILY_PC_APP || WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP)","file":"winapifamily.h","line":154,"type":"Other","value":"(WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP || WINAPI_FAMILY == WINAPI_FAMILY_PC_APP || WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP)"},"WINAPI_PARTITION_DESKTOP":{"comment":"","exp":"(WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)","file":"winapifamily.h","line":150,"type":"Other","value":"(WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)"},"WINAPI_PARTITION_GAMES":{"comment":"","exp":"(WINAPI_FAMILY == WINAPI_FAMILY_GAMES || WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)","file":"winapifamily.h","line":171,"type":"Other","value":"(WINAPI_FAMILY == WINAPI_FAMILY_GAMES || WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)"},"WINAPI_PARTITION_PC_APP":{"comment":"","exp":"(WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP || WINAPI_FAMILY == WINAPI_FAMILY_PC_APP)","file":"winapifamily.h","line":161,"type":"Other","value":"(WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP || WINAPI_FAMILY == WINAPI_FAMILY_PC_APP)"},"WINAPI_PARTITION_PHONE":{"comment":"","exp":"WINAPI_PARTITION_PHONE_APP","file":"winapifamily.h","line":193,"type":"Other","value":"WINAPI_PARTITION_PHONE_APP"},"WINAPI_PARTITION_PHONE_APP":{"comment":"","exp":"(WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP)","file":"winapifamily.h","line":167,"type":"Other","value":"(WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP)"},"WINAPI_PARTITION_PKG_APPRUNTIME":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":72,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_APPXDEPLOYMENT":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":82,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_BOOTABLESKU":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":68,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_CLUSTER":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":76,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_CMDTOOLS":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":69,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_CORESETUP":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":71,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_DISM":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":70,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_ESENT":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":73,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_EVENTLOGSERVICE":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":63,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_ISCSI":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":79,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_MPSSVC":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":81,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_PERFCOUNTER":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":65,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_REMOTEFS":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":67,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_SECURESTARTUP":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":66,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_STORAGE":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":80,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_TRAFFIC":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":78,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_VHD":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":64,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_VSS":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":77,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_WEBSERVICES":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":62,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_WER":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":83,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_WINMGMT":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":74,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_WINTRUST":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":61,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_PKG_WNV":{"comment":"","exp":"(WINAPI_PARTITION_SERVER == 1)","file":"winpackagefamily.h","line":75,"type":"Other","value":"(WINAPI_PARTITION_SERVER == 1)"},"WINAPI_PARTITION_SERVER":{"comment":"","exp":"(WINAPI_FAMILY == WINAPI_FAMILY_SERVER)","file":"winpackagefamily.h","line":27,"type":"Other","value":"(WINAPI_FAMILY == WINAPI_FAMILY_SERVER)"},"WINAPI_PARTITION_SYSTEM":{"comment":"","exp":"(WINAPI_FAMILY == WINAPI_FAMILY_SYSTEM || WINAPI_FAMILY == WINAPI_FAMILY_SERVER)","file":"winapifamily.h","line":183,"type":"Other","value":"(WINAPI_FAMILY == WINAPI_FAMILY_SYSTEM || WINAPI_FAMILY == WINAPI_FAMILY_SERVER)"},"_RM_APP_STATUS":{"comment":"","exp":"","file":"RestartManager.h","line":56,"type":"Enum","value":"typedef enum _RM_APP_STATUS {\\r\\n    RmStatusUnknown = 0x0,          \/\/ Application in unknown state \\r\\n                                    \/\/ or state not important\\r\\n    RmStatusRunning = 0x1,          \/\/ Application is currently running\\r\\n    RmStatusStopped = 0x2,          \/\/ Application stopped by Restart Manager\\r\\n    RmStatusStoppedOther = 0x4,     \/\/ Application detected stopped \\r\\n                                    \/\/ by outside action\\r\\n    RmStatusRestarted = 0x8,        \/\/ Application restarted by Restart Manager\\r\\n    RmStatusErrorOnStop = 0x10,     \/\/ An error occurred when stopping\\r\\n                                    \/\/ this application\\r\\n    RmStatusErrorOnRestart = 0x20,  \/\/ An error occurred when restarting\\r\\n                                    \/\/ this application\\r\\n    RmStatusShutdownMasked = 0x40,  \/\/ Shutdown action masked by filer\\r\\n    RmStatusRestartMasked = 0x80    \/\/ Restart action masked by filter\\r\\n} RM_APP_STATUS;"},"_RM_APP_TYPE":{"comment":"","exp":"","file":"RestartManager.h","line":36,"type":"Enum","value":"typedef enum _RM_APP_TYPE {\\r\\n    RmUnknownApp = 0,   \/\/ Application type cannot be classified in\\r\\n                        \/\/ known categories\\r\\n    RmMainWindow = 1,   \/\/ Application is a windows application that\\r\\n                        \/\/ displays a top-level window\\r\\n    RmOtherWindow = 2,  \/\/ Application is a windows app but does not\\r\\n                        \/\/ display a top-level window\\r\\n    RmService = 3,      \/\/ Application is an NT service\\r\\n    RmExplorer = 4,     \/\/ Application is Explorer\\r\\n    RmConsole = 5,      \/\/ Application is Console application\\r\\n    RmCritical = 1000   \/\/ Application is critical system process\\r\\n                        \/\/ where a reboot is required to restart\\r\\n} RM_APP_TYPE;"},"_RM_FILTER_ACTION":{"comment":"","exp":"","file":"RestartManager.h","line":112,"type":"Enum","value":"typedef enum _RM_FILTER_ACTION {\\r\\n    RmInvalidFilterAction = 0,          \/\/ Invalid value\\r\\n    RmNoRestart = 1,                    \/\/ Prevent restart of application\\r\\n    RmNoShutdown = 2                    \/\/ Prevent shutdown and restart of\\r\\n                                        \/\/ application\\r\\n} RM_FILTER_ACTION;"},"_RM_FILTER_INFO":{"comment":"","exp":"","file":"RestartManager.h","line":119,"type":"Struct","value":"typedef struct _RM_FILTER_INFO\\r\\n{\\r\\n    RM_FILTER_ACTION FilterAction;      \/\/ Filter action\\r\\n    RM_FILTER_TRIGGER FilterTrigger;    \/\/ Filter trigger\\r\\n    DWORD cbNextOffset;                 \/\/ Bytes to next structure\\r\\n    union\\r\\n    {\\r\\n        LPWSTR strFilename;             \/\/ When RmFilterTrigger == RmFilterTriggerFile,\\r\\n                                        \/\/ this contains the filename this filter applies to\\r\\n        RM_UNIQUE_PROCESS Process;      \/\/ When RmFilterTrigger == RmFilterTriggerProcess,\\r\\n                                        \/\/ this contains the process this filter applies to\\r\\n        LPWSTR strServiceShortName;     \/\/ When RmFilterTrigger == RmFilterTriggerService,\\r\\n                                        \/\/ this contians the service name this filter applies to\\r\\n    };\\r\\n} RM_FILTER_INFO, *PRM_FILTER_INFO;"},"_RM_FILTER_TRIGGER":{"comment":"","exp":"","file":"RestartManager.h","line":104,"type":"Enum","value":"typedef enum _RM_FILTER_TRIGGER\\r\\n{\\r\\n    RmFilterTriggerInvalid = 0,         \/\/ Invalid value\\r\\n    RmFilterTriggerFile,                \/\/ Filter is triggered by EXE name\\r\\n    RmFilterTriggerProcess,             \/\/ Filter is triggered by PID\/create time\\r\\n    RmFilterTriggerService              \/\/ Filter is triggered by service short name\\r\\n} RM_FILTER_TRIGGER;"},"_RM_PROCESS_INFO":{"comment":"","exp":"","file":"RestartManager.h","line":92,"type":"Struct","value":"typedef struct _RM_PROCESS_INFO{\\r\\n    RM_UNIQUE_PROCESS Process;      \/\/ Unique process identification\\r\\n    WCHAR strAppName[CCH_RM_MAX_APP_NAME+1];    \/\/ Application friendly name\\r\\n    WCHAR strServiceShortName[CCH_RM_MAX_SVC_NAME+1];   \/\/ Service short name,\\r\\n                                                        \/\/ if applicable\\r\\n    RM_APP_TYPE ApplicationType;    \/\/ Application type\\r\\n    ULONG AppStatus;                \/\/ Bit mask of application status\\r\\n    DWORD TSSessionId;              \/\/ Terminal Service session ID of \\r\\n                                    \/\/ process (-1 if n\/a)\\r\\n    BOOL bRestartable;              \/\/ Is application restartable?\\r\\n} RM_PROCESS_INFO, *PRM_PROCESS_INFO;"},"_RM_REBOOT_REASON":{"comment":"","exp":"","file":"RestartManager.h","line":72,"type":"Enum","value":"typedef enum _RM_REBOOT_REASON {\\r\\n    RmRebootReasonNone = 0x0,               \/\/ Reboot not required\\r\\n    RmRebootReasonPermissionDenied = 0x1,   \/\/ Current user does not have\\r\\n                                            \/\/ permission to shut down\\r\\n                                            \/\/ one or more detected processes\\r\\n    RmRebootReasonSessionMismatch = 0x2,    \/\/ One or more processes are\\r\\n                                            \/\/ running in another TS session.\\r\\n    RmRebootReasonCriticalProcess = 0x4,    \/\/ A critical process has been\\r\\n                                            \/\/ detected\\r\\n    RmRebootReasonCriticalService = 0x8,    \/\/ A critical service has been\\r\\n                                            \/\/ detected\\r\\n    RmRebootReasonDetectedSelf = 0x10       \/\/ The current process has been\\r\\n                                            \/\/ detected\\r\\n} RM_REBOOT_REASON;"},"_RM_SHUTDOWN_TYPE":{"comment":"","exp":"","file":"RestartManager.h","line":50,"type":"Enum","value":"typedef enum _RM_SHUTDOWN_TYPE {\\r\\n    RmForceShutdown = 0x1,          \/\/ Force app shutdown\\r\\n    RmShutdownOnlyRegistered = 0x10 \/\/ Only shudown apps if all apps\\r\\n                                    \/\/ registered for restart\\r\\n} RM_SHUTDOWN_TYPE;"},"_RM_UNIQUE_PROCESS":{"comment":"","exp":"","file":"RestartManager.h","line":87,"type":"Struct","value":"typedef struct _RM_UNIQUE_PROCESS {\\r\\n    DWORD dwProcessId;              \/\/ PID\\r\\n    FILETIME ProcessStartTime;      \/\/ Process creation time\\r\\n} RM_UNIQUE_PROCESS, *PRM_UNIQUE_PROCESS;"},"_WINAPI_DEPRECATED_DECLARATION":{"comment":"","exp":"__declspec(deprecated(\"This API cannot be used in the context of the caller's application type.\"))","file":"winapifamily.h","line":233,"type":"Other","value":"__declspec(deprecated(\"This API cannot be used in the context of the caller's application type.\"))"}},"__includes_list":{"D:|DEV|Win_10_SDK|Include|10.0.19041.0|shared|winapifamily.h":[["winpackagefamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winpackagefamily.h"]],"D:|DEV|Win_10_SDK|Include|10.0.19041.0|um|RestartManager.h":[["winapifamily.h","D:\\DEV\\Win_10_SDK\\Include\\10.0.19041.0\\shared\\winapifamily.h"]]}}